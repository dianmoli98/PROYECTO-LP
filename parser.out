Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ANY
    COMMENT
    DOLLAR
    ELIF
    ELSE
    FOR
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    FUNMATH
    IF
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    MULTICOMMENT
    NEW
    NULL
    POW
    PRINT
    RCOMILLA
    ROUND
    SET
    SPECIAL
    TYPEOF
    UNDEFINED
    VAROBJECT
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    declare -> var_boolean
Rule 13    declare -> var_number
Rule 14    declare -> var_string
Rule 15    declare -> var_enum
Rule 16    declare -> declare_array
Rule 17    declare -> declare_enum
Rule 18    declare -> declare_generic
Rule 19    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 20    enums -> enums_numeric
Rule 21    enums -> enums_string
Rule 22    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 23    enums_numeric -> enums_numeric_value
Rule 24    enums_numeric_value -> object_name EQUAL number
Rule 25    enums_numeric_value -> object_name
Rule 26    enums_string -> enums_string COMMA enums_string_value
Rule 27    enums_string -> enums_string_value
Rule 28    enums_string_value -> object_name EQUAL string
Rule 29    declare_array -> declare_array_main_number
Rule 30    declare_array -> declare_array_main_boolean
Rule 31    declare_array -> declare_array_main_string
Rule 32    declare_array -> declare_generic_array
Rule 33    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 34    declare_array_main_number -> declare_array_number
Rule 35    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 36    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 37    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 38    declare_array_main_boolean -> declare_array_boolean
Rule 39    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 40    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 41    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 42    declare_array_main_string -> declare_array_string
Rule 43    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 44    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 45    declare_generic_array -> declare_any EQUAL list_types
Rule 46    var_number -> declare_number EQUAL number_value
Rule 47    var_number -> declare_number
Rule 48    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 49    var_boolean -> declare_boolean EQUAL boolean_value
Rule 50    var_boolean -> declare_boolean
Rule 51    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 52    var_string -> declare_string EQUAL string_value
Rule 53    var_string -> declare_string
Rule 54    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 55    var_enum -> declare_var_enum EQUAL enum_value
Rule 56    var_enum -> declare_var_enum
Rule 57    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 58    declare_generic -> declare_any EQUAL assign_value
Rule 59    declare_generic -> declare_any
Rule 60    declare_any -> prefix VARIABLE
Rule 61    assign -> assign_variable
Rule 62    assign -> assign_array
Rule 63    assign -> assign_object_value
Rule 64    assign_variable -> variable EQUAL assign_value
Rule 65    assign_variable -> variable EQUAL list_types
Rule 66    assign_array -> array_value EQUAL assign_value
Rule 67    assign_object_value -> object_value_form1 EQUAL assign_value
Rule 68    assign_object_value -> object_value_form1 EQUAL list_types
Rule 69    assign_object_value -> object_value_form2 EQUAL assign_value
Rule 70    assign_value -> expression
Rule 71    assign_value -> boolean
Rule 72    assign_value -> string
Rule 73    list_types -> list_number
Rule 74    list_types -> list_boolean
Rule 75    list_types -> list_string
Rule 76    list_number -> LBRACKET numbers RBRACKET
Rule 77    numbers -> numbers COMMA number_value
Rule 78    numbers -> number_value
Rule 79    list_boolean -> LBRACKET booleans RBRACKET
Rule 80    booleans -> booleans COMMA boolean_value
Rule 81    booleans -> boolean_value
Rule 82    list_string -> LBRACKET strings RBRACKET
Rule 83    strings -> strings COMMA string_value
Rule 84    strings -> string_value
Rule 85    number_value -> expression
Rule 86    boolean_value -> boolean
Rule 87    boolean_value -> other_value
Rule 88    string_value -> string
Rule 89    string_value -> other_value
Rule 90    concatenate -> termS
Rule 91    termS -> string PLUS chain
Rule 92    chain -> termS PLUS value
Rule 93    chain -> value
Rule 94    value -> expression
Rule 95    value -> string
Rule 96    expression -> expression PLUS term
Rule 97    expression -> expression MINUS term
Rule 98    expression -> term
Rule 99    term -> term PRODUCT term
Rule 100   term -> term DIVIDE term
Rule 101   term -> term1 INCREMENT
Rule 102   term -> INCREMENT term1
Rule 103   term -> term1 DECREMENT
Rule 104   term -> DECREMENT term1
Rule 105   expNeg -> NEGATION expOpLog
Rule 106   expNeg -> NEGATION factor_exprlog
Rule 107   expNeg -> NEGATION boolean
Rule 108   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 109   expEq -> expCond EQUALTO expCond
Rule 110   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 111   expEq -> expression EQUALTO expression
Rule 112   expNotEq -> expCond NOTEQUALTO expCond
Rule 113   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 114   expNotEq -> expression NOTEQUALTO expression
Rule 115   expOpLog -> expCond oplogico expCond
Rule 116   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 117   expOpLog -> expression oplogico expression
Rule 118   factor_exprlog -> LPAREN expCond RPAREN
Rule 119   expCond -> expression operador expression
Rule 120   term1 -> LPAREN group RPAREN
Rule 121   term1 -> group
Rule 122   group -> number
Rule 123   group -> variable
Rule 124   group -> array_value
Rule 125   group -> object_value
Rule 126   term -> number
Rule 127   term -> factor_expr
Rule 128   term -> other_value
Rule 129   factor_expr -> LPAREN expression RPAREN
Rule 130   other_value -> variable
Rule 131   other_value -> array_value
Rule 132   other_value -> enum_value
Rule 133   other_value -> object_value
Rule 134   object_value -> object_value_form1
Rule 135   object_value -> object_value_form2
Rule 136   object_value_form1 -> variable POINT variable
Rule 137   object_value_form2 -> variable POINT array_value
Rule 138   array_value -> variable LBRACKET expression RBRACKET
Rule 139   enum_value -> object_name POINT object_name
Rule 140   prefix -> LET
Rule 141   prefix -> VAR
Rule 142   prefix -> STATIC
Rule 143   prefix -> CONST
Rule 144   number -> NUMBER
Rule 145   number -> FLOAT
Rule 146   string -> NORMSTRING1
Rule 147   string -> NORMSTRING2
Rule 148   string -> MULTISTRING
Rule 149   boolean -> TRUE
Rule 150   boolean -> FALSE
Rule 151   variable -> VARIABLE
Rule 152   object_name -> OBJECTNAME
Rule 153   operador -> GREATER
Rule 154   operador -> LESS
Rule 155   operador -> GREATEREQUAL
Rule 156   operador -> LESSEQUAL
Rule 157   operador -> EQUALTO
Rule 158   operador -> NOTEQUALTO
Rule 159   oplogico -> AND
Rule 160   oplogico -> OR

Terminals, with rules where they appear

ABS                  : 
AND                  : 159
ANY                  : 
ARRAY                : 36 40 44
COMMA                : 22 26 77 80 83
COMMENT              : 
CONST                : 143
DECREMENT            : 103 104
DIVIDE               : 100
DOLLAR               : 
ELIF                 : 
ELSE                 : 
ENUM                 : 19
EQUAL                : 24 28 33 37 41 45 46 49 52 55 58 64 65 66 67 68 69
EQUALTO              : 109 110 111 157
FALSE                : 150
FLOAT                : 145
FOR                  : 
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 
GREATER              : 36 40 44 153
GREATEREQUAL         : 155
IF                   : 
IN                   : 
INCREMENT            : 101 102
INSTANCEOF           : 
LBRACKET             : 35 39 43 76 79 82 138
LCOMILLA             : 
LESS                 : 36 40 44 154
LESSEQUAL            : 156
LET                  : 140
LKEY                 : 19
LPAREN               : 108 118 120 129
MINUS                : 97
MOD                  : 
MULTICOMMENT         : 
MULTISTRING          : 148
NEGATION             : 105 106 107 108
NEW                  : 
NORMSTRING1          : 146
NORMSTRING2          : 147
NOTEQUALTO           : 112 113 114 158
NULL                 : 
NUMBER               : 144
OBJECTNAME           : 19 152
OR                   : 160
PLUS                 : 91 92 96
POINT                : 136 137 139
POINTCOMMA           : 2
POW                  : 
PRINT                : 
PRODUCT              : 99
RBRACKET             : 35 39 43 76 79 82 138
RCOMILLA             : 
RKEY                 : 19
ROUND                : 
RPAREN               : 108 118 120 129
SET                  : 
SPECIAL              : 
STATIC               : 142
TRUE                 : 149
TWOPOINTS            : 36 40 44 48 51 54 57
TYPEOF               : 
UNDEFINED            : 
VAR                  : 141
VARBOOLEAN           : 40 51
VARIABLE             : 60 151
VARNUMBER            : 36 48
VAROBJECT            : 
VARSTRING            : 44 54
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_value          : 66 124 131 137
assign               : 6
assign_array         : 62
assign_object_value  : 63
assign_value         : 58 64 66 67 69
assign_variable      : 61
boolean              : 71 86 107
boolean_value        : 49 80 81
booleans             : 79 80
chain                : 91
concatenate          : 4
declare              : 5
declare_any          : 36 40 44 45 48 51 54 57 58 59
declare_array        : 16
declare_array_boolean : 37 38
declare_array_main_boolean : 30
declare_array_main_number : 29
declare_array_main_string : 31
declare_array_number : 33 34
declare_array_string : 41 42
declare_boolean      : 39 49 50
declare_enum         : 17
declare_generic      : 18
declare_generic_array : 32
declare_number       : 35 46 47
declare_string       : 43 52 53
declare_var_enum     : 55 56
enum_value           : 55 132
enums                : 19
enums_numeric        : 20 22
enums_numeric_value  : 22 23
enums_string         : 21 26
enums_string_value   : 26 27
expCond              : 7 109 109 112 112 115 115 118
expEq                : 10
expNeg               : 9
expNotEq             : 11
expOpLog             : 8 105 108
expression           : 3 70 85 94 96 97 111 111 114 114 117 117 119 119 129 138
factor_expr          : 127
factor_exprlog       : 106 110 110 113 113 116 116
group                : 120 121
list_boolean         : 37 74
list_number          : 33 73
list_string          : 41 75
list_types           : 45 65 68
number               : 24 122 126
number_value         : 46 77 78
numbers              : 76 77
object_name          : 24 25 28 57 139 139
object_value         : 125 133
object_value_form1   : 67 68 134
object_value_form2   : 69 135
operador             : 119
oplogico             : 115 116 117
other_value          : 87 89 128
prefix               : 60
statement            : 0
statement_value      : 1 2
string               : 28 72 88 91 95
string_value         : 52 83 84
strings              : 82 83
term                 : 96 97 98 99 99 100 100
term1                : 101 102 103 104
termS                : 90 92
value                : 92 93
var_boolean          : 12
var_enum             : 15
var_number           : 13
var_string           : 14
variable             : 64 65 123 130 136 136 137 138

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (90) concatenate -> . termS
    (12) declare -> . var_boolean
    (13) declare -> . var_number
    (14) declare -> . var_string
    (15) declare -> . var_enum
    (16) declare -> . declare_array
    (17) declare -> . declare_enum
    (18) declare -> . declare_generic
    (61) assign -> . assign_variable
    (62) assign -> . assign_array
    (63) assign -> . assign_object_value
    (119) expCond -> . expression operador expression
    (115) expOpLog -> . expCond oplogico expCond
    (116) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (117) expOpLog -> . expression oplogico expression
    (105) expNeg -> . NEGATION expOpLog
    (106) expNeg -> . NEGATION factor_exprlog
    (107) expNeg -> . NEGATION boolean
    (108) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (109) expEq -> . expCond EQUALTO expCond
    (110) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (111) expEq -> . expression EQUALTO expression
    (112) expNotEq -> . expCond NOTEQUALTO expCond
    (113) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (114) expNotEq -> . expression NOTEQUALTO expression
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (91) termS -> . string PLUS chain
    (49) var_boolean -> . declare_boolean EQUAL boolean_value
    (50) var_boolean -> . declare_boolean
    (46) var_number -> . declare_number EQUAL number_value
    (47) var_number -> . declare_number
    (52) var_string -> . declare_string EQUAL string_value
    (53) var_string -> . declare_string
    (55) var_enum -> . declare_var_enum EQUAL enum_value
    (56) var_enum -> . declare_var_enum
    (29) declare_array -> . declare_array_main_number
    (30) declare_array -> . declare_array_main_boolean
    (31) declare_array -> . declare_array_main_string
    (32) declare_array -> . declare_generic_array
    (19) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (58) declare_generic -> . declare_any EQUAL assign_value
    (59) declare_generic -> . declare_any
    (64) assign_variable -> . variable EQUAL assign_value
    (65) assign_variable -> . variable EQUAL list_types
    (66) assign_array -> . array_value EQUAL assign_value
    (67) assign_object_value -> . object_value_form1 EQUAL assign_value
    (68) assign_object_value -> . object_value_form1 EQUAL list_types
    (69) assign_object_value -> . object_value_form2 EQUAL assign_value
    (118) factor_exprlog -> . LPAREN expCond RPAREN
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (51) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (48) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (54) declare_string -> . declare_any TWOPOINTS VARSTRING
    (57) declare_var_enum -> . declare_any TWOPOINTS object_name
    (33) declare_array_main_number -> . declare_array_number EQUAL list_number
    (34) declare_array_main_number -> . declare_array_number
    (37) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (38) declare_array_main_boolean -> . declare_array_boolean
    (41) declare_array_main_string -> . declare_array_string EQUAL list_string
    (42) declare_array_main_string -> . declare_array_string
    (45) declare_generic_array -> . declare_any EQUAL list_types
    (60) declare_any -> . prefix VARIABLE
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (35) declare_array_number -> . declare_number LBRACKET RBRACKET
    (36) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (39) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (40) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (43) declare_array_string -> . declare_string LBRACKET RBRACKET
    (44) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (140) prefix -> . LET
    (141) prefix -> . VAR
    (142) prefix -> . STATIC
    (143) prefix -> . CONST
    (152) object_name -> . OBJECTNAME

    NEGATION        shift and go to state 25
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    ENUM            shift and go to state 43
    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    VARIABLE        shift and go to state 62
    LET             shift and go to state 63
    VAR             shift and go to state 64
    STATIC          shift and go to state 65
    CONST           shift and go to state 66
    OBJECTNAME      shift and go to state 44

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    term                           shift and go to state 12
    termS                          shift and go to state 13
    var_boolean                    shift and go to state 14
    var_number                     shift and go to state 15
    var_string                     shift and go to state 16
    var_enum                       shift and go to state 17
    declare_array                  shift and go to state 18
    declare_enum                   shift and go to state 19
    declare_generic                shift and go to state 20
    assign_variable                shift and go to state 21
    assign_array                   shift and go to state 22
    assign_object_value            shift and go to state 23
    factor_exprlog                 shift and go to state 24
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    string                         shift and go to state 33
    declare_boolean                shift and go to state 34
    declare_number                 shift and go to state 35
    declare_string                 shift and go to state 36
    declare_var_enum               shift and go to state 37
    enum_value                     shift and go to state 38
    declare_array_main_number      shift and go to state 39
    declare_array_main_boolean     shift and go to state 40
    declare_array_main_string      shift and go to state 41
    declare_generic_array          shift and go to state 42
    declare_any                    shift and go to state 45
    variable                       shift and go to state 46
    array_value                    shift and go to state 47
    object_value_form1             shift and go to state 48
    object_value_form2             shift and go to state 49
    group                          shift and go to state 50
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    declare_array_number           shift and go to state 58
    declare_array_boolean          shift and go to state 59
    declare_array_string           shift and go to state 60
    prefix                         shift and go to state 61

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 67


state 3

    (3) statement_value -> expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term
    (119) expCond -> expression . operador expression
    (117) expOpLog -> expression . oplogico expression
    (111) expEq -> expression . EQUALTO expression
    (114) expNotEq -> expression . NOTEQUALTO expression
    (153) operador -> . GREATER
    (154) operador -> . LESS
    (155) operador -> . GREATEREQUAL
    (156) operador -> . LESSEQUAL
    (157) operador -> . EQUALTO
    (158) operador -> . NOTEQUALTO
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    EQUALTO         shift and go to state 72
    NOTEQUALTO      shift and go to state 73
    GREATER         shift and go to state 74
    LESS            shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79

    operador                       shift and go to state 70
    oplogico                       shift and go to state 71

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (115) expOpLog -> expCond . oplogico expCond
    (109) expEq -> expCond . EQUALTO expCond
    (112) expNotEq -> expCond . NOTEQUALTO expCond
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 81
    NOTEQUALTO      shift and go to state 82
    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 80

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (98) expression -> term .
    (99) term -> term . PRODUCT term
    (100) term -> term . DIVIDE term

    PLUS            reduce using rule 98 (expression -> term .)
    MINUS           reduce using rule 98 (expression -> term .)
    EQUALTO         reduce using rule 98 (expression -> term .)
    NOTEQUALTO      reduce using rule 98 (expression -> term .)
    GREATER         reduce using rule 98 (expression -> term .)
    LESS            reduce using rule 98 (expression -> term .)
    GREATEREQUAL    reduce using rule 98 (expression -> term .)
    LESSEQUAL       reduce using rule 98 (expression -> term .)
    AND             reduce using rule 98 (expression -> term .)
    OR              reduce using rule 98 (expression -> term .)
    POINTCOMMA      reduce using rule 98 (expression -> term .)
    $end            reduce using rule 98 (expression -> term .)
    RPAREN          reduce using rule 98 (expression -> term .)
    RBRACKET        reduce using rule 98 (expression -> term .)
    COMMA           reduce using rule 98 (expression -> term .)
    PRODUCT         shift and go to state 83
    DIVIDE          shift and go to state 84


state 13

    (90) concatenate -> termS .

    POINTCOMMA      reduce using rule 90 (concatenate -> termS .)
    $end            reduce using rule 90 (concatenate -> termS .)


state 14

    (12) declare -> var_boolean .

    POINTCOMMA      reduce using rule 12 (declare -> var_boolean .)
    $end            reduce using rule 12 (declare -> var_boolean .)


state 15

    (13) declare -> var_number .

    POINTCOMMA      reduce using rule 13 (declare -> var_number .)
    $end            reduce using rule 13 (declare -> var_number .)


state 16

    (14) declare -> var_string .

    POINTCOMMA      reduce using rule 14 (declare -> var_string .)
    $end            reduce using rule 14 (declare -> var_string .)


state 17

    (15) declare -> var_enum .

    POINTCOMMA      reduce using rule 15 (declare -> var_enum .)
    $end            reduce using rule 15 (declare -> var_enum .)


state 18

    (16) declare -> declare_array .

    POINTCOMMA      reduce using rule 16 (declare -> declare_array .)
    $end            reduce using rule 16 (declare -> declare_array .)


state 19

    (17) declare -> declare_enum .

    POINTCOMMA      reduce using rule 17 (declare -> declare_enum .)
    $end            reduce using rule 17 (declare -> declare_enum .)


state 20

    (18) declare -> declare_generic .

    POINTCOMMA      reduce using rule 18 (declare -> declare_generic .)
    $end            reduce using rule 18 (declare -> declare_generic .)


state 21

    (61) assign -> assign_variable .

    POINTCOMMA      reduce using rule 61 (assign -> assign_variable .)
    $end            reduce using rule 61 (assign -> assign_variable .)


state 22

    (62) assign -> assign_array .

    POINTCOMMA      reduce using rule 62 (assign -> assign_array .)
    $end            reduce using rule 62 (assign -> assign_array .)


state 23

    (63) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 63 (assign -> assign_object_value .)
    $end            reduce using rule 63 (assign -> assign_object_value .)


state 24

    (116) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (110) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (113) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    EQUALTO         shift and go to state 86
    NOTEQUALTO      shift and go to state 87
    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 85

state 25

    (105) expNeg -> NEGATION . expOpLog
    (106) expNeg -> NEGATION . factor_exprlog
    (107) expNeg -> NEGATION . boolean
    (108) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (115) expOpLog -> . expCond oplogico expCond
    (116) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (117) expOpLog -> . expression oplogico expression
    (118) factor_exprlog -> . LPAREN expCond RPAREN
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (119) expCond -> . expression operador expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expOpLog                       shift and go to state 88
    factor_exprlog                 shift and go to state 89
    boolean                        shift and go to state 90
    expCond                        shift and go to state 92
    expression                     shift and go to state 93
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 26

    (118) factor_exprlog -> LPAREN . expCond RPAREN
    (120) term1 -> LPAREN . group RPAREN
    (129) factor_expr -> LPAREN . expression RPAREN
    (119) expCond -> . expression operador expression
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (139) enum_value -> . object_name POINT object_name
    (152) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    OBJECTNAME      shift and go to state 44

    expCond                        shift and go to state 101
    group                          shift and go to state 102
    expression                     shift and go to state 103
    number                         shift and go to state 104
    variable                       shift and go to state 105
    array_value                    shift and go to state 106
    object_value                   shift and go to state 107
    term                           shift and go to state 12
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term1                          shift and go to state 27
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    enum_value                     shift and go to state 38
    object_name                    shift and go to state 57

state 27

    (101) term -> term1 . INCREMENT
    (103) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 108
    DECREMENT       shift and go to state 109


state 28

    (102) term -> INCREMENT . term1
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 111
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62

    term1                          shift and go to state 110
    group                          shift and go to state 50
    number                         shift and go to state 112
    variable                       shift and go to state 113
    array_value                    shift and go to state 114
    object_value                   shift and go to state 115
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 29

    (104) term -> DECREMENT . term1
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 111
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62

    term1                          shift and go to state 116
    group                          shift and go to state 50
    number                         shift and go to state 112
    variable                       shift and go to state 113
    array_value                    shift and go to state 114
    object_value                   shift and go to state 115
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 30

    (126) term -> number .
    (122) group -> number .

    PRODUCT         reduce using rule 126 (term -> number .)
    DIVIDE          reduce using rule 126 (term -> number .)
    PLUS            reduce using rule 126 (term -> number .)
    MINUS           reduce using rule 126 (term -> number .)
    EQUALTO         reduce using rule 126 (term -> number .)
    NOTEQUALTO      reduce using rule 126 (term -> number .)
    GREATER         reduce using rule 126 (term -> number .)
    LESS            reduce using rule 126 (term -> number .)
    GREATEREQUAL    reduce using rule 126 (term -> number .)
    LESSEQUAL       reduce using rule 126 (term -> number .)
    AND             reduce using rule 126 (term -> number .)
    OR              reduce using rule 126 (term -> number .)
    POINTCOMMA      reduce using rule 126 (term -> number .)
    $end            reduce using rule 126 (term -> number .)
    RPAREN          reduce using rule 126 (term -> number .)
    RBRACKET        reduce using rule 126 (term -> number .)
    COMMA           reduce using rule 126 (term -> number .)
    INCREMENT       reduce using rule 122 (group -> number .)
    DECREMENT       reduce using rule 122 (group -> number .)


state 31

    (127) term -> factor_expr .

    PRODUCT         reduce using rule 127 (term -> factor_expr .)
    DIVIDE          reduce using rule 127 (term -> factor_expr .)
    PLUS            reduce using rule 127 (term -> factor_expr .)
    MINUS           reduce using rule 127 (term -> factor_expr .)
    EQUALTO         reduce using rule 127 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 127 (term -> factor_expr .)
    GREATER         reduce using rule 127 (term -> factor_expr .)
    LESS            reduce using rule 127 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 127 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 127 (term -> factor_expr .)
    AND             reduce using rule 127 (term -> factor_expr .)
    OR              reduce using rule 127 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 127 (term -> factor_expr .)
    $end            reduce using rule 127 (term -> factor_expr .)
    RPAREN          reduce using rule 127 (term -> factor_expr .)
    RBRACKET        reduce using rule 127 (term -> factor_expr .)
    COMMA           reduce using rule 127 (term -> factor_expr .)


state 32

    (128) term -> other_value .

    PRODUCT         reduce using rule 128 (term -> other_value .)
    DIVIDE          reduce using rule 128 (term -> other_value .)
    PLUS            reduce using rule 128 (term -> other_value .)
    MINUS           reduce using rule 128 (term -> other_value .)
    EQUALTO         reduce using rule 128 (term -> other_value .)
    NOTEQUALTO      reduce using rule 128 (term -> other_value .)
    GREATER         reduce using rule 128 (term -> other_value .)
    LESS            reduce using rule 128 (term -> other_value .)
    GREATEREQUAL    reduce using rule 128 (term -> other_value .)
    LESSEQUAL       reduce using rule 128 (term -> other_value .)
    AND             reduce using rule 128 (term -> other_value .)
    OR              reduce using rule 128 (term -> other_value .)
    POINTCOMMA      reduce using rule 128 (term -> other_value .)
    $end            reduce using rule 128 (term -> other_value .)
    RPAREN          reduce using rule 128 (term -> other_value .)
    RBRACKET        reduce using rule 128 (term -> other_value .)
    COMMA           reduce using rule 128 (term -> other_value .)


state 33

    (91) termS -> string . PLUS chain

    PLUS            shift and go to state 117


state 34

    (49) var_boolean -> declare_boolean . EQUAL boolean_value
    (50) var_boolean -> declare_boolean .
    (39) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 118
    POINTCOMMA      reduce using rule 50 (var_boolean -> declare_boolean .)
    $end            reduce using rule 50 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 119


state 35

    (46) var_number -> declare_number . EQUAL number_value
    (47) var_number -> declare_number .
    (35) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 120
    POINTCOMMA      reduce using rule 47 (var_number -> declare_number .)
    $end            reduce using rule 47 (var_number -> declare_number .)
    LBRACKET        shift and go to state 121


state 36

    (52) var_string -> declare_string . EQUAL string_value
    (53) var_string -> declare_string .
    (43) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 122
    POINTCOMMA      reduce using rule 53 (var_string -> declare_string .)
    $end            reduce using rule 53 (var_string -> declare_string .)
    LBRACKET        shift and go to state 123


state 37

    (55) var_enum -> declare_var_enum . EQUAL enum_value
    (56) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 124
    POINTCOMMA      reduce using rule 56 (var_enum -> declare_var_enum .)
    $end            reduce using rule 56 (var_enum -> declare_var_enum .)


state 38

    (132) other_value -> enum_value .

    PRODUCT         reduce using rule 132 (other_value -> enum_value .)
    DIVIDE          reduce using rule 132 (other_value -> enum_value .)
    PLUS            reduce using rule 132 (other_value -> enum_value .)
    MINUS           reduce using rule 132 (other_value -> enum_value .)
    EQUALTO         reduce using rule 132 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 132 (other_value -> enum_value .)
    GREATER         reduce using rule 132 (other_value -> enum_value .)
    LESS            reduce using rule 132 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 132 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 132 (other_value -> enum_value .)
    AND             reduce using rule 132 (other_value -> enum_value .)
    OR              reduce using rule 132 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 132 (other_value -> enum_value .)
    $end            reduce using rule 132 (other_value -> enum_value .)
    RPAREN          reduce using rule 132 (other_value -> enum_value .)
    RBRACKET        reduce using rule 132 (other_value -> enum_value .)
    COMMA           reduce using rule 132 (other_value -> enum_value .)


state 39

    (29) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 29 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 29 (declare_array -> declare_array_main_number .)


state 40

    (30) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 30 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 30 (declare_array -> declare_array_main_boolean .)


state 41

    (31) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 31 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 31 (declare_array -> declare_array_main_string .)


state 42

    (32) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 32 (declare_array -> declare_generic_array .)
    $end            reduce using rule 32 (declare_array -> declare_generic_array .)


state 43

    (19) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 125


state 44

    (152) object_name -> OBJECTNAME .

    POINT           reduce using rule 152 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 152 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 152 (object_name -> OBJECTNAME .)
    $end            reduce using rule 152 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 152 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 152 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 152 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 152 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 152 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 152 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 152 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 152 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 152 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 152 (object_name -> OBJECTNAME .)
    AND             reduce using rule 152 (object_name -> OBJECTNAME .)
    OR              reduce using rule 152 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 152 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 152 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 152 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 152 (object_name -> OBJECTNAME .)


state 45

    (58) declare_generic -> declare_any . EQUAL assign_value
    (59) declare_generic -> declare_any .
    (51) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (48) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (54) declare_string -> declare_any . TWOPOINTS VARSTRING
    (57) declare_var_enum -> declare_any . TWOPOINTS object_name
    (45) declare_generic_array -> declare_any . EQUAL list_types
    (36) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (40) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (44) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 126
    POINTCOMMA      reduce using rule 59 (declare_generic -> declare_any .)
    $end            reduce using rule 59 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 127


state 46

    (64) assign_variable -> variable . EQUAL assign_value
    (65) assign_variable -> variable . EQUAL list_types
    (130) other_value -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value
    (123) group -> variable .

    EQUAL           shift and go to state 128
    PRODUCT         reduce using rule 130 (other_value -> variable .)
    DIVIDE          reduce using rule 130 (other_value -> variable .)
    PLUS            reduce using rule 130 (other_value -> variable .)
    MINUS           reduce using rule 130 (other_value -> variable .)
    EQUALTO         reduce using rule 130 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 130 (other_value -> variable .)
    GREATER         reduce using rule 130 (other_value -> variable .)
    LESS            reduce using rule 130 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 130 (other_value -> variable .)
    LESSEQUAL       reduce using rule 130 (other_value -> variable .)
    AND             reduce using rule 130 (other_value -> variable .)
    OR              reduce using rule 130 (other_value -> variable .)
    POINTCOMMA      reduce using rule 130 (other_value -> variable .)
    $end            reduce using rule 130 (other_value -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130
    INCREMENT       reduce using rule 123 (group -> variable .)
    DECREMENT       reduce using rule 123 (group -> variable .)


state 47

    (66) assign_array -> array_value . EQUAL assign_value
    (131) other_value -> array_value .
    (124) group -> array_value .

    EQUAL           shift and go to state 131
    PRODUCT         reduce using rule 131 (other_value -> array_value .)
    DIVIDE          reduce using rule 131 (other_value -> array_value .)
    PLUS            reduce using rule 131 (other_value -> array_value .)
    MINUS           reduce using rule 131 (other_value -> array_value .)
    EQUALTO         reduce using rule 131 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 131 (other_value -> array_value .)
    GREATER         reduce using rule 131 (other_value -> array_value .)
    LESS            reduce using rule 131 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 131 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 131 (other_value -> array_value .)
    AND             reduce using rule 131 (other_value -> array_value .)
    OR              reduce using rule 131 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 131 (other_value -> array_value .)
    $end            reduce using rule 131 (other_value -> array_value .)
    INCREMENT       reduce using rule 124 (group -> array_value .)
    DECREMENT       reduce using rule 124 (group -> array_value .)


state 48

    (67) assign_object_value -> object_value_form1 . EQUAL assign_value
    (68) assign_object_value -> object_value_form1 . EQUAL list_types
    (134) object_value -> object_value_form1 .

    EQUAL           shift and go to state 132
    PRODUCT         reduce using rule 134 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 134 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 134 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 134 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 134 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 134 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 134 (object_value -> object_value_form1 .)
    LESS            reduce using rule 134 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 134 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 134 (object_value -> object_value_form1 .)
    AND             reduce using rule 134 (object_value -> object_value_form1 .)
    OR              reduce using rule 134 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 134 (object_value -> object_value_form1 .)
    $end            reduce using rule 134 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 134 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 134 (object_value -> object_value_form1 .)


state 49

    (69) assign_object_value -> object_value_form2 . EQUAL assign_value
    (135) object_value -> object_value_form2 .

    EQUAL           shift and go to state 133
    PRODUCT         reduce using rule 135 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 135 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 135 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 135 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 135 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 135 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 135 (object_value -> object_value_form2 .)
    LESS            reduce using rule 135 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 135 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 135 (object_value -> object_value_form2 .)
    AND             reduce using rule 135 (object_value -> object_value_form2 .)
    OR              reduce using rule 135 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 135 (object_value -> object_value_form2 .)
    $end            reduce using rule 135 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 135 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 135 (object_value -> object_value_form2 .)


state 50

    (121) term1 -> group .

    INCREMENT       reduce using rule 121 (term1 -> group .)
    DECREMENT       reduce using rule 121 (term1 -> group .)
    PRODUCT         reduce using rule 121 (term1 -> group .)
    DIVIDE          reduce using rule 121 (term1 -> group .)
    PLUS            reduce using rule 121 (term1 -> group .)
    MINUS           reduce using rule 121 (term1 -> group .)
    EQUALTO         reduce using rule 121 (term1 -> group .)
    NOTEQUALTO      reduce using rule 121 (term1 -> group .)
    GREATER         reduce using rule 121 (term1 -> group .)
    LESS            reduce using rule 121 (term1 -> group .)
    GREATEREQUAL    reduce using rule 121 (term1 -> group .)
    LESSEQUAL       reduce using rule 121 (term1 -> group .)
    AND             reduce using rule 121 (term1 -> group .)
    OR              reduce using rule 121 (term1 -> group .)
    POINTCOMMA      reduce using rule 121 (term1 -> group .)
    $end            reduce using rule 121 (term1 -> group .)
    RPAREN          reduce using rule 121 (term1 -> group .)
    RBRACKET        reduce using rule 121 (term1 -> group .)
    COMMA           reduce using rule 121 (term1 -> group .)


state 51

    (144) number -> NUMBER .

    PRODUCT         reduce using rule 144 (number -> NUMBER .)
    DIVIDE          reduce using rule 144 (number -> NUMBER .)
    PLUS            reduce using rule 144 (number -> NUMBER .)
    MINUS           reduce using rule 144 (number -> NUMBER .)
    EQUALTO         reduce using rule 144 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 144 (number -> NUMBER .)
    GREATER         reduce using rule 144 (number -> NUMBER .)
    LESS            reduce using rule 144 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 144 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 144 (number -> NUMBER .)
    AND             reduce using rule 144 (number -> NUMBER .)
    OR              reduce using rule 144 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 144 (number -> NUMBER .)
    $end            reduce using rule 144 (number -> NUMBER .)
    INCREMENT       reduce using rule 144 (number -> NUMBER .)
    DECREMENT       reduce using rule 144 (number -> NUMBER .)
    RPAREN          reduce using rule 144 (number -> NUMBER .)
    RBRACKET        reduce using rule 144 (number -> NUMBER .)
    COMMA           reduce using rule 144 (number -> NUMBER .)
    RKEY            reduce using rule 144 (number -> NUMBER .)


state 52

    (145) number -> FLOAT .

    PRODUCT         reduce using rule 145 (number -> FLOAT .)
    DIVIDE          reduce using rule 145 (number -> FLOAT .)
    PLUS            reduce using rule 145 (number -> FLOAT .)
    MINUS           reduce using rule 145 (number -> FLOAT .)
    EQUALTO         reduce using rule 145 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 145 (number -> FLOAT .)
    GREATER         reduce using rule 145 (number -> FLOAT .)
    LESS            reduce using rule 145 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 145 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 145 (number -> FLOAT .)
    AND             reduce using rule 145 (number -> FLOAT .)
    OR              reduce using rule 145 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 145 (number -> FLOAT .)
    $end            reduce using rule 145 (number -> FLOAT .)
    INCREMENT       reduce using rule 145 (number -> FLOAT .)
    DECREMENT       reduce using rule 145 (number -> FLOAT .)
    RPAREN          reduce using rule 145 (number -> FLOAT .)
    RBRACKET        reduce using rule 145 (number -> FLOAT .)
    COMMA           reduce using rule 145 (number -> FLOAT .)
    RKEY            reduce using rule 145 (number -> FLOAT .)


state 53

    (133) other_value -> object_value .
    (125) group -> object_value .

    PRODUCT         reduce using rule 133 (other_value -> object_value .)
    DIVIDE          reduce using rule 133 (other_value -> object_value .)
    PLUS            reduce using rule 133 (other_value -> object_value .)
    MINUS           reduce using rule 133 (other_value -> object_value .)
    EQUALTO         reduce using rule 133 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 133 (other_value -> object_value .)
    GREATER         reduce using rule 133 (other_value -> object_value .)
    LESS            reduce using rule 133 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 133 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 133 (other_value -> object_value .)
    AND             reduce using rule 133 (other_value -> object_value .)
    OR              reduce using rule 133 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 133 (other_value -> object_value .)
    $end            reduce using rule 133 (other_value -> object_value .)
    RPAREN          reduce using rule 133 (other_value -> object_value .)
    RBRACKET        reduce using rule 133 (other_value -> object_value .)
    COMMA           reduce using rule 133 (other_value -> object_value .)
    INCREMENT       reduce using rule 125 (group -> object_value .)
    DECREMENT       reduce using rule 125 (group -> object_value .)


state 54

    (146) string -> NORMSTRING1 .

    PLUS            reduce using rule 146 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 146 (string -> NORMSTRING1 .)
    $end            reduce using rule 146 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 146 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 146 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 146 (string -> NORMSTRING1 .)


state 55

    (147) string -> NORMSTRING2 .

    PLUS            reduce using rule 147 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 147 (string -> NORMSTRING2 .)
    $end            reduce using rule 147 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 147 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 147 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 147 (string -> NORMSTRING2 .)


state 56

    (148) string -> MULTISTRING .

    PLUS            reduce using rule 148 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 148 (string -> MULTISTRING .)
    $end            reduce using rule 148 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 148 (string -> MULTISTRING .)
    COMMA           reduce using rule 148 (string -> MULTISTRING .)
    RKEY            reduce using rule 148 (string -> MULTISTRING .)


state 57

    (139) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 134


state 58

    (33) declare_array_main_number -> declare_array_number . EQUAL list_number
    (34) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 135
    POINTCOMMA      reduce using rule 34 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 34 (declare_array_main_number -> declare_array_number .)


state 59

    (37) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (38) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 136
    POINTCOMMA      reduce using rule 38 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 38 (declare_array_main_boolean -> declare_array_boolean .)


state 60

    (41) declare_array_main_string -> declare_array_string . EQUAL list_string
    (42) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 137
    POINTCOMMA      reduce using rule 42 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 42 (declare_array_main_string -> declare_array_string .)


state 61

    (60) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 138


state 62

    (151) variable -> VARIABLE .

    EQUAL           reduce using rule 151 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 151 (variable -> VARIABLE .)
    POINT           reduce using rule 151 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 151 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 151 (variable -> VARIABLE .)
    PLUS            reduce using rule 151 (variable -> VARIABLE .)
    MINUS           reduce using rule 151 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 151 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 151 (variable -> VARIABLE .)
    GREATER         reduce using rule 151 (variable -> VARIABLE .)
    LESS            reduce using rule 151 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 151 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 151 (variable -> VARIABLE .)
    AND             reduce using rule 151 (variable -> VARIABLE .)
    OR              reduce using rule 151 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 151 (variable -> VARIABLE .)
    $end            reduce using rule 151 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 151 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 151 (variable -> VARIABLE .)
    RPAREN          reduce using rule 151 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 151 (variable -> VARIABLE .)
    COMMA           reduce using rule 151 (variable -> VARIABLE .)


state 63

    (140) prefix -> LET .

    VARIABLE        reduce using rule 140 (prefix -> LET .)


state 64

    (141) prefix -> VAR .

    VARIABLE        reduce using rule 141 (prefix -> VAR .)


state 65

    (142) prefix -> STATIC .

    VARIABLE        reduce using rule 142 (prefix -> STATIC .)


state 66

    (143) prefix -> CONST .

    VARIABLE        reduce using rule 143 (prefix -> CONST .)


state 67

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 68

    (96) expression -> expression PLUS . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    term                           shift and go to state 139
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 69

    (97) expression -> expression MINUS . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    term                           shift and go to state 140
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 70

    (119) expCond -> expression operador . expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expression                     shift and go to state 141
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 71

    (117) expOpLog -> expression oplogico . expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expression                     shift and go to state 142
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 72

    (111) expEq -> expression EQUALTO . expression
    (157) operador -> EQUALTO .
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

  ! INCREMENT       [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 157 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 157 (operador -> EQUALTO .) ]

    expression                     shift and go to state 143
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 73

    (114) expNotEq -> expression NOTEQUALTO . expression
    (158) operador -> NOTEQUALTO .
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

  ! INCREMENT       [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 158 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 158 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 144
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 74

    (153) operador -> GREATER .

    INCREMENT       reduce using rule 153 (operador -> GREATER .)
    DECREMENT       reduce using rule 153 (operador -> GREATER .)
    LPAREN          reduce using rule 153 (operador -> GREATER .)
    NUMBER          reduce using rule 153 (operador -> GREATER .)
    FLOAT           reduce using rule 153 (operador -> GREATER .)
    VARIABLE        reduce using rule 153 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 153 (operador -> GREATER .)


state 75

    (154) operador -> LESS .

    INCREMENT       reduce using rule 154 (operador -> LESS .)
    DECREMENT       reduce using rule 154 (operador -> LESS .)
    LPAREN          reduce using rule 154 (operador -> LESS .)
    NUMBER          reduce using rule 154 (operador -> LESS .)
    FLOAT           reduce using rule 154 (operador -> LESS .)
    VARIABLE        reduce using rule 154 (operador -> LESS .)
    OBJECTNAME      reduce using rule 154 (operador -> LESS .)


state 76

    (155) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 155 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 155 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 155 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 155 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 155 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 155 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 155 (operador -> GREATEREQUAL .)


state 77

    (156) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 156 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 156 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 156 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 156 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 156 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 156 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 156 (operador -> LESSEQUAL .)


state 78

    (159) oplogico -> AND .

    INCREMENT       reduce using rule 159 (oplogico -> AND .)
    DECREMENT       reduce using rule 159 (oplogico -> AND .)
    LPAREN          reduce using rule 159 (oplogico -> AND .)
    NUMBER          reduce using rule 159 (oplogico -> AND .)
    FLOAT           reduce using rule 159 (oplogico -> AND .)
    VARIABLE        reduce using rule 159 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 159 (oplogico -> AND .)


state 79

    (160) oplogico -> OR .

    INCREMENT       reduce using rule 160 (oplogico -> OR .)
    DECREMENT       reduce using rule 160 (oplogico -> OR .)
    LPAREN          reduce using rule 160 (oplogico -> OR .)
    NUMBER          reduce using rule 160 (oplogico -> OR .)
    FLOAT           reduce using rule 160 (oplogico -> OR .)
    VARIABLE        reduce using rule 160 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 160 (oplogico -> OR .)


state 80

    (115) expOpLog -> expCond oplogico . expCond
    (119) expCond -> . expression operador expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expCond                        shift and go to state 145
    expression                     shift and go to state 146
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 81

    (109) expEq -> expCond EQUALTO . expCond
    (119) expCond -> . expression operador expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expCond                        shift and go to state 147
    expression                     shift and go to state 146
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 82

    (112) expNotEq -> expCond NOTEQUALTO . expCond
    (119) expCond -> . expression operador expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expCond                        shift and go to state 148
    expression                     shift and go to state 146
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 83

    (99) term -> term PRODUCT . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    term                           shift and go to state 149
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 84

    (100) term -> term DIVIDE . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    term                           shift and go to state 150
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 85

    (116) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (118) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 152

    factor_exprlog                 shift and go to state 151

state 86

    (110) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (118) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 152

    factor_exprlog                 shift and go to state 153

state 87

    (113) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (118) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 152

    factor_exprlog                 shift and go to state 154

state 88

    (105) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 105 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 105 (expNeg -> NEGATION expOpLog .)


state 89

    (106) expNeg -> NEGATION factor_exprlog .
    (116) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    POINTCOMMA      reduce using rule 106 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 106 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 85

state 90

    (107) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 107 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 107 (expNeg -> NEGATION boolean .)


state 91

    (108) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (118) factor_exprlog -> LPAREN . expCond RPAREN
    (120) term1 -> LPAREN . group RPAREN
    (129) factor_expr -> LPAREN . expression RPAREN
    (115) expOpLog -> . expCond oplogico expCond
    (116) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (117) expOpLog -> . expression oplogico expression
    (119) expCond -> . expression operador expression
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (118) factor_exprlog -> . LPAREN expCond RPAREN
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (139) enum_value -> . object_name POINT object_name
    (152) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 26
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    OBJECTNAME      shift and go to state 44

    expOpLog                       shift and go to state 155
    expCond                        shift and go to state 156
    group                          shift and go to state 102
    expression                     shift and go to state 157
    factor_exprlog                 shift and go to state 158
    number                         shift and go to state 104
    variable                       shift and go to state 105
    array_value                    shift and go to state 106
    object_value                   shift and go to state 107
    term                           shift and go to state 12
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term1                          shift and go to state 27
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    enum_value                     shift and go to state 38
    object_name                    shift and go to state 57

state 92

    (115) expOpLog -> expCond . oplogico expCond
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 80

state 93

    (117) expOpLog -> expression . oplogico expression
    (119) expCond -> expression . operador expression
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term
    (159) oplogico -> . AND
    (160) oplogico -> . OR
    (153) operador -> . GREATER
    (154) operador -> . LESS
    (155) operador -> . GREATEREQUAL
    (156) operador -> . LESSEQUAL
    (157) operador -> . EQUALTO
    (158) operador -> . NOTEQUALTO

    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    AND             shift and go to state 78
    OR              shift and go to state 79
    GREATER         shift and go to state 74
    LESS            shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    EQUALTO         shift and go to state 159
    NOTEQUALTO      shift and go to state 160

    oplogico                       shift and go to state 71
    operador                       shift and go to state 70

state 94

    (149) boolean -> TRUE .

    POINTCOMMA      reduce using rule 149 (boolean -> TRUE .)
    $end            reduce using rule 149 (boolean -> TRUE .)
    RBRACKET        reduce using rule 149 (boolean -> TRUE .)
    COMMA           reduce using rule 149 (boolean -> TRUE .)


state 95

    (150) boolean -> FALSE .

    POINTCOMMA      reduce using rule 150 (boolean -> FALSE .)
    $end            reduce using rule 150 (boolean -> FALSE .)
    RBRACKET        reduce using rule 150 (boolean -> FALSE .)
    COMMA           reduce using rule 150 (boolean -> FALSE .)


state 96

    (130) other_value -> variable .
    (123) group -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 130 (other_value -> variable .)
    DIVIDE          reduce using rule 130 (other_value -> variable .)
    PLUS            reduce using rule 130 (other_value -> variable .)
    MINUS           reduce using rule 130 (other_value -> variable .)
    AND             reduce using rule 130 (other_value -> variable .)
    OR              reduce using rule 130 (other_value -> variable .)
    GREATER         reduce using rule 130 (other_value -> variable .)
    LESS            reduce using rule 130 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 130 (other_value -> variable .)
    LESSEQUAL       reduce using rule 130 (other_value -> variable .)
    EQUALTO         reduce using rule 130 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 130 (other_value -> variable .)
    POINTCOMMA      reduce using rule 130 (other_value -> variable .)
    $end            reduce using rule 130 (other_value -> variable .)
    RPAREN          reduce using rule 130 (other_value -> variable .)
    RBRACKET        reduce using rule 130 (other_value -> variable .)
    COMMA           reduce using rule 130 (other_value -> variable .)
    INCREMENT       reduce using rule 123 (group -> variable .)
    DECREMENT       reduce using rule 123 (group -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130


state 97

    (131) other_value -> array_value .
    (124) group -> array_value .

    PRODUCT         reduce using rule 131 (other_value -> array_value .)
    DIVIDE          reduce using rule 131 (other_value -> array_value .)
    PLUS            reduce using rule 131 (other_value -> array_value .)
    MINUS           reduce using rule 131 (other_value -> array_value .)
    AND             reduce using rule 131 (other_value -> array_value .)
    OR              reduce using rule 131 (other_value -> array_value .)
    GREATER         reduce using rule 131 (other_value -> array_value .)
    LESS            reduce using rule 131 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 131 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 131 (other_value -> array_value .)
    EQUALTO         reduce using rule 131 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 131 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 131 (other_value -> array_value .)
    $end            reduce using rule 131 (other_value -> array_value .)
    RPAREN          reduce using rule 131 (other_value -> array_value .)
    RBRACKET        reduce using rule 131 (other_value -> array_value .)
    COMMA           reduce using rule 131 (other_value -> array_value .)
    INCREMENT       reduce using rule 124 (group -> array_value .)
    DECREMENT       reduce using rule 124 (group -> array_value .)


state 98

    (134) object_value -> object_value_form1 .

    PRODUCT         reduce using rule 134 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 134 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 134 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 134 (object_value -> object_value_form1 .)
    AND             reduce using rule 134 (object_value -> object_value_form1 .)
    OR              reduce using rule 134 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 134 (object_value -> object_value_form1 .)
    LESS            reduce using rule 134 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 134 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 134 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 134 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 134 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 134 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 134 (object_value -> object_value_form1 .)
    RPAREN          reduce using rule 134 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 134 (object_value -> object_value_form1 .)
    $end            reduce using rule 134 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 134 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 134 (object_value -> object_value_form1 .)


state 99

    (135) object_value -> object_value_form2 .

    PRODUCT         reduce using rule 135 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 135 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 135 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 135 (object_value -> object_value_form2 .)
    AND             reduce using rule 135 (object_value -> object_value_form2 .)
    OR              reduce using rule 135 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 135 (object_value -> object_value_form2 .)
    LESS            reduce using rule 135 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 135 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 135 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 135 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 135 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 135 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 135 (object_value -> object_value_form2 .)
    RPAREN          reduce using rule 135 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 135 (object_value -> object_value_form2 .)
    $end            reduce using rule 135 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 135 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 135 (object_value -> object_value_form2 .)


state 100

    (120) term1 -> LPAREN . group RPAREN
    (129) factor_expr -> LPAREN . expression RPAREN
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (139) enum_value -> . object_name POINT object_name
    (152) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    OBJECTNAME      shift and go to state 44

    group                          shift and go to state 102
    expression                     shift and go to state 161
    number                         shift and go to state 104
    variable                       shift and go to state 105
    array_value                    shift and go to state 106
    object_value                   shift and go to state 107
    term                           shift and go to state 12
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term1                          shift and go to state 27
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    enum_value                     shift and go to state 38
    object_name                    shift and go to state 57

state 101

    (118) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 162


state 102

    (120) term1 -> LPAREN group . RPAREN
    (121) term1 -> group .

    RPAREN          shift and go to state 163
    INCREMENT       reduce using rule 121 (term1 -> group .)
    DECREMENT       reduce using rule 121 (term1 -> group .)


state 103

    (129) factor_expr -> LPAREN expression . RPAREN
    (119) expCond -> expression . operador expression
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term
    (153) operador -> . GREATER
    (154) operador -> . LESS
    (155) operador -> . GREATEREQUAL
    (156) operador -> . LESSEQUAL
    (157) operador -> . EQUALTO
    (158) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 164
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    GREATER         shift and go to state 74
    LESS            shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    EQUALTO         shift and go to state 159
    NOTEQUALTO      shift and go to state 160

    operador                       shift and go to state 70

state 104

    (122) group -> number .
    (126) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 122 (group -> number .)
    RPAREN          reduce using rule 122 (group -> number .)
    INCREMENT       reduce using rule 122 (group -> number .)
    DECREMENT       reduce using rule 122 (group -> number .)
    PRODUCT         reduce using rule 126 (term -> number .)
    DIVIDE          reduce using rule 126 (term -> number .)
    PLUS            reduce using rule 126 (term -> number .)
    MINUS           reduce using rule 126 (term -> number .)
    GREATER         reduce using rule 126 (term -> number .)
    LESS            reduce using rule 126 (term -> number .)
    GREATEREQUAL    reduce using rule 126 (term -> number .)
    LESSEQUAL       reduce using rule 126 (term -> number .)
    EQUALTO         reduce using rule 126 (term -> number .)
    NOTEQUALTO      reduce using rule 126 (term -> number .)
    AND             reduce using rule 126 (term -> number .)
    OR              reduce using rule 126 (term -> number .)

  ! RPAREN          [ reduce using rule 126 (term -> number .) ]


state 105

    (123) group -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value
    (130) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 123 (group -> variable .)
    RPAREN          reduce using rule 123 (group -> variable .)
    INCREMENT       reduce using rule 123 (group -> variable .)
    DECREMENT       reduce using rule 123 (group -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130
    PRODUCT         reduce using rule 130 (other_value -> variable .)
    DIVIDE          reduce using rule 130 (other_value -> variable .)
    PLUS            reduce using rule 130 (other_value -> variable .)
    MINUS           reduce using rule 130 (other_value -> variable .)
    GREATER         reduce using rule 130 (other_value -> variable .)
    LESS            reduce using rule 130 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 130 (other_value -> variable .)
    LESSEQUAL       reduce using rule 130 (other_value -> variable .)
    EQUALTO         reduce using rule 130 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 130 (other_value -> variable .)
    AND             reduce using rule 130 (other_value -> variable .)
    OR              reduce using rule 130 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 130 (other_value -> variable .) ]


state 106

    (124) group -> array_value .
    (131) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 124 (group -> array_value .)
    RPAREN          reduce using rule 124 (group -> array_value .)
    INCREMENT       reduce using rule 124 (group -> array_value .)
    DECREMENT       reduce using rule 124 (group -> array_value .)
    PRODUCT         reduce using rule 131 (other_value -> array_value .)
    DIVIDE          reduce using rule 131 (other_value -> array_value .)
    PLUS            reduce using rule 131 (other_value -> array_value .)
    MINUS           reduce using rule 131 (other_value -> array_value .)
    GREATER         reduce using rule 131 (other_value -> array_value .)
    LESS            reduce using rule 131 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 131 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 131 (other_value -> array_value .)
    EQUALTO         reduce using rule 131 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 131 (other_value -> array_value .)
    AND             reduce using rule 131 (other_value -> array_value .)
    OR              reduce using rule 131 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 131 (other_value -> array_value .) ]


state 107

    (125) group -> object_value .
    (133) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 125 (group -> object_value .)
    RPAREN          reduce using rule 125 (group -> object_value .)
    INCREMENT       reduce using rule 125 (group -> object_value .)
    DECREMENT       reduce using rule 125 (group -> object_value .)
    PRODUCT         reduce using rule 133 (other_value -> object_value .)
    DIVIDE          reduce using rule 133 (other_value -> object_value .)
    PLUS            reduce using rule 133 (other_value -> object_value .)
    MINUS           reduce using rule 133 (other_value -> object_value .)
    GREATER         reduce using rule 133 (other_value -> object_value .)
    LESS            reduce using rule 133 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 133 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 133 (other_value -> object_value .)
    EQUALTO         reduce using rule 133 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 133 (other_value -> object_value .)
    AND             reduce using rule 133 (other_value -> object_value .)
    OR              reduce using rule 133 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 133 (other_value -> object_value .) ]


state 108

    (101) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 101 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 101 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 101 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 101 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 101 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 101 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 101 (term -> term1 INCREMENT .)
    LESS            reduce using rule 101 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 101 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 101 (term -> term1 INCREMENT .)
    AND             reduce using rule 101 (term -> term1 INCREMENT .)
    OR              reduce using rule 101 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 101 (term -> term1 INCREMENT .)
    $end            reduce using rule 101 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 101 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 101 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 101 (term -> term1 INCREMENT .)


state 109

    (103) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 103 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 103 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 103 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 103 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 103 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 103 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 103 (term -> term1 DECREMENT .)
    LESS            reduce using rule 103 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 103 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 103 (term -> term1 DECREMENT .)
    AND             reduce using rule 103 (term -> term1 DECREMENT .)
    OR              reduce using rule 103 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 103 (term -> term1 DECREMENT .)
    $end            reduce using rule 103 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 103 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 103 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 103 (term -> term1 DECREMENT .)


state 110

    (102) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 102 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 102 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 102 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 102 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 102 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 102 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 102 (term -> INCREMENT term1 .)
    LESS            reduce using rule 102 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 102 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 102 (term -> INCREMENT term1 .)
    AND             reduce using rule 102 (term -> INCREMENT term1 .)
    OR              reduce using rule 102 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 102 (term -> INCREMENT term1 .)
    $end            reduce using rule 102 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 102 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 102 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 102 (term -> INCREMENT term1 .)


state 111

    (120) term1 -> LPAREN . group RPAREN
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62

    group                          shift and go to state 165
    number                         shift and go to state 112
    variable                       shift and go to state 113
    array_value                    shift and go to state 114
    object_value                   shift and go to state 115
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 112

    (122) group -> number .

    PRODUCT         reduce using rule 122 (group -> number .)
    DIVIDE          reduce using rule 122 (group -> number .)
    PLUS            reduce using rule 122 (group -> number .)
    MINUS           reduce using rule 122 (group -> number .)
    EQUALTO         reduce using rule 122 (group -> number .)
    NOTEQUALTO      reduce using rule 122 (group -> number .)
    GREATER         reduce using rule 122 (group -> number .)
    LESS            reduce using rule 122 (group -> number .)
    GREATEREQUAL    reduce using rule 122 (group -> number .)
    LESSEQUAL       reduce using rule 122 (group -> number .)
    AND             reduce using rule 122 (group -> number .)
    OR              reduce using rule 122 (group -> number .)
    POINTCOMMA      reduce using rule 122 (group -> number .)
    $end            reduce using rule 122 (group -> number .)
    RPAREN          reduce using rule 122 (group -> number .)
    RBRACKET        reduce using rule 122 (group -> number .)
    COMMA           reduce using rule 122 (group -> number .)


state 113

    (123) group -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 123 (group -> variable .)
    DIVIDE          reduce using rule 123 (group -> variable .)
    PLUS            reduce using rule 123 (group -> variable .)
    MINUS           reduce using rule 123 (group -> variable .)
    EQUALTO         reduce using rule 123 (group -> variable .)
    NOTEQUALTO      reduce using rule 123 (group -> variable .)
    GREATER         reduce using rule 123 (group -> variable .)
    LESS            reduce using rule 123 (group -> variable .)
    GREATEREQUAL    reduce using rule 123 (group -> variable .)
    LESSEQUAL       reduce using rule 123 (group -> variable .)
    AND             reduce using rule 123 (group -> variable .)
    OR              reduce using rule 123 (group -> variable .)
    POINTCOMMA      reduce using rule 123 (group -> variable .)
    $end            reduce using rule 123 (group -> variable .)
    RPAREN          reduce using rule 123 (group -> variable .)
    RBRACKET        reduce using rule 123 (group -> variable .)
    COMMA           reduce using rule 123 (group -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130


state 114

    (124) group -> array_value .

    PRODUCT         reduce using rule 124 (group -> array_value .)
    DIVIDE          reduce using rule 124 (group -> array_value .)
    PLUS            reduce using rule 124 (group -> array_value .)
    MINUS           reduce using rule 124 (group -> array_value .)
    EQUALTO         reduce using rule 124 (group -> array_value .)
    NOTEQUALTO      reduce using rule 124 (group -> array_value .)
    GREATER         reduce using rule 124 (group -> array_value .)
    LESS            reduce using rule 124 (group -> array_value .)
    GREATEREQUAL    reduce using rule 124 (group -> array_value .)
    LESSEQUAL       reduce using rule 124 (group -> array_value .)
    AND             reduce using rule 124 (group -> array_value .)
    OR              reduce using rule 124 (group -> array_value .)
    POINTCOMMA      reduce using rule 124 (group -> array_value .)
    $end            reduce using rule 124 (group -> array_value .)
    RPAREN          reduce using rule 124 (group -> array_value .)
    RBRACKET        reduce using rule 124 (group -> array_value .)
    COMMA           reduce using rule 124 (group -> array_value .)


state 115

    (125) group -> object_value .

    PRODUCT         reduce using rule 125 (group -> object_value .)
    DIVIDE          reduce using rule 125 (group -> object_value .)
    PLUS            reduce using rule 125 (group -> object_value .)
    MINUS           reduce using rule 125 (group -> object_value .)
    EQUALTO         reduce using rule 125 (group -> object_value .)
    NOTEQUALTO      reduce using rule 125 (group -> object_value .)
    GREATER         reduce using rule 125 (group -> object_value .)
    LESS            reduce using rule 125 (group -> object_value .)
    GREATEREQUAL    reduce using rule 125 (group -> object_value .)
    LESSEQUAL       reduce using rule 125 (group -> object_value .)
    AND             reduce using rule 125 (group -> object_value .)
    OR              reduce using rule 125 (group -> object_value .)
    POINTCOMMA      reduce using rule 125 (group -> object_value .)
    $end            reduce using rule 125 (group -> object_value .)
    RPAREN          reduce using rule 125 (group -> object_value .)
    RBRACKET        reduce using rule 125 (group -> object_value .)
    COMMA           reduce using rule 125 (group -> object_value .)


state 116

    (104) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 104 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 104 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 104 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 104 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 104 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 104 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 104 (term -> DECREMENT term1 .)
    LESS            reduce using rule 104 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 104 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 104 (term -> DECREMENT term1 .)
    AND             reduce using rule 104 (term -> DECREMENT term1 .)
    OR              reduce using rule 104 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 104 (term -> DECREMENT term1 .)
    $end            reduce using rule 104 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 104 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 104 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 104 (term -> DECREMENT term1 .)


state 117

    (91) termS -> string PLUS . chain
    (92) chain -> . termS PLUS value
    (93) chain -> . value
    (91) termS -> . string PLUS chain
    (94) value -> . expression
    (95) value -> . string
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    string                         shift and go to state 166
    chain                          shift and go to state 167
    termS                          shift and go to state 168
    value                          shift and go to state 169
    expression                     shift and go to state 170
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 118

    (49) var_boolean -> declare_boolean EQUAL . boolean_value
    (86) boolean_value -> . boolean
    (87) boolean_value -> . other_value
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    boolean_value                  shift and go to state 171
    boolean                        shift and go to state 172
    other_value                    shift and go to state 173
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 119

    (39) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 177


state 120

    (46) var_number -> declare_number EQUAL . number_value
    (85) number_value -> . expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    number_value                   shift and go to state 178
    expression                     shift and go to state 179
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 121

    (35) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 180


state 122

    (52) var_string -> declare_string EQUAL . string_value
    (88) string_value -> . string
    (89) string_value -> . other_value
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    string_value                   shift and go to state 181
    string                         shift and go to state 182
    other_value                    shift and go to state 183
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 123

    (43) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 184


state 124

    (55) var_enum -> declare_var_enum EQUAL . enum_value
    (139) enum_value -> . object_name POINT object_name
    (152) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 44

    enum_value                     shift and go to state 185
    object_name                    shift and go to state 57

state 125

    (19) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 186


state 126

    (58) declare_generic -> declare_any EQUAL . assign_value
    (45) declare_generic_array -> declare_any EQUAL . list_types
    (70) assign_value -> . expression
    (71) assign_value -> . boolean
    (72) assign_value -> . string
    (73) list_types -> . list_number
    (74) list_types -> . list_boolean
    (75) list_types -> . list_string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (76) list_number -> . LBRACKET numbers RBRACKET
    (79) list_boolean -> . LBRACKET booleans RBRACKET
    (82) list_string -> . LBRACKET strings RBRACKET
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    LBRACKET        shift and go to state 195
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    assign_value                   shift and go to state 187
    list_types                     shift and go to state 188
    expression                     shift and go to state 189
    boolean                        shift and go to state 190
    string                         shift and go to state 191
    list_number                    shift and go to state 192
    list_boolean                   shift and go to state 193
    list_string                    shift and go to state 194
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 127

    (51) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (48) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (54) declare_string -> declare_any TWOPOINTS . VARSTRING
    (57) declare_var_enum -> declare_any TWOPOINTS . object_name
    (36) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (40) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (44) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (152) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 196
    VARNUMBER       shift and go to state 197
    VARSTRING       shift and go to state 198
    ARRAY           shift and go to state 200
    OBJECTNAME      shift and go to state 44

    object_name                    shift and go to state 199

state 128

    (64) assign_variable -> variable EQUAL . assign_value
    (65) assign_variable -> variable EQUAL . list_types
    (70) assign_value -> . expression
    (71) assign_value -> . boolean
    (72) assign_value -> . string
    (73) list_types -> . list_number
    (74) list_types -> . list_boolean
    (75) list_types -> . list_string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (76) list_number -> . LBRACKET numbers RBRACKET
    (79) list_boolean -> . LBRACKET booleans RBRACKET
    (82) list_string -> . LBRACKET strings RBRACKET
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    LBRACKET        shift and go to state 195
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    variable                       shift and go to state 96
    assign_value                   shift and go to state 201
    list_types                     shift and go to state 202
    expression                     shift and go to state 189
    boolean                        shift and go to state 190
    string                         shift and go to state 191
    list_number                    shift and go to state 192
    list_boolean                   shift and go to state 193
    list_string                    shift and go to state 194
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 129

    (138) array_value -> variable LBRACKET . expression RBRACKET
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    variable                       shift and go to state 96
    expression                     shift and go to state 203
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 130

    (136) object_value_form1 -> variable POINT . variable
    (137) object_value_form2 -> variable POINT . array_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 62

    variable                       shift and go to state 204
    array_value                    shift and go to state 205

state 131

    (66) assign_array -> array_value EQUAL . assign_value
    (70) assign_value -> . expression
    (71) assign_value -> . boolean
    (72) assign_value -> . string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    array_value                    shift and go to state 97
    assign_value                   shift and go to state 206
    expression                     shift and go to state 189
    boolean                        shift and go to state 190
    string                         shift and go to state 191
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 132

    (67) assign_object_value -> object_value_form1 EQUAL . assign_value
    (68) assign_object_value -> object_value_form1 EQUAL . list_types
    (70) assign_value -> . expression
    (71) assign_value -> . boolean
    (72) assign_value -> . string
    (73) list_types -> . list_number
    (74) list_types -> . list_boolean
    (75) list_types -> . list_string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (76) list_number -> . LBRACKET numbers RBRACKET
    (79) list_boolean -> . LBRACKET booleans RBRACKET
    (82) list_string -> . LBRACKET strings RBRACKET
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    LBRACKET        shift and go to state 195
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    object_value_form1             shift and go to state 98
    assign_value                   shift and go to state 207
    list_types                     shift and go to state 208
    expression                     shift and go to state 189
    boolean                        shift and go to state 190
    string                         shift and go to state 191
    list_number                    shift and go to state 192
    list_boolean                   shift and go to state 193
    list_string                    shift and go to state 194
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form2             shift and go to state 99

state 133

    (69) assign_object_value -> object_value_form2 EQUAL . assign_value
    (70) assign_value -> . expression
    (71) assign_value -> . boolean
    (72) assign_value -> . string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    object_value_form2             shift and go to state 99
    assign_value                   shift and go to state 209
    expression                     shift and go to state 189
    boolean                        shift and go to state 190
    string                         shift and go to state 191
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98

state 134

    (139) enum_value -> object_name POINT . object_name
    (152) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 44

    object_name                    shift and go to state 210

state 135

    (33) declare_array_main_number -> declare_array_number EQUAL . list_number
    (76) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 212

    list_number                    shift and go to state 211

state 136

    (37) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (79) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 214

    list_boolean                   shift and go to state 213

state 137

    (41) declare_array_main_string -> declare_array_string EQUAL . list_string
    (82) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 216

    list_string                    shift and go to state 215

state 138

    (60) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 60 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 60 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 60 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 60 (declare_any -> prefix VARIABLE .)


state 139

    (96) expression -> expression PLUS term .
    (99) term -> term . PRODUCT term
    (100) term -> term . DIVIDE term

    PLUS            reduce using rule 96 (expression -> expression PLUS term .)
    MINUS           reduce using rule 96 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 96 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 96 (expression -> expression PLUS term .)
    GREATER         reduce using rule 96 (expression -> expression PLUS term .)
    LESS            reduce using rule 96 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 96 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 96 (expression -> expression PLUS term .)
    AND             reduce using rule 96 (expression -> expression PLUS term .)
    OR              reduce using rule 96 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 96 (expression -> expression PLUS term .)
    $end            reduce using rule 96 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 96 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 96 (expression -> expression PLUS term .)
    COMMA           reduce using rule 96 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 83
    DIVIDE          shift and go to state 84


state 140

    (97) expression -> expression MINUS term .
    (99) term -> term . PRODUCT term
    (100) term -> term . DIVIDE term

    PLUS            reduce using rule 97 (expression -> expression MINUS term .)
    MINUS           reduce using rule 97 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 97 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 97 (expression -> expression MINUS term .)
    GREATER         reduce using rule 97 (expression -> expression MINUS term .)
    LESS            reduce using rule 97 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 97 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 97 (expression -> expression MINUS term .)
    AND             reduce using rule 97 (expression -> expression MINUS term .)
    OR              reduce using rule 97 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 97 (expression -> expression MINUS term .)
    $end            reduce using rule 97 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 97 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 97 (expression -> expression MINUS term .)
    COMMA           reduce using rule 97 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 83
    DIVIDE          shift and go to state 84


state 141

    (119) expCond -> expression operador expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    EQUALTO         reduce using rule 119 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 119 (expCond -> expression operador expression .)
    AND             reduce using rule 119 (expCond -> expression operador expression .)
    OR              reduce using rule 119 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 119 (expCond -> expression operador expression .)
    $end            reduce using rule 119 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 119 (expCond -> expression operador expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 142

    (117) expOpLog -> expression oplogico expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 117 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 117 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 117 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 143

    (111) expEq -> expression EQUALTO expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 111 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 111 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 144

    (114) expNotEq -> expression NOTEQUALTO expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 114 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 114 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 145

    (115) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 115 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 115 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 115 (expOpLog -> expCond oplogico expCond .)


state 146

    (119) expCond -> expression . operador expression
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term
    (153) operador -> . GREATER
    (154) operador -> . LESS
    (155) operador -> . GREATEREQUAL
    (156) operador -> . LESSEQUAL
    (157) operador -> . EQUALTO
    (158) operador -> . NOTEQUALTO

    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    GREATER         shift and go to state 74
    LESS            shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    EQUALTO         shift and go to state 159
    NOTEQUALTO      shift and go to state 160

    operador                       shift and go to state 70

state 147

    (109) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 109 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 109 (expEq -> expCond EQUALTO expCond .)


state 148

    (112) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 112 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 112 (expNotEq -> expCond NOTEQUALTO expCond .)


state 149

    (99) term -> term PRODUCT term .
    (99) term -> term . PRODUCT term
    (100) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 99 (term -> term PRODUCT term .)
    MINUS           reduce using rule 99 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 99 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 99 (term -> term PRODUCT term .)
    GREATER         reduce using rule 99 (term -> term PRODUCT term .)
    LESS            reduce using rule 99 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 99 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 99 (term -> term PRODUCT term .)
    AND             reduce using rule 99 (term -> term PRODUCT term .)
    OR              reduce using rule 99 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 99 (term -> term PRODUCT term .)
    $end            reduce using rule 99 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 99 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 99 (term -> term PRODUCT term .)
    COMMA           reduce using rule 99 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 83
    DIVIDE          shift and go to state 84

  ! PRODUCT         [ reduce using rule 99 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 99 (term -> term PRODUCT term .) ]


state 150

    (100) term -> term DIVIDE term .
    (99) term -> term . PRODUCT term
    (100) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 100 (term -> term DIVIDE term .)
    MINUS           reduce using rule 100 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 100 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 100 (term -> term DIVIDE term .)
    GREATER         reduce using rule 100 (term -> term DIVIDE term .)
    LESS            reduce using rule 100 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 100 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 100 (term -> term DIVIDE term .)
    AND             reduce using rule 100 (term -> term DIVIDE term .)
    OR              reduce using rule 100 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 100 (term -> term DIVIDE term .)
    $end            reduce using rule 100 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 100 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 100 (term -> term DIVIDE term .)
    COMMA           reduce using rule 100 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 83
    DIVIDE          shift and go to state 84

  ! PRODUCT         [ reduce using rule 100 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 100 (term -> term DIVIDE term .) ]


state 151

    (116) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 116 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 116 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 116 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 152

    (118) factor_exprlog -> LPAREN . expCond RPAREN
    (119) expCond -> . expression operador expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    expCond                        shift and go to state 101
    expression                     shift and go to state 146
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 153

    (110) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 110 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 110 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 154

    (113) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 113 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 113 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 155

    (108) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 217


state 156

    (118) factor_exprlog -> LPAREN expCond . RPAREN
    (115) expOpLog -> expCond . oplogico expCond
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    RPAREN          shift and go to state 162
    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 80

state 157

    (129) factor_expr -> LPAREN expression . RPAREN
    (117) expOpLog -> expression . oplogico expression
    (119) expCond -> expression . operador expression
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term
    (159) oplogico -> . AND
    (160) oplogico -> . OR
    (153) operador -> . GREATER
    (154) operador -> . LESS
    (155) operador -> . GREATEREQUAL
    (156) operador -> . LESSEQUAL
    (157) operador -> . EQUALTO
    (158) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 164
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    AND             shift and go to state 78
    OR              shift and go to state 79
    GREATER         shift and go to state 74
    LESS            shift and go to state 75
    GREATEREQUAL    shift and go to state 76
    LESSEQUAL       shift and go to state 77
    EQUALTO         shift and go to state 159
    NOTEQUALTO      shift and go to state 160

    oplogico                       shift and go to state 71
    operador                       shift and go to state 70

state 158

    (116) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (159) oplogico -> . AND
    (160) oplogico -> . OR

    AND             shift and go to state 78
    OR              shift and go to state 79

    oplogico                       shift and go to state 85

state 159

    (157) operador -> EQUALTO .

    INCREMENT       reduce using rule 157 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 157 (operador -> EQUALTO .)
    LPAREN          reduce using rule 157 (operador -> EQUALTO .)
    NUMBER          reduce using rule 157 (operador -> EQUALTO .)
    FLOAT           reduce using rule 157 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 157 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 157 (operador -> EQUALTO .)


state 160

    (158) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 158 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 158 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 158 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 158 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 158 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 158 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 158 (operador -> NOTEQUALTO .)


state 161

    (129) factor_expr -> LPAREN expression . RPAREN
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    RPAREN          shift and go to state 164
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 162

    (118) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 118 (factor_exprlog -> LPAREN expCond RPAREN .)


state 163

    (120) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 120 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 120 (term1 -> LPAREN group RPAREN .)


state 164

    (129) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 129 (factor_expr -> LPAREN expression RPAREN .)


state 165

    (120) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 163


state 166

    (91) termS -> string . PLUS chain
    (95) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 117
    POINTCOMMA      reduce using rule 95 (value -> string .)
    $end            reduce using rule 95 (value -> string .)

  ! PLUS            [ reduce using rule 95 (value -> string .) ]


state 167

    (91) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 91 (termS -> string PLUS chain .)
    $end            reduce using rule 91 (termS -> string PLUS chain .)
    PLUS            reduce using rule 91 (termS -> string PLUS chain .)


state 168

    (92) chain -> termS . PLUS value

    PLUS            shift and go to state 218


state 169

    (93) chain -> value .

    POINTCOMMA      reduce using rule 93 (chain -> value .)
    $end            reduce using rule 93 (chain -> value .)
    PLUS            reduce using rule 93 (chain -> value .)


state 170

    (94) value -> expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 94 (value -> expression .)
    $end            reduce using rule 94 (value -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69

  ! PLUS            [ reduce using rule 94 (value -> expression .) ]


state 171

    (49) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 49 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 49 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 172

    (86) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 86 (boolean_value -> boolean .)
    $end            reduce using rule 86 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 86 (boolean_value -> boolean .)
    COMMA           reduce using rule 86 (boolean_value -> boolean .)


state 173

    (87) boolean_value -> other_value .

    POINTCOMMA      reduce using rule 87 (boolean_value -> other_value .)
    $end            reduce using rule 87 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 87 (boolean_value -> other_value .)
    COMMA           reduce using rule 87 (boolean_value -> other_value .)


state 174

    (130) other_value -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 130 (other_value -> variable .)
    $end            reduce using rule 130 (other_value -> variable .)
    RBRACKET        reduce using rule 130 (other_value -> variable .)
    COMMA           reduce using rule 130 (other_value -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130


state 175

    (131) other_value -> array_value .

    POINTCOMMA      reduce using rule 131 (other_value -> array_value .)
    $end            reduce using rule 131 (other_value -> array_value .)
    RBRACKET        reduce using rule 131 (other_value -> array_value .)
    COMMA           reduce using rule 131 (other_value -> array_value .)


state 176

    (133) other_value -> object_value .

    POINTCOMMA      reduce using rule 133 (other_value -> object_value .)
    $end            reduce using rule 133 (other_value -> object_value .)
    RBRACKET        reduce using rule 133 (other_value -> object_value .)
    COMMA           reduce using rule 133 (other_value -> object_value .)


state 177

    (39) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 39 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 39 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 39 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 178

    (46) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 46 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 46 (var_number -> declare_number EQUAL number_value .)


state 179

    (85) number_value -> expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 85 (number_value -> expression .)
    $end            reduce using rule 85 (number_value -> expression .)
    RBRACKET        reduce using rule 85 (number_value -> expression .)
    COMMA           reduce using rule 85 (number_value -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 180

    (35) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 35 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 35 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 35 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 181

    (52) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 52 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 52 (var_string -> declare_string EQUAL string_value .)


state 182

    (88) string_value -> string .

    POINTCOMMA      reduce using rule 88 (string_value -> string .)
    $end            reduce using rule 88 (string_value -> string .)
    RBRACKET        reduce using rule 88 (string_value -> string .)
    COMMA           reduce using rule 88 (string_value -> string .)


state 183

    (89) string_value -> other_value .

    POINTCOMMA      reduce using rule 89 (string_value -> other_value .)
    $end            reduce using rule 89 (string_value -> other_value .)
    RBRACKET        reduce using rule 89 (string_value -> other_value .)
    COMMA           reduce using rule 89 (string_value -> other_value .)


state 184

    (43) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 43 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 43 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 43 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 185

    (55) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 55 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 55 (var_enum -> declare_var_enum EQUAL enum_value .)


state 186

    (19) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (20) enums -> . enums_numeric
    (21) enums -> . enums_string
    (22) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (23) enums_numeric -> . enums_numeric_value
    (26) enums_string -> . enums_string COMMA enums_string_value
    (27) enums_string -> . enums_string_value
    (24) enums_numeric_value -> . object_name EQUAL number
    (25) enums_numeric_value -> . object_name
    (28) enums_string_value -> . object_name EQUAL string
    (152) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 44

    enums                          shift and go to state 219
    enums_numeric                  shift and go to state 220
    enums_string                   shift and go to state 221
    enums_numeric_value            shift and go to state 222
    enums_string_value             shift and go to state 223
    object_name                    shift and go to state 224

state 187

    (58) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 58 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 58 (declare_generic -> declare_any EQUAL assign_value .)


state 188

    (45) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 45 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 45 (declare_generic_array -> declare_any EQUAL list_types .)


state 189

    (70) assign_value -> expression .
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 70 (assign_value -> expression .)
    $end            reduce using rule 70 (assign_value -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 190

    (71) assign_value -> boolean .

    POINTCOMMA      reduce using rule 71 (assign_value -> boolean .)
    $end            reduce using rule 71 (assign_value -> boolean .)


state 191

    (72) assign_value -> string .

    POINTCOMMA      reduce using rule 72 (assign_value -> string .)
    $end            reduce using rule 72 (assign_value -> string .)


state 192

    (73) list_types -> list_number .

    POINTCOMMA      reduce using rule 73 (list_types -> list_number .)
    $end            reduce using rule 73 (list_types -> list_number .)


state 193

    (74) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 74 (list_types -> list_boolean .)
    $end            reduce using rule 74 (list_types -> list_boolean .)


state 194

    (75) list_types -> list_string .

    POINTCOMMA      reduce using rule 75 (list_types -> list_string .)
    $end            reduce using rule 75 (list_types -> list_string .)


state 195

    (76) list_number -> LBRACKET . numbers RBRACKET
    (79) list_boolean -> LBRACKET . booleans RBRACKET
    (82) list_string -> LBRACKET . strings RBRACKET
    (77) numbers -> . numbers COMMA number_value
    (78) numbers -> . number_value
    (80) booleans -> . booleans COMMA boolean_value
    (81) booleans -> . boolean_value
    (83) strings -> . strings COMMA string_value
    (84) strings -> . string_value
    (85) number_value -> . expression
    (86) boolean_value -> . boolean
    (87) boolean_value -> . other_value
    (88) string_value -> . string
    (89) string_value -> . other_value
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    VARIABLE        shift and go to state 62
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    OBJECTNAME      shift and go to state 44

    numbers                        shift and go to state 225
    booleans                       shift and go to state 226
    strings                        shift and go to state 227
    number_value                   shift and go to state 228
    boolean_value                  shift and go to state 229
    string_value                   shift and go to state 230
    expression                     shift and go to state 179
    boolean                        shift and go to state 172
    other_value                    shift and go to state 231
    string                         shift and go to state 182
    term                           shift and go to state 12
    variable                       shift and go to state 232
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    group                          shift and go to state 50

state 196

    (51) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 51 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 51 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 51 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 51 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 197

    (48) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 48 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 48 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 48 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 48 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 198

    (54) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 54 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 54 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 54 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 54 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 199

    (57) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 57 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 57 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 57 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 200

    (36) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (40) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (44) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 233


state 201

    (64) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 64 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 64 (assign_variable -> variable EQUAL assign_value .)


state 202

    (65) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 65 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 65 (assign_variable -> variable EQUAL list_types .)


state 203

    (138) array_value -> variable LBRACKET expression . RBRACKET
    (96) expression -> expression . PLUS term
    (97) expression -> expression . MINUS term

    RBRACKET        shift and go to state 234
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69


state 204

    (136) object_value_form1 -> variable POINT variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 136 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 129


state 205

    (137) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 137 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 137 (object_value_form2 -> variable POINT array_value .)


state 206

    (66) assign_array -> array_value EQUAL assign_value .

    POINTCOMMA      reduce using rule 66 (assign_array -> array_value EQUAL assign_value .)
    $end            reduce using rule 66 (assign_array -> array_value EQUAL assign_value .)


state 207

    (67) assign_object_value -> object_value_form1 EQUAL assign_value .

    POINTCOMMA      reduce using rule 67 (assign_object_value -> object_value_form1 EQUAL assign_value .)
    $end            reduce using rule 67 (assign_object_value -> object_value_form1 EQUAL assign_value .)


state 208

    (68) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 68 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 68 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 209

    (69) assign_object_value -> object_value_form2 EQUAL assign_value .

    POINTCOMMA      reduce using rule 69 (assign_object_value -> object_value_form2 EQUAL assign_value .)
    $end            reduce using rule 69 (assign_object_value -> object_value_form2 EQUAL assign_value .)


state 210

    (139) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 139 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 139 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 139 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 139 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 139 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 139 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 139 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 139 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 139 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 139 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 139 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 139 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 139 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 139 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 139 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 139 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 139 (enum_value -> object_name POINT object_name .)


state 211

    (33) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 33 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 33 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 212

    (76) list_number -> LBRACKET . numbers RBRACKET
    (77) numbers -> . numbers COMMA number_value
    (78) numbers -> . number_value
    (85) number_value -> . expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    numbers                        shift and go to state 225
    number_value                   shift and go to state 228
    expression                     shift and go to state 179
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 213

    (37) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 37 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 37 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 214

    (79) list_boolean -> LBRACKET . booleans RBRACKET
    (80) booleans -> . booleans COMMA boolean_value
    (81) booleans -> . boolean_value
    (86) boolean_value -> . boolean
    (87) boolean_value -> . other_value
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    booleans                       shift and go to state 226
    boolean_value                  shift and go to state 229
    boolean                        shift and go to state 172
    other_value                    shift and go to state 173
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 215

    (41) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 41 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 41 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 216

    (82) list_string -> LBRACKET . strings RBRACKET
    (83) strings -> . strings COMMA string_value
    (84) strings -> . string_value
    (88) string_value -> . string
    (89) string_value -> . other_value
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    strings                        shift and go to state 227
    string_value                   shift and go to state 230
    string                         shift and go to state 182
    other_value                    shift and go to state 183
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 217

    (108) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 108 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 108 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 218

    (92) chain -> termS PLUS . value
    (94) value -> . expression
    (95) value -> . string
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    value                          shift and go to state 235
    expression                     shift and go to state 170
    string                         shift and go to state 236
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 219

    (19) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 237


state 220

    (20) enums -> enums_numeric .
    (22) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 20 (enums -> enums_numeric .)
    COMMA           shift and go to state 238


state 221

    (21) enums -> enums_string .
    (26) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 21 (enums -> enums_string .)
    COMMA           shift and go to state 239


state 222

    (23) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 23 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 23 (enums_numeric -> enums_numeric_value .)


state 223

    (27) enums_string -> enums_string_value .

    COMMA           reduce using rule 27 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 27 (enums_string -> enums_string_value .)


state 224

    (24) enums_numeric_value -> object_name . EQUAL number
    (25) enums_numeric_value -> object_name .
    (28) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 240
    COMMA           reduce using rule 25 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 25 (enums_numeric_value -> object_name .)


state 225

    (76) list_number -> LBRACKET numbers . RBRACKET
    (77) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 241
    COMMA           shift and go to state 242


state 226

    (79) list_boolean -> LBRACKET booleans . RBRACKET
    (80) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 243
    COMMA           shift and go to state 244


state 227

    (82) list_string -> LBRACKET strings . RBRACKET
    (83) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 245
    COMMA           shift and go to state 246


state 228

    (78) numbers -> number_value .

    RBRACKET        reduce using rule 78 (numbers -> number_value .)
    COMMA           reduce using rule 78 (numbers -> number_value .)


state 229

    (81) booleans -> boolean_value .

    RBRACKET        reduce using rule 81 (booleans -> boolean_value .)
    COMMA           reduce using rule 81 (booleans -> boolean_value .)


state 230

    (84) strings -> string_value .

    RBRACKET        reduce using rule 84 (strings -> string_value .)
    COMMA           reduce using rule 84 (strings -> string_value .)


state 231

    (87) boolean_value -> other_value .
    (89) string_value -> other_value .
    (128) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 87 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 87 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 87 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 87 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 87 (boolean_value -> other_value .)
    COMMA           reduce using rule 87 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 128 (term -> other_value .)
    DIVIDE          reduce using rule 128 (term -> other_value .)
    PLUS            reduce using rule 128 (term -> other_value .)
    MINUS           reduce using rule 128 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 89 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 89 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 128 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 128 (term -> other_value .) ]


state 232

    (130) other_value -> variable .
    (138) array_value -> variable . LBRACKET expression RBRACKET
    (136) object_value_form1 -> variable . POINT variable
    (137) object_value_form2 -> variable . POINT array_value
    (123) group -> variable .

    RBRACKET        reduce using rule 130 (other_value -> variable .)
    COMMA           reduce using rule 130 (other_value -> variable .)
    PRODUCT         reduce using rule 130 (other_value -> variable .)
    DIVIDE          reduce using rule 130 (other_value -> variable .)
    PLUS            reduce using rule 130 (other_value -> variable .)
    MINUS           reduce using rule 130 (other_value -> variable .)
    LBRACKET        shift and go to state 129
    POINT           shift and go to state 130
    INCREMENT       reduce using rule 123 (group -> variable .)
    DECREMENT       reduce using rule 123 (group -> variable .)


state 233

    (36) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (40) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (44) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 247
    VARBOOLEAN      shift and go to state 248
    VARSTRING       shift and go to state 249


state 234

    (138) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 138 (array_value -> variable LBRACKET expression RBRACKET .)


state 235

    (92) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 92 (chain -> termS PLUS value .)
    $end            reduce using rule 92 (chain -> termS PLUS value .)
    PLUS            reduce using rule 92 (chain -> termS PLUS value .)


state 236

    (95) value -> string .

    POINTCOMMA      reduce using rule 95 (value -> string .)
    $end            reduce using rule 95 (value -> string .)
    PLUS            reduce using rule 95 (value -> string .)


state 237

    (19) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 19 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 19 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 238

    (22) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (24) enums_numeric_value -> . object_name EQUAL number
    (25) enums_numeric_value -> . object_name
    (152) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 44

    enums_numeric_value            shift and go to state 250
    object_name                    shift and go to state 251

state 239

    (26) enums_string -> enums_string COMMA . enums_string_value
    (28) enums_string_value -> . object_name EQUAL string
    (152) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 44

    enums_string_value             shift and go to state 252
    object_name                    shift and go to state 253

state 240

    (24) enums_numeric_value -> object_name EQUAL . number
    (28) enums_string_value -> object_name EQUAL . string
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56

    number                         shift and go to state 254
    string                         shift and go to state 255

state 241

    (76) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 76 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 76 (list_number -> LBRACKET numbers RBRACKET .)


state 242

    (77) numbers -> numbers COMMA . number_value
    (85) number_value -> . expression
    (96) expression -> . expression PLUS term
    (97) expression -> . expression MINUS term
    (98) expression -> . term
    (99) term -> . term PRODUCT term
    (100) term -> . term DIVIDE term
    (101) term -> . term1 INCREMENT
    (102) term -> . INCREMENT term1
    (103) term -> . term1 DECREMENT
    (104) term -> . DECREMENT term1
    (126) term -> . number
    (127) term -> . factor_expr
    (128) term -> . other_value
    (120) term1 -> . LPAREN group RPAREN
    (121) term1 -> . group
    (144) number -> . NUMBER
    (145) number -> . FLOAT
    (129) factor_expr -> . LPAREN expression RPAREN
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (122) group -> . number
    (123) group -> . variable
    (124) group -> . array_value
    (125) group -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 28
    DECREMENT       shift and go to state 29
    LPAREN          shift and go to state 100
    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    number_value                   shift and go to state 256
    expression                     shift and go to state 179
    term                           shift and go to state 12
    term1                          shift and go to state 27
    number                         shift and go to state 30
    factor_expr                    shift and go to state 31
    other_value                    shift and go to state 32
    group                          shift and go to state 50
    variable                       shift and go to state 96
    array_value                    shift and go to state 97
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 53
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 243

    (79) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 79 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 79 (list_boolean -> LBRACKET booleans RBRACKET .)


state 244

    (80) booleans -> booleans COMMA . boolean_value
    (86) boolean_value -> . boolean
    (87) boolean_value -> . other_value
    (149) boolean -> . TRUE
    (150) boolean -> . FALSE
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    boolean_value                  shift and go to state 257
    boolean                        shift and go to state 172
    other_value                    shift and go to state 173
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 245

    (82) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 82 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 82 (list_string -> LBRACKET strings RBRACKET .)


state 246

    (83) strings -> strings COMMA . string_value
    (88) string_value -> . string
    (89) string_value -> . other_value
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING
    (130) other_value -> . variable
    (131) other_value -> . array_value
    (132) other_value -> . enum_value
    (133) other_value -> . object_value
    (151) variable -> . VARIABLE
    (138) array_value -> . variable LBRACKET expression RBRACKET
    (139) enum_value -> . object_name POINT object_name
    (134) object_value -> . object_value_form1
    (135) object_value -> . object_value_form2
    (152) object_name -> . OBJECTNAME
    (136) object_value_form1 -> . variable POINT variable
    (137) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56
    VARIABLE        shift and go to state 62
    OBJECTNAME      shift and go to state 44

    string_value                   shift and go to state 258
    string                         shift and go to state 182
    other_value                    shift and go to state 183
    variable                       shift and go to state 174
    array_value                    shift and go to state 175
    enum_value                     shift and go to state 38
    object_value                   shift and go to state 176
    object_name                    shift and go to state 57
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 247

    (36) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 259


state 248

    (40) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 260


state 249

    (44) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 261


state 250

    (22) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 22 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 22 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 251

    (24) enums_numeric_value -> object_name . EQUAL number
    (25) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 262
    COMMA           reduce using rule 25 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 25 (enums_numeric_value -> object_name .)


state 252

    (26) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 26 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 26 (enums_string -> enums_string COMMA enums_string_value .)


state 253

    (28) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 263


state 254

    (24) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 24 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 24 (enums_numeric_value -> object_name EQUAL number .)


state 255

    (28) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 28 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 28 (enums_string_value -> object_name EQUAL string .)


state 256

    (77) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 77 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 77 (numbers -> numbers COMMA number_value .)


state 257

    (80) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 80 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 80 (booleans -> booleans COMMA boolean_value .)


state 258

    (83) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 83 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 83 (strings -> strings COMMA string_value .)


state 259

    (36) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 36 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 36 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 36 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 260

    (40) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 40 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 40 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 40 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 261

    (44) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 44 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 44 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 44 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 262

    (24) enums_numeric_value -> object_name EQUAL . number
    (144) number -> . NUMBER
    (145) number -> . FLOAT

    NUMBER          shift and go to state 51
    FLOAT           shift and go to state 52

    number                         shift and go to state 254

state 263

    (28) enums_string_value -> object_name EQUAL . string
    (146) string -> . NORMSTRING1
    (147) string -> . NORMSTRING2
    (148) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 54
    NORMSTRING2     shift and go to state 55
    MULTISTRING     shift and go to state 56

    string                         shift and go to state 255
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 72 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 72 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 72 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 72 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 72 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 72 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 73 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 73 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 73 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 73 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 73 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 73 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 149 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 104 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 105
WARNING: reduce/reduce conflict in state 106 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 106
WARNING: reduce/reduce conflict in state 107 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 107
WARNING: reduce/reduce conflict in state 231 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 231
WARNING: reduce/reduce conflict in state 231 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 231

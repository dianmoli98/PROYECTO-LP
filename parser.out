Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ANY
    COMMENT
    DOLLAR
    ELIF
    ELSE
    FOR
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    FUNMATH
    IF
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    MULTICOMMENT
    NEW
    POW
    PRINT
    RCOMILLA
    ROUND
    SET
    SPECIAL
    TYPEOF
    VAROBJECT
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    declare -> var_boolean
Rule 13    declare -> var_number
Rule 14    declare -> var_string
Rule 15    declare -> var_enum
Rule 16    declare -> var_null
Rule 17    declare -> var_undefined
Rule 18    declare -> declare_array
Rule 19    declare -> declare_enum
Rule 20    declare -> declare_generic
Rule 21    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 22    enums -> enums_numeric
Rule 23    enums -> enums_string
Rule 24    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 25    enums_numeric -> enums_numeric_value
Rule 26    enums_numeric_value -> object_name EQUAL number
Rule 27    enums_numeric_value -> object_name
Rule 28    enums_string -> enums_string COMMA enums_string_value
Rule 29    enums_string -> enums_string_value
Rule 30    enums_string_value -> object_name EQUAL string
Rule 31    declare_array -> declare_array_main_number
Rule 32    declare_array -> declare_array_main_boolean
Rule 33    declare_array -> declare_array_main_string
Rule 34    declare_array -> declare_generic_array
Rule 35    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 36    declare_array_main_number -> declare_array_number
Rule 37    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 38    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 39    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 40    declare_array_main_boolean -> declare_array_boolean
Rule 41    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 42    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 43    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 44    declare_array_main_string -> declare_array_string
Rule 45    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 46    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 47    declare_generic_array -> declare_any EQUAL list_types
Rule 48    var_null -> declare_any EQUAL NULL
Rule 49    var_undefined -> declare_any EQUAL UNDEFINED
Rule 50    var_number -> declare_number EQUAL number_value
Rule 51    var_number -> declare_number
Rule 52    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 53    var_boolean -> declare_boolean EQUAL boolean_value
Rule 54    var_boolean -> declare_boolean
Rule 55    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 56    var_string -> declare_string EQUAL string_value
Rule 57    var_string -> declare_string
Rule 58    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 59    var_enum -> declare_var_enum EQUAL enum_value
Rule 60    var_enum -> declare_var_enum
Rule 61    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 62    declare_generic -> declare_any EQUAL assign_value
Rule 63    declare_generic -> declare_any
Rule 64    declare_any -> prefix VARIABLE
Rule 65    assign -> assign_variable
Rule 66    assign -> assign_array
Rule 67    assign -> assign_object_value
Rule 68    assign_variable -> variable EQUAL assign_value
Rule 69    assign_variable -> variable EQUAL list_types
Rule 70    assign_array -> array_value EQUAL assign_value
Rule 71    assign_object_value -> object_value_form1 EQUAL assign_value
Rule 72    assign_object_value -> object_value_form1 EQUAL list_types
Rule 73    assign_object_value -> object_value_form2 EQUAL assign_value
Rule 74    assign_value -> expression
Rule 75    assign_value -> boolean
Rule 76    assign_value -> string
Rule 77    list_types -> list_number
Rule 78    list_types -> list_boolean
Rule 79    list_types -> list_string
Rule 80    list_number -> LBRACKET numbers RBRACKET
Rule 81    numbers -> numbers COMMA number_value
Rule 82    numbers -> number_value
Rule 83    list_boolean -> LBRACKET booleans RBRACKET
Rule 84    booleans -> booleans COMMA boolean_value
Rule 85    booleans -> boolean_value
Rule 86    list_string -> LBRACKET strings RBRACKET
Rule 87    strings -> strings COMMA string_value
Rule 88    strings -> string_value
Rule 89    number_value -> expression
Rule 90    boolean_value -> boolean
Rule 91    boolean_value -> other_value
Rule 92    string_value -> string
Rule 93    string_value -> other_value
Rule 94    concatenate -> termS
Rule 95    termS -> string PLUS chain
Rule 96    chain -> termS PLUS value
Rule 97    chain -> value
Rule 98    value -> expression
Rule 99    value -> string
Rule 100   expression -> expression PLUS term
Rule 101   expression -> expression MINUS term
Rule 102   expression -> term
Rule 103   term -> term PRODUCT term
Rule 104   term -> term DIVIDE term
Rule 105   term -> term1 INCREMENT
Rule 106   term -> INCREMENT term1
Rule 107   term -> term1 DECREMENT
Rule 108   term -> DECREMENT term1
Rule 109   expNeg -> NEGATION expOpLog
Rule 110   expNeg -> NEGATION factor_exprlog
Rule 111   expNeg -> NEGATION boolean
Rule 112   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 113   expEq -> expCond EQUALTO expCond
Rule 114   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 115   expEq -> expression EQUALTO expression
Rule 116   expNotEq -> expCond NOTEQUALTO expCond
Rule 117   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 118   expNotEq -> expression NOTEQUALTO expression
Rule 119   expOpLog -> expCond oplogico expCond
Rule 120   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 121   expOpLog -> expression oplogico expression
Rule 122   factor_exprlog -> LPAREN expCond RPAREN
Rule 123   expCond -> expression operador expression
Rule 124   term1 -> LPAREN group RPAREN
Rule 125   term1 -> group
Rule 126   group -> number
Rule 127   group -> variable
Rule 128   group -> array_value
Rule 129   group -> object_value
Rule 130   term -> number
Rule 131   term -> factor_expr
Rule 132   term -> other_value
Rule 133   factor_expr -> LPAREN expression RPAREN
Rule 134   other_value -> variable
Rule 135   other_value -> array_value
Rule 136   other_value -> enum_value
Rule 137   other_value -> object_value
Rule 138   object_value -> object_value_form1
Rule 139   object_value -> object_value_form2
Rule 140   object_value_form1 -> variable POINT variable
Rule 141   object_value_form2 -> variable POINT array_value
Rule 142   array_value -> variable LBRACKET expression RBRACKET
Rule 143   enum_value -> object_name POINT object_name
Rule 144   prefix -> LET
Rule 145   prefix -> VAR
Rule 146   prefix -> STATIC
Rule 147   prefix -> CONST
Rule 148   typedate -> VARNUMBER
Rule 149   typedate -> VARSTRING
Rule 150   typedate -> VARBOOLEAN
Rule 151   typedate -> ENUM
Rule 152   number -> NUMBER
Rule 153   number -> FLOAT
Rule 154   string -> NORMSTRING1
Rule 155   string -> NORMSTRING2
Rule 156   string -> MULTISTRING
Rule 157   boolean -> TRUE
Rule 158   boolean -> FALSE
Rule 159   variable -> VARIABLE
Rule 160   object_name -> OBJECTNAME
Rule 161   operador -> GREATER
Rule 162   operador -> LESS
Rule 163   operador -> GREATEREQUAL
Rule 164   operador -> LESSEQUAL
Rule 165   operador -> EQUALTO
Rule 166   operador -> NOTEQUALTO
Rule 167   oplogico -> AND
Rule 168   oplogico -> OR

Terminals, with rules where they appear

ABS                  : 
AND                  : 167
ANY                  : 
ARRAY                : 38 42 46
COMMA                : 24 28 81 84 87
COMMENT              : 
CONST                : 147
DECREMENT            : 107 108
DIVIDE               : 104
DOLLAR               : 
ELIF                 : 
ELSE                 : 
ENUM                 : 21 151
EQUAL                : 26 30 35 39 43 47 48 49 50 53 56 59 62 68 69 70 71 72 73
EQUALTO              : 113 114 115 165
FALSE                : 158
FLOAT                : 153
FOR                  : 
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 
GREATER              : 38 42 46 161
GREATEREQUAL         : 163
IF                   : 
IN                   : 
INCREMENT            : 105 106
INSTANCEOF           : 
LBRACKET             : 37 41 45 80 83 86 142
LCOMILLA             : 
LESS                 : 38 42 46 162
LESSEQUAL            : 164
LET                  : 144
LKEY                 : 21
LPAREN               : 112 122 124 133
MINUS                : 101
MOD                  : 
MULTICOMMENT         : 
MULTISTRING          : 156
NEGATION             : 109 110 111 112
NEW                  : 
NORMSTRING1          : 154
NORMSTRING2          : 155
NOTEQUALTO           : 116 117 118 166
NULL                 : 48
NUMBER               : 152
OBJECTNAME           : 21 160
OR                   : 168
PLUS                 : 95 96 100
POINT                : 140 141 143
POINTCOMMA           : 2
POW                  : 
PRINT                : 
PRODUCT              : 103
RBRACKET             : 37 41 45 80 83 86 142
RCOMILLA             : 
RKEY                 : 21
ROUND                : 
RPAREN               : 112 122 124 133
SET                  : 
SPECIAL              : 
STATIC               : 146
TRUE                 : 157
TWOPOINTS            : 38 42 46 52 55 58 61
TYPEOF               : 
UNDEFINED            : 49
VAR                  : 145
VARBOOLEAN           : 42 55 150
VARIABLE             : 64 159
VARNUMBER            : 38 52 148
VAROBJECT            : 
VARSTRING            : 46 58 149
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_value          : 70 128 135 141
assign               : 6
assign_array         : 66
assign_object_value  : 67
assign_value         : 62 68 70 71 73
assign_variable      : 65
boolean              : 75 90 111
boolean_value        : 53 84 85
booleans             : 83 84
chain                : 95
concatenate          : 4
declare              : 5
declare_any          : 38 42 46 47 48 49 52 55 58 61 62 63
declare_array        : 18
declare_array_boolean : 39 40
declare_array_main_boolean : 32
declare_array_main_number : 31
declare_array_main_string : 33
declare_array_number : 35 36
declare_array_string : 43 44
declare_boolean      : 41 53 54
declare_enum         : 19
declare_generic      : 20
declare_generic_array : 34
declare_number       : 37 50 51
declare_string       : 45 56 57
declare_var_enum     : 59 60
enum_value           : 59 136
enums                : 21
enums_numeric        : 22 24
enums_numeric_value  : 24 25
enums_string         : 23 28
enums_string_value   : 28 29
expCond              : 7 113 113 116 116 119 119 122
expEq                : 10
expNeg               : 9
expNotEq             : 11
expOpLog             : 8 109 112
expression           : 3 74 89 98 100 101 115 115 118 118 121 121 123 123 133 142
factor_expr          : 131
factor_exprlog       : 110 114 114 117 117 120 120
group                : 124 125
list_boolean         : 39 78
list_number          : 35 77
list_string          : 43 79
list_types           : 47 69 72
number               : 26 126 130
number_value         : 50 81 82
numbers              : 80 81
object_name          : 26 27 30 61 143 143
object_value         : 129 137
object_value_form1   : 71 72 138
object_value_form2   : 73 139
operador             : 123
oplogico             : 119 120 121
other_value          : 91 93 132
prefix               : 64
statement            : 0
statement_value      : 1 2
string               : 30 76 92 95 99
string_value         : 56 87 88
strings              : 86 87
term                 : 100 101 102 103 103 104 104
term1                : 105 106 107 108
termS                : 94 96
typedate             : 
value                : 96 97
var_boolean          : 12
var_enum             : 15
var_null             : 16
var_number           : 13
var_string           : 14
var_undefined        : 17
variable             : 68 69 127 134 140 140 141 142

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (94) concatenate -> . termS
    (12) declare -> . var_boolean
    (13) declare -> . var_number
    (14) declare -> . var_string
    (15) declare -> . var_enum
    (16) declare -> . var_null
    (17) declare -> . var_undefined
    (18) declare -> . declare_array
    (19) declare -> . declare_enum
    (20) declare -> . declare_generic
    (65) assign -> . assign_variable
    (66) assign -> . assign_array
    (67) assign -> . assign_object_value
    (123) expCond -> . expression operador expression
    (119) expOpLog -> . expCond oplogico expCond
    (120) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (121) expOpLog -> . expression oplogico expression
    (109) expNeg -> . NEGATION expOpLog
    (110) expNeg -> . NEGATION factor_exprlog
    (111) expNeg -> . NEGATION boolean
    (112) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (113) expEq -> . expCond EQUALTO expCond
    (114) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (115) expEq -> . expression EQUALTO expression
    (116) expNotEq -> . expCond NOTEQUALTO expCond
    (117) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (118) expNotEq -> . expression NOTEQUALTO expression
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (95) termS -> . string PLUS chain
    (53) var_boolean -> . declare_boolean EQUAL boolean_value
    (54) var_boolean -> . declare_boolean
    (50) var_number -> . declare_number EQUAL number_value
    (51) var_number -> . declare_number
    (56) var_string -> . declare_string EQUAL string_value
    (57) var_string -> . declare_string
    (59) var_enum -> . declare_var_enum EQUAL enum_value
    (60) var_enum -> . declare_var_enum
    (48) var_null -> . declare_any EQUAL NULL
    (49) var_undefined -> . declare_any EQUAL UNDEFINED
    (31) declare_array -> . declare_array_main_number
    (32) declare_array -> . declare_array_main_boolean
    (33) declare_array -> . declare_array_main_string
    (34) declare_array -> . declare_generic_array
    (21) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (62) declare_generic -> . declare_any EQUAL assign_value
    (63) declare_generic -> . declare_any
    (68) assign_variable -> . variable EQUAL assign_value
    (69) assign_variable -> . variable EQUAL list_types
    (70) assign_array -> . array_value EQUAL assign_value
    (71) assign_object_value -> . object_value_form1 EQUAL assign_value
    (72) assign_object_value -> . object_value_form1 EQUAL list_types
    (73) assign_object_value -> . object_value_form2 EQUAL assign_value
    (122) factor_exprlog -> . LPAREN expCond RPAREN
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (55) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (52) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (58) declare_string -> . declare_any TWOPOINTS VARSTRING
    (61) declare_var_enum -> . declare_any TWOPOINTS object_name
    (64) declare_any -> . prefix VARIABLE
    (35) declare_array_main_number -> . declare_array_number EQUAL list_number
    (36) declare_array_main_number -> . declare_array_number
    (39) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (40) declare_array_main_boolean -> . declare_array_boolean
    (43) declare_array_main_string -> . declare_array_string EQUAL list_string
    (44) declare_array_main_string -> . declare_array_string
    (47) declare_generic_array -> . declare_any EQUAL list_types
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (144) prefix -> . LET
    (145) prefix -> . VAR
    (146) prefix -> . STATIC
    (147) prefix -> . CONST
    (37) declare_array_number -> . declare_number LBRACKET RBRACKET
    (38) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (41) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (42) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (45) declare_array_string -> . declare_string LBRACKET RBRACKET
    (46) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (160) object_name -> . OBJECTNAME

    NEGATION        shift and go to state 27
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    ENUM            shift and go to state 46
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    VARIABLE        shift and go to state 61
    LET             shift and go to state 65
    VAR             shift and go to state 66
    STATIC          shift and go to state 67
    CONST           shift and go to state 68
    OBJECTNAME      shift and go to state 47

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    term                           shift and go to state 12
    termS                          shift and go to state 13
    var_boolean                    shift and go to state 14
    var_number                     shift and go to state 15
    var_string                     shift and go to state 16
    var_enum                       shift and go to state 17
    var_null                       shift and go to state 18
    var_undefined                  shift and go to state 19
    declare_array                  shift and go to state 20
    declare_enum                   shift and go to state 21
    declare_generic                shift and go to state 22
    assign_variable                shift and go to state 23
    assign_array                   shift and go to state 24
    assign_object_value            shift and go to state 25
    factor_exprlog                 shift and go to state 26
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    string                         shift and go to state 35
    declare_boolean                shift and go to state 36
    declare_number                 shift and go to state 37
    declare_string                 shift and go to state 38
    declare_var_enum               shift and go to state 39
    enum_value                     shift and go to state 40
    declare_any                    shift and go to state 41
    declare_array_main_number      shift and go to state 42
    declare_array_main_boolean     shift and go to state 43
    declare_array_main_string      shift and go to state 44
    declare_generic_array          shift and go to state 45
    variable                       shift and go to state 48
    array_value                    shift and go to state 49
    object_value_form1             shift and go to state 50
    object_value_form2             shift and go to state 51
    group                          shift and go to state 52
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    prefix                         shift and go to state 60
    declare_array_number           shift and go to state 62
    declare_array_boolean          shift and go to state 63
    declare_array_string           shift and go to state 64

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 69


state 3

    (3) statement_value -> expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term
    (123) expCond -> expression . operador expression
    (121) expOpLog -> expression . oplogico expression
    (115) expEq -> expression . EQUALTO expression
    (118) expNotEq -> expression . NOTEQUALTO expression
    (161) operador -> . GREATER
    (162) operador -> . LESS
    (163) operador -> . GREATEREQUAL
    (164) operador -> . LESSEQUAL
    (165) operador -> . EQUALTO
    (166) operador -> . NOTEQUALTO
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    EQUALTO         shift and go to state 74
    NOTEQUALTO      shift and go to state 75
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    GREATEREQUAL    shift and go to state 78
    LESSEQUAL       shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81

    operador                       shift and go to state 72
    oplogico                       shift and go to state 73

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (119) expOpLog -> expCond . oplogico expCond
    (113) expEq -> expCond . EQUALTO expCond
    (116) expNotEq -> expCond . NOTEQUALTO expCond
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 83
    NOTEQUALTO      shift and go to state 84
    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 82

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (102) expression -> term .
    (103) term -> term . PRODUCT term
    (104) term -> term . DIVIDE term

    PLUS            reduce using rule 102 (expression -> term .)
    MINUS           reduce using rule 102 (expression -> term .)
    EQUALTO         reduce using rule 102 (expression -> term .)
    NOTEQUALTO      reduce using rule 102 (expression -> term .)
    GREATER         reduce using rule 102 (expression -> term .)
    LESS            reduce using rule 102 (expression -> term .)
    GREATEREQUAL    reduce using rule 102 (expression -> term .)
    LESSEQUAL       reduce using rule 102 (expression -> term .)
    AND             reduce using rule 102 (expression -> term .)
    OR              reduce using rule 102 (expression -> term .)
    POINTCOMMA      reduce using rule 102 (expression -> term .)
    $end            reduce using rule 102 (expression -> term .)
    RPAREN          reduce using rule 102 (expression -> term .)
    RBRACKET        reduce using rule 102 (expression -> term .)
    COMMA           reduce using rule 102 (expression -> term .)
    PRODUCT         shift and go to state 85
    DIVIDE          shift and go to state 86


state 13

    (94) concatenate -> termS .

    POINTCOMMA      reduce using rule 94 (concatenate -> termS .)
    $end            reduce using rule 94 (concatenate -> termS .)


state 14

    (12) declare -> var_boolean .

    POINTCOMMA      reduce using rule 12 (declare -> var_boolean .)
    $end            reduce using rule 12 (declare -> var_boolean .)


state 15

    (13) declare -> var_number .

    POINTCOMMA      reduce using rule 13 (declare -> var_number .)
    $end            reduce using rule 13 (declare -> var_number .)


state 16

    (14) declare -> var_string .

    POINTCOMMA      reduce using rule 14 (declare -> var_string .)
    $end            reduce using rule 14 (declare -> var_string .)


state 17

    (15) declare -> var_enum .

    POINTCOMMA      reduce using rule 15 (declare -> var_enum .)
    $end            reduce using rule 15 (declare -> var_enum .)


state 18

    (16) declare -> var_null .

    POINTCOMMA      reduce using rule 16 (declare -> var_null .)
    $end            reduce using rule 16 (declare -> var_null .)


state 19

    (17) declare -> var_undefined .

    POINTCOMMA      reduce using rule 17 (declare -> var_undefined .)
    $end            reduce using rule 17 (declare -> var_undefined .)


state 20

    (18) declare -> declare_array .

    POINTCOMMA      reduce using rule 18 (declare -> declare_array .)
    $end            reduce using rule 18 (declare -> declare_array .)


state 21

    (19) declare -> declare_enum .

    POINTCOMMA      reduce using rule 19 (declare -> declare_enum .)
    $end            reduce using rule 19 (declare -> declare_enum .)


state 22

    (20) declare -> declare_generic .

    POINTCOMMA      reduce using rule 20 (declare -> declare_generic .)
    $end            reduce using rule 20 (declare -> declare_generic .)


state 23

    (65) assign -> assign_variable .

    POINTCOMMA      reduce using rule 65 (assign -> assign_variable .)
    $end            reduce using rule 65 (assign -> assign_variable .)


state 24

    (66) assign -> assign_array .

    POINTCOMMA      reduce using rule 66 (assign -> assign_array .)
    $end            reduce using rule 66 (assign -> assign_array .)


state 25

    (67) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 67 (assign -> assign_object_value .)
    $end            reduce using rule 67 (assign -> assign_object_value .)


state 26

    (120) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (114) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (117) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    EQUALTO         shift and go to state 88
    NOTEQUALTO      shift and go to state 89
    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 87

state 27

    (109) expNeg -> NEGATION . expOpLog
    (110) expNeg -> NEGATION . factor_exprlog
    (111) expNeg -> NEGATION . boolean
    (112) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (119) expOpLog -> . expCond oplogico expCond
    (120) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (121) expOpLog -> . expression oplogico expression
    (122) factor_exprlog -> . LPAREN expCond RPAREN
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (123) expCond -> . expression operador expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 93
    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expOpLog                       shift and go to state 90
    factor_exprlog                 shift and go to state 91
    boolean                        shift and go to state 92
    expCond                        shift and go to state 94
    expression                     shift and go to state 95
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 28

    (122) factor_exprlog -> LPAREN . expCond RPAREN
    (124) term1 -> LPAREN . group RPAREN
    (133) factor_expr -> LPAREN . expression RPAREN
    (123) expCond -> . expression operador expression
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (143) enum_value -> . object_name POINT object_name
    (160) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    OBJECTNAME      shift and go to state 47

    expCond                        shift and go to state 103
    group                          shift and go to state 104
    expression                     shift and go to state 105
    number                         shift and go to state 106
    variable                       shift and go to state 107
    array_value                    shift and go to state 108
    object_value                   shift and go to state 109
    term                           shift and go to state 12
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101
    term1                          shift and go to state 29
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    enum_value                     shift and go to state 40
    object_name                    shift and go to state 59

state 29

    (105) term -> term1 . INCREMENT
    (107) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 110
    DECREMENT       shift and go to state 111


state 30

    (106) term -> INCREMENT . term1
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61

    term1                          shift and go to state 112
    group                          shift and go to state 52
    number                         shift and go to state 114
    variable                       shift and go to state 115
    array_value                    shift and go to state 116
    object_value                   shift and go to state 117
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 31

    (108) term -> DECREMENT . term1
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61

    term1                          shift and go to state 118
    group                          shift and go to state 52
    number                         shift and go to state 114
    variable                       shift and go to state 115
    array_value                    shift and go to state 116
    object_value                   shift and go to state 117
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 32

    (130) term -> number .
    (126) group -> number .

    PRODUCT         reduce using rule 130 (term -> number .)
    DIVIDE          reduce using rule 130 (term -> number .)
    PLUS            reduce using rule 130 (term -> number .)
    MINUS           reduce using rule 130 (term -> number .)
    EQUALTO         reduce using rule 130 (term -> number .)
    NOTEQUALTO      reduce using rule 130 (term -> number .)
    GREATER         reduce using rule 130 (term -> number .)
    LESS            reduce using rule 130 (term -> number .)
    GREATEREQUAL    reduce using rule 130 (term -> number .)
    LESSEQUAL       reduce using rule 130 (term -> number .)
    AND             reduce using rule 130 (term -> number .)
    OR              reduce using rule 130 (term -> number .)
    POINTCOMMA      reduce using rule 130 (term -> number .)
    $end            reduce using rule 130 (term -> number .)
    RPAREN          reduce using rule 130 (term -> number .)
    RBRACKET        reduce using rule 130 (term -> number .)
    COMMA           reduce using rule 130 (term -> number .)
    INCREMENT       reduce using rule 126 (group -> number .)
    DECREMENT       reduce using rule 126 (group -> number .)


state 33

    (131) term -> factor_expr .

    PRODUCT         reduce using rule 131 (term -> factor_expr .)
    DIVIDE          reduce using rule 131 (term -> factor_expr .)
    PLUS            reduce using rule 131 (term -> factor_expr .)
    MINUS           reduce using rule 131 (term -> factor_expr .)
    EQUALTO         reduce using rule 131 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 131 (term -> factor_expr .)
    GREATER         reduce using rule 131 (term -> factor_expr .)
    LESS            reduce using rule 131 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 131 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 131 (term -> factor_expr .)
    AND             reduce using rule 131 (term -> factor_expr .)
    OR              reduce using rule 131 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 131 (term -> factor_expr .)
    $end            reduce using rule 131 (term -> factor_expr .)
    RPAREN          reduce using rule 131 (term -> factor_expr .)
    RBRACKET        reduce using rule 131 (term -> factor_expr .)
    COMMA           reduce using rule 131 (term -> factor_expr .)


state 34

    (132) term -> other_value .

    PRODUCT         reduce using rule 132 (term -> other_value .)
    DIVIDE          reduce using rule 132 (term -> other_value .)
    PLUS            reduce using rule 132 (term -> other_value .)
    MINUS           reduce using rule 132 (term -> other_value .)
    EQUALTO         reduce using rule 132 (term -> other_value .)
    NOTEQUALTO      reduce using rule 132 (term -> other_value .)
    GREATER         reduce using rule 132 (term -> other_value .)
    LESS            reduce using rule 132 (term -> other_value .)
    GREATEREQUAL    reduce using rule 132 (term -> other_value .)
    LESSEQUAL       reduce using rule 132 (term -> other_value .)
    AND             reduce using rule 132 (term -> other_value .)
    OR              reduce using rule 132 (term -> other_value .)
    POINTCOMMA      reduce using rule 132 (term -> other_value .)
    $end            reduce using rule 132 (term -> other_value .)
    RPAREN          reduce using rule 132 (term -> other_value .)
    RBRACKET        reduce using rule 132 (term -> other_value .)
    COMMA           reduce using rule 132 (term -> other_value .)


state 35

    (95) termS -> string . PLUS chain

    PLUS            shift and go to state 119


state 36

    (53) var_boolean -> declare_boolean . EQUAL boolean_value
    (54) var_boolean -> declare_boolean .
    (41) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 120
    POINTCOMMA      reduce using rule 54 (var_boolean -> declare_boolean .)
    $end            reduce using rule 54 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 121


state 37

    (50) var_number -> declare_number . EQUAL number_value
    (51) var_number -> declare_number .
    (37) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 122
    POINTCOMMA      reduce using rule 51 (var_number -> declare_number .)
    $end            reduce using rule 51 (var_number -> declare_number .)
    LBRACKET        shift and go to state 123


state 38

    (56) var_string -> declare_string . EQUAL string_value
    (57) var_string -> declare_string .
    (45) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 124
    POINTCOMMA      reduce using rule 57 (var_string -> declare_string .)
    $end            reduce using rule 57 (var_string -> declare_string .)
    LBRACKET        shift and go to state 125


state 39

    (59) var_enum -> declare_var_enum . EQUAL enum_value
    (60) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 126
    POINTCOMMA      reduce using rule 60 (var_enum -> declare_var_enum .)
    $end            reduce using rule 60 (var_enum -> declare_var_enum .)


state 40

    (136) other_value -> enum_value .

    PRODUCT         reduce using rule 136 (other_value -> enum_value .)
    DIVIDE          reduce using rule 136 (other_value -> enum_value .)
    PLUS            reduce using rule 136 (other_value -> enum_value .)
    MINUS           reduce using rule 136 (other_value -> enum_value .)
    EQUALTO         reduce using rule 136 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 136 (other_value -> enum_value .)
    GREATER         reduce using rule 136 (other_value -> enum_value .)
    LESS            reduce using rule 136 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 136 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 136 (other_value -> enum_value .)
    AND             reduce using rule 136 (other_value -> enum_value .)
    OR              reduce using rule 136 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 136 (other_value -> enum_value .)
    $end            reduce using rule 136 (other_value -> enum_value .)
    RPAREN          reduce using rule 136 (other_value -> enum_value .)
    RBRACKET        reduce using rule 136 (other_value -> enum_value .)
    COMMA           reduce using rule 136 (other_value -> enum_value .)


state 41

    (48) var_null -> declare_any . EQUAL NULL
    (49) var_undefined -> declare_any . EQUAL UNDEFINED
    (62) declare_generic -> declare_any . EQUAL assign_value
    (63) declare_generic -> declare_any .
    (55) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (52) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (58) declare_string -> declare_any . TWOPOINTS VARSTRING
    (61) declare_var_enum -> declare_any . TWOPOINTS object_name
    (47) declare_generic_array -> declare_any . EQUAL list_types
    (38) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (42) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (46) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 127
    POINTCOMMA      reduce using rule 63 (declare_generic -> declare_any .)
    $end            reduce using rule 63 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 128


state 42

    (31) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 31 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 31 (declare_array -> declare_array_main_number .)


state 43

    (32) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 32 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 32 (declare_array -> declare_array_main_boolean .)


state 44

    (33) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 33 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 33 (declare_array -> declare_array_main_string .)


state 45

    (34) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 34 (declare_array -> declare_generic_array .)
    $end            reduce using rule 34 (declare_array -> declare_generic_array .)


state 46

    (21) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 129


state 47

    (160) object_name -> OBJECTNAME .

    POINT           reduce using rule 160 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 160 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 160 (object_name -> OBJECTNAME .)
    $end            reduce using rule 160 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 160 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 160 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 160 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 160 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 160 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 160 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 160 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 160 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 160 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 160 (object_name -> OBJECTNAME .)
    AND             reduce using rule 160 (object_name -> OBJECTNAME .)
    OR              reduce using rule 160 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 160 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 160 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 160 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 160 (object_name -> OBJECTNAME .)


state 48

    (68) assign_variable -> variable . EQUAL assign_value
    (69) assign_variable -> variable . EQUAL list_types
    (134) other_value -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value
    (127) group -> variable .

    EQUAL           shift and go to state 130
    PRODUCT         reduce using rule 134 (other_value -> variable .)
    DIVIDE          reduce using rule 134 (other_value -> variable .)
    PLUS            reduce using rule 134 (other_value -> variable .)
    MINUS           reduce using rule 134 (other_value -> variable .)
    EQUALTO         reduce using rule 134 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 134 (other_value -> variable .)
    GREATER         reduce using rule 134 (other_value -> variable .)
    LESS            reduce using rule 134 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 134 (other_value -> variable .)
    LESSEQUAL       reduce using rule 134 (other_value -> variable .)
    AND             reduce using rule 134 (other_value -> variable .)
    OR              reduce using rule 134 (other_value -> variable .)
    POINTCOMMA      reduce using rule 134 (other_value -> variable .)
    $end            reduce using rule 134 (other_value -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132
    INCREMENT       reduce using rule 127 (group -> variable .)
    DECREMENT       reduce using rule 127 (group -> variable .)


state 49

    (70) assign_array -> array_value . EQUAL assign_value
    (135) other_value -> array_value .
    (128) group -> array_value .

    EQUAL           shift and go to state 133
    PRODUCT         reduce using rule 135 (other_value -> array_value .)
    DIVIDE          reduce using rule 135 (other_value -> array_value .)
    PLUS            reduce using rule 135 (other_value -> array_value .)
    MINUS           reduce using rule 135 (other_value -> array_value .)
    EQUALTO         reduce using rule 135 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 135 (other_value -> array_value .)
    GREATER         reduce using rule 135 (other_value -> array_value .)
    LESS            reduce using rule 135 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 135 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 135 (other_value -> array_value .)
    AND             reduce using rule 135 (other_value -> array_value .)
    OR              reduce using rule 135 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 135 (other_value -> array_value .)
    $end            reduce using rule 135 (other_value -> array_value .)
    INCREMENT       reduce using rule 128 (group -> array_value .)
    DECREMENT       reduce using rule 128 (group -> array_value .)


state 50

    (71) assign_object_value -> object_value_form1 . EQUAL assign_value
    (72) assign_object_value -> object_value_form1 . EQUAL list_types
    (138) object_value -> object_value_form1 .

    EQUAL           shift and go to state 134
    PRODUCT         reduce using rule 138 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 138 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 138 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 138 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 138 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 138 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 138 (object_value -> object_value_form1 .)
    LESS            reduce using rule 138 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 138 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 138 (object_value -> object_value_form1 .)
    AND             reduce using rule 138 (object_value -> object_value_form1 .)
    OR              reduce using rule 138 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 138 (object_value -> object_value_form1 .)
    $end            reduce using rule 138 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 138 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 138 (object_value -> object_value_form1 .)


state 51

    (73) assign_object_value -> object_value_form2 . EQUAL assign_value
    (139) object_value -> object_value_form2 .

    EQUAL           shift and go to state 135
    PRODUCT         reduce using rule 139 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 139 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 139 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 139 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 139 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 139 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 139 (object_value -> object_value_form2 .)
    LESS            reduce using rule 139 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 139 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 139 (object_value -> object_value_form2 .)
    AND             reduce using rule 139 (object_value -> object_value_form2 .)
    OR              reduce using rule 139 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 139 (object_value -> object_value_form2 .)
    $end            reduce using rule 139 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 139 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 139 (object_value -> object_value_form2 .)


state 52

    (125) term1 -> group .

    INCREMENT       reduce using rule 125 (term1 -> group .)
    DECREMENT       reduce using rule 125 (term1 -> group .)
    PRODUCT         reduce using rule 125 (term1 -> group .)
    DIVIDE          reduce using rule 125 (term1 -> group .)
    PLUS            reduce using rule 125 (term1 -> group .)
    MINUS           reduce using rule 125 (term1 -> group .)
    EQUALTO         reduce using rule 125 (term1 -> group .)
    NOTEQUALTO      reduce using rule 125 (term1 -> group .)
    GREATER         reduce using rule 125 (term1 -> group .)
    LESS            reduce using rule 125 (term1 -> group .)
    GREATEREQUAL    reduce using rule 125 (term1 -> group .)
    LESSEQUAL       reduce using rule 125 (term1 -> group .)
    AND             reduce using rule 125 (term1 -> group .)
    OR              reduce using rule 125 (term1 -> group .)
    POINTCOMMA      reduce using rule 125 (term1 -> group .)
    $end            reduce using rule 125 (term1 -> group .)
    RPAREN          reduce using rule 125 (term1 -> group .)
    RBRACKET        reduce using rule 125 (term1 -> group .)
    COMMA           reduce using rule 125 (term1 -> group .)


state 53

    (152) number -> NUMBER .

    PRODUCT         reduce using rule 152 (number -> NUMBER .)
    DIVIDE          reduce using rule 152 (number -> NUMBER .)
    PLUS            reduce using rule 152 (number -> NUMBER .)
    MINUS           reduce using rule 152 (number -> NUMBER .)
    EQUALTO         reduce using rule 152 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 152 (number -> NUMBER .)
    GREATER         reduce using rule 152 (number -> NUMBER .)
    LESS            reduce using rule 152 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 152 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 152 (number -> NUMBER .)
    AND             reduce using rule 152 (number -> NUMBER .)
    OR              reduce using rule 152 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 152 (number -> NUMBER .)
    $end            reduce using rule 152 (number -> NUMBER .)
    INCREMENT       reduce using rule 152 (number -> NUMBER .)
    DECREMENT       reduce using rule 152 (number -> NUMBER .)
    RPAREN          reduce using rule 152 (number -> NUMBER .)
    RBRACKET        reduce using rule 152 (number -> NUMBER .)
    COMMA           reduce using rule 152 (number -> NUMBER .)
    RKEY            reduce using rule 152 (number -> NUMBER .)


state 54

    (153) number -> FLOAT .

    PRODUCT         reduce using rule 153 (number -> FLOAT .)
    DIVIDE          reduce using rule 153 (number -> FLOAT .)
    PLUS            reduce using rule 153 (number -> FLOAT .)
    MINUS           reduce using rule 153 (number -> FLOAT .)
    EQUALTO         reduce using rule 153 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 153 (number -> FLOAT .)
    GREATER         reduce using rule 153 (number -> FLOAT .)
    LESS            reduce using rule 153 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 153 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 153 (number -> FLOAT .)
    AND             reduce using rule 153 (number -> FLOAT .)
    OR              reduce using rule 153 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 153 (number -> FLOAT .)
    $end            reduce using rule 153 (number -> FLOAT .)
    INCREMENT       reduce using rule 153 (number -> FLOAT .)
    DECREMENT       reduce using rule 153 (number -> FLOAT .)
    RPAREN          reduce using rule 153 (number -> FLOAT .)
    RBRACKET        reduce using rule 153 (number -> FLOAT .)
    COMMA           reduce using rule 153 (number -> FLOAT .)
    RKEY            reduce using rule 153 (number -> FLOAT .)


state 55

    (137) other_value -> object_value .
    (129) group -> object_value .

    PRODUCT         reduce using rule 137 (other_value -> object_value .)
    DIVIDE          reduce using rule 137 (other_value -> object_value .)
    PLUS            reduce using rule 137 (other_value -> object_value .)
    MINUS           reduce using rule 137 (other_value -> object_value .)
    EQUALTO         reduce using rule 137 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 137 (other_value -> object_value .)
    GREATER         reduce using rule 137 (other_value -> object_value .)
    LESS            reduce using rule 137 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 137 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 137 (other_value -> object_value .)
    AND             reduce using rule 137 (other_value -> object_value .)
    OR              reduce using rule 137 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 137 (other_value -> object_value .)
    $end            reduce using rule 137 (other_value -> object_value .)
    RPAREN          reduce using rule 137 (other_value -> object_value .)
    RBRACKET        reduce using rule 137 (other_value -> object_value .)
    COMMA           reduce using rule 137 (other_value -> object_value .)
    INCREMENT       reduce using rule 129 (group -> object_value .)
    DECREMENT       reduce using rule 129 (group -> object_value .)


state 56

    (154) string -> NORMSTRING1 .

    PLUS            reduce using rule 154 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 154 (string -> NORMSTRING1 .)
    $end            reduce using rule 154 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 154 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 154 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 154 (string -> NORMSTRING1 .)


state 57

    (155) string -> NORMSTRING2 .

    PLUS            reduce using rule 155 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 155 (string -> NORMSTRING2 .)
    $end            reduce using rule 155 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 155 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 155 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 155 (string -> NORMSTRING2 .)


state 58

    (156) string -> MULTISTRING .

    PLUS            reduce using rule 156 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 156 (string -> MULTISTRING .)
    $end            reduce using rule 156 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 156 (string -> MULTISTRING .)
    COMMA           reduce using rule 156 (string -> MULTISTRING .)
    RKEY            reduce using rule 156 (string -> MULTISTRING .)


state 59

    (143) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 136


state 60

    (64) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 137


state 61

    (159) variable -> VARIABLE .

    EQUAL           reduce using rule 159 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 159 (variable -> VARIABLE .)
    POINT           reduce using rule 159 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 159 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 159 (variable -> VARIABLE .)
    PLUS            reduce using rule 159 (variable -> VARIABLE .)
    MINUS           reduce using rule 159 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 159 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 159 (variable -> VARIABLE .)
    GREATER         reduce using rule 159 (variable -> VARIABLE .)
    LESS            reduce using rule 159 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 159 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 159 (variable -> VARIABLE .)
    AND             reduce using rule 159 (variable -> VARIABLE .)
    OR              reduce using rule 159 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 159 (variable -> VARIABLE .)
    $end            reduce using rule 159 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 159 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 159 (variable -> VARIABLE .)
    RPAREN          reduce using rule 159 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 159 (variable -> VARIABLE .)
    COMMA           reduce using rule 159 (variable -> VARIABLE .)


state 62

    (35) declare_array_main_number -> declare_array_number . EQUAL list_number
    (36) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 138
    POINTCOMMA      reduce using rule 36 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 36 (declare_array_main_number -> declare_array_number .)


state 63

    (39) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (40) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 139
    POINTCOMMA      reduce using rule 40 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 40 (declare_array_main_boolean -> declare_array_boolean .)


state 64

    (43) declare_array_main_string -> declare_array_string . EQUAL list_string
    (44) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 140
    POINTCOMMA      reduce using rule 44 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 44 (declare_array_main_string -> declare_array_string .)


state 65

    (144) prefix -> LET .

    VARIABLE        reduce using rule 144 (prefix -> LET .)


state 66

    (145) prefix -> VAR .

    VARIABLE        reduce using rule 145 (prefix -> VAR .)


state 67

    (146) prefix -> STATIC .

    VARIABLE        reduce using rule 146 (prefix -> STATIC .)


state 68

    (147) prefix -> CONST .

    VARIABLE        reduce using rule 147 (prefix -> CONST .)


state 69

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 70

    (100) expression -> expression PLUS . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    term                           shift and go to state 141
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 71

    (101) expression -> expression MINUS . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    term                           shift and go to state 142
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 72

    (123) expCond -> expression operador . expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expression                     shift and go to state 143
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 73

    (121) expOpLog -> expression oplogico . expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expression                     shift and go to state 144
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 74

    (115) expEq -> expression EQUALTO . expression
    (165) operador -> EQUALTO .
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

  ! INCREMENT       [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 165 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 165 (operador -> EQUALTO .) ]

    expression                     shift and go to state 145
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 75

    (118) expNotEq -> expression NOTEQUALTO . expression
    (166) operador -> NOTEQUALTO .
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

  ! INCREMENT       [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 166 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 166 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 146
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 76

    (161) operador -> GREATER .

    INCREMENT       reduce using rule 161 (operador -> GREATER .)
    DECREMENT       reduce using rule 161 (operador -> GREATER .)
    LPAREN          reduce using rule 161 (operador -> GREATER .)
    NUMBER          reduce using rule 161 (operador -> GREATER .)
    FLOAT           reduce using rule 161 (operador -> GREATER .)
    VARIABLE        reduce using rule 161 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 161 (operador -> GREATER .)


state 77

    (162) operador -> LESS .

    INCREMENT       reduce using rule 162 (operador -> LESS .)
    DECREMENT       reduce using rule 162 (operador -> LESS .)
    LPAREN          reduce using rule 162 (operador -> LESS .)
    NUMBER          reduce using rule 162 (operador -> LESS .)
    FLOAT           reduce using rule 162 (operador -> LESS .)
    VARIABLE        reduce using rule 162 (operador -> LESS .)
    OBJECTNAME      reduce using rule 162 (operador -> LESS .)


state 78

    (163) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 163 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 163 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 163 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 163 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 163 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 163 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 163 (operador -> GREATEREQUAL .)


state 79

    (164) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 164 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 164 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 164 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 164 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 164 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 164 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 164 (operador -> LESSEQUAL .)


state 80

    (167) oplogico -> AND .

    INCREMENT       reduce using rule 167 (oplogico -> AND .)
    DECREMENT       reduce using rule 167 (oplogico -> AND .)
    LPAREN          reduce using rule 167 (oplogico -> AND .)
    NUMBER          reduce using rule 167 (oplogico -> AND .)
    FLOAT           reduce using rule 167 (oplogico -> AND .)
    VARIABLE        reduce using rule 167 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 167 (oplogico -> AND .)


state 81

    (168) oplogico -> OR .

    INCREMENT       reduce using rule 168 (oplogico -> OR .)
    DECREMENT       reduce using rule 168 (oplogico -> OR .)
    LPAREN          reduce using rule 168 (oplogico -> OR .)
    NUMBER          reduce using rule 168 (oplogico -> OR .)
    FLOAT           reduce using rule 168 (oplogico -> OR .)
    VARIABLE        reduce using rule 168 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 168 (oplogico -> OR .)


state 82

    (119) expOpLog -> expCond oplogico . expCond
    (123) expCond -> . expression operador expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expCond                        shift and go to state 147
    expression                     shift and go to state 148
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 83

    (113) expEq -> expCond EQUALTO . expCond
    (123) expCond -> . expression operador expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expCond                        shift and go to state 149
    expression                     shift and go to state 148
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 84

    (116) expNotEq -> expCond NOTEQUALTO . expCond
    (123) expCond -> . expression operador expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expCond                        shift and go to state 150
    expression                     shift and go to state 148
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 85

    (103) term -> term PRODUCT . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    term                           shift and go to state 151
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 86

    (104) term -> term DIVIDE . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    term                           shift and go to state 152
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 87

    (120) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (122) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 154

    factor_exprlog                 shift and go to state 153

state 88

    (114) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (122) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 154

    factor_exprlog                 shift and go to state 155

state 89

    (117) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (122) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 154

    factor_exprlog                 shift and go to state 156

state 90

    (109) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 109 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 109 (expNeg -> NEGATION expOpLog .)


state 91

    (110) expNeg -> NEGATION factor_exprlog .
    (120) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    POINTCOMMA      reduce using rule 110 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 110 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 87

state 92

    (111) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 111 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 111 (expNeg -> NEGATION boolean .)


state 93

    (112) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (122) factor_exprlog -> LPAREN . expCond RPAREN
    (124) term1 -> LPAREN . group RPAREN
    (133) factor_expr -> LPAREN . expression RPAREN
    (119) expOpLog -> . expCond oplogico expCond
    (120) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (121) expOpLog -> . expression oplogico expression
    (123) expCond -> . expression operador expression
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (122) factor_exprlog -> . LPAREN expCond RPAREN
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (143) enum_value -> . object_name POINT object_name
    (160) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    OBJECTNAME      shift and go to state 47

    expOpLog                       shift and go to state 157
    expCond                        shift and go to state 158
    group                          shift and go to state 104
    expression                     shift and go to state 159
    factor_exprlog                 shift and go to state 160
    number                         shift and go to state 106
    variable                       shift and go to state 107
    array_value                    shift and go to state 108
    object_value                   shift and go to state 109
    term                           shift and go to state 12
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101
    term1                          shift and go to state 29
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    enum_value                     shift and go to state 40
    object_name                    shift and go to state 59

state 94

    (119) expOpLog -> expCond . oplogico expCond
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 82

state 95

    (121) expOpLog -> expression . oplogico expression
    (123) expCond -> expression . operador expression
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term
    (167) oplogico -> . AND
    (168) oplogico -> . OR
    (161) operador -> . GREATER
    (162) operador -> . LESS
    (163) operador -> . GREATEREQUAL
    (164) operador -> . LESSEQUAL
    (165) operador -> . EQUALTO
    (166) operador -> . NOTEQUALTO

    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    AND             shift and go to state 80
    OR              shift and go to state 81
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    GREATEREQUAL    shift and go to state 78
    LESSEQUAL       shift and go to state 79
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    oplogico                       shift and go to state 73
    operador                       shift and go to state 72

state 96

    (157) boolean -> TRUE .

    POINTCOMMA      reduce using rule 157 (boolean -> TRUE .)
    $end            reduce using rule 157 (boolean -> TRUE .)
    RBRACKET        reduce using rule 157 (boolean -> TRUE .)
    COMMA           reduce using rule 157 (boolean -> TRUE .)


state 97

    (158) boolean -> FALSE .

    POINTCOMMA      reduce using rule 158 (boolean -> FALSE .)
    $end            reduce using rule 158 (boolean -> FALSE .)
    RBRACKET        reduce using rule 158 (boolean -> FALSE .)
    COMMA           reduce using rule 158 (boolean -> FALSE .)


state 98

    (134) other_value -> variable .
    (127) group -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 134 (other_value -> variable .)
    DIVIDE          reduce using rule 134 (other_value -> variable .)
    PLUS            reduce using rule 134 (other_value -> variable .)
    MINUS           reduce using rule 134 (other_value -> variable .)
    AND             reduce using rule 134 (other_value -> variable .)
    OR              reduce using rule 134 (other_value -> variable .)
    GREATER         reduce using rule 134 (other_value -> variable .)
    LESS            reduce using rule 134 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 134 (other_value -> variable .)
    LESSEQUAL       reduce using rule 134 (other_value -> variable .)
    EQUALTO         reduce using rule 134 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 134 (other_value -> variable .)
    POINTCOMMA      reduce using rule 134 (other_value -> variable .)
    $end            reduce using rule 134 (other_value -> variable .)
    RPAREN          reduce using rule 134 (other_value -> variable .)
    RBRACKET        reduce using rule 134 (other_value -> variable .)
    COMMA           reduce using rule 134 (other_value -> variable .)
    INCREMENT       reduce using rule 127 (group -> variable .)
    DECREMENT       reduce using rule 127 (group -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132


state 99

    (135) other_value -> array_value .
    (128) group -> array_value .

    PRODUCT         reduce using rule 135 (other_value -> array_value .)
    DIVIDE          reduce using rule 135 (other_value -> array_value .)
    PLUS            reduce using rule 135 (other_value -> array_value .)
    MINUS           reduce using rule 135 (other_value -> array_value .)
    AND             reduce using rule 135 (other_value -> array_value .)
    OR              reduce using rule 135 (other_value -> array_value .)
    GREATER         reduce using rule 135 (other_value -> array_value .)
    LESS            reduce using rule 135 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 135 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 135 (other_value -> array_value .)
    EQUALTO         reduce using rule 135 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 135 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 135 (other_value -> array_value .)
    $end            reduce using rule 135 (other_value -> array_value .)
    RPAREN          reduce using rule 135 (other_value -> array_value .)
    RBRACKET        reduce using rule 135 (other_value -> array_value .)
    COMMA           reduce using rule 135 (other_value -> array_value .)
    INCREMENT       reduce using rule 128 (group -> array_value .)
    DECREMENT       reduce using rule 128 (group -> array_value .)


state 100

    (138) object_value -> object_value_form1 .

    PRODUCT         reduce using rule 138 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 138 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 138 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 138 (object_value -> object_value_form1 .)
    AND             reduce using rule 138 (object_value -> object_value_form1 .)
    OR              reduce using rule 138 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 138 (object_value -> object_value_form1 .)
    LESS            reduce using rule 138 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 138 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 138 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 138 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 138 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 138 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 138 (object_value -> object_value_form1 .)
    RPAREN          reduce using rule 138 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 138 (object_value -> object_value_form1 .)
    $end            reduce using rule 138 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 138 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 138 (object_value -> object_value_form1 .)


state 101

    (139) object_value -> object_value_form2 .

    PRODUCT         reduce using rule 139 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 139 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 139 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 139 (object_value -> object_value_form2 .)
    AND             reduce using rule 139 (object_value -> object_value_form2 .)
    OR              reduce using rule 139 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 139 (object_value -> object_value_form2 .)
    LESS            reduce using rule 139 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 139 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 139 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 139 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 139 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 139 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 139 (object_value -> object_value_form2 .)
    RPAREN          reduce using rule 139 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 139 (object_value -> object_value_form2 .)
    $end            reduce using rule 139 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 139 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 139 (object_value -> object_value_form2 .)


state 102

    (124) term1 -> LPAREN . group RPAREN
    (133) factor_expr -> LPAREN . expression RPAREN
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (143) enum_value -> . object_name POINT object_name
    (160) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    OBJECTNAME      shift and go to state 47

    group                          shift and go to state 104
    expression                     shift and go to state 163
    number                         shift and go to state 106
    variable                       shift and go to state 107
    array_value                    shift and go to state 108
    object_value                   shift and go to state 109
    term                           shift and go to state 12
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101
    term1                          shift and go to state 29
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    enum_value                     shift and go to state 40
    object_name                    shift and go to state 59

state 103

    (122) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 164


state 104

    (124) term1 -> LPAREN group . RPAREN
    (125) term1 -> group .

    RPAREN          shift and go to state 165
    INCREMENT       reduce using rule 125 (term1 -> group .)
    DECREMENT       reduce using rule 125 (term1 -> group .)


state 105

    (133) factor_expr -> LPAREN expression . RPAREN
    (123) expCond -> expression . operador expression
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term
    (161) operador -> . GREATER
    (162) operador -> . LESS
    (163) operador -> . GREATEREQUAL
    (164) operador -> . LESSEQUAL
    (165) operador -> . EQUALTO
    (166) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 166
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    GREATEREQUAL    shift and go to state 78
    LESSEQUAL       shift and go to state 79
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 72

state 106

    (126) group -> number .
    (130) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 126 (group -> number .)
    RPAREN          reduce using rule 126 (group -> number .)
    INCREMENT       reduce using rule 126 (group -> number .)
    DECREMENT       reduce using rule 126 (group -> number .)
    PRODUCT         reduce using rule 130 (term -> number .)
    DIVIDE          reduce using rule 130 (term -> number .)
    PLUS            reduce using rule 130 (term -> number .)
    MINUS           reduce using rule 130 (term -> number .)
    GREATER         reduce using rule 130 (term -> number .)
    LESS            reduce using rule 130 (term -> number .)
    GREATEREQUAL    reduce using rule 130 (term -> number .)
    LESSEQUAL       reduce using rule 130 (term -> number .)
    EQUALTO         reduce using rule 130 (term -> number .)
    NOTEQUALTO      reduce using rule 130 (term -> number .)
    AND             reduce using rule 130 (term -> number .)
    OR              reduce using rule 130 (term -> number .)

  ! RPAREN          [ reduce using rule 130 (term -> number .) ]


state 107

    (127) group -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value
    (134) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 127 (group -> variable .)
    RPAREN          reduce using rule 127 (group -> variable .)
    INCREMENT       reduce using rule 127 (group -> variable .)
    DECREMENT       reduce using rule 127 (group -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132
    PRODUCT         reduce using rule 134 (other_value -> variable .)
    DIVIDE          reduce using rule 134 (other_value -> variable .)
    PLUS            reduce using rule 134 (other_value -> variable .)
    MINUS           reduce using rule 134 (other_value -> variable .)
    GREATER         reduce using rule 134 (other_value -> variable .)
    LESS            reduce using rule 134 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 134 (other_value -> variable .)
    LESSEQUAL       reduce using rule 134 (other_value -> variable .)
    EQUALTO         reduce using rule 134 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 134 (other_value -> variable .)
    AND             reduce using rule 134 (other_value -> variable .)
    OR              reduce using rule 134 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 134 (other_value -> variable .) ]


state 108

    (128) group -> array_value .
    (135) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 128 (group -> array_value .)
    RPAREN          reduce using rule 128 (group -> array_value .)
    INCREMENT       reduce using rule 128 (group -> array_value .)
    DECREMENT       reduce using rule 128 (group -> array_value .)
    PRODUCT         reduce using rule 135 (other_value -> array_value .)
    DIVIDE          reduce using rule 135 (other_value -> array_value .)
    PLUS            reduce using rule 135 (other_value -> array_value .)
    MINUS           reduce using rule 135 (other_value -> array_value .)
    GREATER         reduce using rule 135 (other_value -> array_value .)
    LESS            reduce using rule 135 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 135 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 135 (other_value -> array_value .)
    EQUALTO         reduce using rule 135 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 135 (other_value -> array_value .)
    AND             reduce using rule 135 (other_value -> array_value .)
    OR              reduce using rule 135 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 135 (other_value -> array_value .) ]


state 109

    (129) group -> object_value .
    (137) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 129 (group -> object_value .)
    RPAREN          reduce using rule 129 (group -> object_value .)
    INCREMENT       reduce using rule 129 (group -> object_value .)
    DECREMENT       reduce using rule 129 (group -> object_value .)
    PRODUCT         reduce using rule 137 (other_value -> object_value .)
    DIVIDE          reduce using rule 137 (other_value -> object_value .)
    PLUS            reduce using rule 137 (other_value -> object_value .)
    MINUS           reduce using rule 137 (other_value -> object_value .)
    GREATER         reduce using rule 137 (other_value -> object_value .)
    LESS            reduce using rule 137 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 137 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 137 (other_value -> object_value .)
    EQUALTO         reduce using rule 137 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 137 (other_value -> object_value .)
    AND             reduce using rule 137 (other_value -> object_value .)
    OR              reduce using rule 137 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 137 (other_value -> object_value .) ]


state 110

    (105) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 105 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 105 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 105 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 105 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 105 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 105 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 105 (term -> term1 INCREMENT .)
    LESS            reduce using rule 105 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 105 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 105 (term -> term1 INCREMENT .)
    AND             reduce using rule 105 (term -> term1 INCREMENT .)
    OR              reduce using rule 105 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 105 (term -> term1 INCREMENT .)
    $end            reduce using rule 105 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 105 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 105 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 105 (term -> term1 INCREMENT .)


state 111

    (107) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 107 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 107 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 107 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 107 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 107 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 107 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 107 (term -> term1 DECREMENT .)
    LESS            reduce using rule 107 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 107 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 107 (term -> term1 DECREMENT .)
    AND             reduce using rule 107 (term -> term1 DECREMENT .)
    OR              reduce using rule 107 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 107 (term -> term1 DECREMENT .)
    $end            reduce using rule 107 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 107 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 107 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 107 (term -> term1 DECREMENT .)


state 112

    (106) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 106 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 106 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 106 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 106 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 106 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 106 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 106 (term -> INCREMENT term1 .)
    LESS            reduce using rule 106 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 106 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 106 (term -> INCREMENT term1 .)
    AND             reduce using rule 106 (term -> INCREMENT term1 .)
    OR              reduce using rule 106 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 106 (term -> INCREMENT term1 .)
    $end            reduce using rule 106 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 106 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 106 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 106 (term -> INCREMENT term1 .)


state 113

    (124) term1 -> LPAREN . group RPAREN
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61

    group                          shift and go to state 167
    number                         shift and go to state 114
    variable                       shift and go to state 115
    array_value                    shift and go to state 116
    object_value                   shift and go to state 117
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 114

    (126) group -> number .

    PRODUCT         reduce using rule 126 (group -> number .)
    DIVIDE          reduce using rule 126 (group -> number .)
    PLUS            reduce using rule 126 (group -> number .)
    MINUS           reduce using rule 126 (group -> number .)
    EQUALTO         reduce using rule 126 (group -> number .)
    NOTEQUALTO      reduce using rule 126 (group -> number .)
    GREATER         reduce using rule 126 (group -> number .)
    LESS            reduce using rule 126 (group -> number .)
    GREATEREQUAL    reduce using rule 126 (group -> number .)
    LESSEQUAL       reduce using rule 126 (group -> number .)
    AND             reduce using rule 126 (group -> number .)
    OR              reduce using rule 126 (group -> number .)
    POINTCOMMA      reduce using rule 126 (group -> number .)
    $end            reduce using rule 126 (group -> number .)
    RPAREN          reduce using rule 126 (group -> number .)
    RBRACKET        reduce using rule 126 (group -> number .)
    COMMA           reduce using rule 126 (group -> number .)


state 115

    (127) group -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 127 (group -> variable .)
    DIVIDE          reduce using rule 127 (group -> variable .)
    PLUS            reduce using rule 127 (group -> variable .)
    MINUS           reduce using rule 127 (group -> variable .)
    EQUALTO         reduce using rule 127 (group -> variable .)
    NOTEQUALTO      reduce using rule 127 (group -> variable .)
    GREATER         reduce using rule 127 (group -> variable .)
    LESS            reduce using rule 127 (group -> variable .)
    GREATEREQUAL    reduce using rule 127 (group -> variable .)
    LESSEQUAL       reduce using rule 127 (group -> variable .)
    AND             reduce using rule 127 (group -> variable .)
    OR              reduce using rule 127 (group -> variable .)
    POINTCOMMA      reduce using rule 127 (group -> variable .)
    $end            reduce using rule 127 (group -> variable .)
    RPAREN          reduce using rule 127 (group -> variable .)
    RBRACKET        reduce using rule 127 (group -> variable .)
    COMMA           reduce using rule 127 (group -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132


state 116

    (128) group -> array_value .

    PRODUCT         reduce using rule 128 (group -> array_value .)
    DIVIDE          reduce using rule 128 (group -> array_value .)
    PLUS            reduce using rule 128 (group -> array_value .)
    MINUS           reduce using rule 128 (group -> array_value .)
    EQUALTO         reduce using rule 128 (group -> array_value .)
    NOTEQUALTO      reduce using rule 128 (group -> array_value .)
    GREATER         reduce using rule 128 (group -> array_value .)
    LESS            reduce using rule 128 (group -> array_value .)
    GREATEREQUAL    reduce using rule 128 (group -> array_value .)
    LESSEQUAL       reduce using rule 128 (group -> array_value .)
    AND             reduce using rule 128 (group -> array_value .)
    OR              reduce using rule 128 (group -> array_value .)
    POINTCOMMA      reduce using rule 128 (group -> array_value .)
    $end            reduce using rule 128 (group -> array_value .)
    RPAREN          reduce using rule 128 (group -> array_value .)
    RBRACKET        reduce using rule 128 (group -> array_value .)
    COMMA           reduce using rule 128 (group -> array_value .)


state 117

    (129) group -> object_value .

    PRODUCT         reduce using rule 129 (group -> object_value .)
    DIVIDE          reduce using rule 129 (group -> object_value .)
    PLUS            reduce using rule 129 (group -> object_value .)
    MINUS           reduce using rule 129 (group -> object_value .)
    EQUALTO         reduce using rule 129 (group -> object_value .)
    NOTEQUALTO      reduce using rule 129 (group -> object_value .)
    GREATER         reduce using rule 129 (group -> object_value .)
    LESS            reduce using rule 129 (group -> object_value .)
    GREATEREQUAL    reduce using rule 129 (group -> object_value .)
    LESSEQUAL       reduce using rule 129 (group -> object_value .)
    AND             reduce using rule 129 (group -> object_value .)
    OR              reduce using rule 129 (group -> object_value .)
    POINTCOMMA      reduce using rule 129 (group -> object_value .)
    $end            reduce using rule 129 (group -> object_value .)
    RPAREN          reduce using rule 129 (group -> object_value .)
    RBRACKET        reduce using rule 129 (group -> object_value .)
    COMMA           reduce using rule 129 (group -> object_value .)


state 118

    (108) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 108 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 108 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 108 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 108 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 108 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 108 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 108 (term -> DECREMENT term1 .)
    LESS            reduce using rule 108 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 108 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 108 (term -> DECREMENT term1 .)
    AND             reduce using rule 108 (term -> DECREMENT term1 .)
    OR              reduce using rule 108 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 108 (term -> DECREMENT term1 .)
    $end            reduce using rule 108 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 108 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 108 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 108 (term -> DECREMENT term1 .)


state 119

    (95) termS -> string PLUS . chain
    (96) chain -> . termS PLUS value
    (97) chain -> . value
    (95) termS -> . string PLUS chain
    (98) value -> . expression
    (99) value -> . string
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    string                         shift and go to state 168
    chain                          shift and go to state 169
    termS                          shift and go to state 170
    value                          shift and go to state 171
    expression                     shift and go to state 172
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 120

    (53) var_boolean -> declare_boolean EQUAL . boolean_value
    (90) boolean_value -> . boolean
    (91) boolean_value -> . other_value
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    boolean_value                  shift and go to state 173
    boolean                        shift and go to state 174
    other_value                    shift and go to state 175
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 121

    (41) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 179


state 122

    (50) var_number -> declare_number EQUAL . number_value
    (89) number_value -> . expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    number_value                   shift and go to state 180
    expression                     shift and go to state 181
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 123

    (37) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 182


state 124

    (56) var_string -> declare_string EQUAL . string_value
    (92) string_value -> . string
    (93) string_value -> . other_value
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    string_value                   shift and go to state 183
    string                         shift and go to state 184
    other_value                    shift and go to state 185
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 125

    (45) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 186


state 126

    (59) var_enum -> declare_var_enum EQUAL . enum_value
    (143) enum_value -> . object_name POINT object_name
    (160) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 47

    enum_value                     shift and go to state 187
    object_name                    shift and go to state 59

state 127

    (48) var_null -> declare_any EQUAL . NULL
    (49) var_undefined -> declare_any EQUAL . UNDEFINED
    (62) declare_generic -> declare_any EQUAL . assign_value
    (47) declare_generic_array -> declare_any EQUAL . list_types
    (74) assign_value -> . expression
    (75) assign_value -> . boolean
    (76) assign_value -> . string
    (77) list_types -> . list_number
    (78) list_types -> . list_boolean
    (79) list_types -> . list_string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (80) list_number -> . LBRACKET numbers RBRACKET
    (83) list_boolean -> . LBRACKET booleans RBRACKET
    (86) list_string -> . LBRACKET strings RBRACKET
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NULL            shift and go to state 188
    UNDEFINED       shift and go to state 189
    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    LBRACKET        shift and go to state 198
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    assign_value                   shift and go to state 190
    list_types                     shift and go to state 191
    expression                     shift and go to state 192
    boolean                        shift and go to state 193
    string                         shift and go to state 194
    list_number                    shift and go to state 195
    list_boolean                   shift and go to state 196
    list_string                    shift and go to state 197
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 128

    (55) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (52) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (58) declare_string -> declare_any TWOPOINTS . VARSTRING
    (61) declare_var_enum -> declare_any TWOPOINTS . object_name
    (38) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (42) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (46) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (160) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 199
    VARNUMBER       shift and go to state 200
    VARSTRING       shift and go to state 201
    ARRAY           shift and go to state 203
    OBJECTNAME      shift and go to state 47

    object_name                    shift and go to state 202

state 129

    (21) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 204


state 130

    (68) assign_variable -> variable EQUAL . assign_value
    (69) assign_variable -> variable EQUAL . list_types
    (74) assign_value -> . expression
    (75) assign_value -> . boolean
    (76) assign_value -> . string
    (77) list_types -> . list_number
    (78) list_types -> . list_boolean
    (79) list_types -> . list_string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (80) list_number -> . LBRACKET numbers RBRACKET
    (83) list_boolean -> . LBRACKET booleans RBRACKET
    (86) list_string -> . LBRACKET strings RBRACKET
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    LBRACKET        shift and go to state 198
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    variable                       shift and go to state 98
    assign_value                   shift and go to state 205
    list_types                     shift and go to state 206
    expression                     shift and go to state 192
    boolean                        shift and go to state 193
    string                         shift and go to state 194
    list_number                    shift and go to state 195
    list_boolean                   shift and go to state 196
    list_string                    shift and go to state 197
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 131

    (142) array_value -> variable LBRACKET . expression RBRACKET
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    variable                       shift and go to state 98
    expression                     shift and go to state 207
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 132

    (140) object_value_form1 -> variable POINT . variable
    (141) object_value_form2 -> variable POINT . array_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 61

    variable                       shift and go to state 208
    array_value                    shift and go to state 209

state 133

    (70) assign_array -> array_value EQUAL . assign_value
    (74) assign_value -> . expression
    (75) assign_value -> . boolean
    (76) assign_value -> . string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    array_value                    shift and go to state 99
    assign_value                   shift and go to state 210
    expression                     shift and go to state 192
    boolean                        shift and go to state 193
    string                         shift and go to state 194
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 134

    (71) assign_object_value -> object_value_form1 EQUAL . assign_value
    (72) assign_object_value -> object_value_form1 EQUAL . list_types
    (74) assign_value -> . expression
    (75) assign_value -> . boolean
    (76) assign_value -> . string
    (77) list_types -> . list_number
    (78) list_types -> . list_boolean
    (79) list_types -> . list_string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (80) list_number -> . LBRACKET numbers RBRACKET
    (83) list_boolean -> . LBRACKET booleans RBRACKET
    (86) list_string -> . LBRACKET strings RBRACKET
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    LBRACKET        shift and go to state 198
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    object_value_form1             shift and go to state 100
    assign_value                   shift and go to state 211
    list_types                     shift and go to state 212
    expression                     shift and go to state 192
    boolean                        shift and go to state 193
    string                         shift and go to state 194
    list_number                    shift and go to state 195
    list_boolean                   shift and go to state 196
    list_string                    shift and go to state 197
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form2             shift and go to state 101

state 135

    (73) assign_object_value -> object_value_form2 EQUAL . assign_value
    (74) assign_value -> . expression
    (75) assign_value -> . boolean
    (76) assign_value -> . string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    object_value_form2             shift and go to state 101
    assign_value                   shift and go to state 213
    expression                     shift and go to state 192
    boolean                        shift and go to state 193
    string                         shift and go to state 194
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100

state 136

    (143) enum_value -> object_name POINT . object_name
    (160) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 47

    object_name                    shift and go to state 214

state 137

    (64) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 64 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 64 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 64 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 64 (declare_any -> prefix VARIABLE .)


state 138

    (35) declare_array_main_number -> declare_array_number EQUAL . list_number
    (80) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 216

    list_number                    shift and go to state 215

state 139

    (39) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (83) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 218

    list_boolean                   shift and go to state 217

state 140

    (43) declare_array_main_string -> declare_array_string EQUAL . list_string
    (86) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 220

    list_string                    shift and go to state 219

state 141

    (100) expression -> expression PLUS term .
    (103) term -> term . PRODUCT term
    (104) term -> term . DIVIDE term

    PLUS            reduce using rule 100 (expression -> expression PLUS term .)
    MINUS           reduce using rule 100 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 100 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 100 (expression -> expression PLUS term .)
    GREATER         reduce using rule 100 (expression -> expression PLUS term .)
    LESS            reduce using rule 100 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 100 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 100 (expression -> expression PLUS term .)
    AND             reduce using rule 100 (expression -> expression PLUS term .)
    OR              reduce using rule 100 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 100 (expression -> expression PLUS term .)
    $end            reduce using rule 100 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 100 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 100 (expression -> expression PLUS term .)
    COMMA           reduce using rule 100 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 85
    DIVIDE          shift and go to state 86


state 142

    (101) expression -> expression MINUS term .
    (103) term -> term . PRODUCT term
    (104) term -> term . DIVIDE term

    PLUS            reduce using rule 101 (expression -> expression MINUS term .)
    MINUS           reduce using rule 101 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 101 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 101 (expression -> expression MINUS term .)
    GREATER         reduce using rule 101 (expression -> expression MINUS term .)
    LESS            reduce using rule 101 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 101 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 101 (expression -> expression MINUS term .)
    AND             reduce using rule 101 (expression -> expression MINUS term .)
    OR              reduce using rule 101 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 101 (expression -> expression MINUS term .)
    $end            reduce using rule 101 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 101 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 101 (expression -> expression MINUS term .)
    COMMA           reduce using rule 101 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 85
    DIVIDE          shift and go to state 86


state 143

    (123) expCond -> expression operador expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    EQUALTO         reduce using rule 123 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 123 (expCond -> expression operador expression .)
    AND             reduce using rule 123 (expCond -> expression operador expression .)
    OR              reduce using rule 123 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 123 (expCond -> expression operador expression .)
    $end            reduce using rule 123 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 123 (expCond -> expression operador expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 144

    (121) expOpLog -> expression oplogico expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 121 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 121 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 121 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 145

    (115) expEq -> expression EQUALTO expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 115 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 115 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 146

    (118) expNotEq -> expression NOTEQUALTO expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 118 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 118 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 147

    (119) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 119 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 119 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 119 (expOpLog -> expCond oplogico expCond .)


state 148

    (123) expCond -> expression . operador expression
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term
    (161) operador -> . GREATER
    (162) operador -> . LESS
    (163) operador -> . GREATEREQUAL
    (164) operador -> . LESSEQUAL
    (165) operador -> . EQUALTO
    (166) operador -> . NOTEQUALTO

    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    GREATEREQUAL    shift and go to state 78
    LESSEQUAL       shift and go to state 79
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 72

state 149

    (113) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 113 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 113 (expEq -> expCond EQUALTO expCond .)


state 150

    (116) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 116 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 116 (expNotEq -> expCond NOTEQUALTO expCond .)


state 151

    (103) term -> term PRODUCT term .
    (103) term -> term . PRODUCT term
    (104) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 103 (term -> term PRODUCT term .)
    MINUS           reduce using rule 103 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 103 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 103 (term -> term PRODUCT term .)
    GREATER         reduce using rule 103 (term -> term PRODUCT term .)
    LESS            reduce using rule 103 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 103 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 103 (term -> term PRODUCT term .)
    AND             reduce using rule 103 (term -> term PRODUCT term .)
    OR              reduce using rule 103 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 103 (term -> term PRODUCT term .)
    $end            reduce using rule 103 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 103 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 103 (term -> term PRODUCT term .)
    COMMA           reduce using rule 103 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 85
    DIVIDE          shift and go to state 86

  ! PRODUCT         [ reduce using rule 103 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 103 (term -> term PRODUCT term .) ]


state 152

    (104) term -> term DIVIDE term .
    (103) term -> term . PRODUCT term
    (104) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 104 (term -> term DIVIDE term .)
    MINUS           reduce using rule 104 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 104 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 104 (term -> term DIVIDE term .)
    GREATER         reduce using rule 104 (term -> term DIVIDE term .)
    LESS            reduce using rule 104 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 104 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 104 (term -> term DIVIDE term .)
    AND             reduce using rule 104 (term -> term DIVIDE term .)
    OR              reduce using rule 104 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 104 (term -> term DIVIDE term .)
    $end            reduce using rule 104 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 104 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 104 (term -> term DIVIDE term .)
    COMMA           reduce using rule 104 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 85
    DIVIDE          shift and go to state 86

  ! PRODUCT         [ reduce using rule 104 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 104 (term -> term DIVIDE term .) ]


state 153

    (120) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 120 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 120 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 120 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 154

    (122) factor_exprlog -> LPAREN . expCond RPAREN
    (123) expCond -> . expression operador expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    expCond                        shift and go to state 103
    expression                     shift and go to state 148
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 155

    (114) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 114 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 114 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 156

    (117) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 117 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 117 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 157

    (112) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 221


state 158

    (122) factor_exprlog -> LPAREN expCond . RPAREN
    (119) expOpLog -> expCond . oplogico expCond
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    RPAREN          shift and go to state 164
    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 82

state 159

    (133) factor_expr -> LPAREN expression . RPAREN
    (121) expOpLog -> expression . oplogico expression
    (123) expCond -> expression . operador expression
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term
    (167) oplogico -> . AND
    (168) oplogico -> . OR
    (161) operador -> . GREATER
    (162) operador -> . LESS
    (163) operador -> . GREATEREQUAL
    (164) operador -> . LESSEQUAL
    (165) operador -> . EQUALTO
    (166) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 166
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    AND             shift and go to state 80
    OR              shift and go to state 81
    GREATER         shift and go to state 76
    LESS            shift and go to state 77
    GREATEREQUAL    shift and go to state 78
    LESSEQUAL       shift and go to state 79
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    oplogico                       shift and go to state 73
    operador                       shift and go to state 72

state 160

    (120) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (167) oplogico -> . AND
    (168) oplogico -> . OR

    AND             shift and go to state 80
    OR              shift and go to state 81

    oplogico                       shift and go to state 87

state 161

    (165) operador -> EQUALTO .

    INCREMENT       reduce using rule 165 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 165 (operador -> EQUALTO .)
    LPAREN          reduce using rule 165 (operador -> EQUALTO .)
    NUMBER          reduce using rule 165 (operador -> EQUALTO .)
    FLOAT           reduce using rule 165 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 165 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 165 (operador -> EQUALTO .)


state 162

    (166) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 166 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 166 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 166 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 166 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 166 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 166 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 166 (operador -> NOTEQUALTO .)


state 163

    (133) factor_expr -> LPAREN expression . RPAREN
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    RPAREN          shift and go to state 166
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 164

    (122) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 122 (factor_exprlog -> LPAREN expCond RPAREN .)


state 165

    (124) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 124 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 124 (term1 -> LPAREN group RPAREN .)


state 166

    (133) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 133 (factor_expr -> LPAREN expression RPAREN .)


state 167

    (124) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 165


state 168

    (95) termS -> string . PLUS chain
    (99) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 119
    POINTCOMMA      reduce using rule 99 (value -> string .)
    $end            reduce using rule 99 (value -> string .)

  ! PLUS            [ reduce using rule 99 (value -> string .) ]


state 169

    (95) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 95 (termS -> string PLUS chain .)
    $end            reduce using rule 95 (termS -> string PLUS chain .)
    PLUS            reduce using rule 95 (termS -> string PLUS chain .)


state 170

    (96) chain -> termS . PLUS value

    PLUS            shift and go to state 222


state 171

    (97) chain -> value .

    POINTCOMMA      reduce using rule 97 (chain -> value .)
    $end            reduce using rule 97 (chain -> value .)
    PLUS            reduce using rule 97 (chain -> value .)


state 172

    (98) value -> expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 98 (value -> expression .)
    $end            reduce using rule 98 (value -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

  ! PLUS            [ reduce using rule 98 (value -> expression .) ]


state 173

    (53) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 53 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 53 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 174

    (90) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 90 (boolean_value -> boolean .)
    $end            reduce using rule 90 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 90 (boolean_value -> boolean .)
    COMMA           reduce using rule 90 (boolean_value -> boolean .)


state 175

    (91) boolean_value -> other_value .

    POINTCOMMA      reduce using rule 91 (boolean_value -> other_value .)
    $end            reduce using rule 91 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 91 (boolean_value -> other_value .)
    COMMA           reduce using rule 91 (boolean_value -> other_value .)


state 176

    (134) other_value -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 134 (other_value -> variable .)
    $end            reduce using rule 134 (other_value -> variable .)
    RBRACKET        reduce using rule 134 (other_value -> variable .)
    COMMA           reduce using rule 134 (other_value -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132


state 177

    (135) other_value -> array_value .

    POINTCOMMA      reduce using rule 135 (other_value -> array_value .)
    $end            reduce using rule 135 (other_value -> array_value .)
    RBRACKET        reduce using rule 135 (other_value -> array_value .)
    COMMA           reduce using rule 135 (other_value -> array_value .)


state 178

    (137) other_value -> object_value .

    POINTCOMMA      reduce using rule 137 (other_value -> object_value .)
    $end            reduce using rule 137 (other_value -> object_value .)
    RBRACKET        reduce using rule 137 (other_value -> object_value .)
    COMMA           reduce using rule 137 (other_value -> object_value .)


state 179

    (41) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 41 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 41 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 41 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 180

    (50) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 50 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 50 (var_number -> declare_number EQUAL number_value .)


state 181

    (89) number_value -> expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 89 (number_value -> expression .)
    $end            reduce using rule 89 (number_value -> expression .)
    RBRACKET        reduce using rule 89 (number_value -> expression .)
    COMMA           reduce using rule 89 (number_value -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 182

    (37) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 37 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 37 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 37 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 183

    (56) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 56 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 56 (var_string -> declare_string EQUAL string_value .)


state 184

    (92) string_value -> string .

    POINTCOMMA      reduce using rule 92 (string_value -> string .)
    $end            reduce using rule 92 (string_value -> string .)
    RBRACKET        reduce using rule 92 (string_value -> string .)
    COMMA           reduce using rule 92 (string_value -> string .)


state 185

    (93) string_value -> other_value .

    POINTCOMMA      reduce using rule 93 (string_value -> other_value .)
    $end            reduce using rule 93 (string_value -> other_value .)
    RBRACKET        reduce using rule 93 (string_value -> other_value .)
    COMMA           reduce using rule 93 (string_value -> other_value .)


state 186

    (45) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 45 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 45 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 45 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 187

    (59) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 59 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 59 (var_enum -> declare_var_enum EQUAL enum_value .)


state 188

    (48) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 48 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 48 (var_null -> declare_any EQUAL NULL .)


state 189

    (49) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 49 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 49 (var_undefined -> declare_any EQUAL UNDEFINED .)


state 190

    (62) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 62 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 62 (declare_generic -> declare_any EQUAL assign_value .)


state 191

    (47) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 47 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 47 (declare_generic_array -> declare_any EQUAL list_types .)


state 192

    (74) assign_value -> expression .
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 74 (assign_value -> expression .)
    $end            reduce using rule 74 (assign_value -> expression .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 193

    (75) assign_value -> boolean .

    POINTCOMMA      reduce using rule 75 (assign_value -> boolean .)
    $end            reduce using rule 75 (assign_value -> boolean .)


state 194

    (76) assign_value -> string .

    POINTCOMMA      reduce using rule 76 (assign_value -> string .)
    $end            reduce using rule 76 (assign_value -> string .)


state 195

    (77) list_types -> list_number .

    POINTCOMMA      reduce using rule 77 (list_types -> list_number .)
    $end            reduce using rule 77 (list_types -> list_number .)


state 196

    (78) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 78 (list_types -> list_boolean .)
    $end            reduce using rule 78 (list_types -> list_boolean .)


state 197

    (79) list_types -> list_string .

    POINTCOMMA      reduce using rule 79 (list_types -> list_string .)
    $end            reduce using rule 79 (list_types -> list_string .)


state 198

    (80) list_number -> LBRACKET . numbers RBRACKET
    (83) list_boolean -> LBRACKET . booleans RBRACKET
    (86) list_string -> LBRACKET . strings RBRACKET
    (81) numbers -> . numbers COMMA number_value
    (82) numbers -> . number_value
    (84) booleans -> . booleans COMMA boolean_value
    (85) booleans -> . boolean_value
    (87) strings -> . strings COMMA string_value
    (88) strings -> . string_value
    (89) number_value -> . expression
    (90) boolean_value -> . boolean
    (91) boolean_value -> . other_value
    (92) string_value -> . string
    (93) string_value -> . other_value
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    VARIABLE        shift and go to state 61
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    OBJECTNAME      shift and go to state 47

    numbers                        shift and go to state 223
    booleans                       shift and go to state 224
    strings                        shift and go to state 225
    number_value                   shift and go to state 226
    boolean_value                  shift and go to state 227
    string_value                   shift and go to state 228
    expression                     shift and go to state 181
    boolean                        shift and go to state 174
    other_value                    shift and go to state 229
    string                         shift and go to state 184
    term                           shift and go to state 12
    variable                       shift and go to state 230
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101
    group                          shift and go to state 52

state 199

    (55) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 55 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 55 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 55 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 55 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 200

    (52) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 52 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 52 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 52 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 52 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 201

    (58) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 58 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 58 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 58 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 58 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 202

    (61) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 61 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 61 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 61 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 203

    (38) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (42) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (46) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 231


state 204

    (21) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (22) enums -> . enums_numeric
    (23) enums -> . enums_string
    (24) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (25) enums_numeric -> . enums_numeric_value
    (28) enums_string -> . enums_string COMMA enums_string_value
    (29) enums_string -> . enums_string_value
    (26) enums_numeric_value -> . object_name EQUAL number
    (27) enums_numeric_value -> . object_name
    (30) enums_string_value -> . object_name EQUAL string
    (160) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 47

    enums                          shift and go to state 232
    enums_numeric                  shift and go to state 233
    enums_string                   shift and go to state 234
    enums_numeric_value            shift and go to state 235
    enums_string_value             shift and go to state 236
    object_name                    shift and go to state 237

state 205

    (68) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 68 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 68 (assign_variable -> variable EQUAL assign_value .)


state 206

    (69) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 69 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 69 (assign_variable -> variable EQUAL list_types .)


state 207

    (142) array_value -> variable LBRACKET expression . RBRACKET
    (100) expression -> expression . PLUS term
    (101) expression -> expression . MINUS term

    RBRACKET        shift and go to state 238
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 208

    (140) object_value_form1 -> variable POINT variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 140 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 131


state 209

    (141) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 141 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 141 (object_value_form2 -> variable POINT array_value .)


state 210

    (70) assign_array -> array_value EQUAL assign_value .

    POINTCOMMA      reduce using rule 70 (assign_array -> array_value EQUAL assign_value .)
    $end            reduce using rule 70 (assign_array -> array_value EQUAL assign_value .)


state 211

    (71) assign_object_value -> object_value_form1 EQUAL assign_value .

    POINTCOMMA      reduce using rule 71 (assign_object_value -> object_value_form1 EQUAL assign_value .)
    $end            reduce using rule 71 (assign_object_value -> object_value_form1 EQUAL assign_value .)


state 212

    (72) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 72 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 72 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 213

    (73) assign_object_value -> object_value_form2 EQUAL assign_value .

    POINTCOMMA      reduce using rule 73 (assign_object_value -> object_value_form2 EQUAL assign_value .)
    $end            reduce using rule 73 (assign_object_value -> object_value_form2 EQUAL assign_value .)


state 214

    (143) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 143 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 143 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 143 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 143 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 143 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 143 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 143 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 143 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 143 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 143 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 143 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 143 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 143 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 143 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 143 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 143 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 143 (enum_value -> object_name POINT object_name .)


state 215

    (35) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 35 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 35 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 216

    (80) list_number -> LBRACKET . numbers RBRACKET
    (81) numbers -> . numbers COMMA number_value
    (82) numbers -> . number_value
    (89) number_value -> . expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    numbers                        shift and go to state 223
    number_value                   shift and go to state 226
    expression                     shift and go to state 181
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 217

    (39) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 39 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 39 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 218

    (83) list_boolean -> LBRACKET . booleans RBRACKET
    (84) booleans -> . booleans COMMA boolean_value
    (85) booleans -> . boolean_value
    (90) boolean_value -> . boolean
    (91) boolean_value -> . other_value
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    booleans                       shift and go to state 224
    boolean_value                  shift and go to state 227
    boolean                        shift and go to state 174
    other_value                    shift and go to state 175
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 219

    (43) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 43 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 43 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 220

    (86) list_string -> LBRACKET . strings RBRACKET
    (87) strings -> . strings COMMA string_value
    (88) strings -> . string_value
    (92) string_value -> . string
    (93) string_value -> . other_value
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    strings                        shift and go to state 225
    string_value                   shift and go to state 228
    string                         shift and go to state 184
    other_value                    shift and go to state 185
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 221

    (112) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 112 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 112 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 222

    (96) chain -> termS PLUS . value
    (98) value -> . expression
    (99) value -> . string
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    value                          shift and go to state 239
    expression                     shift and go to state 172
    string                         shift and go to state 240
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 223

    (80) list_number -> LBRACKET numbers . RBRACKET
    (81) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 241
    COMMA           shift and go to state 242


state 224

    (83) list_boolean -> LBRACKET booleans . RBRACKET
    (84) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 243
    COMMA           shift and go to state 244


state 225

    (86) list_string -> LBRACKET strings . RBRACKET
    (87) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 245
    COMMA           shift and go to state 246


state 226

    (82) numbers -> number_value .

    RBRACKET        reduce using rule 82 (numbers -> number_value .)
    COMMA           reduce using rule 82 (numbers -> number_value .)


state 227

    (85) booleans -> boolean_value .

    RBRACKET        reduce using rule 85 (booleans -> boolean_value .)
    COMMA           reduce using rule 85 (booleans -> boolean_value .)


state 228

    (88) strings -> string_value .

    RBRACKET        reduce using rule 88 (strings -> string_value .)
    COMMA           reduce using rule 88 (strings -> string_value .)


state 229

    (91) boolean_value -> other_value .
    (93) string_value -> other_value .
    (132) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 91 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 91 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 91 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 91 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 91 (boolean_value -> other_value .)
    COMMA           reduce using rule 91 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 132 (term -> other_value .)
    DIVIDE          reduce using rule 132 (term -> other_value .)
    PLUS            reduce using rule 132 (term -> other_value .)
    MINUS           reduce using rule 132 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 93 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 93 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 132 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 132 (term -> other_value .) ]


state 230

    (134) other_value -> variable .
    (142) array_value -> variable . LBRACKET expression RBRACKET
    (140) object_value_form1 -> variable . POINT variable
    (141) object_value_form2 -> variable . POINT array_value
    (127) group -> variable .

    RBRACKET        reduce using rule 134 (other_value -> variable .)
    COMMA           reduce using rule 134 (other_value -> variable .)
    PRODUCT         reduce using rule 134 (other_value -> variable .)
    DIVIDE          reduce using rule 134 (other_value -> variable .)
    PLUS            reduce using rule 134 (other_value -> variable .)
    MINUS           reduce using rule 134 (other_value -> variable .)
    LBRACKET        shift and go to state 131
    POINT           shift and go to state 132
    INCREMENT       reduce using rule 127 (group -> variable .)
    DECREMENT       reduce using rule 127 (group -> variable .)


state 231

    (38) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (42) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (46) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 247
    VARBOOLEAN      shift and go to state 248
    VARSTRING       shift and go to state 249


state 232

    (21) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 250


state 233

    (22) enums -> enums_numeric .
    (24) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 22 (enums -> enums_numeric .)
    COMMA           shift and go to state 251


state 234

    (23) enums -> enums_string .
    (28) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 23 (enums -> enums_string .)
    COMMA           shift and go to state 252


state 235

    (25) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 25 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 25 (enums_numeric -> enums_numeric_value .)


state 236

    (29) enums_string -> enums_string_value .

    COMMA           reduce using rule 29 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 29 (enums_string -> enums_string_value .)


state 237

    (26) enums_numeric_value -> object_name . EQUAL number
    (27) enums_numeric_value -> object_name .
    (30) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 253
    COMMA           reduce using rule 27 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 27 (enums_numeric_value -> object_name .)


state 238

    (142) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 142 (array_value -> variable LBRACKET expression RBRACKET .)


state 239

    (96) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 96 (chain -> termS PLUS value .)
    $end            reduce using rule 96 (chain -> termS PLUS value .)
    PLUS            reduce using rule 96 (chain -> termS PLUS value .)


state 240

    (99) value -> string .

    POINTCOMMA      reduce using rule 99 (value -> string .)
    $end            reduce using rule 99 (value -> string .)
    PLUS            reduce using rule 99 (value -> string .)


state 241

    (80) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 80 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 80 (list_number -> LBRACKET numbers RBRACKET .)


state 242

    (81) numbers -> numbers COMMA . number_value
    (89) number_value -> . expression
    (100) expression -> . expression PLUS term
    (101) expression -> . expression MINUS term
    (102) expression -> . term
    (103) term -> . term PRODUCT term
    (104) term -> . term DIVIDE term
    (105) term -> . term1 INCREMENT
    (106) term -> . INCREMENT term1
    (107) term -> . term1 DECREMENT
    (108) term -> . DECREMENT term1
    (130) term -> . number
    (131) term -> . factor_expr
    (132) term -> . other_value
    (124) term1 -> . LPAREN group RPAREN
    (125) term1 -> . group
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (133) factor_expr -> . LPAREN expression RPAREN
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (126) group -> . number
    (127) group -> . variable
    (128) group -> . array_value
    (129) group -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 30
    DECREMENT       shift and go to state 31
    LPAREN          shift and go to state 102
    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    number_value                   shift and go to state 254
    expression                     shift and go to state 181
    term                           shift and go to state 12
    term1                          shift and go to state 29
    number                         shift and go to state 32
    factor_expr                    shift and go to state 33
    other_value                    shift and go to state 34
    group                          shift and go to state 52
    variable                       shift and go to state 98
    array_value                    shift and go to state 99
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 55
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 243

    (83) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 83 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 83 (list_boolean -> LBRACKET booleans RBRACKET .)


state 244

    (84) booleans -> booleans COMMA . boolean_value
    (90) boolean_value -> . boolean
    (91) boolean_value -> . other_value
    (157) boolean -> . TRUE
    (158) boolean -> . FALSE
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 96
    FALSE           shift and go to state 97
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    boolean_value                  shift and go to state 255
    boolean                        shift and go to state 174
    other_value                    shift and go to state 175
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 245

    (86) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 86 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 86 (list_string -> LBRACKET strings RBRACKET .)


state 246

    (87) strings -> strings COMMA . string_value
    (92) string_value -> . string
    (93) string_value -> . other_value
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING
    (134) other_value -> . variable
    (135) other_value -> . array_value
    (136) other_value -> . enum_value
    (137) other_value -> . object_value
    (159) variable -> . VARIABLE
    (142) array_value -> . variable LBRACKET expression RBRACKET
    (143) enum_value -> . object_name POINT object_name
    (138) object_value -> . object_value_form1
    (139) object_value -> . object_value_form2
    (160) object_name -> . OBJECTNAME
    (140) object_value_form1 -> . variable POINT variable
    (141) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 47

    string_value                   shift and go to state 256
    string                         shift and go to state 184
    other_value                    shift and go to state 185
    variable                       shift and go to state 176
    array_value                    shift and go to state 177
    enum_value                     shift and go to state 40
    object_value                   shift and go to state 178
    object_name                    shift and go to state 59
    object_value_form1             shift and go to state 100
    object_value_form2             shift and go to state 101

state 247

    (38) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 257


state 248

    (42) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 258


state 249

    (46) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 259


state 250

    (21) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 21 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 21 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 251

    (24) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (26) enums_numeric_value -> . object_name EQUAL number
    (27) enums_numeric_value -> . object_name
    (160) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 47

    enums_numeric_value            shift and go to state 260
    object_name                    shift and go to state 261

state 252

    (28) enums_string -> enums_string COMMA . enums_string_value
    (30) enums_string_value -> . object_name EQUAL string
    (160) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 47

    enums_string_value             shift and go to state 262
    object_name                    shift and go to state 263

state 253

    (26) enums_numeric_value -> object_name EQUAL . number
    (30) enums_string_value -> object_name EQUAL . string
    (152) number -> . NUMBER
    (153) number -> . FLOAT
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54
    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58

    number                         shift and go to state 264
    string                         shift and go to state 265

state 254

    (81) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 81 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 81 (numbers -> numbers COMMA number_value .)


state 255

    (84) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 84 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 84 (booleans -> booleans COMMA boolean_value .)


state 256

    (87) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 87 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 87 (strings -> strings COMMA string_value .)


state 257

    (38) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 38 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 38 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 38 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 258

    (42) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 42 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 42 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 42 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 259

    (46) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 46 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 46 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 46 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 260

    (24) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 24 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 24 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 261

    (26) enums_numeric_value -> object_name . EQUAL number
    (27) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 266
    COMMA           reduce using rule 27 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 27 (enums_numeric_value -> object_name .)


state 262

    (28) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 28 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 28 (enums_string -> enums_string COMMA enums_string_value .)


state 263

    (30) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 267


state 264

    (26) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 26 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 26 (enums_numeric_value -> object_name EQUAL number .)


state 265

    (30) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 30 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 30 (enums_string_value -> object_name EQUAL string .)


state 266

    (26) enums_numeric_value -> object_name EQUAL . number
    (152) number -> . NUMBER
    (153) number -> . FLOAT

    NUMBER          shift and go to state 53
    FLOAT           shift and go to state 54

    number                         shift and go to state 264

state 267

    (30) enums_string_value -> object_name EQUAL . string
    (154) string -> . NORMSTRING1
    (155) string -> . NORMSTRING2
    (156) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 56
    NORMSTRING2     shift and go to state 57
    MULTISTRING     shift and go to state 58

    string                         shift and go to state 265
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 74 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 74 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 74 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 75 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 75 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 75 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 75 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 75 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 151 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 172 resolved as shift
WARNING: reduce/reduce conflict in state 106 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 106
WARNING: reduce/reduce conflict in state 107 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 107
WARNING: reduce/reduce conflict in state 108 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 108
WARNING: reduce/reduce conflict in state 109 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 109
WARNING: reduce/reduce conflict in state 229 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 229
WARNING: reduce/reduce conflict in state 229 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 229

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ANY
    COMMENT
    DOLLAR
    ELIF
    ELSE
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    FUNMATH
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    MULTICOMMENT
    POW
    PRINT
    RCOMILLA
    ROUND
    SPECIAL
    TYPEOF
    VAROBJECT
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    statement_value -> exp_set
Rule 13    statement_value -> funcionif
Rule 14    declare -> var_boolean
Rule 15    declare -> var_number
Rule 16    declare -> var_string
Rule 17    declare -> var_enum
Rule 18    declare -> var_null
Rule 19    declare -> var_undefined
Rule 20    declare -> declare_array
Rule 21    declare -> declare_enum
Rule 22    declare -> declare_generic
Rule 23    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 24    enums -> enums_numeric
Rule 25    enums -> enums_string
Rule 26    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 27    enums_numeric -> enums_numeric_value
Rule 28    enums_numeric_value -> object_name EQUAL number
Rule 29    enums_numeric_value -> object_name
Rule 30    enums_string -> enums_string COMMA enums_string_value
Rule 31    enums_string -> enums_string_value
Rule 32    enums_string_value -> object_name EQUAL string
Rule 33    funcionif -> IF LPAREN formIf RPAREN LKEY
Rule 34    funcionfor -> FOR LPAREN declare_any EQUAL NUMBER POINTCOMMA operador POINTCOMMA RPAREN LKEY
Rule 35    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN POINTCOMMA
Rule 36    declare_array -> declare_array_main_number
Rule 37    declare_array -> declare_array_main_boolean
Rule 38    declare_array -> declare_array_main_string
Rule 39    declare_array -> declare_generic_array
Rule 40    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 41    declare_array_main_number -> declare_array_number
Rule 42    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 43    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 44    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 45    declare_array_main_boolean -> declare_array_boolean
Rule 46    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 47    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 48    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 49    declare_array_main_string -> declare_array_string
Rule 50    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 51    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 52    declare_generic_array -> declare_any EQUAL list_types
Rule 53    var_null -> declare_any EQUAL NULL
Rule 54    var_undefined -> declare_any EQUAL UNDEFINED
Rule 55    var_number -> declare_number EQUAL number_value
Rule 56    var_number -> declare_number
Rule 57    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 58    var_boolean -> declare_boolean EQUAL boolean_value
Rule 59    var_boolean -> declare_boolean
Rule 60    var_boolean -> declare_boolean EQUAL
Rule 61    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 62    var_string -> declare_string EQUAL string_value
Rule 63    var_string -> declare_string
Rule 64    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 65    var_enum -> declare_var_enum EQUAL enum_value
Rule 66    var_enum -> declare_var_enum
Rule 67    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 68    declare_generic -> declare_any EQUAL assign_value
Rule 69    declare_generic -> declare_any
Rule 70    declare_any -> prefix VARIABLE
Rule 71    assign -> assign_variable
Rule 72    assign -> assign_array
Rule 73    assign -> assign_object_value
Rule 74    assign_variable -> variable EQUAL assign_value
Rule 75    assign_variable -> variable EQUAL list_types
Rule 76    assign_array -> array_value EQUAL assign_value
Rule 77    assign_object_value -> object_value_form1 EQUAL assign_value
Rule 78    assign_object_value -> object_value_form1 EQUAL list_types
Rule 79    assign_object_value -> object_value_form2 EQUAL assign_value
Rule 80    assign_value -> expression
Rule 81    assign_value -> boolean
Rule 82    assign_value -> string
Rule 83    list_types -> list_number
Rule 84    list_types -> list_boolean
Rule 85    list_types -> list_string
Rule 86    list_number -> LBRACKET numbers RBRACKET
Rule 87    numbers -> numbers COMMA number_value
Rule 88    numbers -> number_value
Rule 89    list_boolean -> LBRACKET booleans RBRACKET
Rule 90    booleans -> booleans COMMA boolean_value
Rule 91    booleans -> boolean_value
Rule 92    list_string -> LBRACKET strings RBRACKET
Rule 93    strings -> strings COMMA string_value
Rule 94    strings -> string_value
Rule 95    number_value -> expression
Rule 96    boolean_value -> boolean
Rule 97    boolean_value -> other_value
Rule 98    string_value -> string
Rule 99    string_value -> other_value
Rule 100   concatenate -> termS
Rule 101   termS -> string PLUS chain
Rule 102   chain -> termS PLUS value
Rule 103   chain -> value
Rule 104   value -> expression
Rule 105   value -> string
Rule 106   expression -> expression PLUS term
Rule 107   expression -> expression MINUS term
Rule 108   expression -> term
Rule 109   term -> term PRODUCT term
Rule 110   term -> term DIVIDE term
Rule 111   term -> term1 INCREMENT
Rule 112   term -> INCREMENT term1
Rule 113   term -> term1 DECREMENT
Rule 114   term -> DECREMENT term1
Rule 115   expNeg -> NEGATION expOpLog
Rule 116   expNeg -> NEGATION factor_exprlog
Rule 117   expNeg -> NEGATION boolean
Rule 118   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 119   expEq -> expCond EQUALTO expCond
Rule 120   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 121   expEq -> expression EQUALTO expression
Rule 122   expNotEq -> expCond NOTEQUALTO expCond
Rule 123   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 124   expNotEq -> expression NOTEQUALTO expression
Rule 125   expOpLog -> expCond oplogico expCond
Rule 126   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 127   expOpLog -> expression oplogico expression
Rule 128   factor_exprlog -> LPAREN expCond RPAREN
Rule 129   expCond -> expression operador expression
Rule 130   expCond -> LPAREN expression operador expression RPAREN
Rule 131   term1 -> LPAREN group RPAREN
Rule 132   term1 -> group
Rule 133   group -> number
Rule 134   group -> variable
Rule 135   group -> array_value
Rule 136   group -> object_value
Rule 137   term -> number
Rule 138   term -> factor_expr
Rule 139   term -> other_value
Rule 140   factor_expr -> LPAREN expression RPAREN
Rule 141   other_value -> variable
Rule 142   other_value -> array_value
Rule 143   other_value -> enum_value
Rule 144   other_value -> object_value
Rule 145   formIf -> expCond
Rule 146   formIf -> expOpLog
Rule 147   object_value -> object_value_form1
Rule 148   object_value -> object_value_form2
Rule 149   object_value_form1 -> variable POINT variable
Rule 150   object_value_form2 -> variable POINT array_value
Rule 151   array_value -> variable LBRACKET expression RBRACKET
Rule 152   enum_value -> object_name POINT object_name
Rule 153   prefix -> LET
Rule 154   prefix -> VAR
Rule 155   prefix -> STATIC
Rule 156   prefix -> CONST
Rule 157   typedate -> VARNUMBER
Rule 158   typedate -> VARSTRING
Rule 159   typedate -> VARBOOLEAN
Rule 160   typedate -> ENUM
Rule 161   number -> NUMBER
Rule 162   number -> FLOAT
Rule 163   string -> NORMSTRING1
Rule 164   string -> NORMSTRING2
Rule 165   string -> MULTISTRING
Rule 166   boolean -> TRUE
Rule 167   boolean -> FALSE
Rule 168   variable -> VARIABLE
Rule 169   object_name -> OBJECTNAME
Rule 170   operador -> GREATER
Rule 171   operador -> LESS
Rule 172   operador -> GREATEREQUAL
Rule 173   operador -> LESSEQUAL
Rule 174   operador -> EQUALTO
Rule 175   operador -> NOTEQUALTO
Rule 176   oplogico -> AND
Rule 177   oplogico -> OR

Terminals, with rules where they appear

ABS                  : 
AND                  : 176
ANY                  : 
ARRAY                : 43 47 51
COMMA                : 26 30 87 90 93
COMMENT              : 
CONST                : 156
DECREMENT            : 113 114
DIVIDE               : 110
DOLLAR               : 
ELIF                 : 
ELSE                 : 
ENUM                 : 23 160
EQUAL                : 28 32 34 35 40 44 48 52 53 54 55 58 60 62 65 68 74 75 76 77 78 79
EQUALTO              : 119 120 121 174
FALSE                : 167
FLOAT                : 162
FOR                  : 34
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 
GREATER              : 43 47 51 170
GREATEREQUAL         : 172
IF                   : 33
IN                   : 
INCREMENT            : 111 112
INSTANCEOF           : 
LBRACKET             : 42 46 50 86 89 92 151
LCOMILLA             : 
LESS                 : 43 47 51 171
LESSEQUAL            : 173
LET                  : 153
LKEY                 : 23 33 34
LPAREN               : 33 34 35 118 128 130 131 140
MINUS                : 107
MOD                  : 
MULTICOMMENT         : 
MULTISTRING          : 165
NEGATION             : 115 116 117 118
NEW                  : 35
NORMSTRING1          : 163
NORMSTRING2          : 164
NOTEQUALTO           : 122 123 124 175
NULL                 : 53
NUMBER               : 34 161
OBJECTNAME           : 23 169
OR                   : 177
PLUS                 : 101 102 106
POINT                : 149 150 152
POINTCOMMA           : 2 34 34 35
POW                  : 
PRINT                : 
PRODUCT              : 109
RBRACKET             : 42 46 50 86 89 92 151
RCOMILLA             : 
RKEY                 : 23
ROUND                : 
RPAREN               : 33 34 35 118 128 130 131 140
SET                  : 35
SPECIAL              : 
STATIC               : 155
TRUE                 : 166
TWOPOINTS            : 43 47 51 57 61 64 67
TYPEOF               : 
UNDEFINED            : 54
VAR                  : 154
VARBOOLEAN           : 47 61 159
VARIABLE             : 70 168
VARNUMBER            : 43 57 157
VAROBJECT            : 
VARSTRING            : 51 64 158
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_value          : 76 135 142 150
assign               : 6
assign_array         : 72
assign_object_value  : 73
assign_value         : 68 74 76 77 79
assign_variable      : 71
boolean              : 81 96 117
boolean_value        : 58 90 91
booleans             : 89 90
chain                : 101
concatenate          : 4
declare              : 5
declare_any          : 34 35 43 47 51 52 53 54 57 61 64 67 68 69
declare_array        : 20
declare_array_boolean : 44 45
declare_array_main_boolean : 37
declare_array_main_number : 36
declare_array_main_string : 38
declare_array_number : 40 41
declare_array_string : 48 49
declare_boolean      : 46 58 59 60
declare_enum         : 21
declare_generic      : 22
declare_generic_array : 39
declare_number       : 42 55 56
declare_string       : 50 62 63
declare_var_enum     : 65 66
enum_value           : 65 143
enums                : 23
enums_numeric        : 24 26
enums_numeric_value  : 26 27
enums_string         : 25 30
enums_string_value   : 30 31
expCond              : 7 119 119 122 122 125 125 128 145
expEq                : 10
expNeg               : 9
expNotEq             : 11
expOpLog             : 8 115 118 146
exp_set              : 12
expression           : 3 80 95 104 106 107 121 121 124 124 127 127 129 129 130 130 140 151
factor_expr          : 138
factor_exprlog       : 116 120 120 123 123 126 126
formIf               : 33
funcionfor           : 
funcionif            : 13
group                : 131 132
list_boolean         : 44 84
list_number          : 40 83
list_string          : 48 85
list_types           : 52 75 78
number               : 28 133 137
number_value         : 55 87 88
numbers              : 86 87
object_name          : 28 29 32 67 152 152
object_value         : 136 144
object_value_form1   : 77 78 147
object_value_form2   : 79 148
operador             : 34 129 130
oplogico             : 125 126 127
other_value          : 97 99 139
prefix               : 70
statement            : 0
statement_value      : 1 2
string               : 32 82 98 101 105
string_value         : 62 93 94
strings              : 92 93
term                 : 106 107 108 109 109 110 110
term1                : 111 112 113 114
termS                : 100 102
typedate             : 
value                : 102 103
var_boolean          : 14
var_enum             : 17
var_null             : 18
var_number           : 15
var_string           : 16
var_undefined        : 19
variable             : 74 75 134 141 149 149 150 151

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . funcionif
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (100) concatenate -> . termS
    (14) declare -> . var_boolean
    (15) declare -> . var_number
    (16) declare -> . var_string
    (17) declare -> . var_enum
    (18) declare -> . var_null
    (19) declare -> . var_undefined
    (20) declare -> . declare_array
    (21) declare -> . declare_enum
    (22) declare -> . declare_generic
    (71) assign -> . assign_variable
    (72) assign -> . assign_array
    (73) assign -> . assign_object_value
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (125) expOpLog -> . expCond oplogico expCond
    (126) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (127) expOpLog -> . expression oplogico expression
    (115) expNeg -> . NEGATION expOpLog
    (116) expNeg -> . NEGATION factor_exprlog
    (117) expNeg -> . NEGATION boolean
    (118) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (119) expEq -> . expCond EQUALTO expCond
    (120) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (121) expEq -> . expression EQUALTO expression
    (122) expNotEq -> . expCond NOTEQUALTO expCond
    (123) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (124) expNotEq -> . expression NOTEQUALTO expression
    (35) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN POINTCOMMA
    (33) funcionif -> . IF LPAREN formIf RPAREN LKEY
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (101) termS -> . string PLUS chain
    (58) var_boolean -> . declare_boolean EQUAL boolean_value
    (59) var_boolean -> . declare_boolean
    (60) var_boolean -> . declare_boolean EQUAL
    (55) var_number -> . declare_number EQUAL number_value
    (56) var_number -> . declare_number
    (62) var_string -> . declare_string EQUAL string_value
    (63) var_string -> . declare_string
    (65) var_enum -> . declare_var_enum EQUAL enum_value
    (66) var_enum -> . declare_var_enum
    (53) var_null -> . declare_any EQUAL NULL
    (54) var_undefined -> . declare_any EQUAL UNDEFINED
    (36) declare_array -> . declare_array_main_number
    (37) declare_array -> . declare_array_main_boolean
    (38) declare_array -> . declare_array_main_string
    (39) declare_array -> . declare_generic_array
    (23) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (68) declare_generic -> . declare_any EQUAL assign_value
    (69) declare_generic -> . declare_any
    (74) assign_variable -> . variable EQUAL assign_value
    (75) assign_variable -> . variable EQUAL list_types
    (76) assign_array -> . array_value EQUAL assign_value
    (77) assign_object_value -> . object_value_form1 EQUAL assign_value
    (78) assign_object_value -> . object_value_form1 EQUAL list_types
    (79) assign_object_value -> . object_value_form2 EQUAL assign_value
    (128) factor_exprlog -> . LPAREN expCond RPAREN
    (70) declare_any -> . prefix VARIABLE
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (61) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (57) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (64) declare_string -> . declare_any TWOPOINTS VARSTRING
    (67) declare_var_enum -> . declare_any TWOPOINTS object_name
    (40) declare_array_main_number -> . declare_array_number EQUAL list_number
    (41) declare_array_main_number -> . declare_array_number
    (44) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (45) declare_array_main_boolean -> . declare_array_boolean
    (48) declare_array_main_string -> . declare_array_string EQUAL list_string
    (49) declare_array_main_string -> . declare_array_string
    (52) declare_generic_array -> . declare_any EQUAL list_types
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (153) prefix -> . LET
    (154) prefix -> . VAR
    (155) prefix -> . STATIC
    (156) prefix -> . CONST
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (42) declare_array_number -> . declare_number LBRACKET RBRACKET
    (43) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (46) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (47) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (50) declare_array_string -> . declare_string LBRACKET RBRACKET
    (51) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (169) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    IF              shift and go to state 32
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    ENUM            shift and go to state 49
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    LET             shift and go to state 68
    VAR             shift and go to state 69
    STATIC          shift and go to state 70
    CONST           shift and go to state 71
    OBJECTNAME      shift and go to state 50

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    funcionif                      shift and go to state 13
    term                           shift and go to state 14
    termS                          shift and go to state 15
    var_boolean                    shift and go to state 16
    var_number                     shift and go to state 17
    var_string                     shift and go to state 18
    var_enum                       shift and go to state 19
    var_null                       shift and go to state 20
    var_undefined                  shift and go to state 21
    declare_array                  shift and go to state 22
    declare_enum                   shift and go to state 23
    declare_generic                shift and go to state 24
    assign_variable                shift and go to state 25
    assign_array                   shift and go to state 26
    assign_object_value            shift and go to state 27
    factor_exprlog                 shift and go to state 29
    declare_any                    shift and go to state 31
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    string                         shift and go to state 39
    declare_boolean                shift and go to state 40
    declare_number                 shift and go to state 41
    declare_string                 shift and go to state 42
    declare_var_enum               shift and go to state 43
    enum_value                     shift and go to state 44
    declare_array_main_number      shift and go to state 45
    declare_array_main_boolean     shift and go to state 46
    declare_array_main_string      shift and go to state 47
    declare_generic_array          shift and go to state 48
    variable                       shift and go to state 51
    array_value                    shift and go to state 52
    object_value_form1             shift and go to state 53
    object_value_form2             shift and go to state 54
    prefix                         shift and go to state 55
    group                          shift and go to state 57
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    declare_array_number           shift and go to state 65
    declare_array_boolean          shift and go to state 66
    declare_array_string           shift and go to state 67

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 72


state 3

    (3) statement_value -> expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (129) expCond -> expression . operador expression
    (127) expOpLog -> expression . oplogico expression
    (121) expEq -> expression . EQUALTO expression
    (124) expNotEq -> expression . NOTEQUALTO expression
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    EQUALTO         shift and go to state 77
    NOTEQUALTO      shift and go to state 78
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (125) expOpLog -> expCond . oplogico expCond
    (119) expEq -> expCond . EQUALTO expCond
    (122) expNotEq -> expCond . NOTEQUALTO expCond
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 86
    NOTEQUALTO      shift and go to state 87
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (12) statement_value -> exp_set .

    POINTCOMMA      reduce using rule 12 (statement_value -> exp_set .)
    $end            reduce using rule 12 (statement_value -> exp_set .)


state 13

    (13) statement_value -> funcionif .

    POINTCOMMA      reduce using rule 13 (statement_value -> funcionif .)
    $end            reduce using rule 13 (statement_value -> funcionif .)


state 14

    (108) expression -> term .
    (109) term -> term . PRODUCT term
    (110) term -> term . DIVIDE term

    PLUS            reduce using rule 108 (expression -> term .)
    MINUS           reduce using rule 108 (expression -> term .)
    EQUALTO         reduce using rule 108 (expression -> term .)
    NOTEQUALTO      reduce using rule 108 (expression -> term .)
    GREATER         reduce using rule 108 (expression -> term .)
    LESS            reduce using rule 108 (expression -> term .)
    GREATEREQUAL    reduce using rule 108 (expression -> term .)
    LESSEQUAL       reduce using rule 108 (expression -> term .)
    AND             reduce using rule 108 (expression -> term .)
    OR              reduce using rule 108 (expression -> term .)
    POINTCOMMA      reduce using rule 108 (expression -> term .)
    $end            reduce using rule 108 (expression -> term .)
    RPAREN          reduce using rule 108 (expression -> term .)
    RBRACKET        reduce using rule 108 (expression -> term .)
    COMMA           reduce using rule 108 (expression -> term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 15

    (100) concatenate -> termS .

    POINTCOMMA      reduce using rule 100 (concatenate -> termS .)
    $end            reduce using rule 100 (concatenate -> termS .)


state 16

    (14) declare -> var_boolean .

    POINTCOMMA      reduce using rule 14 (declare -> var_boolean .)
    $end            reduce using rule 14 (declare -> var_boolean .)


state 17

    (15) declare -> var_number .

    POINTCOMMA      reduce using rule 15 (declare -> var_number .)
    $end            reduce using rule 15 (declare -> var_number .)


state 18

    (16) declare -> var_string .

    POINTCOMMA      reduce using rule 16 (declare -> var_string .)
    $end            reduce using rule 16 (declare -> var_string .)


state 19

    (17) declare -> var_enum .

    POINTCOMMA      reduce using rule 17 (declare -> var_enum .)
    $end            reduce using rule 17 (declare -> var_enum .)


state 20

    (18) declare -> var_null .

    POINTCOMMA      reduce using rule 18 (declare -> var_null .)
    $end            reduce using rule 18 (declare -> var_null .)


state 21

    (19) declare -> var_undefined .

    POINTCOMMA      reduce using rule 19 (declare -> var_undefined .)
    $end            reduce using rule 19 (declare -> var_undefined .)


state 22

    (20) declare -> declare_array .

    POINTCOMMA      reduce using rule 20 (declare -> declare_array .)
    $end            reduce using rule 20 (declare -> declare_array .)


state 23

    (21) declare -> declare_enum .

    POINTCOMMA      reduce using rule 21 (declare -> declare_enum .)
    $end            reduce using rule 21 (declare -> declare_enum .)


state 24

    (22) declare -> declare_generic .

    POINTCOMMA      reduce using rule 22 (declare -> declare_generic .)
    $end            reduce using rule 22 (declare -> declare_generic .)


state 25

    (71) assign -> assign_variable .

    POINTCOMMA      reduce using rule 71 (assign -> assign_variable .)
    $end            reduce using rule 71 (assign -> assign_variable .)


state 26

    (72) assign -> assign_array .

    POINTCOMMA      reduce using rule 72 (assign -> assign_array .)
    $end            reduce using rule 72 (assign -> assign_array .)


state 27

    (73) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 73 (assign -> assign_object_value .)
    $end            reduce using rule 73 (assign -> assign_object_value .)


state 28

    (130) expCond -> LPAREN . expression operador expression RPAREN
    (128) factor_exprlog -> LPAREN . expCond RPAREN
    (131) term1 -> LPAREN . group RPAREN
    (140) factor_expr -> LPAREN . expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (152) enum_value -> . object_name POINT object_name
    (169) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 91
    expCond                        shift and go to state 92
    group                          shift and go to state 93
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 29

    (126) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (120) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (123) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    EQUALTO         shift and go to state 101
    NOTEQUALTO      shift and go to state 102
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 30

    (115) expNeg -> NEGATION . expOpLog
    (116) expNeg -> NEGATION . factor_exprlog
    (117) expNeg -> NEGATION . boolean
    (118) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (125) expOpLog -> . expCond oplogico expCond
    (126) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (127) expOpLog -> . expression oplogico expression
    (128) factor_exprlog -> . LPAREN expCond RPAREN
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 106
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expOpLog                       shift and go to state 103
    factor_exprlog                 shift and go to state 104
    boolean                        shift and go to state 105
    expCond                        shift and go to state 107
    expression                     shift and go to state 108
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 31

    (35) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN POINTCOMMA
    (53) var_null -> declare_any . EQUAL NULL
    (54) var_undefined -> declare_any . EQUAL UNDEFINED
    (68) declare_generic -> declare_any . EQUAL assign_value
    (69) declare_generic -> declare_any .
    (61) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (57) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (64) declare_string -> declare_any . TWOPOINTS VARSTRING
    (67) declare_var_enum -> declare_any . TWOPOINTS object_name
    (52) declare_generic_array -> declare_any . EQUAL list_types
    (43) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 113
    POINTCOMMA      reduce using rule 69 (declare_generic -> declare_any .)
    $end            reduce using rule 69 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 114


state 32

    (33) funcionif -> IF . LPAREN formIf RPAREN LKEY

    LPAREN          shift and go to state 115


state 33

    (111) term -> term1 . INCREMENT
    (113) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 116
    DECREMENT       shift and go to state 117


state 34

    (112) term -> INCREMENT . term1
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    term1                          shift and go to state 118
    group                          shift and go to state 57
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 35

    (114) term -> DECREMENT . term1
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    term1                          shift and go to state 124
    group                          shift and go to state 57
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 36

    (137) term -> number .
    (133) group -> number .

    PRODUCT         reduce using rule 137 (term -> number .)
    DIVIDE          reduce using rule 137 (term -> number .)
    PLUS            reduce using rule 137 (term -> number .)
    MINUS           reduce using rule 137 (term -> number .)
    EQUALTO         reduce using rule 137 (term -> number .)
    NOTEQUALTO      reduce using rule 137 (term -> number .)
    GREATER         reduce using rule 137 (term -> number .)
    LESS            reduce using rule 137 (term -> number .)
    GREATEREQUAL    reduce using rule 137 (term -> number .)
    LESSEQUAL       reduce using rule 137 (term -> number .)
    AND             reduce using rule 137 (term -> number .)
    OR              reduce using rule 137 (term -> number .)
    POINTCOMMA      reduce using rule 137 (term -> number .)
    $end            reduce using rule 137 (term -> number .)
    RPAREN          reduce using rule 137 (term -> number .)
    RBRACKET        reduce using rule 137 (term -> number .)
    COMMA           reduce using rule 137 (term -> number .)
    INCREMENT       reduce using rule 133 (group -> number .)
    DECREMENT       reduce using rule 133 (group -> number .)


state 37

    (138) term -> factor_expr .

    PRODUCT         reduce using rule 138 (term -> factor_expr .)
    DIVIDE          reduce using rule 138 (term -> factor_expr .)
    PLUS            reduce using rule 138 (term -> factor_expr .)
    MINUS           reduce using rule 138 (term -> factor_expr .)
    EQUALTO         reduce using rule 138 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 138 (term -> factor_expr .)
    GREATER         reduce using rule 138 (term -> factor_expr .)
    LESS            reduce using rule 138 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 138 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 138 (term -> factor_expr .)
    AND             reduce using rule 138 (term -> factor_expr .)
    OR              reduce using rule 138 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 138 (term -> factor_expr .)
    $end            reduce using rule 138 (term -> factor_expr .)
    RPAREN          reduce using rule 138 (term -> factor_expr .)
    RBRACKET        reduce using rule 138 (term -> factor_expr .)
    COMMA           reduce using rule 138 (term -> factor_expr .)


state 38

    (139) term -> other_value .

    PRODUCT         reduce using rule 139 (term -> other_value .)
    DIVIDE          reduce using rule 139 (term -> other_value .)
    PLUS            reduce using rule 139 (term -> other_value .)
    MINUS           reduce using rule 139 (term -> other_value .)
    EQUALTO         reduce using rule 139 (term -> other_value .)
    NOTEQUALTO      reduce using rule 139 (term -> other_value .)
    GREATER         reduce using rule 139 (term -> other_value .)
    LESS            reduce using rule 139 (term -> other_value .)
    GREATEREQUAL    reduce using rule 139 (term -> other_value .)
    LESSEQUAL       reduce using rule 139 (term -> other_value .)
    AND             reduce using rule 139 (term -> other_value .)
    OR              reduce using rule 139 (term -> other_value .)
    POINTCOMMA      reduce using rule 139 (term -> other_value .)
    $end            reduce using rule 139 (term -> other_value .)
    RPAREN          reduce using rule 139 (term -> other_value .)
    RBRACKET        reduce using rule 139 (term -> other_value .)
    COMMA           reduce using rule 139 (term -> other_value .)


state 39

    (101) termS -> string . PLUS chain

    PLUS            shift and go to state 125


state 40

    (58) var_boolean -> declare_boolean . EQUAL boolean_value
    (59) var_boolean -> declare_boolean .
    (60) var_boolean -> declare_boolean . EQUAL
    (46) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 126
    POINTCOMMA      reduce using rule 59 (var_boolean -> declare_boolean .)
    $end            reduce using rule 59 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 127


state 41

    (55) var_number -> declare_number . EQUAL number_value
    (56) var_number -> declare_number .
    (42) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 128
    POINTCOMMA      reduce using rule 56 (var_number -> declare_number .)
    $end            reduce using rule 56 (var_number -> declare_number .)
    LBRACKET        shift and go to state 129


state 42

    (62) var_string -> declare_string . EQUAL string_value
    (63) var_string -> declare_string .
    (50) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 130
    POINTCOMMA      reduce using rule 63 (var_string -> declare_string .)
    $end            reduce using rule 63 (var_string -> declare_string .)
    LBRACKET        shift and go to state 131


state 43

    (65) var_enum -> declare_var_enum . EQUAL enum_value
    (66) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 132
    POINTCOMMA      reduce using rule 66 (var_enum -> declare_var_enum .)
    $end            reduce using rule 66 (var_enum -> declare_var_enum .)


state 44

    (143) other_value -> enum_value .

    PRODUCT         reduce using rule 143 (other_value -> enum_value .)
    DIVIDE          reduce using rule 143 (other_value -> enum_value .)
    PLUS            reduce using rule 143 (other_value -> enum_value .)
    MINUS           reduce using rule 143 (other_value -> enum_value .)
    EQUALTO         reduce using rule 143 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 143 (other_value -> enum_value .)
    GREATER         reduce using rule 143 (other_value -> enum_value .)
    LESS            reduce using rule 143 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 143 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 143 (other_value -> enum_value .)
    AND             reduce using rule 143 (other_value -> enum_value .)
    OR              reduce using rule 143 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 143 (other_value -> enum_value .)
    $end            reduce using rule 143 (other_value -> enum_value .)
    RPAREN          reduce using rule 143 (other_value -> enum_value .)
    RBRACKET        reduce using rule 143 (other_value -> enum_value .)
    COMMA           reduce using rule 143 (other_value -> enum_value .)


state 45

    (36) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 36 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 36 (declare_array -> declare_array_main_number .)


state 46

    (37) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 37 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 37 (declare_array -> declare_array_main_boolean .)


state 47

    (38) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 38 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 38 (declare_array -> declare_array_main_string .)


state 48

    (39) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 39 (declare_array -> declare_generic_array .)
    $end            reduce using rule 39 (declare_array -> declare_generic_array .)


state 49

    (23) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 133


state 50

    (169) object_name -> OBJECTNAME .

    POINT           reduce using rule 169 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 169 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 169 (object_name -> OBJECTNAME .)
    $end            reduce using rule 169 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 169 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 169 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 169 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 169 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 169 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 169 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 169 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 169 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 169 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 169 (object_name -> OBJECTNAME .)
    AND             reduce using rule 169 (object_name -> OBJECTNAME .)
    OR              reduce using rule 169 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 169 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 169 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 169 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 169 (object_name -> OBJECTNAME .)


state 51

    (74) assign_variable -> variable . EQUAL assign_value
    (75) assign_variable -> variable . EQUAL list_types
    (141) other_value -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value
    (134) group -> variable .

    EQUAL           shift and go to state 134
    PRODUCT         reduce using rule 141 (other_value -> variable .)
    DIVIDE          reduce using rule 141 (other_value -> variable .)
    PLUS            reduce using rule 141 (other_value -> variable .)
    MINUS           reduce using rule 141 (other_value -> variable .)
    EQUALTO         reduce using rule 141 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 141 (other_value -> variable .)
    GREATER         reduce using rule 141 (other_value -> variable .)
    LESS            reduce using rule 141 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 141 (other_value -> variable .)
    LESSEQUAL       reduce using rule 141 (other_value -> variable .)
    AND             reduce using rule 141 (other_value -> variable .)
    OR              reduce using rule 141 (other_value -> variable .)
    POINTCOMMA      reduce using rule 141 (other_value -> variable .)
    $end            reduce using rule 141 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    INCREMENT       reduce using rule 134 (group -> variable .)
    DECREMENT       reduce using rule 134 (group -> variable .)


state 52

    (76) assign_array -> array_value . EQUAL assign_value
    (142) other_value -> array_value .
    (135) group -> array_value .

    EQUAL           shift and go to state 137
    PRODUCT         reduce using rule 142 (other_value -> array_value .)
    DIVIDE          reduce using rule 142 (other_value -> array_value .)
    PLUS            reduce using rule 142 (other_value -> array_value .)
    MINUS           reduce using rule 142 (other_value -> array_value .)
    EQUALTO         reduce using rule 142 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 142 (other_value -> array_value .)
    GREATER         reduce using rule 142 (other_value -> array_value .)
    LESS            reduce using rule 142 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 142 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 142 (other_value -> array_value .)
    AND             reduce using rule 142 (other_value -> array_value .)
    OR              reduce using rule 142 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 142 (other_value -> array_value .)
    $end            reduce using rule 142 (other_value -> array_value .)
    INCREMENT       reduce using rule 135 (group -> array_value .)
    DECREMENT       reduce using rule 135 (group -> array_value .)


state 53

    (77) assign_object_value -> object_value_form1 . EQUAL assign_value
    (78) assign_object_value -> object_value_form1 . EQUAL list_types
    (147) object_value -> object_value_form1 .

    EQUAL           shift and go to state 138
    PRODUCT         reduce using rule 147 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 147 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 147 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 147 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 147 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 147 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 147 (object_value -> object_value_form1 .)
    LESS            reduce using rule 147 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 147 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 147 (object_value -> object_value_form1 .)
    AND             reduce using rule 147 (object_value -> object_value_form1 .)
    OR              reduce using rule 147 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 147 (object_value -> object_value_form1 .)
    $end            reduce using rule 147 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 147 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 147 (object_value -> object_value_form1 .)


state 54

    (79) assign_object_value -> object_value_form2 . EQUAL assign_value
    (148) object_value -> object_value_form2 .

    EQUAL           shift and go to state 139
    PRODUCT         reduce using rule 148 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 148 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 148 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 148 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 148 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 148 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 148 (object_value -> object_value_form2 .)
    LESS            reduce using rule 148 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 148 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 148 (object_value -> object_value_form2 .)
    AND             reduce using rule 148 (object_value -> object_value_form2 .)
    OR              reduce using rule 148 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 148 (object_value -> object_value_form2 .)
    $end            reduce using rule 148 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 148 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 148 (object_value -> object_value_form2 .)


state 55

    (70) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 140


state 56

    (168) variable -> VARIABLE .

    EQUAL           reduce using rule 168 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 168 (variable -> VARIABLE .)
    POINT           reduce using rule 168 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 168 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 168 (variable -> VARIABLE .)
    PLUS            reduce using rule 168 (variable -> VARIABLE .)
    MINUS           reduce using rule 168 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 168 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 168 (variable -> VARIABLE .)
    GREATER         reduce using rule 168 (variable -> VARIABLE .)
    LESS            reduce using rule 168 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 168 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 168 (variable -> VARIABLE .)
    AND             reduce using rule 168 (variable -> VARIABLE .)
    OR              reduce using rule 168 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 168 (variable -> VARIABLE .)
    $end            reduce using rule 168 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 168 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 168 (variable -> VARIABLE .)
    RPAREN          reduce using rule 168 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 168 (variable -> VARIABLE .)
    COMMA           reduce using rule 168 (variable -> VARIABLE .)


state 57

    (132) term1 -> group .

    INCREMENT       reduce using rule 132 (term1 -> group .)
    DECREMENT       reduce using rule 132 (term1 -> group .)
    PRODUCT         reduce using rule 132 (term1 -> group .)
    DIVIDE          reduce using rule 132 (term1 -> group .)
    PLUS            reduce using rule 132 (term1 -> group .)
    MINUS           reduce using rule 132 (term1 -> group .)
    EQUALTO         reduce using rule 132 (term1 -> group .)
    NOTEQUALTO      reduce using rule 132 (term1 -> group .)
    GREATER         reduce using rule 132 (term1 -> group .)
    LESS            reduce using rule 132 (term1 -> group .)
    GREATEREQUAL    reduce using rule 132 (term1 -> group .)
    LESSEQUAL       reduce using rule 132 (term1 -> group .)
    AND             reduce using rule 132 (term1 -> group .)
    OR              reduce using rule 132 (term1 -> group .)
    POINTCOMMA      reduce using rule 132 (term1 -> group .)
    $end            reduce using rule 132 (term1 -> group .)
    RPAREN          reduce using rule 132 (term1 -> group .)
    RBRACKET        reduce using rule 132 (term1 -> group .)
    COMMA           reduce using rule 132 (term1 -> group .)


state 58

    (161) number -> NUMBER .

    PRODUCT         reduce using rule 161 (number -> NUMBER .)
    DIVIDE          reduce using rule 161 (number -> NUMBER .)
    PLUS            reduce using rule 161 (number -> NUMBER .)
    MINUS           reduce using rule 161 (number -> NUMBER .)
    EQUALTO         reduce using rule 161 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 161 (number -> NUMBER .)
    GREATER         reduce using rule 161 (number -> NUMBER .)
    LESS            reduce using rule 161 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 161 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 161 (number -> NUMBER .)
    AND             reduce using rule 161 (number -> NUMBER .)
    OR              reduce using rule 161 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 161 (number -> NUMBER .)
    $end            reduce using rule 161 (number -> NUMBER .)
    INCREMENT       reduce using rule 161 (number -> NUMBER .)
    DECREMENT       reduce using rule 161 (number -> NUMBER .)
    RPAREN          reduce using rule 161 (number -> NUMBER .)
    RBRACKET        reduce using rule 161 (number -> NUMBER .)
    COMMA           reduce using rule 161 (number -> NUMBER .)
    RKEY            reduce using rule 161 (number -> NUMBER .)


state 59

    (162) number -> FLOAT .

    PRODUCT         reduce using rule 162 (number -> FLOAT .)
    DIVIDE          reduce using rule 162 (number -> FLOAT .)
    PLUS            reduce using rule 162 (number -> FLOAT .)
    MINUS           reduce using rule 162 (number -> FLOAT .)
    EQUALTO         reduce using rule 162 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 162 (number -> FLOAT .)
    GREATER         reduce using rule 162 (number -> FLOAT .)
    LESS            reduce using rule 162 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 162 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 162 (number -> FLOAT .)
    AND             reduce using rule 162 (number -> FLOAT .)
    OR              reduce using rule 162 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 162 (number -> FLOAT .)
    $end            reduce using rule 162 (number -> FLOAT .)
    INCREMENT       reduce using rule 162 (number -> FLOAT .)
    DECREMENT       reduce using rule 162 (number -> FLOAT .)
    RPAREN          reduce using rule 162 (number -> FLOAT .)
    RBRACKET        reduce using rule 162 (number -> FLOAT .)
    COMMA           reduce using rule 162 (number -> FLOAT .)
    RKEY            reduce using rule 162 (number -> FLOAT .)


state 60

    (144) other_value -> object_value .
    (136) group -> object_value .

    PRODUCT         reduce using rule 144 (other_value -> object_value .)
    DIVIDE          reduce using rule 144 (other_value -> object_value .)
    PLUS            reduce using rule 144 (other_value -> object_value .)
    MINUS           reduce using rule 144 (other_value -> object_value .)
    EQUALTO         reduce using rule 144 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 144 (other_value -> object_value .)
    GREATER         reduce using rule 144 (other_value -> object_value .)
    LESS            reduce using rule 144 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 144 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 144 (other_value -> object_value .)
    AND             reduce using rule 144 (other_value -> object_value .)
    OR              reduce using rule 144 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 144 (other_value -> object_value .)
    $end            reduce using rule 144 (other_value -> object_value .)
    RPAREN          reduce using rule 144 (other_value -> object_value .)
    RBRACKET        reduce using rule 144 (other_value -> object_value .)
    COMMA           reduce using rule 144 (other_value -> object_value .)
    INCREMENT       reduce using rule 136 (group -> object_value .)
    DECREMENT       reduce using rule 136 (group -> object_value .)


state 61

    (163) string -> NORMSTRING1 .

    PLUS            reduce using rule 163 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 163 (string -> NORMSTRING1 .)
    $end            reduce using rule 163 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 163 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 163 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 163 (string -> NORMSTRING1 .)


state 62

    (164) string -> NORMSTRING2 .

    PLUS            reduce using rule 164 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 164 (string -> NORMSTRING2 .)
    $end            reduce using rule 164 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 164 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 164 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 164 (string -> NORMSTRING2 .)


state 63

    (165) string -> MULTISTRING .

    PLUS            reduce using rule 165 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 165 (string -> MULTISTRING .)
    $end            reduce using rule 165 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 165 (string -> MULTISTRING .)
    COMMA           reduce using rule 165 (string -> MULTISTRING .)
    RKEY            reduce using rule 165 (string -> MULTISTRING .)


state 64

    (152) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 141


state 65

    (40) declare_array_main_number -> declare_array_number . EQUAL list_number
    (41) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 142
    POINTCOMMA      reduce using rule 41 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 41 (declare_array_main_number -> declare_array_number .)


state 66

    (44) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (45) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 143
    POINTCOMMA      reduce using rule 45 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 45 (declare_array_main_boolean -> declare_array_boolean .)


state 67

    (48) declare_array_main_string -> declare_array_string . EQUAL list_string
    (49) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 144
    POINTCOMMA      reduce using rule 49 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 49 (declare_array_main_string -> declare_array_string .)


state 68

    (153) prefix -> LET .

    VARIABLE        reduce using rule 153 (prefix -> LET .)


state 69

    (154) prefix -> VAR .

    VARIABLE        reduce using rule 154 (prefix -> VAR .)


state 70

    (155) prefix -> STATIC .

    VARIABLE        reduce using rule 155 (prefix -> STATIC .)


state 71

    (156) prefix -> CONST .

    VARIABLE        reduce using rule 156 (prefix -> CONST .)


state 72

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 73

    (106) expression -> expression PLUS . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 145
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 74

    (107) expression -> expression MINUS . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 147
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 75

    (129) expCond -> expression operador . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 148
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 76

    (127) expOpLog -> expression oplogico . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 149
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 77

    (121) expEq -> expression EQUALTO . expression
    (174) operador -> EQUALTO .
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

  ! INCREMENT       [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 174 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 174 (operador -> EQUALTO .) ]

    expression                     shift and go to state 150
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 78

    (124) expNotEq -> expression NOTEQUALTO . expression
    (175) operador -> NOTEQUALTO .
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

  ! INCREMENT       [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 175 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 175 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 151
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 79

    (170) operador -> GREATER .

    INCREMENT       reduce using rule 170 (operador -> GREATER .)
    DECREMENT       reduce using rule 170 (operador -> GREATER .)
    LPAREN          reduce using rule 170 (operador -> GREATER .)
    NUMBER          reduce using rule 170 (operador -> GREATER .)
    FLOAT           reduce using rule 170 (operador -> GREATER .)
    VARIABLE        reduce using rule 170 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 170 (operador -> GREATER .)


state 80

    (171) operador -> LESS .

    INCREMENT       reduce using rule 171 (operador -> LESS .)
    DECREMENT       reduce using rule 171 (operador -> LESS .)
    LPAREN          reduce using rule 171 (operador -> LESS .)
    NUMBER          reduce using rule 171 (operador -> LESS .)
    FLOAT           reduce using rule 171 (operador -> LESS .)
    VARIABLE        reduce using rule 171 (operador -> LESS .)
    OBJECTNAME      reduce using rule 171 (operador -> LESS .)


state 81

    (172) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 172 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 172 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 172 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 172 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 172 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 172 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 172 (operador -> GREATEREQUAL .)


state 82

    (173) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 173 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 173 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 173 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 173 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 173 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 173 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 173 (operador -> LESSEQUAL .)


state 83

    (176) oplogico -> AND .

    INCREMENT       reduce using rule 176 (oplogico -> AND .)
    DECREMENT       reduce using rule 176 (oplogico -> AND .)
    LPAREN          reduce using rule 176 (oplogico -> AND .)
    NUMBER          reduce using rule 176 (oplogico -> AND .)
    FLOAT           reduce using rule 176 (oplogico -> AND .)
    VARIABLE        reduce using rule 176 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 176 (oplogico -> AND .)


state 84

    (177) oplogico -> OR .

    INCREMENT       reduce using rule 177 (oplogico -> OR .)
    DECREMENT       reduce using rule 177 (oplogico -> OR .)
    LPAREN          reduce using rule 177 (oplogico -> OR .)
    NUMBER          reduce using rule 177 (oplogico -> OR .)
    FLOAT           reduce using rule 177 (oplogico -> OR .)
    VARIABLE        reduce using rule 177 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 177 (oplogico -> OR .)


state 85

    (125) expOpLog -> expCond oplogico . expCond
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 152
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 86

    (119) expEq -> expCond EQUALTO . expCond
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 154
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 87

    (122) expNotEq -> expCond NOTEQUALTO . expCond
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 155
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 88

    (109) term -> term PRODUCT . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 156
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 89

    (110) term -> term DIVIDE . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 157
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 90

    (130) expCond -> LPAREN . expression operador expression RPAREN
    (131) term1 -> LPAREN . group RPAREN
    (140) factor_expr -> LPAREN . expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (152) enum_value -> . object_name POINT object_name
    (169) object_name -> . OBJECTNAME

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    LPAREN          shift and go to state 146
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 158
    group                          shift and go to state 93
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 91

    (130) expCond -> LPAREN expression . operador expression RPAREN
    (140) factor_expr -> LPAREN expression . RPAREN
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (129) expCond -> expression . operador expression
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 159

state 92

    (128) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 163


state 93

    (131) term1 -> LPAREN group . RPAREN
    (132) term1 -> group .

    RPAREN          shift and go to state 164
    INCREMENT       reduce using rule 132 (term1 -> group .)
    DECREMENT       reduce using rule 132 (term1 -> group .)


state 94

    (133) group -> number .
    (137) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 133 (group -> number .)
    RPAREN          reduce using rule 133 (group -> number .)
    INCREMENT       reduce using rule 133 (group -> number .)
    DECREMENT       reduce using rule 133 (group -> number .)
    PRODUCT         reduce using rule 137 (term -> number .)
    DIVIDE          reduce using rule 137 (term -> number .)
    PLUS            reduce using rule 137 (term -> number .)
    MINUS           reduce using rule 137 (term -> number .)
    GREATER         reduce using rule 137 (term -> number .)
    LESS            reduce using rule 137 (term -> number .)
    GREATEREQUAL    reduce using rule 137 (term -> number .)
    LESSEQUAL       reduce using rule 137 (term -> number .)
    EQUALTO         reduce using rule 137 (term -> number .)
    NOTEQUALTO      reduce using rule 137 (term -> number .)
    AND             reduce using rule 137 (term -> number .)
    OR              reduce using rule 137 (term -> number .)

  ! RPAREN          [ reduce using rule 137 (term -> number .) ]


state 95

    (134) group -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (141) other_value -> variable .
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for RPAREN resolved using rule 134 (group -> variable .)
    RPAREN          reduce using rule 134 (group -> variable .)
    INCREMENT       reduce using rule 134 (group -> variable .)
    DECREMENT       reduce using rule 134 (group -> variable .)
    LBRACKET        shift and go to state 135
    PRODUCT         reduce using rule 141 (other_value -> variable .)
    DIVIDE          reduce using rule 141 (other_value -> variable .)
    PLUS            reduce using rule 141 (other_value -> variable .)
    MINUS           reduce using rule 141 (other_value -> variable .)
    GREATER         reduce using rule 141 (other_value -> variable .)
    LESS            reduce using rule 141 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 141 (other_value -> variable .)
    LESSEQUAL       reduce using rule 141 (other_value -> variable .)
    EQUALTO         reduce using rule 141 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 141 (other_value -> variable .)
    AND             reduce using rule 141 (other_value -> variable .)
    OR              reduce using rule 141 (other_value -> variable .)
    POINT           shift and go to state 136

  ! RPAREN          [ reduce using rule 141 (other_value -> variable .) ]


state 96

    (135) group -> array_value .
    (142) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 135 (group -> array_value .)
    RPAREN          reduce using rule 135 (group -> array_value .)
    INCREMENT       reduce using rule 135 (group -> array_value .)
    DECREMENT       reduce using rule 135 (group -> array_value .)
    PRODUCT         reduce using rule 142 (other_value -> array_value .)
    DIVIDE          reduce using rule 142 (other_value -> array_value .)
    PLUS            reduce using rule 142 (other_value -> array_value .)
    MINUS           reduce using rule 142 (other_value -> array_value .)
    GREATER         reduce using rule 142 (other_value -> array_value .)
    LESS            reduce using rule 142 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 142 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 142 (other_value -> array_value .)
    EQUALTO         reduce using rule 142 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 142 (other_value -> array_value .)
    AND             reduce using rule 142 (other_value -> array_value .)
    OR              reduce using rule 142 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 142 (other_value -> array_value .) ]


state 97

    (136) group -> object_value .
    (144) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 136 (group -> object_value .)
    RPAREN          reduce using rule 136 (group -> object_value .)
    INCREMENT       reduce using rule 136 (group -> object_value .)
    DECREMENT       reduce using rule 136 (group -> object_value .)
    PRODUCT         reduce using rule 144 (other_value -> object_value .)
    DIVIDE          reduce using rule 144 (other_value -> object_value .)
    PLUS            reduce using rule 144 (other_value -> object_value .)
    MINUS           reduce using rule 144 (other_value -> object_value .)
    GREATER         reduce using rule 144 (other_value -> object_value .)
    LESS            reduce using rule 144 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 144 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 144 (other_value -> object_value .)
    EQUALTO         reduce using rule 144 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 144 (other_value -> object_value .)
    AND             reduce using rule 144 (other_value -> object_value .)
    OR              reduce using rule 144 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 144 (other_value -> object_value .) ]


state 98

    (147) object_value -> object_value_form1 .

    RPAREN          reduce using rule 147 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 147 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 147 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 147 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 147 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 147 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 147 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 147 (object_value -> object_value_form1 .)
    LESS            reduce using rule 147 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 147 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 147 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 147 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 147 (object_value -> object_value_form1 .)
    AND             reduce using rule 147 (object_value -> object_value_form1 .)
    OR              reduce using rule 147 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 147 (object_value -> object_value_form1 .)
    $end            reduce using rule 147 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 147 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 147 (object_value -> object_value_form1 .)


state 99

    (148) object_value -> object_value_form2 .

    RPAREN          reduce using rule 148 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 148 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 148 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 148 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 148 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 148 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 148 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 148 (object_value -> object_value_form2 .)
    LESS            reduce using rule 148 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 148 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 148 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 148 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 148 (object_value -> object_value_form2 .)
    AND             reduce using rule 148 (object_value -> object_value_form2 .)
    OR              reduce using rule 148 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 148 (object_value -> object_value_form2 .)
    $end            reduce using rule 148 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 148 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 148 (object_value -> object_value_form2 .)


state 100

    (126) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (128) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 165

state 101

    (120) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (128) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 167

state 102

    (123) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (128) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 168

state 103

    (115) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 115 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 115 (expNeg -> NEGATION expOpLog .)


state 104

    (116) expNeg -> NEGATION factor_exprlog .
    (126) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    POINTCOMMA      reduce using rule 116 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 116 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 105

    (117) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 117 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 117 (expNeg -> NEGATION boolean .)


state 106

    (118) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (128) factor_exprlog -> LPAREN . expCond RPAREN
    (130) expCond -> LPAREN . expression operador expression RPAREN
    (131) term1 -> LPAREN . group RPAREN
    (140) factor_expr -> LPAREN . expression RPAREN
    (125) expOpLog -> . expCond oplogico expCond
    (126) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (127) expOpLog -> . expression oplogico expression
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (128) factor_exprlog -> . LPAREN expCond RPAREN
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (152) enum_value -> . object_name POINT object_name
    (169) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expOpLog                       shift and go to state 169
    expCond                        shift and go to state 170
    expression                     shift and go to state 171
    group                          shift and go to state 93
    factor_exprlog                 shift and go to state 172
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 107

    (125) expOpLog -> expCond . oplogico expCond
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 108

    (127) expOpLog -> expression . oplogico expression
    (129) expCond -> expression . operador expression
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (176) oplogico -> . AND
    (177) oplogico -> . OR
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    AND             shift and go to state 83
    OR              shift and go to state 84
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    oplogico                       shift and go to state 76
    operador                       shift and go to state 75

state 109

    (166) boolean -> TRUE .

    POINTCOMMA      reduce using rule 166 (boolean -> TRUE .)
    $end            reduce using rule 166 (boolean -> TRUE .)
    RBRACKET        reduce using rule 166 (boolean -> TRUE .)
    COMMA           reduce using rule 166 (boolean -> TRUE .)


state 110

    (167) boolean -> FALSE .

    POINTCOMMA      reduce using rule 167 (boolean -> FALSE .)
    $end            reduce using rule 167 (boolean -> FALSE .)
    RBRACKET        reduce using rule 167 (boolean -> FALSE .)
    COMMA           reduce using rule 167 (boolean -> FALSE .)


state 111

    (141) other_value -> variable .
    (134) group -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 141 (other_value -> variable .)
    DIVIDE          reduce using rule 141 (other_value -> variable .)
    PLUS            reduce using rule 141 (other_value -> variable .)
    MINUS           reduce using rule 141 (other_value -> variable .)
    AND             reduce using rule 141 (other_value -> variable .)
    OR              reduce using rule 141 (other_value -> variable .)
    GREATER         reduce using rule 141 (other_value -> variable .)
    LESS            reduce using rule 141 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 141 (other_value -> variable .)
    LESSEQUAL       reduce using rule 141 (other_value -> variable .)
    EQUALTO         reduce using rule 141 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 141 (other_value -> variable .)
    POINTCOMMA      reduce using rule 141 (other_value -> variable .)
    $end            reduce using rule 141 (other_value -> variable .)
    RPAREN          reduce using rule 141 (other_value -> variable .)
    RBRACKET        reduce using rule 141 (other_value -> variable .)
    COMMA           reduce using rule 141 (other_value -> variable .)
    INCREMENT       reduce using rule 134 (group -> variable .)
    DECREMENT       reduce using rule 134 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 112

    (142) other_value -> array_value .
    (135) group -> array_value .

    PRODUCT         reduce using rule 142 (other_value -> array_value .)
    DIVIDE          reduce using rule 142 (other_value -> array_value .)
    PLUS            reduce using rule 142 (other_value -> array_value .)
    MINUS           reduce using rule 142 (other_value -> array_value .)
    AND             reduce using rule 142 (other_value -> array_value .)
    OR              reduce using rule 142 (other_value -> array_value .)
    GREATER         reduce using rule 142 (other_value -> array_value .)
    LESS            reduce using rule 142 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 142 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 142 (other_value -> array_value .)
    EQUALTO         reduce using rule 142 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 142 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 142 (other_value -> array_value .)
    $end            reduce using rule 142 (other_value -> array_value .)
    RPAREN          reduce using rule 142 (other_value -> array_value .)
    RBRACKET        reduce using rule 142 (other_value -> array_value .)
    COMMA           reduce using rule 142 (other_value -> array_value .)
    INCREMENT       reduce using rule 135 (group -> array_value .)
    DECREMENT       reduce using rule 135 (group -> array_value .)


state 113

    (35) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN POINTCOMMA
    (53) var_null -> declare_any EQUAL . NULL
    (54) var_undefined -> declare_any EQUAL . UNDEFINED
    (68) declare_generic -> declare_any EQUAL . assign_value
    (52) declare_generic_array -> declare_any EQUAL . list_types
    (80) assign_value -> . expression
    (81) assign_value -> . boolean
    (82) assign_value -> . string
    (83) list_types -> . list_number
    (84) list_types -> . list_boolean
    (85) list_types -> . list_string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (86) list_number -> . LBRACKET numbers RBRACKET
    (89) list_boolean -> . LBRACKET booleans RBRACKET
    (92) list_string -> . LBRACKET strings RBRACKET
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NEW             shift and go to state 173
    NULL            shift and go to state 174
    UNDEFINED       shift and go to state 175
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LBRACKET        shift and go to state 184
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    assign_value                   shift and go to state 176
    list_types                     shift and go to state 177
    expression                     shift and go to state 178
    boolean                        shift and go to state 179
    string                         shift and go to state 180
    list_number                    shift and go to state 181
    list_boolean                   shift and go to state 182
    list_string                    shift and go to state 183
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 114

    (61) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (57) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (64) declare_string -> declare_any TWOPOINTS . VARSTRING
    (67) declare_var_enum -> declare_any TWOPOINTS . object_name
    (43) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (169) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 185
    VARNUMBER       shift and go to state 186
    VARSTRING       shift and go to state 187
    ARRAY           shift and go to state 189
    OBJECTNAME      shift and go to state 50

    object_name                    shift and go to state 188

state 115

    (33) funcionif -> IF LPAREN . formIf RPAREN LKEY
    (145) formIf -> . expCond
    (146) formIf -> . expOpLog
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (125) expOpLog -> . expCond oplogico expCond
    (126) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (127) expOpLog -> . expression oplogico expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (128) factor_exprlog -> . LPAREN expCond RPAREN
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    formIf                         shift and go to state 190
    expCond                        shift and go to state 191
    expOpLog                       shift and go to state 192
    expression                     shift and go to state 193
    factor_exprlog                 shift and go to state 172
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 116

    (111) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 111 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 111 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 111 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 111 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 111 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 111 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 111 (term -> term1 INCREMENT .)
    LESS            reduce using rule 111 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 111 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 111 (term -> term1 INCREMENT .)
    AND             reduce using rule 111 (term -> term1 INCREMENT .)
    OR              reduce using rule 111 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 111 (term -> term1 INCREMENT .)
    $end            reduce using rule 111 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 111 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 111 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 111 (term -> term1 INCREMENT .)


state 117

    (113) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 113 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 113 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 113 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 113 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 113 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 113 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 113 (term -> term1 DECREMENT .)
    LESS            reduce using rule 113 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 113 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 113 (term -> term1 DECREMENT .)
    AND             reduce using rule 113 (term -> term1 DECREMENT .)
    OR              reduce using rule 113 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 113 (term -> term1 DECREMENT .)
    $end            reduce using rule 113 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 113 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 113 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 113 (term -> term1 DECREMENT .)


state 118

    (112) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 112 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 112 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 112 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 112 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 112 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 112 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 112 (term -> INCREMENT term1 .)
    LESS            reduce using rule 112 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 112 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 112 (term -> INCREMENT term1 .)
    AND             reduce using rule 112 (term -> INCREMENT term1 .)
    OR              reduce using rule 112 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 112 (term -> INCREMENT term1 .)
    $end            reduce using rule 112 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 112 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 112 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 112 (term -> INCREMENT term1 .)


state 119

    (131) term1 -> LPAREN . group RPAREN
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    group                          shift and go to state 194
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 120

    (133) group -> number .

    PRODUCT         reduce using rule 133 (group -> number .)
    DIVIDE          reduce using rule 133 (group -> number .)
    PLUS            reduce using rule 133 (group -> number .)
    MINUS           reduce using rule 133 (group -> number .)
    EQUALTO         reduce using rule 133 (group -> number .)
    NOTEQUALTO      reduce using rule 133 (group -> number .)
    GREATER         reduce using rule 133 (group -> number .)
    LESS            reduce using rule 133 (group -> number .)
    GREATEREQUAL    reduce using rule 133 (group -> number .)
    LESSEQUAL       reduce using rule 133 (group -> number .)
    AND             reduce using rule 133 (group -> number .)
    OR              reduce using rule 133 (group -> number .)
    POINTCOMMA      reduce using rule 133 (group -> number .)
    $end            reduce using rule 133 (group -> number .)
    RPAREN          reduce using rule 133 (group -> number .)
    RBRACKET        reduce using rule 133 (group -> number .)
    COMMA           reduce using rule 133 (group -> number .)


state 121

    (134) group -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 134 (group -> variable .)
    DIVIDE          reduce using rule 134 (group -> variable .)
    PLUS            reduce using rule 134 (group -> variable .)
    MINUS           reduce using rule 134 (group -> variable .)
    EQUALTO         reduce using rule 134 (group -> variable .)
    NOTEQUALTO      reduce using rule 134 (group -> variable .)
    GREATER         reduce using rule 134 (group -> variable .)
    LESS            reduce using rule 134 (group -> variable .)
    GREATEREQUAL    reduce using rule 134 (group -> variable .)
    LESSEQUAL       reduce using rule 134 (group -> variable .)
    AND             reduce using rule 134 (group -> variable .)
    OR              reduce using rule 134 (group -> variable .)
    POINTCOMMA      reduce using rule 134 (group -> variable .)
    $end            reduce using rule 134 (group -> variable .)
    RPAREN          reduce using rule 134 (group -> variable .)
    RBRACKET        reduce using rule 134 (group -> variable .)
    COMMA           reduce using rule 134 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 122

    (135) group -> array_value .

    PRODUCT         reduce using rule 135 (group -> array_value .)
    DIVIDE          reduce using rule 135 (group -> array_value .)
    PLUS            reduce using rule 135 (group -> array_value .)
    MINUS           reduce using rule 135 (group -> array_value .)
    EQUALTO         reduce using rule 135 (group -> array_value .)
    NOTEQUALTO      reduce using rule 135 (group -> array_value .)
    GREATER         reduce using rule 135 (group -> array_value .)
    LESS            reduce using rule 135 (group -> array_value .)
    GREATEREQUAL    reduce using rule 135 (group -> array_value .)
    LESSEQUAL       reduce using rule 135 (group -> array_value .)
    AND             reduce using rule 135 (group -> array_value .)
    OR              reduce using rule 135 (group -> array_value .)
    POINTCOMMA      reduce using rule 135 (group -> array_value .)
    $end            reduce using rule 135 (group -> array_value .)
    RPAREN          reduce using rule 135 (group -> array_value .)
    RBRACKET        reduce using rule 135 (group -> array_value .)
    COMMA           reduce using rule 135 (group -> array_value .)


state 123

    (136) group -> object_value .

    PRODUCT         reduce using rule 136 (group -> object_value .)
    DIVIDE          reduce using rule 136 (group -> object_value .)
    PLUS            reduce using rule 136 (group -> object_value .)
    MINUS           reduce using rule 136 (group -> object_value .)
    EQUALTO         reduce using rule 136 (group -> object_value .)
    NOTEQUALTO      reduce using rule 136 (group -> object_value .)
    GREATER         reduce using rule 136 (group -> object_value .)
    LESS            reduce using rule 136 (group -> object_value .)
    GREATEREQUAL    reduce using rule 136 (group -> object_value .)
    LESSEQUAL       reduce using rule 136 (group -> object_value .)
    AND             reduce using rule 136 (group -> object_value .)
    OR              reduce using rule 136 (group -> object_value .)
    POINTCOMMA      reduce using rule 136 (group -> object_value .)
    $end            reduce using rule 136 (group -> object_value .)
    RPAREN          reduce using rule 136 (group -> object_value .)
    RBRACKET        reduce using rule 136 (group -> object_value .)
    COMMA           reduce using rule 136 (group -> object_value .)


state 124

    (114) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 114 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 114 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 114 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 114 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 114 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 114 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 114 (term -> DECREMENT term1 .)
    LESS            reduce using rule 114 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 114 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 114 (term -> DECREMENT term1 .)
    AND             reduce using rule 114 (term -> DECREMENT term1 .)
    OR              reduce using rule 114 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 114 (term -> DECREMENT term1 .)
    $end            reduce using rule 114 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 114 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 114 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 114 (term -> DECREMENT term1 .)


state 125

    (101) termS -> string PLUS . chain
    (102) chain -> . termS PLUS value
    (103) chain -> . value
    (101) termS -> . string PLUS chain
    (104) value -> . expression
    (105) value -> . string
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string                         shift and go to state 195
    chain                          shift and go to state 196
    termS                          shift and go to state 197
    value                          shift and go to state 198
    expression                     shift and go to state 199
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 126

    (58) var_boolean -> declare_boolean EQUAL . boolean_value
    (60) var_boolean -> declare_boolean EQUAL .
    (96) boolean_value -> . boolean
    (97) boolean_value -> . other_value
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    POINTCOMMA      reduce using rule 60 (var_boolean -> declare_boolean EQUAL .)
    $end            reduce using rule 60 (var_boolean -> declare_boolean EQUAL .)
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    boolean_value                  shift and go to state 200
    boolean                        shift and go to state 201
    other_value                    shift and go to state 202
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 127

    (46) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 206


state 128

    (55) var_number -> declare_number EQUAL . number_value
    (95) number_value -> . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    number_value                   shift and go to state 207
    expression                     shift and go to state 208
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 129

    (42) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 209


state 130

    (62) var_string -> declare_string EQUAL . string_value
    (98) string_value -> . string
    (99) string_value -> . other_value
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string_value                   shift and go to state 210
    string                         shift and go to state 211
    other_value                    shift and go to state 212
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 131

    (50) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 213


state 132

    (65) var_enum -> declare_var_enum EQUAL . enum_value
    (152) enum_value -> . object_name POINT object_name
    (169) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enum_value                     shift and go to state 214
    object_name                    shift and go to state 64

state 133

    (23) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 215


state 134

    (74) assign_variable -> variable EQUAL . assign_value
    (75) assign_variable -> variable EQUAL . list_types
    (80) assign_value -> . expression
    (81) assign_value -> . boolean
    (82) assign_value -> . string
    (83) list_types -> . list_number
    (84) list_types -> . list_boolean
    (85) list_types -> . list_string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (86) list_number -> . LBRACKET numbers RBRACKET
    (89) list_boolean -> . LBRACKET booleans RBRACKET
    (92) list_string -> . LBRACKET strings RBRACKET
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LBRACKET        shift and go to state 184
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    variable                       shift and go to state 111
    assign_value                   shift and go to state 216
    list_types                     shift and go to state 217
    expression                     shift and go to state 178
    boolean                        shift and go to state 179
    string                         shift and go to state 180
    list_number                    shift and go to state 181
    list_boolean                   shift and go to state 182
    list_string                    shift and go to state 183
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 135

    (151) array_value -> variable LBRACKET . expression RBRACKET
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    variable                       shift and go to state 111
    expression                     shift and go to state 218
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 136

    (149) object_value_form1 -> variable POINT . variable
    (150) object_value_form2 -> variable POINT . array_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 56

    variable                       shift and go to state 219
    array_value                    shift and go to state 220

state 137

    (76) assign_array -> array_value EQUAL . assign_value
    (80) assign_value -> . expression
    (81) assign_value -> . boolean
    (82) assign_value -> . string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    array_value                    shift and go to state 112
    assign_value                   shift and go to state 221
    expression                     shift and go to state 178
    boolean                        shift and go to state 179
    string                         shift and go to state 180
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 138

    (77) assign_object_value -> object_value_form1 EQUAL . assign_value
    (78) assign_object_value -> object_value_form1 EQUAL . list_types
    (80) assign_value -> . expression
    (81) assign_value -> . boolean
    (82) assign_value -> . string
    (83) list_types -> . list_number
    (84) list_types -> . list_boolean
    (85) list_types -> . list_string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (86) list_number -> . LBRACKET numbers RBRACKET
    (89) list_boolean -> . LBRACKET booleans RBRACKET
    (92) list_string -> . LBRACKET strings RBRACKET
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LBRACKET        shift and go to state 184
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    object_value_form1             shift and go to state 98
    assign_value                   shift and go to state 222
    list_types                     shift and go to state 223
    expression                     shift and go to state 178
    boolean                        shift and go to state 179
    string                         shift and go to state 180
    list_number                    shift and go to state 181
    list_boolean                   shift and go to state 182
    list_string                    shift and go to state 183
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form2             shift and go to state 99

state 139

    (79) assign_object_value -> object_value_form2 EQUAL . assign_value
    (80) assign_value -> . expression
    (81) assign_value -> . boolean
    (82) assign_value -> . string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    object_value_form2             shift and go to state 99
    assign_value                   shift and go to state 224
    expression                     shift and go to state 178
    boolean                        shift and go to state 179
    string                         shift and go to state 180
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98

state 140

    (70) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 70 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 70 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 70 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 70 (declare_any -> prefix VARIABLE .)


state 141

    (152) enum_value -> object_name POINT . object_name
    (169) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    object_name                    shift and go to state 225

state 142

    (40) declare_array_main_number -> declare_array_number EQUAL . list_number
    (86) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 227

    list_number                    shift and go to state 226

state 143

    (44) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (89) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 229

    list_boolean                   shift and go to state 228

state 144

    (48) declare_array_main_string -> declare_array_string EQUAL . list_string
    (92) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 231

    list_string                    shift and go to state 230

state 145

    (106) expression -> expression PLUS term .
    (109) term -> term . PRODUCT term
    (110) term -> term . DIVIDE term

    PLUS            reduce using rule 106 (expression -> expression PLUS term .)
    MINUS           reduce using rule 106 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 106 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 106 (expression -> expression PLUS term .)
    GREATER         reduce using rule 106 (expression -> expression PLUS term .)
    LESS            reduce using rule 106 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 106 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 106 (expression -> expression PLUS term .)
    AND             reduce using rule 106 (expression -> expression PLUS term .)
    OR              reduce using rule 106 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 106 (expression -> expression PLUS term .)
    $end            reduce using rule 106 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 106 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 106 (expression -> expression PLUS term .)
    COMMA           reduce using rule 106 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 146

    (131) term1 -> LPAREN . group RPAREN
    (140) factor_expr -> LPAREN . expression RPAREN
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (152) enum_value -> . object_name POINT object_name
    (169) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    OBJECTNAME      shift and go to state 50

    group                          shift and go to state 93
    expression                     shift and go to state 232
    number                         shift and go to state 94
    variable                       shift and go to state 233
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term                           shift and go to state 14
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 147

    (107) expression -> expression MINUS term .
    (109) term -> term . PRODUCT term
    (110) term -> term . DIVIDE term

    PLUS            reduce using rule 107 (expression -> expression MINUS term .)
    MINUS           reduce using rule 107 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 107 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 107 (expression -> expression MINUS term .)
    GREATER         reduce using rule 107 (expression -> expression MINUS term .)
    LESS            reduce using rule 107 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 107 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 107 (expression -> expression MINUS term .)
    AND             reduce using rule 107 (expression -> expression MINUS term .)
    OR              reduce using rule 107 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 107 (expression -> expression MINUS term .)
    $end            reduce using rule 107 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 107 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 107 (expression -> expression MINUS term .)
    COMMA           reduce using rule 107 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 148

    (129) expCond -> expression operador expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    EQUALTO         reduce using rule 129 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 129 (expCond -> expression operador expression .)
    AND             reduce using rule 129 (expCond -> expression operador expression .)
    OR              reduce using rule 129 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 129 (expCond -> expression operador expression .)
    $end            reduce using rule 129 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 129 (expCond -> expression operador expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 149

    (127) expOpLog -> expression oplogico expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 127 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 127 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 127 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 150

    (121) expEq -> expression EQUALTO expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 121 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 121 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 151

    (124) expNotEq -> expression NOTEQUALTO expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 124 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 124 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 152

    (125) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 125 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 125 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 125 (expOpLog -> expCond oplogico expCond .)


state 153

    (129) expCond -> expression . operador expression
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 75

state 154

    (119) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 119 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 119 (expEq -> expCond EQUALTO expCond .)


state 155

    (122) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 122 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 122 (expNotEq -> expCond NOTEQUALTO expCond .)


state 156

    (109) term -> term PRODUCT term .
    (109) term -> term . PRODUCT term
    (110) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 109 (term -> term PRODUCT term .)
    MINUS           reduce using rule 109 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 109 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 109 (term -> term PRODUCT term .)
    GREATER         reduce using rule 109 (term -> term PRODUCT term .)
    LESS            reduce using rule 109 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 109 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 109 (term -> term PRODUCT term .)
    AND             reduce using rule 109 (term -> term PRODUCT term .)
    OR              reduce using rule 109 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 109 (term -> term PRODUCT term .)
    $end            reduce using rule 109 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 109 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 109 (term -> term PRODUCT term .)
    COMMA           reduce using rule 109 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89

  ! PRODUCT         [ reduce using rule 109 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 109 (term -> term PRODUCT term .) ]


state 157

    (110) term -> term DIVIDE term .
    (109) term -> term . PRODUCT term
    (110) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 110 (term -> term DIVIDE term .)
    MINUS           reduce using rule 110 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 110 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 110 (term -> term DIVIDE term .)
    GREATER         reduce using rule 110 (term -> term DIVIDE term .)
    LESS            reduce using rule 110 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 110 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 110 (term -> term DIVIDE term .)
    AND             reduce using rule 110 (term -> term DIVIDE term .)
    OR              reduce using rule 110 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 110 (term -> term DIVIDE term .)
    $end            reduce using rule 110 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 110 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 110 (term -> term DIVIDE term .)
    COMMA           reduce using rule 110 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89

  ! PRODUCT         [ reduce using rule 110 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 110 (term -> term DIVIDE term .) ]


state 158

    (130) expCond -> LPAREN expression . operador expression RPAREN
    (140) factor_expr -> LPAREN expression . RPAREN
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 234

state 159

    (130) expCond -> LPAREN expression operador . expression RPAREN
    (129) expCond -> expression operador . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 235
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 160

    (140) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 140 (factor_expr -> LPAREN expression RPAREN .)


state 161

    (174) operador -> EQUALTO .

    INCREMENT       reduce using rule 174 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 174 (operador -> EQUALTO .)
    LPAREN          reduce using rule 174 (operador -> EQUALTO .)
    NUMBER          reduce using rule 174 (operador -> EQUALTO .)
    FLOAT           reduce using rule 174 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 174 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 174 (operador -> EQUALTO .)


state 162

    (175) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 175 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 175 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 175 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 175 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 175 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 175 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 175 (operador -> NOTEQUALTO .)


state 163

    (128) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 128 (factor_exprlog -> LPAREN expCond RPAREN .)


state 164

    (131) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 131 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 131 (term1 -> LPAREN group RPAREN .)


state 165

    (126) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 126 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 126 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 126 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 166

    (128) factor_exprlog -> LPAREN . expCond RPAREN
    (129) expCond -> . expression operador expression
    (130) expCond -> . LPAREN expression operador expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 92
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 167

    (120) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 120 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 120 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 168

    (123) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 123 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 123 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 169

    (118) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 236


state 170

    (128) factor_exprlog -> LPAREN expCond . RPAREN
    (125) expOpLog -> expCond . oplogico expCond
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    RPAREN          shift and go to state 163
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 171

    (130) expCond -> LPAREN expression . operador expression RPAREN
    (140) factor_expr -> LPAREN expression . RPAREN
    (127) expOpLog -> expression . oplogico expression
    (129) expCond -> expression . operador expression
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 159
    oplogico                       shift and go to state 76

state 172

    (126) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 173

    (35) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN POINTCOMMA

    SET             shift and go to state 237


state 174

    (53) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 53 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 53 (var_null -> declare_any EQUAL NULL .)


state 175

    (54) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 54 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 54 (var_undefined -> declare_any EQUAL UNDEFINED .)


state 176

    (68) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 68 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 68 (declare_generic -> declare_any EQUAL assign_value .)


state 177

    (52) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 52 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 52 (declare_generic_array -> declare_any EQUAL list_types .)


state 178

    (80) assign_value -> expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 80 (assign_value -> expression .)
    $end            reduce using rule 80 (assign_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 179

    (81) assign_value -> boolean .

    POINTCOMMA      reduce using rule 81 (assign_value -> boolean .)
    $end            reduce using rule 81 (assign_value -> boolean .)


state 180

    (82) assign_value -> string .

    POINTCOMMA      reduce using rule 82 (assign_value -> string .)
    $end            reduce using rule 82 (assign_value -> string .)


state 181

    (83) list_types -> list_number .

    POINTCOMMA      reduce using rule 83 (list_types -> list_number .)
    $end            reduce using rule 83 (list_types -> list_number .)


state 182

    (84) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 84 (list_types -> list_boolean .)
    $end            reduce using rule 84 (list_types -> list_boolean .)


state 183

    (85) list_types -> list_string .

    POINTCOMMA      reduce using rule 85 (list_types -> list_string .)
    $end            reduce using rule 85 (list_types -> list_string .)


state 184

    (86) list_number -> LBRACKET . numbers RBRACKET
    (89) list_boolean -> LBRACKET . booleans RBRACKET
    (92) list_string -> LBRACKET . strings RBRACKET
    (87) numbers -> . numbers COMMA number_value
    (88) numbers -> . number_value
    (90) booleans -> . booleans COMMA boolean_value
    (91) booleans -> . boolean_value
    (93) strings -> . strings COMMA string_value
    (94) strings -> . string_value
    (95) number_value -> . expression
    (96) boolean_value -> . boolean
    (97) boolean_value -> . other_value
    (98) string_value -> . string
    (99) string_value -> . other_value
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    VARIABLE        shift and go to state 56
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    OBJECTNAME      shift and go to state 50

    numbers                        shift and go to state 238
    booleans                       shift and go to state 239
    strings                        shift and go to state 240
    number_value                   shift and go to state 241
    boolean_value                  shift and go to state 242
    string_value                   shift and go to state 243
    expression                     shift and go to state 208
    boolean                        shift and go to state 201
    other_value                    shift and go to state 244
    string                         shift and go to state 211
    term                           shift and go to state 14
    variable                       shift and go to state 245
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    group                          shift and go to state 57

state 185

    (61) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 61 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 61 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 61 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 61 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 186

    (57) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 187

    (64) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 64 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 64 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 64 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 64 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 188

    (67) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 67 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 67 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 67 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 189

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 246


state 190

    (33) funcionif -> IF LPAREN formIf . RPAREN LKEY

    RPAREN          shift and go to state 247


state 191

    (145) formIf -> expCond .
    (125) expOpLog -> expCond . oplogico expCond
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    RPAREN          reduce using rule 145 (formIf -> expCond .)
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 192

    (146) formIf -> expOpLog .

    RPAREN          reduce using rule 146 (formIf -> expOpLog .)


state 193

    (129) expCond -> expression . operador expression
    (127) expOpLog -> expression . oplogico expression
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term
    (170) operador -> . GREATER
    (171) operador -> . LESS
    (172) operador -> . GREATEREQUAL
    (173) operador -> . LESSEQUAL
    (174) operador -> . EQUALTO
    (175) operador -> . NOTEQUALTO
    (176) oplogico -> . AND
    (177) oplogico -> . OR

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 194

    (131) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 164


state 195

    (101) termS -> string . PLUS chain
    (105) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 125
    POINTCOMMA      reduce using rule 105 (value -> string .)
    $end            reduce using rule 105 (value -> string .)

  ! PLUS            [ reduce using rule 105 (value -> string .) ]


state 196

    (101) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 101 (termS -> string PLUS chain .)
    $end            reduce using rule 101 (termS -> string PLUS chain .)
    PLUS            reduce using rule 101 (termS -> string PLUS chain .)


state 197

    (102) chain -> termS . PLUS value

    PLUS            shift and go to state 248


state 198

    (103) chain -> value .

    POINTCOMMA      reduce using rule 103 (chain -> value .)
    $end            reduce using rule 103 (chain -> value .)
    PLUS            reduce using rule 103 (chain -> value .)


state 199

    (104) value -> expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 104 (value -> expression .)
    $end            reduce using rule 104 (value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

  ! PLUS            [ reduce using rule 104 (value -> expression .) ]


state 200

    (58) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 58 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 58 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 201

    (96) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 96 (boolean_value -> boolean .)
    $end            reduce using rule 96 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 96 (boolean_value -> boolean .)
    COMMA           reduce using rule 96 (boolean_value -> boolean .)


state 202

    (97) boolean_value -> other_value .

    POINTCOMMA      reduce using rule 97 (boolean_value -> other_value .)
    $end            reduce using rule 97 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 97 (boolean_value -> other_value .)
    COMMA           reduce using rule 97 (boolean_value -> other_value .)


state 203

    (141) other_value -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 141 (other_value -> variable .)
    $end            reduce using rule 141 (other_value -> variable .)
    RBRACKET        reduce using rule 141 (other_value -> variable .)
    COMMA           reduce using rule 141 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 204

    (142) other_value -> array_value .

    POINTCOMMA      reduce using rule 142 (other_value -> array_value .)
    $end            reduce using rule 142 (other_value -> array_value .)
    RBRACKET        reduce using rule 142 (other_value -> array_value .)
    COMMA           reduce using rule 142 (other_value -> array_value .)


state 205

    (144) other_value -> object_value .

    POINTCOMMA      reduce using rule 144 (other_value -> object_value .)
    $end            reduce using rule 144 (other_value -> object_value .)
    RBRACKET        reduce using rule 144 (other_value -> object_value .)
    COMMA           reduce using rule 144 (other_value -> object_value .)


state 206

    (46) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 207

    (55) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 55 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 55 (var_number -> declare_number EQUAL number_value .)


state 208

    (95) number_value -> expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 95 (number_value -> expression .)
    $end            reduce using rule 95 (number_value -> expression .)
    RBRACKET        reduce using rule 95 (number_value -> expression .)
    COMMA           reduce using rule 95 (number_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 209

    (42) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 210

    (62) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 62 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 62 (var_string -> declare_string EQUAL string_value .)


state 211

    (98) string_value -> string .

    POINTCOMMA      reduce using rule 98 (string_value -> string .)
    $end            reduce using rule 98 (string_value -> string .)
    RBRACKET        reduce using rule 98 (string_value -> string .)
    COMMA           reduce using rule 98 (string_value -> string .)


state 212

    (99) string_value -> other_value .

    POINTCOMMA      reduce using rule 99 (string_value -> other_value .)
    $end            reduce using rule 99 (string_value -> other_value .)
    RBRACKET        reduce using rule 99 (string_value -> other_value .)
    COMMA           reduce using rule 99 (string_value -> other_value .)


state 213

    (50) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 214

    (65) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 65 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 65 (var_enum -> declare_var_enum EQUAL enum_value .)


state 215

    (23) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (24) enums -> . enums_numeric
    (25) enums -> . enums_string
    (26) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (27) enums_numeric -> . enums_numeric_value
    (30) enums_string -> . enums_string COMMA enums_string_value
    (31) enums_string -> . enums_string_value
    (28) enums_numeric_value -> . object_name EQUAL number
    (29) enums_numeric_value -> . object_name
    (32) enums_string_value -> . object_name EQUAL string
    (169) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums                          shift and go to state 249
    enums_numeric                  shift and go to state 250
    enums_string                   shift and go to state 251
    enums_numeric_value            shift and go to state 252
    enums_string_value             shift and go to state 253
    object_name                    shift and go to state 254

state 216

    (74) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 74 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 74 (assign_variable -> variable EQUAL assign_value .)


state 217

    (75) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 75 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 75 (assign_variable -> variable EQUAL list_types .)


state 218

    (151) array_value -> variable LBRACKET expression . RBRACKET
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    RBRACKET        shift and go to state 255
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 219

    (149) object_value_form1 -> variable POINT variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 149 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 135


state 220

    (150) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 150 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 150 (object_value_form2 -> variable POINT array_value .)


state 221

    (76) assign_array -> array_value EQUAL assign_value .

    POINTCOMMA      reduce using rule 76 (assign_array -> array_value EQUAL assign_value .)
    $end            reduce using rule 76 (assign_array -> array_value EQUAL assign_value .)


state 222

    (77) assign_object_value -> object_value_form1 EQUAL assign_value .

    POINTCOMMA      reduce using rule 77 (assign_object_value -> object_value_form1 EQUAL assign_value .)
    $end            reduce using rule 77 (assign_object_value -> object_value_form1 EQUAL assign_value .)


state 223

    (78) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 78 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 78 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 224

    (79) assign_object_value -> object_value_form2 EQUAL assign_value .

    POINTCOMMA      reduce using rule 79 (assign_object_value -> object_value_form2 EQUAL assign_value .)
    $end            reduce using rule 79 (assign_object_value -> object_value_form2 EQUAL assign_value .)


state 225

    (152) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 152 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 152 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 152 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 152 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 152 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 152 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 152 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 152 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 152 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 152 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 152 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 152 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 152 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 152 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 152 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 152 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 152 (enum_value -> object_name POINT object_name .)


state 226

    (40) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 40 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 40 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 227

    (86) list_number -> LBRACKET . numbers RBRACKET
    (87) numbers -> . numbers COMMA number_value
    (88) numbers -> . number_value
    (95) number_value -> . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    numbers                        shift and go to state 238
    number_value                   shift and go to state 241
    expression                     shift and go to state 208
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 228

    (44) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 44 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 44 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 229

    (89) list_boolean -> LBRACKET . booleans RBRACKET
    (90) booleans -> . booleans COMMA boolean_value
    (91) booleans -> . boolean_value
    (96) boolean_value -> . boolean
    (97) boolean_value -> . other_value
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    booleans                       shift and go to state 239
    boolean_value                  shift and go to state 242
    boolean                        shift and go to state 201
    other_value                    shift and go to state 202
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 230

    (48) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 48 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 48 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 231

    (92) list_string -> LBRACKET . strings RBRACKET
    (93) strings -> . strings COMMA string_value
    (94) strings -> . string_value
    (98) string_value -> . string
    (99) string_value -> . other_value
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    strings                        shift and go to state 240
    string_value                   shift and go to state 243
    string                         shift and go to state 211
    other_value                    shift and go to state 212
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 232

    (140) factor_expr -> LPAREN expression . RPAREN
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 233

    (134) group -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value
    (141) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 134 (group -> variable .)
    RPAREN          reduce using rule 134 (group -> variable .)
    INCREMENT       reduce using rule 134 (group -> variable .)
    DECREMENT       reduce using rule 134 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    PRODUCT         reduce using rule 141 (other_value -> variable .)
    DIVIDE          reduce using rule 141 (other_value -> variable .)
    PLUS            reduce using rule 141 (other_value -> variable .)
    MINUS           reduce using rule 141 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 141 (other_value -> variable .) ]


state 234

    (130) expCond -> LPAREN expression operador . expression RPAREN
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 256
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 235

    (130) expCond -> LPAREN expression operador expression . RPAREN
    (129) expCond -> expression operador expression .
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 257
    AND             reduce using rule 129 (expCond -> expression operador expression .)
    OR              reduce using rule 129 (expCond -> expression operador expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

  ! RPAREN          [ reduce using rule 129 (expCond -> expression operador expression .) ]


state 236

    (118) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 118 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 118 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 237

    (35) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN POINTCOMMA

    LPAREN          shift and go to state 258


state 238

    (86) list_number -> LBRACKET numbers . RBRACKET
    (87) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 259
    COMMA           shift and go to state 260


state 239

    (89) list_boolean -> LBRACKET booleans . RBRACKET
    (90) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 261
    COMMA           shift and go to state 262


state 240

    (92) list_string -> LBRACKET strings . RBRACKET
    (93) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 263
    COMMA           shift and go to state 264


state 241

    (88) numbers -> number_value .

    RBRACKET        reduce using rule 88 (numbers -> number_value .)
    COMMA           reduce using rule 88 (numbers -> number_value .)


state 242

    (91) booleans -> boolean_value .

    RBRACKET        reduce using rule 91 (booleans -> boolean_value .)
    COMMA           reduce using rule 91 (booleans -> boolean_value .)


state 243

    (94) strings -> string_value .

    RBRACKET        reduce using rule 94 (strings -> string_value .)
    COMMA           reduce using rule 94 (strings -> string_value .)


state 244

    (97) boolean_value -> other_value .
    (99) string_value -> other_value .
    (139) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 97 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 97 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 97 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 97 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 97 (boolean_value -> other_value .)
    COMMA           reduce using rule 97 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 139 (term -> other_value .)
    DIVIDE          reduce using rule 139 (term -> other_value .)
    PLUS            reduce using rule 139 (term -> other_value .)
    MINUS           reduce using rule 139 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 99 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 99 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 139 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 139 (term -> other_value .) ]


state 245

    (141) other_value -> variable .
    (151) array_value -> variable . LBRACKET expression RBRACKET
    (149) object_value_form1 -> variable . POINT variable
    (150) object_value_form2 -> variable . POINT array_value
    (134) group -> variable .

    RBRACKET        reduce using rule 141 (other_value -> variable .)
    COMMA           reduce using rule 141 (other_value -> variable .)
    PRODUCT         reduce using rule 141 (other_value -> variable .)
    DIVIDE          reduce using rule 141 (other_value -> variable .)
    PLUS            reduce using rule 141 (other_value -> variable .)
    MINUS           reduce using rule 141 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    INCREMENT       reduce using rule 134 (group -> variable .)
    DECREMENT       reduce using rule 134 (group -> variable .)


state 246

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 265
    VARBOOLEAN      shift and go to state 266
    VARSTRING       shift and go to state 267


state 247

    (33) funcionif -> IF LPAREN formIf RPAREN . LKEY

    LKEY            shift and go to state 268


state 248

    (102) chain -> termS PLUS . value
    (104) value -> . expression
    (105) value -> . string
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    value                          shift and go to state 269
    expression                     shift and go to state 199
    string                         shift and go to state 270
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 249

    (23) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 271


state 250

    (24) enums -> enums_numeric .
    (26) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 24 (enums -> enums_numeric .)
    COMMA           shift and go to state 272


state 251

    (25) enums -> enums_string .
    (30) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 25 (enums -> enums_string .)
    COMMA           shift and go to state 273


state 252

    (27) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 27 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 27 (enums_numeric -> enums_numeric_value .)


state 253

    (31) enums_string -> enums_string_value .

    COMMA           reduce using rule 31 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 31 (enums_string -> enums_string_value .)


state 254

    (28) enums_numeric_value -> object_name . EQUAL number
    (29) enums_numeric_value -> object_name .
    (32) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 274
    COMMA           reduce using rule 29 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 29 (enums_numeric_value -> object_name .)


state 255

    (151) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 151 (array_value -> variable LBRACKET expression RBRACKET .)


state 256

    (130) expCond -> LPAREN expression operador expression . RPAREN
    (106) expression -> expression . PLUS term
    (107) expression -> expression . MINUS term

    RPAREN          shift and go to state 257
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 257

    (130) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 130 (expCond -> LPAREN expression operador expression RPAREN .)


state 258

    (35) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN POINTCOMMA

    RPAREN          shift and go to state 275


state 259

    (86) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 86 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 86 (list_number -> LBRACKET numbers RBRACKET .)


state 260

    (87) numbers -> numbers COMMA . number_value
    (95) number_value -> . expression
    (106) expression -> . expression PLUS term
    (107) expression -> . expression MINUS term
    (108) expression -> . term
    (109) term -> . term PRODUCT term
    (110) term -> . term DIVIDE term
    (111) term -> . term1 INCREMENT
    (112) term -> . INCREMENT term1
    (113) term -> . term1 DECREMENT
    (114) term -> . DECREMENT term1
    (137) term -> . number
    (138) term -> . factor_expr
    (139) term -> . other_value
    (131) term1 -> . LPAREN group RPAREN
    (132) term1 -> . group
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (140) factor_expr -> . LPAREN expression RPAREN
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (133) group -> . number
    (134) group -> . variable
    (135) group -> . array_value
    (136) group -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    number_value                   shift and go to state 276
    expression                     shift and go to state 208
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 261

    (89) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 89 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 89 (list_boolean -> LBRACKET booleans RBRACKET .)


state 262

    (90) booleans -> booleans COMMA . boolean_value
    (96) boolean_value -> . boolean
    (97) boolean_value -> . other_value
    (166) boolean -> . TRUE
    (167) boolean -> . FALSE
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    boolean_value                  shift and go to state 277
    boolean                        shift and go to state 201
    other_value                    shift and go to state 202
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 263

    (92) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 92 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 92 (list_string -> LBRACKET strings RBRACKET .)


state 264

    (93) strings -> strings COMMA . string_value
    (98) string_value -> . string
    (99) string_value -> . other_value
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING
    (141) other_value -> . variable
    (142) other_value -> . array_value
    (143) other_value -> . enum_value
    (144) other_value -> . object_value
    (168) variable -> . VARIABLE
    (151) array_value -> . variable LBRACKET expression RBRACKET
    (152) enum_value -> . object_name POINT object_name
    (147) object_value -> . object_value_form1
    (148) object_value -> . object_value_form2
    (169) object_name -> . OBJECTNAME
    (149) object_value_form1 -> . variable POINT variable
    (150) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string_value                   shift and go to state 278
    string                         shift and go to state 211
    other_value                    shift and go to state 212
    variable                       shift and go to state 203
    array_value                    shift and go to state 204
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 205
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 265

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 279


state 266

    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 280


state 267

    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 281


state 268

    (33) funcionif -> IF LPAREN formIf RPAREN LKEY .

    POINTCOMMA      reduce using rule 33 (funcionif -> IF LPAREN formIf RPAREN LKEY .)
    $end            reduce using rule 33 (funcionif -> IF LPAREN formIf RPAREN LKEY .)


state 269

    (102) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 102 (chain -> termS PLUS value .)
    $end            reduce using rule 102 (chain -> termS PLUS value .)
    PLUS            reduce using rule 102 (chain -> termS PLUS value .)


state 270

    (105) value -> string .

    POINTCOMMA      reduce using rule 105 (value -> string .)
    $end            reduce using rule 105 (value -> string .)
    PLUS            reduce using rule 105 (value -> string .)


state 271

    (23) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 23 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 23 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 272

    (26) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (28) enums_numeric_value -> . object_name EQUAL number
    (29) enums_numeric_value -> . object_name
    (169) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums_numeric_value            shift and go to state 282
    object_name                    shift and go to state 283

state 273

    (30) enums_string -> enums_string COMMA . enums_string_value
    (32) enums_string_value -> . object_name EQUAL string
    (169) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums_string_value             shift and go to state 284
    object_name                    shift and go to state 285

state 274

    (28) enums_numeric_value -> object_name EQUAL . number
    (32) enums_string_value -> object_name EQUAL . string
    (161) number -> . NUMBER
    (162) number -> . FLOAT
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63

    number                         shift and go to state 286
    string                         shift and go to state 287

state 275

    (35) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN . POINTCOMMA

    POINTCOMMA      shift and go to state 288


state 276

    (87) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 87 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 87 (numbers -> numbers COMMA number_value .)


state 277

    (90) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 90 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 90 (booleans -> booleans COMMA boolean_value .)


state 278

    (93) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 93 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 93 (strings -> strings COMMA string_value .)


state 279

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 280

    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 281

    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 282

    (26) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 26 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 26 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 283

    (28) enums_numeric_value -> object_name . EQUAL number
    (29) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 289
    COMMA           reduce using rule 29 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 29 (enums_numeric_value -> object_name .)


state 284

    (30) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 30 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 30 (enums_string -> enums_string COMMA enums_string_value .)


state 285

    (32) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 290


state 286

    (28) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 28 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 28 (enums_numeric_value -> object_name EQUAL number .)


state 287

    (32) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 32 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 32 (enums_string_value -> object_name EQUAL string .)


state 288

    (35) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN POINTCOMMA .

    POINTCOMMA      reduce using rule 35 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN POINTCOMMA .)
    $end            reduce using rule 35 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN POINTCOMMA .)


state 289

    (28) enums_numeric_value -> object_name EQUAL . number
    (161) number -> . NUMBER
    (162) number -> . FLOAT

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59

    number                         shift and go to state 286

state 290

    (32) enums_string_value -> object_name EQUAL . string
    (163) string -> . NORMSTRING1
    (164) string -> . NORMSTRING2
    (165) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63

    string                         shift and go to state 287
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 77 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 77 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 78 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 78 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 156 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 157 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 195 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 199 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 235 resolved as shift
WARNING: reduce/reduce conflict in state 94 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 97
WARNING: reduce/reduce conflict in state 233 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 233
WARNING: reduce/reduce conflict in state 244 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 244
WARNING: reduce/reduce conflict in state 244 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 244

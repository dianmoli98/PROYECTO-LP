Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOLLAR
    INSTANCEOF
    MOD
    SPECIAL
    TYPEOF
    VAROBJECT

Grammar

Rule 0     S' -> statement
<<<<<<< HEAD
Rule 1     statement -> atomicstatement
Rule 2     statement -> atomicstatement statement
Rule 3     atomicstatement -> statement_value
Rule 4     atomicstatement -> statement_value POINTCOMMA
Rule 5     statement_value -> expression
Rule 6     statement_value -> concatenate
Rule 7     statement_value -> declare
Rule 8     statement_value -> assign
Rule 9     statement_value -> expCond
Rule 10    statement_value -> expOpLog
Rule 11    statement_value -> expNeg
Rule 12    statement_value -> expEq
Rule 13    statement_value -> expNotEq
Rule 14    statement_value -> exp_set
Rule 15    statement_value -> statement_control
Rule 16    statement_value -> comments
Rule 17    statement_value -> funtionStatement
Rule 18    statement_value -> consoleLog
Rule 19    statement_control -> funcionif
Rule 20    statement_control -> funcionwhile
Rule 21    statement_control -> funcionfor
Rule 22    consoleLog -> PRINT LPAREN RPAREN
Rule 23    consoleLog -> PRINT LPAREN VARIABLE RPAREN
Rule 24    consoleLog -> PRINT LPAREN string RPAREN
Rule 25    comments -> COMMENT
Rule 26    comments -> MULTICOMMENT
Rule 27    declare -> var_boolean
Rule 28    declare -> var_number
Rule 29    declare -> var_string
Rule 30    declare -> var_enum
Rule 31    declare -> var_null
Rule 32    declare -> var_undefined
Rule 33    declare -> declare_array
Rule 34    declare -> declare_enum
Rule 35    declare -> declare_tuples
Rule 36    declare -> declare_generic
Rule 37    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 38    enums -> enums_numeric
Rule 39    enums -> enums_string
Rule 40    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 41    enums_numeric -> enums_numeric_value
Rule 42    enums_numeric_value -> object_name EQUAL number
Rule 43    enums_numeric_value -> object_name
Rule 44    enums_string -> enums_string COMMA enums_string_value
Rule 45    enums_string -> enums_string_value
Rule 46    enums_string_value -> object_name EQUAL string
Rule 47    funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement
Rule 48    funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement
Rule 49    funcParametres -> VARIABLE
Rule 50    funcParametres -> VARIABLE COMMA funcParametres
Rule 51    funcionif -> IF LPAREN formLog RPAREN substatement
Rule 52    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif
Rule 53    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse
Rule 54    funcionif -> IF LPAREN formLog RPAREN substatement funcionelse
Rule 55    funcionelif -> ELIF LPAREN formLog RPAREN substatement
Rule 56    funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif
Rule 57    funcionelse -> ELSE substatement
Rule 58    funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 59    funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 60    funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
Rule 61    funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement
Rule 62    funcionwhile -> WHILE LPAREN formLog RPAREN substatement
Rule 63    substatement -> LKEY statement RKEY
Rule 64    substatement -> LKEY RKEY
Rule 65    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 66    declare_tuples -> declare_any TWOPOINTS tuples_2_variables
Rule 67    declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
Rule 68    declare_tuples -> declare_any TWOPOINTS tuples_3_variables
Rule 69    declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
Rule 70    declare_tuples -> declare_any TWOPOINTS tuples_4_variables
Rule 71    declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
Rule 72    tuples_2_variables -> LBRACKET types COMMA types RBRACKET
Rule 73    tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET
Rule 74    tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET
Rule 75    tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET
Rule 76    tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET
Rule 77    tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
Rule 78    declare_array -> declare_array_main_number
Rule 79    declare_array -> declare_array_main_boolean
Rule 80    declare_array -> declare_array_main_string
Rule 81    declare_array -> declare_generic_array
Rule 82    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 83    declare_array_main_number -> declare_array_number
Rule 84    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 85    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 86    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 87    declare_array_main_boolean -> declare_array_boolean
Rule 88    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 89    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 90    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 91    declare_array_main_string -> declare_array_string
Rule 92    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 93    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 94    declare_generic_array -> declare_any EQUAL list_types
Rule 95    var_null -> declare_any EQUAL NULL
Rule 96    var_undefined -> declare_any EQUAL UNDEFINED
Rule 97    var_number -> declare_number EQUAL number_value
Rule 98    var_number -> declare_number EQUAL funcionmath
Rule 99    var_number -> declare_number
Rule 100   var_number -> declare_number EQUAL expression
Rule 101   declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 102   var_boolean -> declare_boolean EQUAL boolean_value
Rule 103   var_boolean -> declare_boolean
Rule 104   declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 105   var_string -> declare_string EQUAL string_value
Rule 106   var_string -> declare_string
Rule 107   declare_string -> declare_any TWOPOINTS VARSTRING
Rule 108   var_enum -> declare_var_enum EQUAL enum_value
Rule 109   var_enum -> declare_var_enum
Rule 110   declare_var_enum -> declare_any TWOPOINTS object_name
Rule 111   declare_generic -> declare_any EQUAL assign_value
Rule 112   declare_generic -> declare_any
Rule 113   declare_any -> prefix VARIABLE
Rule 114   declare_any -> prefix VARIABLE TWOPOINTS ANY
Rule 115   assign -> assign_variable
Rule 116   assign -> assign_array
Rule 117   assign -> assign_object_value
Rule 118   assign_variable -> variable EQUAL assign_value
Rule 119   assign_variable -> variable EQUAL funciones
Rule 120   assign_variable -> variable EQUAL list_types
Rule 121   assign_array -> array_value EQUAL general_value
Rule 122   assign_object_value -> object_value_form1 EQUAL general_value
Rule 123   assign_object_value -> object_value_form1 EQUAL list_types
Rule 124   assign_object_value -> object_value_form2 EQUAL general_value
Rule 125   assign_value -> general_value
Rule 126   assign_value -> object_definition
Rule 127   assign_value -> tuples_list
Rule 128   tuples_list -> LBRACKET tuples_values RBRACKET
Rule 129   tuples_values -> tuples_values COMMA general_value
Rule 130   tuples_values -> general_value
Rule 131   object_definition -> LKEY attributes RKEY
Rule 132   attributes -> attributes COMMA attribute
Rule 133   attributes -> attribute
Rule 134   attribute -> variable TWOPOINTS general_value
Rule 135   attribute -> variable TWOPOINTS list_types
Rule 136   general_value -> expression
Rule 137   general_value -> boolean
Rule 138   general_value -> string
Rule 139   general_value -> concatenate
Rule 140   general_value -> string_object
Rule 141   general_value -> expCond
Rule 142   general_value -> expOpLog
Rule 143   general_value -> expNeg
Rule 144   general_value -> expEq
Rule 145   general_value -> expNotEq
Rule 146   list_types -> list_number
Rule 147   list_types -> list_boolean
Rule 148   list_types -> list_string
Rule 149   list_number -> LBRACKET numbers RBRACKET
Rule 150   numbers -> numbers COMMA number_value
Rule 151   numbers -> number_value
Rule 152   list_boolean -> LBRACKET booleans RBRACKET
Rule 153   booleans -> booleans COMMA boolean_value
Rule 154   booleans -> boolean_value
Rule 155   list_string -> LBRACKET strings RBRACKET
Rule 156   strings -> strings COMMA string_value
Rule 157   strings -> string_value
Rule 158   number_value -> expression
Rule 159   boolean_value -> boolean
Rule 160   boolean_value -> other_value
Rule 161   boolean_value -> expCond
Rule 162   boolean_value -> expOpLog
Rule 163   boolean_value -> expNeg
Rule 164   boolean_value -> expEq
Rule 165   boolean_value -> expNotEq
Rule 166   string_value -> string
Rule 167   string_value -> other_value
Rule 168   string_value -> string_object
Rule 169   string_value -> concatenate
Rule 170   concatenate -> string PLUS termS
Rule 171   termS -> termS PLUS value
Rule 172   termS -> value
Rule 173   value -> expression
Rule 174   value -> string
Rule 175   expression -> expression PLUS term
Rule 176   expression -> expression MINUS term
Rule 177   expression -> term
Rule 178   expression -> expression PRODUCT expression
Rule 179   expression -> expression DIVIDE expression
Rule 180   term -> term1 INCREMENT
Rule 181   term -> INCREMENT term1
Rule 182   term -> term1 DECREMENT
Rule 183   term -> DECREMENT term1
Rule 184   expNeg -> NEGATION expOpLog
Rule 185   expNeg -> NEGATION factor_exprlog
Rule 186   expNeg -> NEGATION boolean
Rule 187   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 188   expNeg -> NEGATION VARIABLE
Rule 189   expEq -> expCond EQUALTO expCond
Rule 190   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 191   expEq -> expression EQUALTO expression
Rule 192   expNotEq -> expCond NOTEQUALTO expCond
Rule 193   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 194   expNotEq -> expression NOTEQUALTO expression
Rule 195   expOpLog -> expCond oplogico expCond
Rule 196   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 197   expOpLog -> expression oplogico expression
Rule 198   factor_exprlog -> LPAREN expCond RPAREN
Rule 199   expCond -> expression operador expression
Rule 200   expCond -> LPAREN expression operador expression RPAREN
Rule 201   term1 -> LPAREN group RPAREN
Rule 202   term1 -> group
Rule 203   group -> number
Rule 204   group -> variable
Rule 205   group -> array_value
Rule 206   group -> object_value
Rule 207   term -> number
Rule 208   term -> factor_expr
Rule 209   term -> other_value
Rule 210   factor_expr -> LPAREN expression RPAREN
Rule 211   other_value -> variable
Rule 212   other_value -> funciones
Rule 213   other_value -> array_value
Rule 214   other_value -> enum_value
Rule 215   other_value -> object_value
Rule 216   formLog -> expCond
Rule 217   formLog -> expOpLog
Rule 218   object_value -> object_value_form1
Rule 219   object_value -> object_value_form2
Rule 220   string_object -> NEW OBJECTSTRING LPAREN string RPAREN
Rule 221   object_value_form1 -> variable POINT variable
Rule 222   object_value_form2 -> variable POINT array_value
Rule 223   array_value -> variable LBRACKET expression RBRACKET
Rule 224   enum_value -> object_name POINT object_name
Rule 225   prefix -> LET
Rule 226   prefix -> VAR
Rule 227   prefix -> STATIC
Rule 228   prefix -> CONST
Rule 229   typedate -> types
Rule 230   typedate -> ENUM
Rule 231   types -> VARNUMBER
Rule 232   types -> VARSTRING
Rule 233   types -> VARBOOLEAN
Rule 234   number -> NUMBER
Rule 235   number -> FLOAT
Rule 236   string -> NORMSTRING1
Rule 237   string -> NORMSTRING2
Rule 238   string -> MULTISTRING
Rule 239   boolean -> TRUE
Rule 240   boolean -> FALSE
Rule 241   variable -> VARIABLE
Rule 242   object_name -> OBJECTNAME
Rule 243   operador -> GREATER
Rule 244   operador -> LESS
Rule 245   operador -> GREATEREQUAL
Rule 246   operador -> LESSEQUAL
Rule 247   operador -> EQUALTO
Rule 248   operador -> NOTEQUALTO
Rule 249   oplogico -> AND
Rule 250   oplogico -> OR
Rule 251   funciones -> funcionmath
Rule 252   funciones -> funcionString
Rule 253   funciones -> funcionArray
Rule 254   funciones -> funcionConjunto
Rule 255   funcionmath -> mathAbs
Rule 256   funcionmath -> mathRound
Rule 257   funcionmath -> mathPow
Rule 258   mathAbs -> declare_any EQUAL mathAbs
Rule 259   mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN
Rule 260   mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN
Rule 261   mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
Rule 262   mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
Rule 263   mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN
Rule 264   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 265   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
Rule 266   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
Rule 267   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
Rule 268   funcionString -> stringCharAt
Rule 269   funcionString -> stringConcat
Rule 270   funcionString -> stringSplit
Rule 271   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
Rule 272   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
Rule 273   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 274   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
Rule 275   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
Rule 276   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
Rule 277   funcionArray -> arrayFilter
Rule 278   funcionArray -> arrayConcat
Rule 279   funcionArray -> arrayJoin
Rule 280   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 281   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
Rule 282   arrayJoin -> declare_any arrayJoin
Rule 283   arrayJoin -> declare_any arrayJoin POINTCOMMA
Rule 284   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
Rule 285   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
Rule 286   arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
Rule 287   funcionConjunto -> conjuntoAdd
Rule 288   funcionConjunto -> conjuntoHas
Rule 289   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
Rule 290   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
Rule 291   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
Rule 292   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
Rule 293   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
Rule 294   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
Rule 295   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
Rule 296   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

Terminals, with rules where they appear

ABS                  : 259 260 261
AND                  : 249
ANY                  : 114
ARRAY                : 85 89 93
COMMA                : 40 44 50 72 73 73 74 74 74 75 76 76 77 77 77 129 132 150 153 156 264 265 266 267
COMMENT              : 25
CONST                : 228
DECREMENT            : 182 183
DIVIDE               : 179
DOLLAR               : 
ELIF                 : 55 56
ELSE                 : 57
ENUM                 : 37 230
EQUAL                : 42 46 58 59 65 67 69 71 82 86 90 94 95 96 97 98 100 102 105 108 111 118 119 120 121 122 123 124 258
EQUALTO              : 189 190 191 247
FALSE                : 240
FLOAT                : 235
FOR                  : 58 59 60 61
FUNCTION             : 47 48
FUNCTIONADD          : 289 290 291 292
FUNCTIONCHARAT       : 271 272
FUNCTIONCONCAT       : 273 274 280 281
FUNCTIONFILTER       : 286
FUNCTIONHAS          : 293 294 295 296
FUNCTIONJOIN         : 284 285
FUNCTIONSPLIT        : 275 276
FUNMATH              : 259 260 261 262 263 264 265 266 267
GREATER              : 85 89 93 243
GREATEREQUAL         : 245
IF                   : 51 52 53 54
IN                   : 60 61
INCREMENT            : 180 181
INSTANCEOF           : 
LBRACKET             : 72 73 74 75 76 77 84 88 92 128 149 152 155 223
LESS                 : 85 89 93 244
LESSEQUAL            : 246
LET                  : 58 60 225
LKEY                 : 37 63 64 131
LPAREN               : 22 23 24 47 48 51 52 53 54 55 56 58 59 60 61 62 65 187 198 200 201 210 220 259 260 261 262 263 264 265 266 267 271 272 273 274 275 276 280 281 284 285 286 289 290 291 292 293 294 295 296
MINUS                : 176 261
MOD                  : 
MULTICOMMENT         : 26
MULTISTRING          : 238
NEGATION             : 184 185 186 187 188
NEW                  : 65 220
NORMSTRING1          : 236
NORMSTRING2          : 237
NOTEQUALTO           : 192 193 194 248
NULL                 : 95
NUMBER               : 234
OBJECTNAME           : 37 242
OBJECTSTRING         : 220
OR                   : 250
PLUS                 : 170 171 175
POINT                : 221 222 224 259 260 261 262 263 264 265 266 267 271 272 273 274 275 276 280 281 284 285 286 289 290 291 292 293 294 295 296
POINTCOMMA           : 4 58 58 59 59 283
POW                  : 264 265 266 267
PRINT                : 22 23 24
PRODUCT              : 178
RBRACKET             : 72 73 74 75 76 77 84 88 92 128 149 152 155 223
RKEY                 : 37 63 64 131
ROUND                : 262 263
RPAREN               : 22 23 24 47 48 51 52 53 54 55 56 58 59 60 61 62 65 187 198 200 201 210 220 259 260 261 262 263 264 265 266 267 271 272 273 274 275 276 280 281 284 285 286 289 290 291 292 293 294 295 296
SET                  : 65
SPECIAL              : 
STATIC               : 227
TRUE                 : 239
TWOPOINTS            : 66 67 68 69 70 71 85 89 93 101 104 107 110 114 134 135
TYPEOF               : 
UNDEFINED            : 96
VAR                  : 226
VARBOOLEAN           : 89 104 233
VARIABLE             : 23 47 48 49 50 58 59 60 60 61 61 113 114 188 241 259 262 264 264 266 267 271 271 272 273 273 274 275 275 276 280 280 281 284 284 285 286 286 289 289 290 291 292 293 293 294 295 296
VARNUMBER            : 85 101 231
VAROBJECT            : 
VARSTRING            : 93 107 232
WHILE                : 62
=======
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    statement_value -> exp_set
Rule 13    statement_value -> statement_control
Rule 14    statement_value -> comments
Rule 15    statement_value -> consoleLog
Rule 16    statement_control -> funcionif
Rule 17    statement_control -> funcionwhile
Rule 18    statement_control -> funcionfor
Rule 19    consoleLog -> PRINT LPAREN RPAREN
Rule 20    consoleLog -> PRINT LPAREN VARIABLE RPAREN
Rule 21    consoleLog -> PRINT LPAREN string RPAREN
Rule 22    comments -> COMMENT
Rule 23    comments -> MULTICOMMENT
Rule 24    declare -> var_boolean
Rule 25    declare -> var_number
Rule 26    declare -> var_string
Rule 27    declare -> var_enum
Rule 28    declare -> var_null
Rule 29    declare -> var_undefined
Rule 30    declare -> declare_array
Rule 31    declare -> declare_enum
Rule 32    declare -> declare_tuples
Rule 33    declare -> declare_generic
Rule 34    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 35    enums -> enums_numeric
Rule 36    enums -> enums_string
Rule 37    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 38    enums_numeric -> enums_numeric_value
Rule 39    enums_numeric_value -> object_name EQUAL number
Rule 40    enums_numeric_value -> object_name
Rule 41    enums_string -> enums_string COMMA enums_string_value
Rule 42    enums_string -> enums_string_value
Rule 43    enums_string_value -> object_name EQUAL string
Rule 44    funcionif -> IF LPAREN formLog RPAREN substatement
Rule 45    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif
Rule 46    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse
Rule 47    funcionif -> IF LPAREN formLog RPAREN substatement funcionelse
Rule 48    funcionelif -> ELIF LPAREN formLog RPAREN substatement
Rule 49    funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif
Rule 50    funcionelse -> ELSE substatement
Rule 51    funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 52    funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 53    funcionwhile -> WHILE LPAREN formLog RPAREN substatement
Rule 54    substatement -> LKEY statement RKEY
Rule 55    substatement -> LKEY RKEY
Rule 56    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 57    declare_tuples -> declare_any TWOPOINTS tuples_2_variables
Rule 58    declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
Rule 59    declare_tuples -> declare_any TWOPOINTS tuples_3_variables
Rule 60    declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
Rule 61    declare_tuples -> declare_any TWOPOINTS tuples_4_variables
Rule 62    declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
Rule 63    tuples_2_variables -> LBRACKET types COMMA types RBRACKET
Rule 64    tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET
Rule 65    tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET
Rule 66    tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET
Rule 67    tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET
Rule 68    tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
Rule 69    declare_array -> declare_array_main_number
Rule 70    declare_array -> declare_array_main_boolean
Rule 71    declare_array -> declare_array_main_string
Rule 72    declare_array -> declare_generic_array
Rule 73    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 74    declare_array_main_number -> declare_array_number
Rule 75    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 76    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 77    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 78    declare_array_main_boolean -> declare_array_boolean
Rule 79    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 80    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 81    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 82    declare_array_main_string -> declare_array_string
Rule 83    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 84    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 85    declare_generic_array -> declare_any EQUAL list_types
Rule 86    var_null -> declare_any EQUAL NULL
Rule 87    var_undefined -> declare_any EQUAL UNDEFINED
Rule 88    var_number -> declare_number EQUAL number_value
Rule 89    var_number -> declare_number EQUAL funcionmath
Rule 90    var_number -> declare_number
Rule 91    var_number -> declare_number EQUAL expression
Rule 92    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 93    var_boolean -> declare_boolean EQUAL boolean_value
Rule 94    var_boolean -> declare_boolean
Rule 95    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 96    var_string -> declare_string EQUAL string_value
Rule 97    var_string -> declare_string
Rule 98    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 99    var_enum -> declare_var_enum EQUAL enum_value
Rule 100   var_enum -> declare_var_enum
Rule 101   declare_var_enum -> declare_any TWOPOINTS object_name
Rule 102   declare_generic -> declare_any EQUAL assign_value
Rule 103   declare_generic -> declare_any
Rule 104   declare_any -> prefix VARIABLE
Rule 105   assign -> assign_variable
Rule 106   assign -> assign_array
Rule 107   assign -> assign_object_value
Rule 108   assign_variable -> variable EQUAL assign_value
Rule 109   assign_variable -> variable EQUAL funciones
Rule 110   assign_variable -> variable EQUAL list_types
Rule 111   assign_array -> array_value EQUAL general_value
Rule 112   assign_object_value -> object_value_form1 EQUAL general_value
Rule 113   assign_object_value -> object_value_form1 EQUAL list_types
Rule 114   assign_object_value -> object_value_form2 EQUAL general_value
Rule 115   assign_value -> general_value
Rule 116   assign_value -> object_definition
Rule 117   assign_value -> tuples_list
Rule 118   tuples_list -> LBRACKET tuples_values RBRACKET
Rule 119   tuples_values -> tuples_values COMMA general_value
Rule 120   tuples_values -> general_value
Rule 121   object_definition -> LKEY attributes RKEY
Rule 122   attributes -> attributes COMMA attribute
Rule 123   attributes -> attribute
Rule 124   attribute -> variable TWOPOINTS general_value
Rule 125   attribute -> variable TWOPOINTS list_types
Rule 126   general_value -> expression
Rule 127   general_value -> boolean
Rule 128   general_value -> string
Rule 129   general_value -> concatenate
Rule 130   general_value -> string_object
Rule 131   general_value -> expCond
Rule 132   general_value -> expOpLog
Rule 133   general_value -> expNeg
Rule 134   general_value -> expEq
Rule 135   general_value -> expNotEq
Rule 136   list_types -> list_number
Rule 137   list_types -> list_boolean
Rule 138   list_types -> list_string
Rule 139   list_number -> LBRACKET numbers RBRACKET
Rule 140   numbers -> numbers COMMA number_value
Rule 141   numbers -> number_value
Rule 142   list_boolean -> LBRACKET booleans RBRACKET
Rule 143   booleans -> booleans COMMA boolean_value
Rule 144   booleans -> boolean_value
Rule 145   list_string -> LBRACKET strings RBRACKET
Rule 146   strings -> strings COMMA string_value
Rule 147   strings -> string_value
Rule 148   number_value -> expression
Rule 149   boolean_value -> boolean
Rule 150   boolean_value -> other_value
Rule 151   boolean_value -> expCond
Rule 152   boolean_value -> expOpLog
Rule 153   boolean_value -> expNeg
Rule 154   boolean_value -> expEq
Rule 155   boolean_value -> expNotEq
Rule 156   string_value -> string
Rule 157   string_value -> other_value
Rule 158   string_value -> string_object
Rule 159   string_value -> concatenate
Rule 160   concatenate -> string PLUS termS
Rule 161   termS -> termS PLUS value
Rule 162   termS -> value
Rule 163   value -> expression
Rule 164   value -> string
Rule 165   expression -> expression PLUS term
Rule 166   expression -> expression MINUS term
Rule 167   expression -> term
Rule 168   expression -> expression PRODUCT expression
Rule 169   expression -> expression DIVIDE expression
Rule 170   term -> term1 INCREMENT
Rule 171   term -> INCREMENT term1
Rule 172   term -> term1 DECREMENT
Rule 173   term -> DECREMENT term1
Rule 174   expNeg -> NEGATION expOpLog
Rule 175   expNeg -> NEGATION factor_exprlog
Rule 176   expNeg -> NEGATION boolean
Rule 177   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 178   expNeg -> NEGATION VARIABLE
Rule 179   expEq -> expCond EQUALTO expCond
Rule 180   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 181   expEq -> expression EQUALTO expression
Rule 182   expNotEq -> expCond NOTEQUALTO expCond
Rule 183   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 184   expNotEq -> expression NOTEQUALTO expression
Rule 185   expOpLog -> expCond oplogico expCond
Rule 186   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 187   expOpLog -> expression oplogico expression
Rule 188   factor_exprlog -> LPAREN expCond RPAREN
Rule 189   expCond -> expression operador expression
Rule 190   expCond -> LPAREN expression operador expression RPAREN
Rule 191   term1 -> LPAREN group RPAREN
Rule 192   term1 -> group
Rule 193   group -> number
Rule 194   group -> variable
Rule 195   group -> array_value
Rule 196   group -> object_value
Rule 197   term -> number
Rule 198   term -> factor_expr
Rule 199   term -> other_value
Rule 200   factor_expr -> LPAREN expression RPAREN
Rule 201   other_value -> variable
Rule 202   other_value -> funciones
Rule 203   other_value -> array_value
Rule 204   other_value -> enum_value
Rule 205   other_value -> object_value
Rule 206   formLog -> expCond
Rule 207   formLog -> expOpLog
Rule 208   object_value -> object_value_form1
Rule 209   object_value -> object_value_form2
Rule 210   string_object -> NEW OBJECTSTRING LPAREN string RPAREN
Rule 211   object_value_form1 -> variable POINT variable
Rule 212   object_value_form2 -> variable POINT array_value
Rule 213   array_value -> variable LBRACKET expression RBRACKET
Rule 214   enum_value -> object_name POINT object_name
Rule 215   prefix -> LET
Rule 216   prefix -> VAR
Rule 217   prefix -> STATIC
Rule 218   prefix -> CONST
Rule 219   typedate -> types
Rule 220   typedate -> ENUM
Rule 221   types -> VARNUMBER
Rule 222   types -> VARSTRING
Rule 223   types -> VARBOOLEAN
Rule 224   number -> NUMBER
Rule 225   number -> FLOAT
Rule 226   string -> NORMSTRING1
Rule 227   string -> NORMSTRING2
Rule 228   string -> MULTISTRING
Rule 229   boolean -> TRUE
Rule 230   boolean -> FALSE
Rule 231   variable -> VARIABLE
Rule 232   object_name -> OBJECTNAME
Rule 233   operador -> GREATER
Rule 234   operador -> LESS
Rule 235   operador -> GREATEREQUAL
Rule 236   operador -> LESSEQUAL
Rule 237   operador -> EQUALTO
Rule 238   operador -> NOTEQUALTO
Rule 239   oplogico -> AND
Rule 240   oplogico -> OR
Rule 241   funciones -> funcionmath
Rule 242   funciones -> funcionString
Rule 243   funciones -> funcionArray
Rule 244   funciones -> funcionConjunto
Rule 245   funcionmath -> mathAbs
Rule 246   funcionmath -> mathRound
Rule 247   funcionmath -> mathPow
Rule 248   mathAbs -> declare_any EQUAL mathAbs
Rule 249   mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN
Rule 250   mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN
Rule 251   mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
Rule 252   mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
Rule 253   mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN
Rule 254   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 255   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
Rule 256   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
Rule 257   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
Rule 258   funcionString -> stringCharAt
Rule 259   funcionString -> stringConcat
Rule 260   funcionString -> stringSplit
Rule 261   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
Rule 262   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
Rule 263   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 264   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
Rule 265   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
Rule 266   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
Rule 267   funcionArray -> arrayFilter
Rule 268   funcionArray -> arrayConcat
Rule 269   funcionArray -> arrayJoin
Rule 270   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 271   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
Rule 272   arrayJoin -> declare_any arrayJoin
Rule 273   arrayJoin -> declare_any arrayJoin POINTCOMMA
Rule 274   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
Rule 275   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
Rule 276   arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
Rule 277   funcionConjunto -> conjuntoAdd
Rule 278   funcionConjunto -> conjuntoHas
Rule 279   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
Rule 280   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
Rule 281   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
Rule 282   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
Rule 283   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
Rule 284   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
Rule 285   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
Rule 286   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

Terminals, with rules where they appear

ABS                  : 249 250 251
AND                  : 239
ANY                  : 
ARRAY                : 76 80 84
COMMA                : 37 41 63 64 64 65 65 65 66 67 67 68 68 68 119 122 140 143 146 254 255 256 257
COMMENT              : 22
CONST                : 218
DECREMENT            : 172 173
DIVIDE               : 169
DOLLAR               : 
ELIF                 : 48 49
ELSE                 : 50
ENUM                 : 34 220
EQUAL                : 39 43 51 52 56 58 60 62 73 77 81 85 86 87 88 89 91 93 96 99 102 108 109 110 111 112 113 114 248
EQUALTO              : 179 180 181 237
FALSE                : 230
FLOAT                : 225
FOR                  : 51 52
FUNCTIONADD          : 279 280 281 282
FUNCTIONCHARAT       : 261 262
FUNCTIONCONCAT       : 263 264 270 271
FUNCTIONFILTER       : 276
FUNCTIONHAS          : 283 284 285 286
FUNCTIONJOIN         : 274 275
FUNCTIONSPLIT        : 265 266
FUNMATH              : 249 250 251 252 253 254 255 256 257
GREATER              : 76 80 84 233
GREATEREQUAL         : 235
IF                   : 44 45 46 47
IN                   : 
INCREMENT            : 170 171
INSTANCEOF           : 
LBRACKET             : 63 64 65 66 67 68 75 79 83 118 139 142 145 213
LCOMILLA             : 
LESS                 : 76 80 84 234
LESSEQUAL            : 236
LET                  : 215
LKEY                 : 34 54 55 121
LPAREN               : 19 20 21 44 45 46 47 48 49 51 52 53 56 177 188 190 191 200 210 249 250 251 252 253 254 255 256 257 261 262 263 264 265 266 270 271 274 275 276 279 280 281 282 283 284 285 286
MINUS                : 166 251
MOD                  : 
MULTICOMMENT         : 23
MULTISTRING          : 228
NEGATION             : 174 175 176 177 178
NEW                  : 56 210
NORMSTRING1          : 226
NORMSTRING2          : 227
NOTEQUALTO           : 182 183 184 238
NULL                 : 86
NUMBER               : 224
OBJECTNAME           : 34 232
OBJECTSTRING         : 210
OR                   : 240
PLUS                 : 160 161 165
POINT                : 211 212 214 249 250 251 252 253 254 255 256 257 261 262 263 264 265 266 270 271 274 275 276 279 280 281 282 283 284 285 286
POINTCOMMA           : 2 51 51 52 52 273
POW                  : 254 255 256 257
PRINT                : 19 20 21
PRODUCT              : 168
RBRACKET             : 63 64 65 66 67 68 75 79 83 118 139 142 145 213
RCOMILLA             : 
RKEY                 : 34 54 55 121
ROUND                : 252 253
RPAREN               : 19 20 21 44 45 46 47 48 49 51 52 53 56 177 188 190 191 200 210 249 250 251 252 253 254 255 256 257 261 262 263 264 265 266 270 271 274 275 276 279 280 281 282 283 284 285 286
SET                  : 56
SPECIAL              : 
STATIC               : 217
TRUE                 : 229
TWOPOINTS            : 57 58 59 60 61 62 76 80 84 92 95 98 101 124 125
TYPEOF               : 
UNDEFINED            : 87
VAR                  : 216
VARBOOLEAN           : 80 95 223
VARIABLE             : 20 51 52 104 178 231 249 252 254 254 256 257 261 261 262 263 263 264 265 265 266 270 270 271 274 274 275 276 276 279 279 280 281 282 283 283 284 285 286
VARNUMBER            : 76 92 221
VAROBJECT            : 
VARSTRING            : 84 98 222
WHILE                : 53
>>>>>>> master
error                : 

Nonterminals, with rules where they appear

<<<<<<< HEAD
arrayConcat          : 278
arrayFilter          : 277
arrayJoin            : 279 282 283
array_value          : 121 205 213 222
assign               : 8
assign_array         : 116
assign_object_value  : 117
assign_value         : 111 118
assign_variable      : 115
atomicstatement      : 1 2
attribute            : 132 133
attributes           : 131 132
boolean              : 137 159 186
boolean_value        : 102 153 154 291 295
booleans             : 152 153
comments             : 16
concatenate          : 6 139 169
conjuntoAdd          : 287
conjuntoHas          : 288
consoleLog           : 18
declare              : 7
declare_any          : 65 66 67 68 69 70 71 85 89 93 94 95 96 101 104 107 110 111 112 258 282 283
declare_array        : 33
declare_array_boolean : 86 87
declare_array_main_boolean : 79
declare_array_main_number : 78
declare_array_main_string : 80
declare_array_number : 82 83
declare_array_string : 90 91
declare_boolean      : 88 102 103
declare_enum         : 34
declare_generic      : 36
declare_generic_array : 81
declare_number       : 84 97 98 99 100
declare_string       : 92 105 106
declare_tuples       : 35
declare_var_enum     : 108 109
enum_value           : 108 214
enums                : 37
enums_numeric        : 38 40
enums_numeric_value  : 40 41
enums_string         : 39 44
enums_string_value   : 44 45
expCond              : 9 141 161 189 189 192 192 195 195 198 216
expEq                : 12 144 164
expNeg               : 11 143 163
expNotEq             : 13 145 165
expOpLog             : 10 142 162 184 187 217
exp_set              : 14
expression           : 5 100 136 158 173 175 176 178 178 179 179 191 191 194 194 197 197 199 199 200 200 210 223
factor_expr          : 208
factor_exprlog       : 185 190 190 193 193 196 196
formLog              : 51 52 53 54 55 56 58 59 62
funcParametres       : 48 50
funcionArray         : 253
funcionConjunto      : 254
funcionString        : 252
funcionelif          : 52 53 56
funcionelse          : 53 54
funciones            : 119 212
funcionfor           : 21
funcionif            : 19
funcionmath          : 98 251
funcionwhile         : 20
funtionStatement     : 17
general_value        : 75 75 76 76 76 77 77 77 77 121 122 124 125 129 130 134
group                : 201 202
list_boolean         : 86 147
list_number          : 82 146
list_string          : 90 148
list_types           : 94 120 123 135 281
mathAbs              : 255 258
mathPow              : 257
mathRound            : 256
number               : 42 203 207
number_value         : 58 59 97 150 151 260 261 263 265 265 266 267 272 290 294
numbers              : 149 150
object_definition    : 126
object_name          : 42 43 46 110 224 224
object_value         : 206 215
object_value_form1   : 122 123 218
object_value_form2   : 124 219
operador             : 199 200
oplogico             : 195 196 197
other_value          : 160 167 209
prefix               : 113 114
statement            : 2 63 0
statement_control    : 15
statement_value      : 3 4
string               : 24 46 138 166 170 174 220 274 276 285 292 296
stringCharAt         : 268
stringConcat         : 269
stringSplit          : 270
string_object        : 140 168
string_value         : 105 156 157
strings              : 155 156
substatement         : 47 48 51 52 53 54 55 56 57 58 59 60 61 62
term                 : 58 59 175 176 177
term1                : 180 181 182 183
termS                : 170 171
tuples_2_values      : 67
tuples_2_variables   : 66 67
tuples_3_values      : 69
tuples_3_variables   : 68 69
tuples_4_values      : 71
tuples_4_variables   : 70 71
tuples_list          : 127
tuples_values        : 128 129
typedate             : 
types                : 72 72 73 73 73 74 74 74 74 229
value                : 171 172
var_boolean          : 27
var_enum             : 30
var_null             : 31
var_number           : 28
var_string           : 29
var_undefined        : 32
variable             : 118 119 120 134 135 204 211 221 221 222 223
=======
arrayConcat          : 268
arrayFilter          : 267
arrayJoin            : 269 272 273
array_value          : 111 195 203 212
assign               : 6
assign_array         : 106
assign_object_value  : 107
assign_value         : 102 108
assign_variable      : 105
attribute            : 122 123
attributes           : 121 122
boolean              : 127 149 176
boolean_value        : 93 143 144 281 285
booleans             : 142 143
comments             : 14
concatenate          : 4 129 159
conjuntoAdd          : 277
conjuntoHas          : 278
consoleLog           : 15
declare              : 5
declare_any          : 56 57 58 59 60 61 62 76 80 84 85 86 87 92 95 98 101 102 103 248 272 273
declare_array        : 30
declare_array_boolean : 77 78
declare_array_main_boolean : 70
declare_array_main_number : 69
declare_array_main_string : 71
declare_array_number : 73 74
declare_array_string : 81 82
declare_boolean      : 79 93 94
declare_enum         : 31
declare_generic      : 33
declare_generic_array : 72
declare_number       : 75 88 89 90 91
declare_string       : 83 96 97
declare_tuples       : 32
declare_var_enum     : 99 100
enum_value           : 99 204
enums                : 34
enums_numeric        : 35 37
enums_numeric_value  : 37 38
enums_string         : 36 41
enums_string_value   : 41 42
expCond              : 7 131 151 179 179 182 182 185 185 188 206
expEq                : 10 134 154
expNeg               : 9 133 153
expNotEq             : 11 135 155
expOpLog             : 8 132 152 174 177 207
exp_set              : 12
expression           : 3 91 126 148 163 165 166 168 168 169 169 181 181 184 184 187 187 189 189 190 190 200 213
factor_expr          : 198
factor_exprlog       : 175 180 180 183 183 186 186
formLog              : 44 45 46 47 48 49 51 52 53
funcionArray         : 243
funcionConjunto      : 244
funcionString        : 242
funcionelif          : 45 46 49
funcionelse          : 46 47
funciones            : 109 202
funcionfor           : 18
funcionif            : 16
funcionmath          : 89 241
funcionwhile         : 17
general_value        : 66 66 67 67 67 68 68 68 68 111 112 114 115 119 120 124
group                : 191 192
list_boolean         : 77 137
list_number          : 73 136
list_string          : 81 138
list_types           : 85 110 113 125 271
mathAbs              : 245 248
mathPow              : 247
mathRound            : 246
number               : 39 193 197
number_value         : 51 52 88 140 141 250 251 253 255 255 256 257 262 280 284
numbers              : 139 140
object_definition    : 116
object_name          : 39 40 43 101 214 214
object_value         : 196 205
object_value_form1   : 112 113 208
object_value_form2   : 114 209
operador             : 189 190
oplogico             : 185 186 187
other_value          : 150 157 199
prefix               : 51 104
statement            : 54 0
statement_control    : 13
statement_value      : 1 2
string               : 21 43 128 156 160 164 210 264 266 275 282 286
stringCharAt         : 258
stringConcat         : 259
stringSplit          : 260
string_object        : 130 158
string_value         : 96 146 147
strings              : 145 146
substatement         : 44 45 46 47 48 49 50 51 52 53
term                 : 51 52 165 166 167
term1                : 170 171 172 173
termS                : 160 161
tuples_2_values      : 58
tuples_2_variables   : 57 58
tuples_3_values      : 60
tuples_3_variables   : 59 60
tuples_4_values      : 62
tuples_4_variables   : 61 62
tuples_list          : 117
tuples_values        : 118 119
typedate             : 
types                : 63 63 64 64 64 65 65 65 65 219
value                : 161 162
var_boolean          : 24
var_enum             : 27
var_null             : 28
var_number           : 25
var_string           : 26
var_undefined        : 29
variable             : 108 109 110 124 125 194 201 211 211 212 213
>>>>>>> master

Parsing method: LALR

state 0

    (0) S' -> . statement
<<<<<<< HEAD
    (1) statement -> . atomicstatement
    (2) statement -> . atomicstatement statement
    (3) atomicstatement -> . statement_value
    (4) atomicstatement -> . statement_value POINTCOMMA
    (5) statement_value -> . expression
    (6) statement_value -> . concatenate
    (7) statement_value -> . declare
    (8) statement_value -> . assign
    (9) statement_value -> . expCond
    (10) statement_value -> . expOpLog
    (11) statement_value -> . expNeg
    (12) statement_value -> . expEq
    (13) statement_value -> . expNotEq
    (14) statement_value -> . exp_set
    (15) statement_value -> . statement_control
    (16) statement_value -> . comments
    (17) statement_value -> . funtionStatement
    (18) statement_value -> . consoleLog
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (170) concatenate -> . string PLUS termS
    (27) declare -> . var_boolean
    (28) declare -> . var_number
    (29) declare -> . var_string
    (30) declare -> . var_enum
    (31) declare -> . var_null
    (32) declare -> . var_undefined
    (33) declare -> . declare_array
    (34) declare -> . declare_enum
    (35) declare -> . declare_tuples
    (36) declare -> . declare_generic
    (115) assign -> . assign_variable
    (116) assign -> . assign_array
    (117) assign -> . assign_object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (65) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (19) statement_control -> . funcionif
    (20) statement_control -> . funcionwhile
    (21) statement_control -> . funcionfor
    (25) comments -> . COMMENT
    (26) comments -> . MULTICOMMENT
    (47) funtionStatement -> . FUNCTION VARIABLE LPAREN RPAREN substatement
    (48) funtionStatement -> . FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement
    (22) consoleLog -> . PRINT LPAREN RPAREN
    (23) consoleLog -> . PRINT LPAREN VARIABLE RPAREN
    (24) consoleLog -> . PRINT LPAREN string RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (102) var_boolean -> . declare_boolean EQUAL boolean_value
    (103) var_boolean -> . declare_boolean
    (97) var_number -> . declare_number EQUAL number_value
    (98) var_number -> . declare_number EQUAL funcionmath
    (99) var_number -> . declare_number
    (100) var_number -> . declare_number EQUAL expression
    (105) var_string -> . declare_string EQUAL string_value
    (106) var_string -> . declare_string
    (108) var_enum -> . declare_var_enum EQUAL enum_value
    (109) var_enum -> . declare_var_enum
    (95) var_null -> . declare_any EQUAL NULL
    (96) var_undefined -> . declare_any EQUAL UNDEFINED
    (78) declare_array -> . declare_array_main_number
    (79) declare_array -> . declare_array_main_boolean
    (80) declare_array -> . declare_array_main_string
    (81) declare_array -> . declare_generic_array
    (37) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (66) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables
    (67) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (68) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables
    (69) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (70) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables
    (71) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (111) declare_generic -> . declare_any EQUAL assign_value
    (112) declare_generic -> . declare_any
    (118) assign_variable -> . variable EQUAL assign_value
    (119) assign_variable -> . variable EQUAL funciones
    (120) assign_variable -> . variable EQUAL list_types
    (121) assign_array -> . array_value EQUAL general_value
    (122) assign_object_value -> . object_value_form1 EQUAL general_value
    (123) assign_object_value -> . object_value_form1 EQUAL list_types
    (124) assign_object_value -> . object_value_form2 EQUAL general_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (51) funcionif -> . IF LPAREN formLog RPAREN substatement
    (52) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (53) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (54) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (62) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (58) funcionfor -> . FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (59) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> . FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
    (61) funcionfor -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (104) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (101) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (107) declare_string -> . declare_any TWOPOINTS VARSTRING
    (110) declare_var_enum -> . declare_any TWOPOINTS object_name
    (82) declare_array_main_number -> . declare_array_number EQUAL list_number
    (83) declare_array_main_number -> . declare_array_number
    (86) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (87) declare_array_main_boolean -> . declare_array_boolean
    (90) declare_array_main_string -> . declare_array_string EQUAL list_string
    (91) declare_array_main_string -> . declare_array_string
    (94) declare_generic_array -> . declare_any EQUAL list_types
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (84) declare_array_number -> . declare_number LBRACKET RBRACKET
    (85) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (88) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (89) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (92) declare_array_string -> . declare_string LBRACKET RBRACKET
    (93) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    COMMENT         shift and go to state 41
    MULTICOMMENT    shift and go to state 42
    FUNCTION        shift and go to state 43
    PRINT           shift and go to state 44
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    ENUM            shift and go to state 64
    IF              shift and go to state 72
    WHILE           shift and go to state 73
    FOR             shift and go to state 74
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101

    statement                      shift and go to state 1
    atomicstatement                shift and go to state 2
    statement_value                shift and go to state 3
    expression                     shift and go to state 4
    concatenate                    shift and go to state 5
    declare                        shift and go to state 6
    assign                         shift and go to state 7
    expCond                        shift and go to state 8
    expOpLog                       shift and go to state 9
    expNeg                         shift and go to state 10
    expEq                          shift and go to state 11
    expNotEq                       shift and go to state 12
    exp_set                        shift and go to state 13
    statement_control              shift and go to state 14
    comments                       shift and go to state 15
    funtionStatement               shift and go to state 16
    consoleLog                     shift and go to state 17
    term                           shift and go to state 18
    string                         shift and go to state 19
    var_boolean                    shift and go to state 20
    var_number                     shift and go to state 21
    var_string                     shift and go to state 22
    var_enum                       shift and go to state 23
    var_null                       shift and go to state 24
    var_undefined                  shift and go to state 25
    declare_array                  shift and go to state 26
    declare_enum                   shift and go to state 27
    declare_tuples                 shift and go to state 28
    declare_generic                shift and go to state 29
    assign_variable                shift and go to state 30
    assign_array                   shift and go to state 31
    assign_object_value            shift and go to state 32
    factor_exprlog                 shift and go to state 34
    declare_any                    shift and go to state 37
    funcionif                      shift and go to state 38
    funcionwhile                   shift and go to state 39
    funcionfor                     shift and go to state 40
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    declare_boolean                shift and go to state 54
    declare_number                 shift and go to state 55
    funcionmath                    shift and go to state 56
    declare_string                 shift and go to state 57
    declare_var_enum               shift and go to state 58
    enum_value                     shift and go to state 59
    declare_array_main_number      shift and go to state 60
    declare_array_main_boolean     shift and go to state 61
    declare_array_main_string      shift and go to state 62
    declare_generic_array          shift and go to state 63
    variable                       shift and go to state 66
    funciones                      shift and go to state 67
    array_value                    shift and go to state 68
    object_value_form1             shift and go to state 69
    object_value_form2             shift and go to state 70
    prefix                         shift and go to state 71
    group                          shift and go to state 76
    object_value                   shift and go to state 79
    object_name                    shift and go to state 80
    declare_array_number           shift and go to state 81
    declare_array_boolean          shift and go to state 82
    declare_array_string           shift and go to state 83
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
=======
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (14) statement_value -> . comments
    (15) statement_value -> . consoleLog
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (160) concatenate -> . string PLUS termS
    (24) declare -> . var_boolean
    (25) declare -> . var_number
    (26) declare -> . var_string
    (27) declare -> . var_enum
    (28) declare -> . var_null
    (29) declare -> . var_undefined
    (30) declare -> . declare_array
    (31) declare -> . declare_enum
    (32) declare -> . declare_tuples
    (33) declare -> . declare_generic
    (105) assign -> . assign_variable
    (106) assign -> . assign_array
    (107) assign -> . assign_object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (56) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (16) statement_control -> . funcionif
    (17) statement_control -> . funcionwhile
    (18) statement_control -> . funcionfor
    (22) comments -> . COMMENT
    (23) comments -> . MULTICOMMENT
    (19) consoleLog -> . PRINT LPAREN RPAREN
    (20) consoleLog -> . PRINT LPAREN VARIABLE RPAREN
    (21) consoleLog -> . PRINT LPAREN string RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (93) var_boolean -> . declare_boolean EQUAL boolean_value
    (94) var_boolean -> . declare_boolean
    (88) var_number -> . declare_number EQUAL number_value
    (89) var_number -> . declare_number EQUAL funcionmath
    (90) var_number -> . declare_number
    (91) var_number -> . declare_number EQUAL expression
    (96) var_string -> . declare_string EQUAL string_value
    (97) var_string -> . declare_string
    (99) var_enum -> . declare_var_enum EQUAL enum_value
    (100) var_enum -> . declare_var_enum
    (86) var_null -> . declare_any EQUAL NULL
    (87) var_undefined -> . declare_any EQUAL UNDEFINED
    (69) declare_array -> . declare_array_main_number
    (70) declare_array -> . declare_array_main_boolean
    (71) declare_array -> . declare_array_main_string
    (72) declare_array -> . declare_generic_array
    (34) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (57) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables
    (58) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (59) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables
    (60) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (61) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables
    (62) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (102) declare_generic -> . declare_any EQUAL assign_value
    (103) declare_generic -> . declare_any
    (108) assign_variable -> . variable EQUAL assign_value
    (109) assign_variable -> . variable EQUAL funciones
    (110) assign_variable -> . variable EQUAL list_types
    (111) assign_array -> . array_value EQUAL general_value
    (112) assign_object_value -> . object_value_form1 EQUAL general_value
    (113) assign_object_value -> . object_value_form1 EQUAL list_types
    (114) assign_object_value -> . object_value_form2 EQUAL general_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (104) declare_any -> . prefix VARIABLE
    (44) funcionif -> . IF LPAREN formLog RPAREN substatement
    (45) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (46) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (47) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (53) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (51) funcionfor -> . FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (52) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (95) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (92) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (98) declare_string -> . declare_any TWOPOINTS VARSTRING
    (101) declare_var_enum -> . declare_any TWOPOINTS object_name
    (73) declare_array_main_number -> . declare_array_number EQUAL list_number
    (74) declare_array_main_number -> . declare_array_number
    (77) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (78) declare_array_main_boolean -> . declare_array_boolean
    (81) declare_array_main_string -> . declare_array_string EQUAL list_string
    (82) declare_array_main_string -> . declare_array_string
    (85) declare_generic_array -> . declare_any EQUAL list_types
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (75) declare_array_number -> . declare_number LBRACKET RBRACKET
    (76) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (79) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (80) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (83) declare_array_string -> . declare_string LBRACKET RBRACKET
    (84) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    COMMENT         shift and go to state 39
    MULTICOMMENT    shift and go to state 40
    PRINT           shift and go to state 41
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    ENUM            shift and go to state 61
    IF              shift and go to state 69
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    comments                       shift and go to state 14
    consoleLog                     shift and go to state 15
    term                           shift and go to state 16
    string                         shift and go to state 17
    var_boolean                    shift and go to state 18
    var_number                     shift and go to state 19
    var_string                     shift and go to state 20
    var_enum                       shift and go to state 21
    var_null                       shift and go to state 22
    var_undefined                  shift and go to state 23
    declare_array                  shift and go to state 24
    declare_enum                   shift and go to state 25
    declare_tuples                 shift and go to state 26
    declare_generic                shift and go to state 27
    assign_variable                shift and go to state 28
    assign_array                   shift and go to state 29
    assign_object_value            shift and go to state 30
    factor_exprlog                 shift and go to state 32
    declare_any                    shift and go to state 35
    funcionif                      shift and go to state 36
    funcionwhile                   shift and go to state 37
    funcionfor                     shift and go to state 38
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    declare_boolean                shift and go to state 51
    declare_number                 shift and go to state 52
    funcionmath                    shift and go to state 53
    declare_string                 shift and go to state 54
    declare_var_enum               shift and go to state 55
    enum_value                     shift and go to state 56
    declare_array_main_number      shift and go to state 57
    declare_array_main_boolean     shift and go to state 58
    declare_array_main_string      shift and go to state 59
    declare_generic_array          shift and go to state 60
    variable                       shift and go to state 63
    funciones                      shift and go to state 64
    array_value                    shift and go to state 65
    object_value_form1             shift and go to state 66
    object_value_form2             shift and go to state 67
    prefix                         shift and go to state 68
    group                          shift and go to state 72
    object_value                   shift and go to state 75
    object_name                    shift and go to state 76
    declare_array_number           shift and go to state 77
    declare_array_boolean          shift and go to state 78
    declare_array_string           shift and go to state 79
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
>>>>>>> master

state 1

    (0) S' -> statement .



state 2

    (1) statement -> atomicstatement .
    (2) statement -> atomicstatement . statement
    (1) statement -> . atomicstatement
    (2) statement -> . atomicstatement statement
    (3) atomicstatement -> . statement_value
    (4) atomicstatement -> . statement_value POINTCOMMA
    (5) statement_value -> . expression
    (6) statement_value -> . concatenate
    (7) statement_value -> . declare
    (8) statement_value -> . assign
    (9) statement_value -> . expCond
    (10) statement_value -> . expOpLog
    (11) statement_value -> . expNeg
    (12) statement_value -> . expEq
    (13) statement_value -> . expNotEq
    (14) statement_value -> . exp_set
    (15) statement_value -> . statement_control
    (16) statement_value -> . comments
    (17) statement_value -> . funtionStatement
    (18) statement_value -> . consoleLog
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (170) concatenate -> . string PLUS termS
    (27) declare -> . var_boolean
    (28) declare -> . var_number
    (29) declare -> . var_string
    (30) declare -> . var_enum
    (31) declare -> . var_null
    (32) declare -> . var_undefined
    (33) declare -> . declare_array
    (34) declare -> . declare_enum
    (35) declare -> . declare_tuples
    (36) declare -> . declare_generic
    (115) assign -> . assign_variable
    (116) assign -> . assign_array
    (117) assign -> . assign_object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (65) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (19) statement_control -> . funcionif
    (20) statement_control -> . funcionwhile
    (21) statement_control -> . funcionfor
    (25) comments -> . COMMENT
    (26) comments -> . MULTICOMMENT
    (47) funtionStatement -> . FUNCTION VARIABLE LPAREN RPAREN substatement
    (48) funtionStatement -> . FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement
    (22) consoleLog -> . PRINT LPAREN RPAREN
    (23) consoleLog -> . PRINT LPAREN VARIABLE RPAREN
    (24) consoleLog -> . PRINT LPAREN string RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (102) var_boolean -> . declare_boolean EQUAL boolean_value
    (103) var_boolean -> . declare_boolean
    (97) var_number -> . declare_number EQUAL number_value
    (98) var_number -> . declare_number EQUAL funcionmath
    (99) var_number -> . declare_number
    (100) var_number -> . declare_number EQUAL expression
    (105) var_string -> . declare_string EQUAL string_value
    (106) var_string -> . declare_string
    (108) var_enum -> . declare_var_enum EQUAL enum_value
    (109) var_enum -> . declare_var_enum
    (95) var_null -> . declare_any EQUAL NULL
    (96) var_undefined -> . declare_any EQUAL UNDEFINED
    (78) declare_array -> . declare_array_main_number
    (79) declare_array -> . declare_array_main_boolean
    (80) declare_array -> . declare_array_main_string
    (81) declare_array -> . declare_generic_array
    (37) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (66) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables
    (67) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (68) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables
    (69) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (70) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables
    (71) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (111) declare_generic -> . declare_any EQUAL assign_value
    (112) declare_generic -> . declare_any
    (118) assign_variable -> . variable EQUAL assign_value
    (119) assign_variable -> . variable EQUAL funciones
    (120) assign_variable -> . variable EQUAL list_types
    (121) assign_array -> . array_value EQUAL general_value
    (122) assign_object_value -> . object_value_form1 EQUAL general_value
    (123) assign_object_value -> . object_value_form1 EQUAL list_types
    (124) assign_object_value -> . object_value_form2 EQUAL general_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (51) funcionif -> . IF LPAREN formLog RPAREN substatement
    (52) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (53) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (54) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (62) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (58) funcionfor -> . FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (59) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> . FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
    (61) funcionfor -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (104) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (101) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (107) declare_string -> . declare_any TWOPOINTS VARSTRING
    (110) declare_var_enum -> . declare_any TWOPOINTS object_name
    (82) declare_array_main_number -> . declare_array_number EQUAL list_number
    (83) declare_array_main_number -> . declare_array_number
    (86) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (87) declare_array_main_boolean -> . declare_array_boolean
    (90) declare_array_main_string -> . declare_array_string EQUAL list_string
    (91) declare_array_main_string -> . declare_array_string
    (94) declare_generic_array -> . declare_any EQUAL list_types
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (84) declare_array_number -> . declare_number LBRACKET RBRACKET
    (85) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (88) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (89) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (92) declare_array_string -> . declare_string LBRACKET RBRACKET
    (93) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    $end            reduce using rule 1 (statement -> atomicstatement .)
    RKEY            reduce using rule 1 (statement -> atomicstatement .)
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    COMMENT         shift and go to state 41
    MULTICOMMENT    shift and go to state 42
    FUNCTION        shift and go to state 43
    PRINT           shift and go to state 44
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    ENUM            shift and go to state 64
    IF              shift and go to state 72
    WHILE           shift and go to state 73
    FOR             shift and go to state 74
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101

    atomicstatement                shift and go to state 2
    statement                      shift and go to state 102
    statement_value                shift and go to state 3
    expression                     shift and go to state 4
    concatenate                    shift and go to state 5
    declare                        shift and go to state 6
    assign                         shift and go to state 7
    expCond                        shift and go to state 8
    expOpLog                       shift and go to state 9
    expNeg                         shift and go to state 10
    expEq                          shift and go to state 11
    expNotEq                       shift and go to state 12
    exp_set                        shift and go to state 13
    statement_control              shift and go to state 14
    comments                       shift and go to state 15
    funtionStatement               shift and go to state 16
    consoleLog                     shift and go to state 17
    term                           shift and go to state 18
    string                         shift and go to state 19
    var_boolean                    shift and go to state 20
    var_number                     shift and go to state 21
    var_string                     shift and go to state 22
    var_enum                       shift and go to state 23
    var_null                       shift and go to state 24
    var_undefined                  shift and go to state 25
    declare_array                  shift and go to state 26
    declare_enum                   shift and go to state 27
    declare_tuples                 shift and go to state 28
    declare_generic                shift and go to state 29
    assign_variable                shift and go to state 30
    assign_array                   shift and go to state 31
    assign_object_value            shift and go to state 32
    factor_exprlog                 shift and go to state 34
    declare_any                    shift and go to state 37
    funcionif                      shift and go to state 38
    funcionwhile                   shift and go to state 39
    funcionfor                     shift and go to state 40
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    declare_boolean                shift and go to state 54
    declare_number                 shift and go to state 55
    funcionmath                    shift and go to state 56
    declare_string                 shift and go to state 57
    declare_var_enum               shift and go to state 58
    enum_value                     shift and go to state 59
    declare_array_main_number      shift and go to state 60
    declare_array_main_boolean     shift and go to state 61
    declare_array_main_string      shift and go to state 62
    declare_generic_array          shift and go to state 63
    variable                       shift and go to state 66
    funciones                      shift and go to state 67
    array_value                    shift and go to state 68
    object_value_form1             shift and go to state 69
    object_value_form2             shift and go to state 70
    prefix                         shift and go to state 71
    group                          shift and go to state 76
    object_value                   shift and go to state 79
    object_name                    shift and go to state 80
    declare_array_number           shift and go to state 81
    declare_array_boolean          shift and go to state 82
    declare_array_string           shift and go to state 83
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100

state 3

<<<<<<< HEAD
    (3) atomicstatement -> statement_value .
    (4) atomicstatement -> statement_value . POINTCOMMA

    LPAREN          reduce using rule 3 (atomicstatement -> statement_value .)
    NEGATION        reduce using rule 3 (atomicstatement -> statement_value .)
    COMMENT         reduce using rule 3 (atomicstatement -> statement_value .)
    MULTICOMMENT    reduce using rule 3 (atomicstatement -> statement_value .)
    FUNCTION        reduce using rule 3 (atomicstatement -> statement_value .)
    PRINT           reduce using rule 3 (atomicstatement -> statement_value .)
    INCREMENT       reduce using rule 3 (atomicstatement -> statement_value .)
    DECREMENT       reduce using rule 3 (atomicstatement -> statement_value .)
    NORMSTRING1     reduce using rule 3 (atomicstatement -> statement_value .)
    NORMSTRING2     reduce using rule 3 (atomicstatement -> statement_value .)
    MULTISTRING     reduce using rule 3 (atomicstatement -> statement_value .)
    ENUM            reduce using rule 3 (atomicstatement -> statement_value .)
    IF              reduce using rule 3 (atomicstatement -> statement_value .)
    WHILE           reduce using rule 3 (atomicstatement -> statement_value .)
    FOR             reduce using rule 3 (atomicstatement -> statement_value .)
    NUMBER          reduce using rule 3 (atomicstatement -> statement_value .)
    FLOAT           reduce using rule 3 (atomicstatement -> statement_value .)
    VARIABLE        reduce using rule 3 (atomicstatement -> statement_value .)
    LET             reduce using rule 3 (atomicstatement -> statement_value .)
    VAR             reduce using rule 3 (atomicstatement -> statement_value .)
    STATIC          reduce using rule 3 (atomicstatement -> statement_value .)
    CONST           reduce using rule 3 (atomicstatement -> statement_value .)
    OBJECTNAME      reduce using rule 3 (atomicstatement -> statement_value .)
    FUNMATH         reduce using rule 3 (atomicstatement -> statement_value .)
    $end            reduce using rule 3 (atomicstatement -> statement_value .)
    RKEY            reduce using rule 3 (atomicstatement -> statement_value .)
    POINTCOMMA      shift and go to state 103
=======
    (3) statement_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (181) expEq -> expression . EQUALTO expression
    (184) expNotEq -> expression . NOTEQUALTO expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    RKEY            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105

state 4
>>>>>>> master


state 4

    (5) statement_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (191) expEq -> expression . EQUALTO expression
    (194) expNotEq -> expression . NOTEQUALTO expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 5 (statement_value -> expression .)
    LPAREN          reduce using rule 5 (statement_value -> expression .)
    NEGATION        reduce using rule 5 (statement_value -> expression .)
    COMMENT         reduce using rule 5 (statement_value -> expression .)
    MULTICOMMENT    reduce using rule 5 (statement_value -> expression .)
    FUNCTION        reduce using rule 5 (statement_value -> expression .)
    PRINT           reduce using rule 5 (statement_value -> expression .)
    INCREMENT       reduce using rule 5 (statement_value -> expression .)
    DECREMENT       reduce using rule 5 (statement_value -> expression .)
    NORMSTRING1     reduce using rule 5 (statement_value -> expression .)
    NORMSTRING2     reduce using rule 5 (statement_value -> expression .)
    MULTISTRING     reduce using rule 5 (statement_value -> expression .)
    ENUM            reduce using rule 5 (statement_value -> expression .)
    IF              reduce using rule 5 (statement_value -> expression .)
    WHILE           reduce using rule 5 (statement_value -> expression .)
    FOR             reduce using rule 5 (statement_value -> expression .)
    NUMBER          reduce using rule 5 (statement_value -> expression .)
    FLOAT           reduce using rule 5 (statement_value -> expression .)
    VARIABLE        reduce using rule 5 (statement_value -> expression .)
    LET             reduce using rule 5 (statement_value -> expression .)
    VAR             reduce using rule 5 (statement_value -> expression .)
    STATIC          reduce using rule 5 (statement_value -> expression .)
    CONST           reduce using rule 5 (statement_value -> expression .)
    OBJECTNAME      reduce using rule 5 (statement_value -> expression .)
    FUNMATH         reduce using rule 5 (statement_value -> expression .)
    $end            reduce using rule 5 (statement_value -> expression .)
    RKEY            reduce using rule 5 (statement_value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    EQUALTO         shift and go to state 110
    NOTEQUALTO      shift and go to state 111
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109

state 5

    (6) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 6 (statement_value -> concatenate .)
    LPAREN          reduce using rule 6 (statement_value -> concatenate .)
    NEGATION        reduce using rule 6 (statement_value -> concatenate .)
    COMMENT         reduce using rule 6 (statement_value -> concatenate .)
    MULTICOMMENT    reduce using rule 6 (statement_value -> concatenate .)
    FUNCTION        reduce using rule 6 (statement_value -> concatenate .)
    PRINT           reduce using rule 6 (statement_value -> concatenate .)
    INCREMENT       reduce using rule 6 (statement_value -> concatenate .)
    DECREMENT       reduce using rule 6 (statement_value -> concatenate .)
    NORMSTRING1     reduce using rule 6 (statement_value -> concatenate .)
    NORMSTRING2     reduce using rule 6 (statement_value -> concatenate .)
    MULTISTRING     reduce using rule 6 (statement_value -> concatenate .)
    ENUM            reduce using rule 6 (statement_value -> concatenate .)
    IF              reduce using rule 6 (statement_value -> concatenate .)
    WHILE           reduce using rule 6 (statement_value -> concatenate .)
    FOR             reduce using rule 6 (statement_value -> concatenate .)
    NUMBER          reduce using rule 6 (statement_value -> concatenate .)
    FLOAT           reduce using rule 6 (statement_value -> concatenate .)
    VARIABLE        reduce using rule 6 (statement_value -> concatenate .)
    LET             reduce using rule 6 (statement_value -> concatenate .)
    VAR             reduce using rule 6 (statement_value -> concatenate .)
    STATIC          reduce using rule 6 (statement_value -> concatenate .)
    CONST           reduce using rule 6 (statement_value -> concatenate .)
    OBJECTNAME      reduce using rule 6 (statement_value -> concatenate .)
    FUNMATH         reduce using rule 6 (statement_value -> concatenate .)
    $end            reduce using rule 6 (statement_value -> concatenate .)
    RKEY            reduce using rule 6 (statement_value -> concatenate .)


state 6

    (7) statement_value -> declare .

    POINTCOMMA      reduce using rule 7 (statement_value -> declare .)
    LPAREN          reduce using rule 7 (statement_value -> declare .)
    NEGATION        reduce using rule 7 (statement_value -> declare .)
    COMMENT         reduce using rule 7 (statement_value -> declare .)
    MULTICOMMENT    reduce using rule 7 (statement_value -> declare .)
    FUNCTION        reduce using rule 7 (statement_value -> declare .)
    PRINT           reduce using rule 7 (statement_value -> declare .)
    INCREMENT       reduce using rule 7 (statement_value -> declare .)
    DECREMENT       reduce using rule 7 (statement_value -> declare .)
    NORMSTRING1     reduce using rule 7 (statement_value -> declare .)
    NORMSTRING2     reduce using rule 7 (statement_value -> declare .)
    MULTISTRING     reduce using rule 7 (statement_value -> declare .)
    ENUM            reduce using rule 7 (statement_value -> declare .)
    IF              reduce using rule 7 (statement_value -> declare .)
    WHILE           reduce using rule 7 (statement_value -> declare .)
    FOR             reduce using rule 7 (statement_value -> declare .)
    NUMBER          reduce using rule 7 (statement_value -> declare .)
    FLOAT           reduce using rule 7 (statement_value -> declare .)
    VARIABLE        reduce using rule 7 (statement_value -> declare .)
    LET             reduce using rule 7 (statement_value -> declare .)
    VAR             reduce using rule 7 (statement_value -> declare .)
    STATIC          reduce using rule 7 (statement_value -> declare .)
    CONST           reduce using rule 7 (statement_value -> declare .)
    OBJECTNAME      reduce using rule 7 (statement_value -> declare .)
    FUNMATH         reduce using rule 7 (statement_value -> declare .)
    $end            reduce using rule 7 (statement_value -> declare .)
    RKEY            reduce using rule 7 (statement_value -> declare .)


state 7

<<<<<<< HEAD
    (8) statement_value -> assign .

    POINTCOMMA      reduce using rule 8 (statement_value -> assign .)
    LPAREN          reduce using rule 8 (statement_value -> assign .)
    NEGATION        reduce using rule 8 (statement_value -> assign .)
    COMMENT         reduce using rule 8 (statement_value -> assign .)
    MULTICOMMENT    reduce using rule 8 (statement_value -> assign .)
    FUNCTION        reduce using rule 8 (statement_value -> assign .)
    PRINT           reduce using rule 8 (statement_value -> assign .)
    INCREMENT       reduce using rule 8 (statement_value -> assign .)
    DECREMENT       reduce using rule 8 (statement_value -> assign .)
    NORMSTRING1     reduce using rule 8 (statement_value -> assign .)
    NORMSTRING2     reduce using rule 8 (statement_value -> assign .)
    MULTISTRING     reduce using rule 8 (statement_value -> assign .)
    ENUM            reduce using rule 8 (statement_value -> assign .)
    IF              reduce using rule 8 (statement_value -> assign .)
    WHILE           reduce using rule 8 (statement_value -> assign .)
    FOR             reduce using rule 8 (statement_value -> assign .)
    NUMBER          reduce using rule 8 (statement_value -> assign .)
    FLOAT           reduce using rule 8 (statement_value -> assign .)
    VARIABLE        reduce using rule 8 (statement_value -> assign .)
    LET             reduce using rule 8 (statement_value -> assign .)
    VAR             reduce using rule 8 (statement_value -> assign .)
    STATIC          reduce using rule 8 (statement_value -> assign .)
    CONST           reduce using rule 8 (statement_value -> assign .)
    OBJECTNAME      reduce using rule 8 (statement_value -> assign .)
    FUNMATH         reduce using rule 8 (statement_value -> assign .)
    $end            reduce using rule 8 (statement_value -> assign .)
    RKEY            reduce using rule 8 (statement_value -> assign .)
=======
    (7) statement_value -> expCond .
    (185) expOpLog -> expCond . oplogico expCond
    (179) expEq -> expCond . EQUALTO expCond
    (182) expNotEq -> expCond . NOTEQUALTO expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    RKEY            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 115
    NOTEQUALTO      shift and go to state 116
    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master


state 8

    (9) statement_value -> expCond .
    (195) expOpLog -> expCond . oplogico expCond
    (189) expEq -> expCond . EQUALTO expCond
    (192) expNotEq -> expCond . NOTEQUALTO expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 9 (statement_value -> expCond .)
    LPAREN          reduce using rule 9 (statement_value -> expCond .)
    NEGATION        reduce using rule 9 (statement_value -> expCond .)
    COMMENT         reduce using rule 9 (statement_value -> expCond .)
    MULTICOMMENT    reduce using rule 9 (statement_value -> expCond .)
    FUNCTION        reduce using rule 9 (statement_value -> expCond .)
    PRINT           reduce using rule 9 (statement_value -> expCond .)
    INCREMENT       reduce using rule 9 (statement_value -> expCond .)
    DECREMENT       reduce using rule 9 (statement_value -> expCond .)
    NORMSTRING1     reduce using rule 9 (statement_value -> expCond .)
    NORMSTRING2     reduce using rule 9 (statement_value -> expCond .)
    MULTISTRING     reduce using rule 9 (statement_value -> expCond .)
    ENUM            reduce using rule 9 (statement_value -> expCond .)
    IF              reduce using rule 9 (statement_value -> expCond .)
    WHILE           reduce using rule 9 (statement_value -> expCond .)
    FOR             reduce using rule 9 (statement_value -> expCond .)
    NUMBER          reduce using rule 9 (statement_value -> expCond .)
    FLOAT           reduce using rule 9 (statement_value -> expCond .)
    VARIABLE        reduce using rule 9 (statement_value -> expCond .)
    LET             reduce using rule 9 (statement_value -> expCond .)
    VAR             reduce using rule 9 (statement_value -> expCond .)
    STATIC          reduce using rule 9 (statement_value -> expCond .)
    CONST           reduce using rule 9 (statement_value -> expCond .)
    OBJECTNAME      reduce using rule 9 (statement_value -> expCond .)
    FUNMATH         reduce using rule 9 (statement_value -> expCond .)
    $end            reduce using rule 9 (statement_value -> expCond .)
    RKEY            reduce using rule 9 (statement_value -> expCond .)
    EQUALTO         shift and go to state 119
    NOTEQUALTO      shift and go to state 120
    AND             shift and go to state 116
    OR              shift and go to state 117

    oplogico                       shift and go to state 118

state 9

    (10) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 10 (statement_value -> expOpLog .)
    LPAREN          reduce using rule 10 (statement_value -> expOpLog .)
    NEGATION        reduce using rule 10 (statement_value -> expOpLog .)
    COMMENT         reduce using rule 10 (statement_value -> expOpLog .)
    MULTICOMMENT    reduce using rule 10 (statement_value -> expOpLog .)
    FUNCTION        reduce using rule 10 (statement_value -> expOpLog .)
    PRINT           reduce using rule 10 (statement_value -> expOpLog .)
    INCREMENT       reduce using rule 10 (statement_value -> expOpLog .)
    DECREMENT       reduce using rule 10 (statement_value -> expOpLog .)
    NORMSTRING1     reduce using rule 10 (statement_value -> expOpLog .)
    NORMSTRING2     reduce using rule 10 (statement_value -> expOpLog .)
    MULTISTRING     reduce using rule 10 (statement_value -> expOpLog .)
    ENUM            reduce using rule 10 (statement_value -> expOpLog .)
    IF              reduce using rule 10 (statement_value -> expOpLog .)
    WHILE           reduce using rule 10 (statement_value -> expOpLog .)
    FOR             reduce using rule 10 (statement_value -> expOpLog .)
    NUMBER          reduce using rule 10 (statement_value -> expOpLog .)
    FLOAT           reduce using rule 10 (statement_value -> expOpLog .)
    VARIABLE        reduce using rule 10 (statement_value -> expOpLog .)
    LET             reduce using rule 10 (statement_value -> expOpLog .)
    VAR             reduce using rule 10 (statement_value -> expOpLog .)
    STATIC          reduce using rule 10 (statement_value -> expOpLog .)
    CONST           reduce using rule 10 (statement_value -> expOpLog .)
    OBJECTNAME      reduce using rule 10 (statement_value -> expOpLog .)
    FUNMATH         reduce using rule 10 (statement_value -> expOpLog .)
    $end            reduce using rule 10 (statement_value -> expOpLog .)
    RKEY            reduce using rule 10 (statement_value -> expOpLog .)


state 10

    (11) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNeg .)
    LPAREN          reduce using rule 11 (statement_value -> expNeg .)
    NEGATION        reduce using rule 11 (statement_value -> expNeg .)
    COMMENT         reduce using rule 11 (statement_value -> expNeg .)
    MULTICOMMENT    reduce using rule 11 (statement_value -> expNeg .)
    FUNCTION        reduce using rule 11 (statement_value -> expNeg .)
    PRINT           reduce using rule 11 (statement_value -> expNeg .)
    INCREMENT       reduce using rule 11 (statement_value -> expNeg .)
    DECREMENT       reduce using rule 11 (statement_value -> expNeg .)
    NORMSTRING1     reduce using rule 11 (statement_value -> expNeg .)
    NORMSTRING2     reduce using rule 11 (statement_value -> expNeg .)
    MULTISTRING     reduce using rule 11 (statement_value -> expNeg .)
    ENUM            reduce using rule 11 (statement_value -> expNeg .)
    IF              reduce using rule 11 (statement_value -> expNeg .)
    WHILE           reduce using rule 11 (statement_value -> expNeg .)
    FOR             reduce using rule 11 (statement_value -> expNeg .)
    NUMBER          reduce using rule 11 (statement_value -> expNeg .)
    FLOAT           reduce using rule 11 (statement_value -> expNeg .)
    VARIABLE        reduce using rule 11 (statement_value -> expNeg .)
    LET             reduce using rule 11 (statement_value -> expNeg .)
    VAR             reduce using rule 11 (statement_value -> expNeg .)
    STATIC          reduce using rule 11 (statement_value -> expNeg .)
    CONST           reduce using rule 11 (statement_value -> expNeg .)
    OBJECTNAME      reduce using rule 11 (statement_value -> expNeg .)
    FUNMATH         reduce using rule 11 (statement_value -> expNeg .)
    $end            reduce using rule 11 (statement_value -> expNeg .)
    RKEY            reduce using rule 11 (statement_value -> expNeg .)


state 11

    (12) statement_value -> expEq .

    POINTCOMMA      reduce using rule 12 (statement_value -> expEq .)
    LPAREN          reduce using rule 12 (statement_value -> expEq .)
    NEGATION        reduce using rule 12 (statement_value -> expEq .)
    COMMENT         reduce using rule 12 (statement_value -> expEq .)
    MULTICOMMENT    reduce using rule 12 (statement_value -> expEq .)
    FUNCTION        reduce using rule 12 (statement_value -> expEq .)
    PRINT           reduce using rule 12 (statement_value -> expEq .)
    INCREMENT       reduce using rule 12 (statement_value -> expEq .)
    DECREMENT       reduce using rule 12 (statement_value -> expEq .)
    NORMSTRING1     reduce using rule 12 (statement_value -> expEq .)
    NORMSTRING2     reduce using rule 12 (statement_value -> expEq .)
    MULTISTRING     reduce using rule 12 (statement_value -> expEq .)
    ENUM            reduce using rule 12 (statement_value -> expEq .)
    IF              reduce using rule 12 (statement_value -> expEq .)
    WHILE           reduce using rule 12 (statement_value -> expEq .)
    FOR             reduce using rule 12 (statement_value -> expEq .)
    NUMBER          reduce using rule 12 (statement_value -> expEq .)
    FLOAT           reduce using rule 12 (statement_value -> expEq .)
    VARIABLE        reduce using rule 12 (statement_value -> expEq .)
    LET             reduce using rule 12 (statement_value -> expEq .)
    VAR             reduce using rule 12 (statement_value -> expEq .)
    STATIC          reduce using rule 12 (statement_value -> expEq .)
    CONST           reduce using rule 12 (statement_value -> expEq .)
    OBJECTNAME      reduce using rule 12 (statement_value -> expEq .)
    FUNMATH         reduce using rule 12 (statement_value -> expEq .)
    $end            reduce using rule 12 (statement_value -> expEq .)
    RKEY            reduce using rule 12 (statement_value -> expEq .)


state 12

    (13) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 13 (statement_value -> expNotEq .)
    LPAREN          reduce using rule 13 (statement_value -> expNotEq .)
    NEGATION        reduce using rule 13 (statement_value -> expNotEq .)
    COMMENT         reduce using rule 13 (statement_value -> expNotEq .)
    MULTICOMMENT    reduce using rule 13 (statement_value -> expNotEq .)
    FUNCTION        reduce using rule 13 (statement_value -> expNotEq .)
    PRINT           reduce using rule 13 (statement_value -> expNotEq .)
    INCREMENT       reduce using rule 13 (statement_value -> expNotEq .)
    DECREMENT       reduce using rule 13 (statement_value -> expNotEq .)
    NORMSTRING1     reduce using rule 13 (statement_value -> expNotEq .)
    NORMSTRING2     reduce using rule 13 (statement_value -> expNotEq .)
    MULTISTRING     reduce using rule 13 (statement_value -> expNotEq .)
    ENUM            reduce using rule 13 (statement_value -> expNotEq .)
    IF              reduce using rule 13 (statement_value -> expNotEq .)
    WHILE           reduce using rule 13 (statement_value -> expNotEq .)
    FOR             reduce using rule 13 (statement_value -> expNotEq .)
    NUMBER          reduce using rule 13 (statement_value -> expNotEq .)
    FLOAT           reduce using rule 13 (statement_value -> expNotEq .)
    VARIABLE        reduce using rule 13 (statement_value -> expNotEq .)
    LET             reduce using rule 13 (statement_value -> expNotEq .)
    VAR             reduce using rule 13 (statement_value -> expNotEq .)
    STATIC          reduce using rule 13 (statement_value -> expNotEq .)
    CONST           reduce using rule 13 (statement_value -> expNotEq .)
    OBJECTNAME      reduce using rule 13 (statement_value -> expNotEq .)
    FUNMATH         reduce using rule 13 (statement_value -> expNotEq .)
    $end            reduce using rule 13 (statement_value -> expNotEq .)
    RKEY            reduce using rule 13 (statement_value -> expNotEq .)


state 13

    (14) statement_value -> exp_set .

    POINTCOMMA      reduce using rule 14 (statement_value -> exp_set .)
    LPAREN          reduce using rule 14 (statement_value -> exp_set .)
    NEGATION        reduce using rule 14 (statement_value -> exp_set .)
    COMMENT         reduce using rule 14 (statement_value -> exp_set .)
    MULTICOMMENT    reduce using rule 14 (statement_value -> exp_set .)
    FUNCTION        reduce using rule 14 (statement_value -> exp_set .)
    PRINT           reduce using rule 14 (statement_value -> exp_set .)
    INCREMENT       reduce using rule 14 (statement_value -> exp_set .)
    DECREMENT       reduce using rule 14 (statement_value -> exp_set .)
    NORMSTRING1     reduce using rule 14 (statement_value -> exp_set .)
    NORMSTRING2     reduce using rule 14 (statement_value -> exp_set .)
    MULTISTRING     reduce using rule 14 (statement_value -> exp_set .)
    ENUM            reduce using rule 14 (statement_value -> exp_set .)
    IF              reduce using rule 14 (statement_value -> exp_set .)
    WHILE           reduce using rule 14 (statement_value -> exp_set .)
    FOR             reduce using rule 14 (statement_value -> exp_set .)
    NUMBER          reduce using rule 14 (statement_value -> exp_set .)
    FLOAT           reduce using rule 14 (statement_value -> exp_set .)
    VARIABLE        reduce using rule 14 (statement_value -> exp_set .)
    LET             reduce using rule 14 (statement_value -> exp_set .)
    VAR             reduce using rule 14 (statement_value -> exp_set .)
    STATIC          reduce using rule 14 (statement_value -> exp_set .)
    CONST           reduce using rule 14 (statement_value -> exp_set .)
    OBJECTNAME      reduce using rule 14 (statement_value -> exp_set .)
    FUNMATH         reduce using rule 14 (statement_value -> exp_set .)
    $end            reduce using rule 14 (statement_value -> exp_set .)
    RKEY            reduce using rule 14 (statement_value -> exp_set .)


state 14

    (15) statement_value -> statement_control .

    POINTCOMMA      reduce using rule 15 (statement_value -> statement_control .)
    LPAREN          reduce using rule 15 (statement_value -> statement_control .)
    NEGATION        reduce using rule 15 (statement_value -> statement_control .)
    COMMENT         reduce using rule 15 (statement_value -> statement_control .)
    MULTICOMMENT    reduce using rule 15 (statement_value -> statement_control .)
    FUNCTION        reduce using rule 15 (statement_value -> statement_control .)
    PRINT           reduce using rule 15 (statement_value -> statement_control .)
    INCREMENT       reduce using rule 15 (statement_value -> statement_control .)
    DECREMENT       reduce using rule 15 (statement_value -> statement_control .)
    NORMSTRING1     reduce using rule 15 (statement_value -> statement_control .)
    NORMSTRING2     reduce using rule 15 (statement_value -> statement_control .)
    MULTISTRING     reduce using rule 15 (statement_value -> statement_control .)
    ENUM            reduce using rule 15 (statement_value -> statement_control .)
    IF              reduce using rule 15 (statement_value -> statement_control .)
    WHILE           reduce using rule 15 (statement_value -> statement_control .)
    FOR             reduce using rule 15 (statement_value -> statement_control .)
    NUMBER          reduce using rule 15 (statement_value -> statement_control .)
    FLOAT           reduce using rule 15 (statement_value -> statement_control .)
    VARIABLE        reduce using rule 15 (statement_value -> statement_control .)
    LET             reduce using rule 15 (statement_value -> statement_control .)
    VAR             reduce using rule 15 (statement_value -> statement_control .)
    STATIC          reduce using rule 15 (statement_value -> statement_control .)
    CONST           reduce using rule 15 (statement_value -> statement_control .)
    OBJECTNAME      reduce using rule 15 (statement_value -> statement_control .)
    FUNMATH         reduce using rule 15 (statement_value -> statement_control .)
    $end            reduce using rule 15 (statement_value -> statement_control .)
    RKEY            reduce using rule 15 (statement_value -> statement_control .)


state 15

    (16) statement_value -> comments .

    POINTCOMMA      reduce using rule 16 (statement_value -> comments .)
    LPAREN          reduce using rule 16 (statement_value -> comments .)
    NEGATION        reduce using rule 16 (statement_value -> comments .)
    COMMENT         reduce using rule 16 (statement_value -> comments .)
    MULTICOMMENT    reduce using rule 16 (statement_value -> comments .)
    FUNCTION        reduce using rule 16 (statement_value -> comments .)
    PRINT           reduce using rule 16 (statement_value -> comments .)
    INCREMENT       reduce using rule 16 (statement_value -> comments .)
    DECREMENT       reduce using rule 16 (statement_value -> comments .)
    NORMSTRING1     reduce using rule 16 (statement_value -> comments .)
    NORMSTRING2     reduce using rule 16 (statement_value -> comments .)
    MULTISTRING     reduce using rule 16 (statement_value -> comments .)
    ENUM            reduce using rule 16 (statement_value -> comments .)
    IF              reduce using rule 16 (statement_value -> comments .)
    WHILE           reduce using rule 16 (statement_value -> comments .)
    FOR             reduce using rule 16 (statement_value -> comments .)
    NUMBER          reduce using rule 16 (statement_value -> comments .)
    FLOAT           reduce using rule 16 (statement_value -> comments .)
    VARIABLE        reduce using rule 16 (statement_value -> comments .)
    LET             reduce using rule 16 (statement_value -> comments .)
    VAR             reduce using rule 16 (statement_value -> comments .)
    STATIC          reduce using rule 16 (statement_value -> comments .)
    CONST           reduce using rule 16 (statement_value -> comments .)
    OBJECTNAME      reduce using rule 16 (statement_value -> comments .)
    FUNMATH         reduce using rule 16 (statement_value -> comments .)
    $end            reduce using rule 16 (statement_value -> comments .)
    RKEY            reduce using rule 16 (statement_value -> comments .)


state 16

<<<<<<< HEAD
    (17) statement_value -> funtionStatement .

    POINTCOMMA      reduce using rule 17 (statement_value -> funtionStatement .)
    LPAREN          reduce using rule 17 (statement_value -> funtionStatement .)
    NEGATION        reduce using rule 17 (statement_value -> funtionStatement .)
    COMMENT         reduce using rule 17 (statement_value -> funtionStatement .)
    MULTICOMMENT    reduce using rule 17 (statement_value -> funtionStatement .)
    FUNCTION        reduce using rule 17 (statement_value -> funtionStatement .)
    PRINT           reduce using rule 17 (statement_value -> funtionStatement .)
    INCREMENT       reduce using rule 17 (statement_value -> funtionStatement .)
    DECREMENT       reduce using rule 17 (statement_value -> funtionStatement .)
    NORMSTRING1     reduce using rule 17 (statement_value -> funtionStatement .)
    NORMSTRING2     reduce using rule 17 (statement_value -> funtionStatement .)
    MULTISTRING     reduce using rule 17 (statement_value -> funtionStatement .)
    ENUM            reduce using rule 17 (statement_value -> funtionStatement .)
    IF              reduce using rule 17 (statement_value -> funtionStatement .)
    WHILE           reduce using rule 17 (statement_value -> funtionStatement .)
    FOR             reduce using rule 17 (statement_value -> funtionStatement .)
    NUMBER          reduce using rule 17 (statement_value -> funtionStatement .)
    FLOAT           reduce using rule 17 (statement_value -> funtionStatement .)
    VARIABLE        reduce using rule 17 (statement_value -> funtionStatement .)
    LET             reduce using rule 17 (statement_value -> funtionStatement .)
    VAR             reduce using rule 17 (statement_value -> funtionStatement .)
    STATIC          reduce using rule 17 (statement_value -> funtionStatement .)
    CONST           reduce using rule 17 (statement_value -> funtionStatement .)
    OBJECTNAME      reduce using rule 17 (statement_value -> funtionStatement .)
    FUNMATH         reduce using rule 17 (statement_value -> funtionStatement .)
    $end            reduce using rule 17 (statement_value -> funtionStatement .)
    RKEY            reduce using rule 17 (statement_value -> funtionStatement .)
=======
    (167) expression -> term .

    PLUS            reduce using rule 167 (expression -> term .)
    MINUS           reduce using rule 167 (expression -> term .)
    PRODUCT         reduce using rule 167 (expression -> term .)
    DIVIDE          reduce using rule 167 (expression -> term .)
    EQUALTO         reduce using rule 167 (expression -> term .)
    NOTEQUALTO      reduce using rule 167 (expression -> term .)
    GREATER         reduce using rule 167 (expression -> term .)
    LESS            reduce using rule 167 (expression -> term .)
    GREATEREQUAL    reduce using rule 167 (expression -> term .)
    LESSEQUAL       reduce using rule 167 (expression -> term .)
    AND             reduce using rule 167 (expression -> term .)
    OR              reduce using rule 167 (expression -> term .)
    POINTCOMMA      reduce using rule 167 (expression -> term .)
    $end            reduce using rule 167 (expression -> term .)
    RPAREN          reduce using rule 167 (expression -> term .)
    RKEY            reduce using rule 167 (expression -> term .)
    RBRACKET        reduce using rule 167 (expression -> term .)
    COMMA           reduce using rule 167 (expression -> term .)
>>>>>>> master


state 17

<<<<<<< HEAD
    (18) statement_value -> consoleLog .

    POINTCOMMA      reduce using rule 18 (statement_value -> consoleLog .)
    LPAREN          reduce using rule 18 (statement_value -> consoleLog .)
    NEGATION        reduce using rule 18 (statement_value -> consoleLog .)
    COMMENT         reduce using rule 18 (statement_value -> consoleLog .)
    MULTICOMMENT    reduce using rule 18 (statement_value -> consoleLog .)
    FUNCTION        reduce using rule 18 (statement_value -> consoleLog .)
    PRINT           reduce using rule 18 (statement_value -> consoleLog .)
    INCREMENT       reduce using rule 18 (statement_value -> consoleLog .)
    DECREMENT       reduce using rule 18 (statement_value -> consoleLog .)
    NORMSTRING1     reduce using rule 18 (statement_value -> consoleLog .)
    NORMSTRING2     reduce using rule 18 (statement_value -> consoleLog .)
    MULTISTRING     reduce using rule 18 (statement_value -> consoleLog .)
    ENUM            reduce using rule 18 (statement_value -> consoleLog .)
    IF              reduce using rule 18 (statement_value -> consoleLog .)
    WHILE           reduce using rule 18 (statement_value -> consoleLog .)
    FOR             reduce using rule 18 (statement_value -> consoleLog .)
    NUMBER          reduce using rule 18 (statement_value -> consoleLog .)
    FLOAT           reduce using rule 18 (statement_value -> consoleLog .)
    VARIABLE        reduce using rule 18 (statement_value -> consoleLog .)
    LET             reduce using rule 18 (statement_value -> consoleLog .)
    VAR             reduce using rule 18 (statement_value -> consoleLog .)
    STATIC          reduce using rule 18 (statement_value -> consoleLog .)
    CONST           reduce using rule 18 (statement_value -> consoleLog .)
    OBJECTNAME      reduce using rule 18 (statement_value -> consoleLog .)
    FUNMATH         reduce using rule 18 (statement_value -> consoleLog .)
    $end            reduce using rule 18 (statement_value -> consoleLog .)
    RKEY            reduce using rule 18 (statement_value -> consoleLog .)
=======
    (160) concatenate -> string . PLUS termS

    PLUS            shift and go to state 117
>>>>>>> master


state 18

    (177) expression -> term .

    PLUS            reduce using rule 177 (expression -> term .)
    MINUS           reduce using rule 177 (expression -> term .)
    PRODUCT         reduce using rule 177 (expression -> term .)
    DIVIDE          reduce using rule 177 (expression -> term .)
    EQUALTO         reduce using rule 177 (expression -> term .)
    NOTEQUALTO      reduce using rule 177 (expression -> term .)
    GREATER         reduce using rule 177 (expression -> term .)
    LESS            reduce using rule 177 (expression -> term .)
    GREATEREQUAL    reduce using rule 177 (expression -> term .)
    LESSEQUAL       reduce using rule 177 (expression -> term .)
    AND             reduce using rule 177 (expression -> term .)
    OR              reduce using rule 177 (expression -> term .)
    POINTCOMMA      reduce using rule 177 (expression -> term .)
    LPAREN          reduce using rule 177 (expression -> term .)
    NEGATION        reduce using rule 177 (expression -> term .)
    COMMENT         reduce using rule 177 (expression -> term .)
    MULTICOMMENT    reduce using rule 177 (expression -> term .)
    FUNCTION        reduce using rule 177 (expression -> term .)
    PRINT           reduce using rule 177 (expression -> term .)
    INCREMENT       reduce using rule 177 (expression -> term .)
    DECREMENT       reduce using rule 177 (expression -> term .)
    NORMSTRING1     reduce using rule 177 (expression -> term .)
    NORMSTRING2     reduce using rule 177 (expression -> term .)
    MULTISTRING     reduce using rule 177 (expression -> term .)
    ENUM            reduce using rule 177 (expression -> term .)
    IF              reduce using rule 177 (expression -> term .)
    WHILE           reduce using rule 177 (expression -> term .)
    FOR             reduce using rule 177 (expression -> term .)
    NUMBER          reduce using rule 177 (expression -> term .)
    FLOAT           reduce using rule 177 (expression -> term .)
    VARIABLE        reduce using rule 177 (expression -> term .)
    LET             reduce using rule 177 (expression -> term .)
    VAR             reduce using rule 177 (expression -> term .)
    STATIC          reduce using rule 177 (expression -> term .)
    CONST           reduce using rule 177 (expression -> term .)
    OBJECTNAME      reduce using rule 177 (expression -> term .)
    FUNMATH         reduce using rule 177 (expression -> term .)
    $end            reduce using rule 177 (expression -> term .)
    RKEY            reduce using rule 177 (expression -> term .)
    RPAREN          reduce using rule 177 (expression -> term .)
    RBRACKET        reduce using rule 177 (expression -> term .)
    COMMA           reduce using rule 177 (expression -> term .)


state 19

    (170) concatenate -> string . PLUS termS

    PLUS            shift and go to state 121


state 20

    (27) declare -> var_boolean .

    POINTCOMMA      reduce using rule 27 (declare -> var_boolean .)
    LPAREN          reduce using rule 27 (declare -> var_boolean .)
    NEGATION        reduce using rule 27 (declare -> var_boolean .)
    COMMENT         reduce using rule 27 (declare -> var_boolean .)
    MULTICOMMENT    reduce using rule 27 (declare -> var_boolean .)
    FUNCTION        reduce using rule 27 (declare -> var_boolean .)
    PRINT           reduce using rule 27 (declare -> var_boolean .)
    INCREMENT       reduce using rule 27 (declare -> var_boolean .)
    DECREMENT       reduce using rule 27 (declare -> var_boolean .)
    NORMSTRING1     reduce using rule 27 (declare -> var_boolean .)
    NORMSTRING2     reduce using rule 27 (declare -> var_boolean .)
    MULTISTRING     reduce using rule 27 (declare -> var_boolean .)
    ENUM            reduce using rule 27 (declare -> var_boolean .)
    IF              reduce using rule 27 (declare -> var_boolean .)
    WHILE           reduce using rule 27 (declare -> var_boolean .)
    FOR             reduce using rule 27 (declare -> var_boolean .)
    NUMBER          reduce using rule 27 (declare -> var_boolean .)
    FLOAT           reduce using rule 27 (declare -> var_boolean .)
    VARIABLE        reduce using rule 27 (declare -> var_boolean .)
    LET             reduce using rule 27 (declare -> var_boolean .)
    VAR             reduce using rule 27 (declare -> var_boolean .)
    STATIC          reduce using rule 27 (declare -> var_boolean .)
    CONST           reduce using rule 27 (declare -> var_boolean .)
    OBJECTNAME      reduce using rule 27 (declare -> var_boolean .)
    FUNMATH         reduce using rule 27 (declare -> var_boolean .)
    $end            reduce using rule 27 (declare -> var_boolean .)
    RKEY            reduce using rule 27 (declare -> var_boolean .)


state 21

    (28) declare -> var_number .

    POINTCOMMA      reduce using rule 28 (declare -> var_number .)
    LPAREN          reduce using rule 28 (declare -> var_number .)
    NEGATION        reduce using rule 28 (declare -> var_number .)
    COMMENT         reduce using rule 28 (declare -> var_number .)
    MULTICOMMENT    reduce using rule 28 (declare -> var_number .)
    FUNCTION        reduce using rule 28 (declare -> var_number .)
    PRINT           reduce using rule 28 (declare -> var_number .)
    INCREMENT       reduce using rule 28 (declare -> var_number .)
    DECREMENT       reduce using rule 28 (declare -> var_number .)
    NORMSTRING1     reduce using rule 28 (declare -> var_number .)
    NORMSTRING2     reduce using rule 28 (declare -> var_number .)
    MULTISTRING     reduce using rule 28 (declare -> var_number .)
    ENUM            reduce using rule 28 (declare -> var_number .)
    IF              reduce using rule 28 (declare -> var_number .)
    WHILE           reduce using rule 28 (declare -> var_number .)
    FOR             reduce using rule 28 (declare -> var_number .)
    NUMBER          reduce using rule 28 (declare -> var_number .)
    FLOAT           reduce using rule 28 (declare -> var_number .)
    VARIABLE        reduce using rule 28 (declare -> var_number .)
    LET             reduce using rule 28 (declare -> var_number .)
    VAR             reduce using rule 28 (declare -> var_number .)
    STATIC          reduce using rule 28 (declare -> var_number .)
    CONST           reduce using rule 28 (declare -> var_number .)
    OBJECTNAME      reduce using rule 28 (declare -> var_number .)
    FUNMATH         reduce using rule 28 (declare -> var_number .)
    $end            reduce using rule 28 (declare -> var_number .)
    RKEY            reduce using rule 28 (declare -> var_number .)


state 22

    (29) declare -> var_string .

    POINTCOMMA      reduce using rule 29 (declare -> var_string .)
    LPAREN          reduce using rule 29 (declare -> var_string .)
    NEGATION        reduce using rule 29 (declare -> var_string .)
    COMMENT         reduce using rule 29 (declare -> var_string .)
    MULTICOMMENT    reduce using rule 29 (declare -> var_string .)
    FUNCTION        reduce using rule 29 (declare -> var_string .)
    PRINT           reduce using rule 29 (declare -> var_string .)
    INCREMENT       reduce using rule 29 (declare -> var_string .)
    DECREMENT       reduce using rule 29 (declare -> var_string .)
    NORMSTRING1     reduce using rule 29 (declare -> var_string .)
    NORMSTRING2     reduce using rule 29 (declare -> var_string .)
    MULTISTRING     reduce using rule 29 (declare -> var_string .)
    ENUM            reduce using rule 29 (declare -> var_string .)
    IF              reduce using rule 29 (declare -> var_string .)
    WHILE           reduce using rule 29 (declare -> var_string .)
    FOR             reduce using rule 29 (declare -> var_string .)
    NUMBER          reduce using rule 29 (declare -> var_string .)
    FLOAT           reduce using rule 29 (declare -> var_string .)
    VARIABLE        reduce using rule 29 (declare -> var_string .)
    LET             reduce using rule 29 (declare -> var_string .)
    VAR             reduce using rule 29 (declare -> var_string .)
    STATIC          reduce using rule 29 (declare -> var_string .)
    CONST           reduce using rule 29 (declare -> var_string .)
    OBJECTNAME      reduce using rule 29 (declare -> var_string .)
    FUNMATH         reduce using rule 29 (declare -> var_string .)
    $end            reduce using rule 29 (declare -> var_string .)
    RKEY            reduce using rule 29 (declare -> var_string .)


state 23

    (30) declare -> var_enum .

    POINTCOMMA      reduce using rule 30 (declare -> var_enum .)
    LPAREN          reduce using rule 30 (declare -> var_enum .)
    NEGATION        reduce using rule 30 (declare -> var_enum .)
    COMMENT         reduce using rule 30 (declare -> var_enum .)
    MULTICOMMENT    reduce using rule 30 (declare -> var_enum .)
    FUNCTION        reduce using rule 30 (declare -> var_enum .)
    PRINT           reduce using rule 30 (declare -> var_enum .)
    INCREMENT       reduce using rule 30 (declare -> var_enum .)
    DECREMENT       reduce using rule 30 (declare -> var_enum .)
    NORMSTRING1     reduce using rule 30 (declare -> var_enum .)
    NORMSTRING2     reduce using rule 30 (declare -> var_enum .)
    MULTISTRING     reduce using rule 30 (declare -> var_enum .)
    ENUM            reduce using rule 30 (declare -> var_enum .)
    IF              reduce using rule 30 (declare -> var_enum .)
    WHILE           reduce using rule 30 (declare -> var_enum .)
    FOR             reduce using rule 30 (declare -> var_enum .)
    NUMBER          reduce using rule 30 (declare -> var_enum .)
    FLOAT           reduce using rule 30 (declare -> var_enum .)
    VARIABLE        reduce using rule 30 (declare -> var_enum .)
    LET             reduce using rule 30 (declare -> var_enum .)
    VAR             reduce using rule 30 (declare -> var_enum .)
    STATIC          reduce using rule 30 (declare -> var_enum .)
    CONST           reduce using rule 30 (declare -> var_enum .)
    OBJECTNAME      reduce using rule 30 (declare -> var_enum .)
    FUNMATH         reduce using rule 30 (declare -> var_enum .)
    $end            reduce using rule 30 (declare -> var_enum .)
    RKEY            reduce using rule 30 (declare -> var_enum .)


state 24

    (31) declare -> var_null .

    POINTCOMMA      reduce using rule 31 (declare -> var_null .)
    LPAREN          reduce using rule 31 (declare -> var_null .)
    NEGATION        reduce using rule 31 (declare -> var_null .)
    COMMENT         reduce using rule 31 (declare -> var_null .)
    MULTICOMMENT    reduce using rule 31 (declare -> var_null .)
    FUNCTION        reduce using rule 31 (declare -> var_null .)
    PRINT           reduce using rule 31 (declare -> var_null .)
    INCREMENT       reduce using rule 31 (declare -> var_null .)
    DECREMENT       reduce using rule 31 (declare -> var_null .)
    NORMSTRING1     reduce using rule 31 (declare -> var_null .)
    NORMSTRING2     reduce using rule 31 (declare -> var_null .)
    MULTISTRING     reduce using rule 31 (declare -> var_null .)
    ENUM            reduce using rule 31 (declare -> var_null .)
    IF              reduce using rule 31 (declare -> var_null .)
    WHILE           reduce using rule 31 (declare -> var_null .)
    FOR             reduce using rule 31 (declare -> var_null .)
    NUMBER          reduce using rule 31 (declare -> var_null .)
    FLOAT           reduce using rule 31 (declare -> var_null .)
    VARIABLE        reduce using rule 31 (declare -> var_null .)
    LET             reduce using rule 31 (declare -> var_null .)
    VAR             reduce using rule 31 (declare -> var_null .)
    STATIC          reduce using rule 31 (declare -> var_null .)
    CONST           reduce using rule 31 (declare -> var_null .)
    OBJECTNAME      reduce using rule 31 (declare -> var_null .)
    FUNMATH         reduce using rule 31 (declare -> var_null .)
    $end            reduce using rule 31 (declare -> var_null .)
    RKEY            reduce using rule 31 (declare -> var_null .)


state 25

    (32) declare -> var_undefined .

    POINTCOMMA      reduce using rule 32 (declare -> var_undefined .)
    LPAREN          reduce using rule 32 (declare -> var_undefined .)
    NEGATION        reduce using rule 32 (declare -> var_undefined .)
    COMMENT         reduce using rule 32 (declare -> var_undefined .)
    MULTICOMMENT    reduce using rule 32 (declare -> var_undefined .)
    FUNCTION        reduce using rule 32 (declare -> var_undefined .)
    PRINT           reduce using rule 32 (declare -> var_undefined .)
    INCREMENT       reduce using rule 32 (declare -> var_undefined .)
    DECREMENT       reduce using rule 32 (declare -> var_undefined .)
    NORMSTRING1     reduce using rule 32 (declare -> var_undefined .)
    NORMSTRING2     reduce using rule 32 (declare -> var_undefined .)
    MULTISTRING     reduce using rule 32 (declare -> var_undefined .)
    ENUM            reduce using rule 32 (declare -> var_undefined .)
    IF              reduce using rule 32 (declare -> var_undefined .)
    WHILE           reduce using rule 32 (declare -> var_undefined .)
    FOR             reduce using rule 32 (declare -> var_undefined .)
    NUMBER          reduce using rule 32 (declare -> var_undefined .)
    FLOAT           reduce using rule 32 (declare -> var_undefined .)
    VARIABLE        reduce using rule 32 (declare -> var_undefined .)
    LET             reduce using rule 32 (declare -> var_undefined .)
    VAR             reduce using rule 32 (declare -> var_undefined .)
    STATIC          reduce using rule 32 (declare -> var_undefined .)
    CONST           reduce using rule 32 (declare -> var_undefined .)
    OBJECTNAME      reduce using rule 32 (declare -> var_undefined .)
    FUNMATH         reduce using rule 32 (declare -> var_undefined .)
    $end            reduce using rule 32 (declare -> var_undefined .)
    RKEY            reduce using rule 32 (declare -> var_undefined .)


state 26

<<<<<<< HEAD
    (33) declare -> declare_array .

    POINTCOMMA      reduce using rule 33 (declare -> declare_array .)
    LPAREN          reduce using rule 33 (declare -> declare_array .)
    NEGATION        reduce using rule 33 (declare -> declare_array .)
    COMMENT         reduce using rule 33 (declare -> declare_array .)
    MULTICOMMENT    reduce using rule 33 (declare -> declare_array .)
    FUNCTION        reduce using rule 33 (declare -> declare_array .)
    PRINT           reduce using rule 33 (declare -> declare_array .)
    INCREMENT       reduce using rule 33 (declare -> declare_array .)
    DECREMENT       reduce using rule 33 (declare -> declare_array .)
    NORMSTRING1     reduce using rule 33 (declare -> declare_array .)
    NORMSTRING2     reduce using rule 33 (declare -> declare_array .)
    MULTISTRING     reduce using rule 33 (declare -> declare_array .)
    ENUM            reduce using rule 33 (declare -> declare_array .)
    IF              reduce using rule 33 (declare -> declare_array .)
    WHILE           reduce using rule 33 (declare -> declare_array .)
    FOR             reduce using rule 33 (declare -> declare_array .)
    NUMBER          reduce using rule 33 (declare -> declare_array .)
    FLOAT           reduce using rule 33 (declare -> declare_array .)
    VARIABLE        reduce using rule 33 (declare -> declare_array .)
    LET             reduce using rule 33 (declare -> declare_array .)
    VAR             reduce using rule 33 (declare -> declare_array .)
    STATIC          reduce using rule 33 (declare -> declare_array .)
    CONST           reduce using rule 33 (declare -> declare_array .)
    OBJECTNAME      reduce using rule 33 (declare -> declare_array .)
    FUNMATH         reduce using rule 33 (declare -> declare_array .)
    $end            reduce using rule 33 (declare -> declare_array .)
    RKEY            reduce using rule 33 (declare -> declare_array .)
=======
    (32) declare -> declare_tuples .

    POINTCOMMA      reduce using rule 32 (declare -> declare_tuples .)
    $end            reduce using rule 32 (declare -> declare_tuples .)
    RKEY            reduce using rule 32 (declare -> declare_tuples .)
>>>>>>> master


state 27

<<<<<<< HEAD
    (34) declare -> declare_enum .

    POINTCOMMA      reduce using rule 34 (declare -> declare_enum .)
    LPAREN          reduce using rule 34 (declare -> declare_enum .)
    NEGATION        reduce using rule 34 (declare -> declare_enum .)
    COMMENT         reduce using rule 34 (declare -> declare_enum .)
    MULTICOMMENT    reduce using rule 34 (declare -> declare_enum .)
    FUNCTION        reduce using rule 34 (declare -> declare_enum .)
    PRINT           reduce using rule 34 (declare -> declare_enum .)
    INCREMENT       reduce using rule 34 (declare -> declare_enum .)
    DECREMENT       reduce using rule 34 (declare -> declare_enum .)
    NORMSTRING1     reduce using rule 34 (declare -> declare_enum .)
    NORMSTRING2     reduce using rule 34 (declare -> declare_enum .)
    MULTISTRING     reduce using rule 34 (declare -> declare_enum .)
    ENUM            reduce using rule 34 (declare -> declare_enum .)
    IF              reduce using rule 34 (declare -> declare_enum .)
    WHILE           reduce using rule 34 (declare -> declare_enum .)
    FOR             reduce using rule 34 (declare -> declare_enum .)
    NUMBER          reduce using rule 34 (declare -> declare_enum .)
    FLOAT           reduce using rule 34 (declare -> declare_enum .)
    VARIABLE        reduce using rule 34 (declare -> declare_enum .)
    LET             reduce using rule 34 (declare -> declare_enum .)
    VAR             reduce using rule 34 (declare -> declare_enum .)
    STATIC          reduce using rule 34 (declare -> declare_enum .)
    CONST           reduce using rule 34 (declare -> declare_enum .)
    OBJECTNAME      reduce using rule 34 (declare -> declare_enum .)
    FUNMATH         reduce using rule 34 (declare -> declare_enum .)
    $end            reduce using rule 34 (declare -> declare_enum .)
    RKEY            reduce using rule 34 (declare -> declare_enum .)
=======
    (33) declare -> declare_generic .

    POINTCOMMA      reduce using rule 33 (declare -> declare_generic .)
    $end            reduce using rule 33 (declare -> declare_generic .)
    RKEY            reduce using rule 33 (declare -> declare_generic .)
>>>>>>> master


state 28

<<<<<<< HEAD
    (35) declare -> declare_tuples .

    POINTCOMMA      reduce using rule 35 (declare -> declare_tuples .)
    LPAREN          reduce using rule 35 (declare -> declare_tuples .)
    NEGATION        reduce using rule 35 (declare -> declare_tuples .)
    COMMENT         reduce using rule 35 (declare -> declare_tuples .)
    MULTICOMMENT    reduce using rule 35 (declare -> declare_tuples .)
    FUNCTION        reduce using rule 35 (declare -> declare_tuples .)
    PRINT           reduce using rule 35 (declare -> declare_tuples .)
    INCREMENT       reduce using rule 35 (declare -> declare_tuples .)
    DECREMENT       reduce using rule 35 (declare -> declare_tuples .)
    NORMSTRING1     reduce using rule 35 (declare -> declare_tuples .)
    NORMSTRING2     reduce using rule 35 (declare -> declare_tuples .)
    MULTISTRING     reduce using rule 35 (declare -> declare_tuples .)
    ENUM            reduce using rule 35 (declare -> declare_tuples .)
    IF              reduce using rule 35 (declare -> declare_tuples .)
    WHILE           reduce using rule 35 (declare -> declare_tuples .)
    FOR             reduce using rule 35 (declare -> declare_tuples .)
    NUMBER          reduce using rule 35 (declare -> declare_tuples .)
    FLOAT           reduce using rule 35 (declare -> declare_tuples .)
    VARIABLE        reduce using rule 35 (declare -> declare_tuples .)
    LET             reduce using rule 35 (declare -> declare_tuples .)
    VAR             reduce using rule 35 (declare -> declare_tuples .)
    STATIC          reduce using rule 35 (declare -> declare_tuples .)
    CONST           reduce using rule 35 (declare -> declare_tuples .)
    OBJECTNAME      reduce using rule 35 (declare -> declare_tuples .)
    FUNMATH         reduce using rule 35 (declare -> declare_tuples .)
    $end            reduce using rule 35 (declare -> declare_tuples .)
    RKEY            reduce using rule 35 (declare -> declare_tuples .)
=======
    (105) assign -> assign_variable .

    POINTCOMMA      reduce using rule 105 (assign -> assign_variable .)
    $end            reduce using rule 105 (assign -> assign_variable .)
    RKEY            reduce using rule 105 (assign -> assign_variable .)
>>>>>>> master


state 29

<<<<<<< HEAD
    (36) declare -> declare_generic .

    POINTCOMMA      reduce using rule 36 (declare -> declare_generic .)
    LPAREN          reduce using rule 36 (declare -> declare_generic .)
    NEGATION        reduce using rule 36 (declare -> declare_generic .)
    COMMENT         reduce using rule 36 (declare -> declare_generic .)
    MULTICOMMENT    reduce using rule 36 (declare -> declare_generic .)
    FUNCTION        reduce using rule 36 (declare -> declare_generic .)
    PRINT           reduce using rule 36 (declare -> declare_generic .)
    INCREMENT       reduce using rule 36 (declare -> declare_generic .)
    DECREMENT       reduce using rule 36 (declare -> declare_generic .)
    NORMSTRING1     reduce using rule 36 (declare -> declare_generic .)
    NORMSTRING2     reduce using rule 36 (declare -> declare_generic .)
    MULTISTRING     reduce using rule 36 (declare -> declare_generic .)
    ENUM            reduce using rule 36 (declare -> declare_generic .)
    IF              reduce using rule 36 (declare -> declare_generic .)
    WHILE           reduce using rule 36 (declare -> declare_generic .)
    FOR             reduce using rule 36 (declare -> declare_generic .)
    NUMBER          reduce using rule 36 (declare -> declare_generic .)
    FLOAT           reduce using rule 36 (declare -> declare_generic .)
    VARIABLE        reduce using rule 36 (declare -> declare_generic .)
    LET             reduce using rule 36 (declare -> declare_generic .)
    VAR             reduce using rule 36 (declare -> declare_generic .)
    STATIC          reduce using rule 36 (declare -> declare_generic .)
    CONST           reduce using rule 36 (declare -> declare_generic .)
    OBJECTNAME      reduce using rule 36 (declare -> declare_generic .)
    FUNMATH         reduce using rule 36 (declare -> declare_generic .)
    $end            reduce using rule 36 (declare -> declare_generic .)
    RKEY            reduce using rule 36 (declare -> declare_generic .)
=======
    (106) assign -> assign_array .

    POINTCOMMA      reduce using rule 106 (assign -> assign_array .)
    $end            reduce using rule 106 (assign -> assign_array .)
    RKEY            reduce using rule 106 (assign -> assign_array .)
>>>>>>> master


state 30

<<<<<<< HEAD
    (115) assign -> assign_variable .

    POINTCOMMA      reduce using rule 115 (assign -> assign_variable .)
    LPAREN          reduce using rule 115 (assign -> assign_variable .)
    NEGATION        reduce using rule 115 (assign -> assign_variable .)
    COMMENT         reduce using rule 115 (assign -> assign_variable .)
    MULTICOMMENT    reduce using rule 115 (assign -> assign_variable .)
    FUNCTION        reduce using rule 115 (assign -> assign_variable .)
    PRINT           reduce using rule 115 (assign -> assign_variable .)
    INCREMENT       reduce using rule 115 (assign -> assign_variable .)
    DECREMENT       reduce using rule 115 (assign -> assign_variable .)
    NORMSTRING1     reduce using rule 115 (assign -> assign_variable .)
    NORMSTRING2     reduce using rule 115 (assign -> assign_variable .)
    MULTISTRING     reduce using rule 115 (assign -> assign_variable .)
    ENUM            reduce using rule 115 (assign -> assign_variable .)
    IF              reduce using rule 115 (assign -> assign_variable .)
    WHILE           reduce using rule 115 (assign -> assign_variable .)
    FOR             reduce using rule 115 (assign -> assign_variable .)
    NUMBER          reduce using rule 115 (assign -> assign_variable .)
    FLOAT           reduce using rule 115 (assign -> assign_variable .)
    VARIABLE        reduce using rule 115 (assign -> assign_variable .)
    LET             reduce using rule 115 (assign -> assign_variable .)
    VAR             reduce using rule 115 (assign -> assign_variable .)
    STATIC          reduce using rule 115 (assign -> assign_variable .)
    CONST           reduce using rule 115 (assign -> assign_variable .)
    OBJECTNAME      reduce using rule 115 (assign -> assign_variable .)
    FUNMATH         reduce using rule 115 (assign -> assign_variable .)
    $end            reduce using rule 115 (assign -> assign_variable .)
    RKEY            reduce using rule 115 (assign -> assign_variable .)


state 31

    (116) assign -> assign_array .

    POINTCOMMA      reduce using rule 116 (assign -> assign_array .)
    LPAREN          reduce using rule 116 (assign -> assign_array .)
    NEGATION        reduce using rule 116 (assign -> assign_array .)
    COMMENT         reduce using rule 116 (assign -> assign_array .)
    MULTICOMMENT    reduce using rule 116 (assign -> assign_array .)
    FUNCTION        reduce using rule 116 (assign -> assign_array .)
    PRINT           reduce using rule 116 (assign -> assign_array .)
    INCREMENT       reduce using rule 116 (assign -> assign_array .)
    DECREMENT       reduce using rule 116 (assign -> assign_array .)
    NORMSTRING1     reduce using rule 116 (assign -> assign_array .)
    NORMSTRING2     reduce using rule 116 (assign -> assign_array .)
    MULTISTRING     reduce using rule 116 (assign -> assign_array .)
    ENUM            reduce using rule 116 (assign -> assign_array .)
    IF              reduce using rule 116 (assign -> assign_array .)
    WHILE           reduce using rule 116 (assign -> assign_array .)
    FOR             reduce using rule 116 (assign -> assign_array .)
    NUMBER          reduce using rule 116 (assign -> assign_array .)
    FLOAT           reduce using rule 116 (assign -> assign_array .)
    VARIABLE        reduce using rule 116 (assign -> assign_array .)
    LET             reduce using rule 116 (assign -> assign_array .)
    VAR             reduce using rule 116 (assign -> assign_array .)
    STATIC          reduce using rule 116 (assign -> assign_array .)
    CONST           reduce using rule 116 (assign -> assign_array .)
    OBJECTNAME      reduce using rule 116 (assign -> assign_array .)
    FUNMATH         reduce using rule 116 (assign -> assign_array .)
    $end            reduce using rule 116 (assign -> assign_array .)
    RKEY            reduce using rule 116 (assign -> assign_array .)

=======
    (107) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 107 (assign -> assign_object_value .)
    $end            reduce using rule 107 (assign -> assign_object_value .)
    RKEY            reduce using rule 107 (assign -> assign_object_value .)


state 31

    (190) expCond -> LPAREN . expression operador expression RPAREN
    (188) factor_exprlog -> LPAREN . expCond RPAREN
    (191) term1 -> LPAREN . group RPAREN
    (200) factor_expr -> LPAREN . expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 118
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 119
    expCond                        shift and go to state 120
    group                          shift and go to state 121
    term                           shift and go to state 16
    number                         shift and go to state 122
    variable                       shift and go to state 123
    array_value                    shift and go to state 124
    object_value                   shift and go to state 125
    term1                          shift and go to state 42
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    funciones                      shift and go to state 64
    enum_value                     shift and go to state 56
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 32

    (186) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (180) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (183) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    EQUALTO         shift and go to state 130
    NOTEQUALTO      shift and go to state 131
    AND             shift and go to state 112
    OR              shift and go to state 113

    oplogico                       shift and go to state 129
>>>>>>> master

state 33

<<<<<<< HEAD
    (117) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 117 (assign -> assign_object_value .)
    LPAREN          reduce using rule 117 (assign -> assign_object_value .)
    NEGATION        reduce using rule 117 (assign -> assign_object_value .)
    COMMENT         reduce using rule 117 (assign -> assign_object_value .)
    MULTICOMMENT    reduce using rule 117 (assign -> assign_object_value .)
    FUNCTION        reduce using rule 117 (assign -> assign_object_value .)
    PRINT           reduce using rule 117 (assign -> assign_object_value .)
    INCREMENT       reduce using rule 117 (assign -> assign_object_value .)
    DECREMENT       reduce using rule 117 (assign -> assign_object_value .)
    NORMSTRING1     reduce using rule 117 (assign -> assign_object_value .)
    NORMSTRING2     reduce using rule 117 (assign -> assign_object_value .)
    MULTISTRING     reduce using rule 117 (assign -> assign_object_value .)
    ENUM            reduce using rule 117 (assign -> assign_object_value .)
    IF              reduce using rule 117 (assign -> assign_object_value .)
    WHILE           reduce using rule 117 (assign -> assign_object_value .)
    FOR             reduce using rule 117 (assign -> assign_object_value .)
    NUMBER          reduce using rule 117 (assign -> assign_object_value .)
    FLOAT           reduce using rule 117 (assign -> assign_object_value .)
    VARIABLE        reduce using rule 117 (assign -> assign_object_value .)
    LET             reduce using rule 117 (assign -> assign_object_value .)
    VAR             reduce using rule 117 (assign -> assign_object_value .)
    STATIC          reduce using rule 117 (assign -> assign_object_value .)
    CONST           reduce using rule 117 (assign -> assign_object_value .)
    OBJECTNAME      reduce using rule 117 (assign -> assign_object_value .)
    FUNMATH         reduce using rule 117 (assign -> assign_object_value .)
    $end            reduce using rule 117 (assign -> assign_object_value .)
    RKEY            reduce using rule 117 (assign -> assign_object_value .)


state 33
=======
    (174) expNeg -> NEGATION . expOpLog
    (175) expNeg -> NEGATION . factor_exprlog
    (176) expNeg -> NEGATION . boolean
    (177) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (178) expNeg -> NEGATION . VARIABLE
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 135
    VARIABLE        shift and go to state 136
    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expOpLog                       shift and go to state 132
    factor_exprlog                 shift and go to state 133
    boolean                        shift and go to state 134
    expCond                        shift and go to state 137
    expression                     shift and go to state 138
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 34

    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for POINT resolved as shift
    EQUAL           reduce using rule 231 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 231 (variable -> VARIABLE .)
    $end            reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    RPAREN          reduce using rule 231 (variable -> VARIABLE .)
    RKEY            reduce using rule 231 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    COMMA           reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master

    (200) expCond -> LPAREN . expression operador expression RPAREN
    (198) factor_exprlog -> LPAREN . expCond RPAREN
    (201) term1 -> LPAREN . group RPAREN
    (210) factor_expr -> LPAREN . expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 122
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 123
    expCond                        shift and go to state 124
    group                          shift and go to state 125
    term                           shift and go to state 18
    number                         shift and go to state 126
    variable                       shift and go to state 127
    array_value                    shift and go to state 128
    object_value                   shift and go to state 129
    term1                          shift and go to state 45
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    funciones                      shift and go to state 67
    enum_value                     shift and go to state 59
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 35

<<<<<<< HEAD
    (196) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (190) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (193) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    EQUALTO         shift and go to state 134
    NOTEQUALTO      shift and go to state 135
    AND             shift and go to state 116
    OR              shift and go to state 117
=======
    (56) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN
    (86) var_null -> declare_any . EQUAL NULL
    (87) var_undefined -> declare_any . EQUAL UNDEFINED
    (57) declare_tuples -> declare_any . TWOPOINTS tuples_2_variables
    (58) declare_tuples -> declare_any . TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (59) declare_tuples -> declare_any . TWOPOINTS tuples_3_variables
    (60) declare_tuples -> declare_any . TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (61) declare_tuples -> declare_any . TWOPOINTS tuples_4_variables
    (62) declare_tuples -> declare_any . TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (102) declare_generic -> declare_any . EQUAL assign_value
    (103) declare_generic -> declare_any .
    (95) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (92) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (98) declare_string -> declare_any . TWOPOINTS VARSTRING
    (101) declare_var_enum -> declare_any . TWOPOINTS object_name
    (85) declare_generic_array -> declare_any . EQUAL list_types
    (76) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (80) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (84) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER
    (248) mathAbs -> declare_any . EQUAL mathAbs
    (272) arrayJoin -> declare_any . arrayJoin
    (273) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    EQUAL           shift and go to state 145
    TWOPOINTS       shift and go to state 146
    POINTCOMMA      reduce using rule 103 (declare_generic -> declare_any .)
    $end            reduce using rule 103 (declare_generic -> declare_any .)
    RKEY            reduce using rule 103 (declare_generic -> declare_any .)
    VARIABLE        shift and go to state 148
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    declare_any                    shift and go to state 144
    arrayJoin                      shift and go to state 147
    prefix                         shift and go to state 68

state 36
>>>>>>> master

    oplogico                       shift and go to state 133

state 35

    (184) expNeg -> NEGATION . expOpLog
    (185) expNeg -> NEGATION . factor_exprlog
    (186) expNeg -> NEGATION . boolean
    (187) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (188) expNeg -> NEGATION . VARIABLE
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 139
    VARIABLE        shift and go to state 140
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expOpLog                       shift and go to state 136
    factor_exprlog                 shift and go to state 137
    boolean                        shift and go to state 138
    expCond                        shift and go to state 141
    expression                     shift and go to state 142
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 37

    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for POINT resolved as shift
    EQUAL           reduce using rule 241 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 241 (variable -> VARIABLE .)
    LPAREN          reduce using rule 241 (variable -> VARIABLE .)
    NEGATION        reduce using rule 241 (variable -> VARIABLE .)
    COMMENT         reduce using rule 241 (variable -> VARIABLE .)
    MULTICOMMENT    reduce using rule 241 (variable -> VARIABLE .)
    FUNCTION        reduce using rule 241 (variable -> VARIABLE .)
    PRINT           reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING1     reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING2     reduce using rule 241 (variable -> VARIABLE .)
    MULTISTRING     reduce using rule 241 (variable -> VARIABLE .)
    ENUM            reduce using rule 241 (variable -> VARIABLE .)
    IF              reduce using rule 241 (variable -> VARIABLE .)
    WHILE           reduce using rule 241 (variable -> VARIABLE .)
    FOR             reduce using rule 241 (variable -> VARIABLE .)
    NUMBER          reduce using rule 241 (variable -> VARIABLE .)
    FLOAT           reduce using rule 241 (variable -> VARIABLE .)
    VARIABLE        reduce using rule 241 (variable -> VARIABLE .)
    LET             reduce using rule 241 (variable -> VARIABLE .)
    VAR             reduce using rule 241 (variable -> VARIABLE .)
    STATIC          reduce using rule 241 (variable -> VARIABLE .)
    CONST           reduce using rule 241 (variable -> VARIABLE .)
    OBJECTNAME      reduce using rule 241 (variable -> VARIABLE .)
    FUNMATH         reduce using rule 241 (variable -> VARIABLE .)
    $end            reduce using rule 241 (variable -> VARIABLE .)
    RKEY            reduce using rule 241 (variable -> VARIABLE .)
    RPAREN          reduce using rule 241 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    COMMA           reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]


state 38

    (65) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN
    (95) var_null -> declare_any . EQUAL NULL
    (96) var_undefined -> declare_any . EQUAL UNDEFINED
    (66) declare_tuples -> declare_any . TWOPOINTS tuples_2_variables
    (67) declare_tuples -> declare_any . TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (68) declare_tuples -> declare_any . TWOPOINTS tuples_3_variables
    (69) declare_tuples -> declare_any . TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (70) declare_tuples -> declare_any . TWOPOINTS tuples_4_variables
    (71) declare_tuples -> declare_any . TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (111) declare_generic -> declare_any . EQUAL assign_value
    (112) declare_generic -> declare_any .
    (104) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (101) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (107) declare_string -> declare_any . TWOPOINTS VARSTRING
    (110) declare_var_enum -> declare_any . TWOPOINTS object_name
    (94) declare_generic_array -> declare_any . EQUAL list_types
    (85) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (89) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (93) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER
    (258) mathAbs -> declare_any . EQUAL mathAbs
    (282) arrayJoin -> declare_any . arrayJoin
    (283) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
    EQUAL           shift and go to state 149
    TWOPOINTS       shift and go to state 150
    POINTCOMMA      reduce using rule 112 (declare_generic -> declare_any .)
    LPAREN          reduce using rule 112 (declare_generic -> declare_any .)
    NEGATION        reduce using rule 112 (declare_generic -> declare_any .)
    COMMENT         reduce using rule 112 (declare_generic -> declare_any .)
    MULTICOMMENT    reduce using rule 112 (declare_generic -> declare_any .)
    FUNCTION        reduce using rule 112 (declare_generic -> declare_any .)
    PRINT           reduce using rule 112 (declare_generic -> declare_any .)
    INCREMENT       reduce using rule 112 (declare_generic -> declare_any .)
    DECREMENT       reduce using rule 112 (declare_generic -> declare_any .)
    NORMSTRING1     reduce using rule 112 (declare_generic -> declare_any .)
    NORMSTRING2     reduce using rule 112 (declare_generic -> declare_any .)
    MULTISTRING     reduce using rule 112 (declare_generic -> declare_any .)
    ENUM            reduce using rule 112 (declare_generic -> declare_any .)
    IF              reduce using rule 112 (declare_generic -> declare_any .)
    WHILE           reduce using rule 112 (declare_generic -> declare_any .)
    FOR             reduce using rule 112 (declare_generic -> declare_any .)
    NUMBER          reduce using rule 112 (declare_generic -> declare_any .)
    FLOAT           reduce using rule 112 (declare_generic -> declare_any .)
    OBJECTNAME      reduce using rule 112 (declare_generic -> declare_any .)
    FUNMATH         reduce using rule 112 (declare_generic -> declare_any .)
    $end            reduce using rule 112 (declare_generic -> declare_any .)
    RKEY            reduce using rule 112 (declare_generic -> declare_any .)
    VARIABLE        shift and go to state 152
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

  ! VARIABLE        [ reduce using rule 112 (declare_generic -> declare_any .) ]
  ! LET             [ reduce using rule 112 (declare_generic -> declare_any .) ]
  ! VAR             [ reduce using rule 112 (declare_generic -> declare_any .) ]
  ! STATIC          [ reduce using rule 112 (declare_generic -> declare_any .) ]
  ! CONST           [ reduce using rule 112 (declare_generic -> declare_any .) ]

    declare_any                    shift and go to state 148
    arrayJoin                      shift and go to state 151
    prefix                         shift and go to state 71

state 39

    (19) statement_control -> funcionif .

    POINTCOMMA      reduce using rule 19 (statement_control -> funcionif .)
    LPAREN          reduce using rule 19 (statement_control -> funcionif .)
    NEGATION        reduce using rule 19 (statement_control -> funcionif .)
    COMMENT         reduce using rule 19 (statement_control -> funcionif .)
    MULTICOMMENT    reduce using rule 19 (statement_control -> funcionif .)
    FUNCTION        reduce using rule 19 (statement_control -> funcionif .)
    PRINT           reduce using rule 19 (statement_control -> funcionif .)
    INCREMENT       reduce using rule 19 (statement_control -> funcionif .)
    DECREMENT       reduce using rule 19 (statement_control -> funcionif .)
    NORMSTRING1     reduce using rule 19 (statement_control -> funcionif .)
    NORMSTRING2     reduce using rule 19 (statement_control -> funcionif .)
    MULTISTRING     reduce using rule 19 (statement_control -> funcionif .)
    ENUM            reduce using rule 19 (statement_control -> funcionif .)
    IF              reduce using rule 19 (statement_control -> funcionif .)
    WHILE           reduce using rule 19 (statement_control -> funcionif .)
    FOR             reduce using rule 19 (statement_control -> funcionif .)
    NUMBER          reduce using rule 19 (statement_control -> funcionif .)
    FLOAT           reduce using rule 19 (statement_control -> funcionif .)
    VARIABLE        reduce using rule 19 (statement_control -> funcionif .)
    LET             reduce using rule 19 (statement_control -> funcionif .)
    VAR             reduce using rule 19 (statement_control -> funcionif .)
    STATIC          reduce using rule 19 (statement_control -> funcionif .)
    CONST           reduce using rule 19 (statement_control -> funcionif .)
    OBJECTNAME      reduce using rule 19 (statement_control -> funcionif .)
    FUNMATH         reduce using rule 19 (statement_control -> funcionif .)
    $end            reduce using rule 19 (statement_control -> funcionif .)
    RKEY            reduce using rule 19 (statement_control -> funcionif .)


state 40

    (20) statement_control -> funcionwhile .

    POINTCOMMA      reduce using rule 20 (statement_control -> funcionwhile .)
    LPAREN          reduce using rule 20 (statement_control -> funcionwhile .)
    NEGATION        reduce using rule 20 (statement_control -> funcionwhile .)
    COMMENT         reduce using rule 20 (statement_control -> funcionwhile .)
    MULTICOMMENT    reduce using rule 20 (statement_control -> funcionwhile .)
    FUNCTION        reduce using rule 20 (statement_control -> funcionwhile .)
    PRINT           reduce using rule 20 (statement_control -> funcionwhile .)
    INCREMENT       reduce using rule 20 (statement_control -> funcionwhile .)
    DECREMENT       reduce using rule 20 (statement_control -> funcionwhile .)
    NORMSTRING1     reduce using rule 20 (statement_control -> funcionwhile .)
    NORMSTRING2     reduce using rule 20 (statement_control -> funcionwhile .)
    MULTISTRING     reduce using rule 20 (statement_control -> funcionwhile .)
    ENUM            reduce using rule 20 (statement_control -> funcionwhile .)
    IF              reduce using rule 20 (statement_control -> funcionwhile .)
    WHILE           reduce using rule 20 (statement_control -> funcionwhile .)
    FOR             reduce using rule 20 (statement_control -> funcionwhile .)
    NUMBER          reduce using rule 20 (statement_control -> funcionwhile .)
    FLOAT           reduce using rule 20 (statement_control -> funcionwhile .)
    VARIABLE        reduce using rule 20 (statement_control -> funcionwhile .)
    LET             reduce using rule 20 (statement_control -> funcionwhile .)
    VAR             reduce using rule 20 (statement_control -> funcionwhile .)
    STATIC          reduce using rule 20 (statement_control -> funcionwhile .)
    CONST           reduce using rule 20 (statement_control -> funcionwhile .)
    OBJECTNAME      reduce using rule 20 (statement_control -> funcionwhile .)
    FUNMATH         reduce using rule 20 (statement_control -> funcionwhile .)
    $end            reduce using rule 20 (statement_control -> funcionwhile .)
    RKEY            reduce using rule 20 (statement_control -> funcionwhile .)


state 41

<<<<<<< HEAD
    (21) statement_control -> funcionfor .

    POINTCOMMA      reduce using rule 21 (statement_control -> funcionfor .)
    LPAREN          reduce using rule 21 (statement_control -> funcionfor .)
    NEGATION        reduce using rule 21 (statement_control -> funcionfor .)
    COMMENT         reduce using rule 21 (statement_control -> funcionfor .)
    MULTICOMMENT    reduce using rule 21 (statement_control -> funcionfor .)
    FUNCTION        reduce using rule 21 (statement_control -> funcionfor .)
    PRINT           reduce using rule 21 (statement_control -> funcionfor .)
    INCREMENT       reduce using rule 21 (statement_control -> funcionfor .)
    DECREMENT       reduce using rule 21 (statement_control -> funcionfor .)
    NORMSTRING1     reduce using rule 21 (statement_control -> funcionfor .)
    NORMSTRING2     reduce using rule 21 (statement_control -> funcionfor .)
    MULTISTRING     reduce using rule 21 (statement_control -> funcionfor .)
    ENUM            reduce using rule 21 (statement_control -> funcionfor .)
    IF              reduce using rule 21 (statement_control -> funcionfor .)
    WHILE           reduce using rule 21 (statement_control -> funcionfor .)
    FOR             reduce using rule 21 (statement_control -> funcionfor .)
    NUMBER          reduce using rule 21 (statement_control -> funcionfor .)
    FLOAT           reduce using rule 21 (statement_control -> funcionfor .)
    VARIABLE        reduce using rule 21 (statement_control -> funcionfor .)
    LET             reduce using rule 21 (statement_control -> funcionfor .)
    VAR             reduce using rule 21 (statement_control -> funcionfor .)
    STATIC          reduce using rule 21 (statement_control -> funcionfor .)
    CONST           reduce using rule 21 (statement_control -> funcionfor .)
    OBJECTNAME      reduce using rule 21 (statement_control -> funcionfor .)
    FUNMATH         reduce using rule 21 (statement_control -> funcionfor .)
    $end            reduce using rule 21 (statement_control -> funcionfor .)
    RKEY            reduce using rule 21 (statement_control -> funcionfor .)


state 41

    (25) comments -> COMMENT .

    POINTCOMMA      reduce using rule 25 (comments -> COMMENT .)
    LPAREN          reduce using rule 25 (comments -> COMMENT .)
    NEGATION        reduce using rule 25 (comments -> COMMENT .)
    COMMENT         reduce using rule 25 (comments -> COMMENT .)
    MULTICOMMENT    reduce using rule 25 (comments -> COMMENT .)
    FUNCTION        reduce using rule 25 (comments -> COMMENT .)
    PRINT           reduce using rule 25 (comments -> COMMENT .)
    INCREMENT       reduce using rule 25 (comments -> COMMENT .)
    DECREMENT       reduce using rule 25 (comments -> COMMENT .)
    NORMSTRING1     reduce using rule 25 (comments -> COMMENT .)
    NORMSTRING2     reduce using rule 25 (comments -> COMMENT .)
    MULTISTRING     reduce using rule 25 (comments -> COMMENT .)
    ENUM            reduce using rule 25 (comments -> COMMENT .)
    IF              reduce using rule 25 (comments -> COMMENT .)
    WHILE           reduce using rule 25 (comments -> COMMENT .)
    FOR             reduce using rule 25 (comments -> COMMENT .)
    NUMBER          reduce using rule 25 (comments -> COMMENT .)
    FLOAT           reduce using rule 25 (comments -> COMMENT .)
    VARIABLE        reduce using rule 25 (comments -> COMMENT .)
    LET             reduce using rule 25 (comments -> COMMENT .)
    VAR             reduce using rule 25 (comments -> COMMENT .)
    STATIC          reduce using rule 25 (comments -> COMMENT .)
    CONST           reduce using rule 25 (comments -> COMMENT .)
    OBJECTNAME      reduce using rule 25 (comments -> COMMENT .)
    FUNMATH         reduce using rule 25 (comments -> COMMENT .)
    $end            reduce using rule 25 (comments -> COMMENT .)
    RKEY            reduce using rule 25 (comments -> COMMENT .)
=======
    (19) consoleLog -> PRINT . LPAREN RPAREN
    (20) consoleLog -> PRINT . LPAREN VARIABLE RPAREN
    (21) consoleLog -> PRINT . LPAREN string RPAREN

    LPAREN          shift and go to state 149
>>>>>>> master


state 42

<<<<<<< HEAD
    (26) comments -> MULTICOMMENT .

    POINTCOMMA      reduce using rule 26 (comments -> MULTICOMMENT .)
    LPAREN          reduce using rule 26 (comments -> MULTICOMMENT .)
    NEGATION        reduce using rule 26 (comments -> MULTICOMMENT .)
    COMMENT         reduce using rule 26 (comments -> MULTICOMMENT .)
    MULTICOMMENT    reduce using rule 26 (comments -> MULTICOMMENT .)
    FUNCTION        reduce using rule 26 (comments -> MULTICOMMENT .)
    PRINT           reduce using rule 26 (comments -> MULTICOMMENT .)
    INCREMENT       reduce using rule 26 (comments -> MULTICOMMENT .)
    DECREMENT       reduce using rule 26 (comments -> MULTICOMMENT .)
    NORMSTRING1     reduce using rule 26 (comments -> MULTICOMMENT .)
    NORMSTRING2     reduce using rule 26 (comments -> MULTICOMMENT .)
    MULTISTRING     reduce using rule 26 (comments -> MULTICOMMENT .)
    ENUM            reduce using rule 26 (comments -> MULTICOMMENT .)
    IF              reduce using rule 26 (comments -> MULTICOMMENT .)
    WHILE           reduce using rule 26 (comments -> MULTICOMMENT .)
    FOR             reduce using rule 26 (comments -> MULTICOMMENT .)
    NUMBER          reduce using rule 26 (comments -> MULTICOMMENT .)
    FLOAT           reduce using rule 26 (comments -> MULTICOMMENT .)
    VARIABLE        reduce using rule 26 (comments -> MULTICOMMENT .)
    LET             reduce using rule 26 (comments -> MULTICOMMENT .)
    VAR             reduce using rule 26 (comments -> MULTICOMMENT .)
    STATIC          reduce using rule 26 (comments -> MULTICOMMENT .)
    CONST           reduce using rule 26 (comments -> MULTICOMMENT .)
    OBJECTNAME      reduce using rule 26 (comments -> MULTICOMMENT .)
    FUNMATH         reduce using rule 26 (comments -> MULTICOMMENT .)
    $end            reduce using rule 26 (comments -> MULTICOMMENT .)
    RKEY            reduce using rule 26 (comments -> MULTICOMMENT .)
=======
    (170) term -> term1 . INCREMENT
    (172) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 150
    DECREMENT       shift and go to state 151
>>>>>>> master


state 43

<<<<<<< HEAD
    (47) funtionStatement -> FUNCTION . VARIABLE LPAREN RPAREN substatement
    (48) funtionStatement -> FUNCTION . VARIABLE LPAREN funcParametres RPAREN substatement

    VARIABLE        shift and go to state 153


state 44

    (22) consoleLog -> PRINT . LPAREN RPAREN
    (23) consoleLog -> PRINT . LPAREN VARIABLE RPAREN
    (24) consoleLog -> PRINT . LPAREN string RPAREN

    LPAREN          shift and go to state 154


state 45

    (180) term -> term1 . INCREMENT
    (182) term -> term1 . DECREMENT
=======
    (171) term -> INCREMENT . term1
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 158

    term1                          shift and go to state 152
    group                          shift and go to state 72
    number                         shift and go to state 154
    variable                       shift and go to state 155
    array_value                    shift and go to state 156
    object_value                   shift and go to state 157
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127

state 44

    (173) term -> DECREMENT . term1
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 158

    term1                          shift and go to state 159
    group                          shift and go to state 72
    number                         shift and go to state 154
    variable                       shift and go to state 155
    array_value                    shift and go to state 156
    object_value                   shift and go to state 157
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127

state 45

    (197) term -> number .
    (193) group -> number .

    PLUS            reduce using rule 197 (term -> number .)
    MINUS           reduce using rule 197 (term -> number .)
    PRODUCT         reduce using rule 197 (term -> number .)
    DIVIDE          reduce using rule 197 (term -> number .)
    EQUALTO         reduce using rule 197 (term -> number .)
    NOTEQUALTO      reduce using rule 197 (term -> number .)
    GREATER         reduce using rule 197 (term -> number .)
    LESS            reduce using rule 197 (term -> number .)
    GREATEREQUAL    reduce using rule 197 (term -> number .)
    LESSEQUAL       reduce using rule 197 (term -> number .)
    AND             reduce using rule 197 (term -> number .)
    OR              reduce using rule 197 (term -> number .)
    POINTCOMMA      reduce using rule 197 (term -> number .)
    $end            reduce using rule 197 (term -> number .)
    RPAREN          reduce using rule 197 (term -> number .)
    RKEY            reduce using rule 197 (term -> number .)
    RBRACKET        reduce using rule 197 (term -> number .)
    COMMA           reduce using rule 197 (term -> number .)
    INCREMENT       reduce using rule 193 (group -> number .)
    DECREMENT       reduce using rule 193 (group -> number .)
>>>>>>> master

    INCREMENT       shift and go to state 155
    DECREMENT       shift and go to state 156


<<<<<<< HEAD
state 46
=======
    (198) term -> factor_expr .

    PLUS            reduce using rule 198 (term -> factor_expr .)
    MINUS           reduce using rule 198 (term -> factor_expr .)
    PRODUCT         reduce using rule 198 (term -> factor_expr .)
    DIVIDE          reduce using rule 198 (term -> factor_expr .)
    EQUALTO         reduce using rule 198 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 198 (term -> factor_expr .)
    GREATER         reduce using rule 198 (term -> factor_expr .)
    LESS            reduce using rule 198 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 198 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 198 (term -> factor_expr .)
    AND             reduce using rule 198 (term -> factor_expr .)
    OR              reduce using rule 198 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 198 (term -> factor_expr .)
    $end            reduce using rule 198 (term -> factor_expr .)
    RPAREN          reduce using rule 198 (term -> factor_expr .)
    RKEY            reduce using rule 198 (term -> factor_expr .)
    RBRACKET        reduce using rule 198 (term -> factor_expr .)
    COMMA           reduce using rule 198 (term -> factor_expr .)
>>>>>>> master

    (181) term -> INCREMENT . term1
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 158
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 163

    term1                          shift and go to state 157
    group                          shift and go to state 76
    number                         shift and go to state 159
    variable                       shift and go to state 160
    array_value                    shift and go to state 161
    object_value                   shift and go to state 162
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131

state 47

<<<<<<< HEAD
    (183) term -> DECREMENT . term1
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 158
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 163

    term1                          shift and go to state 164
    group                          shift and go to state 76
    number                         shift and go to state 159
    variable                       shift and go to state 160
    array_value                    shift and go to state 161
    object_value                   shift and go to state 162
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131

state 48

    (207) term -> number .
    (203) group -> number .

  ! reduce/reduce conflict for INCREMENT resolved using rule 203 (group -> number .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 203 (group -> number .)
    PLUS            reduce using rule 207 (term -> number .)
    MINUS           reduce using rule 207 (term -> number .)
    PRODUCT         reduce using rule 207 (term -> number .)
    DIVIDE          reduce using rule 207 (term -> number .)
    EQUALTO         reduce using rule 207 (term -> number .)
    NOTEQUALTO      reduce using rule 207 (term -> number .)
    GREATER         reduce using rule 207 (term -> number .)
    LESS            reduce using rule 207 (term -> number .)
    GREATEREQUAL    reduce using rule 207 (term -> number .)
    LESSEQUAL       reduce using rule 207 (term -> number .)
    AND             reduce using rule 207 (term -> number .)
    OR              reduce using rule 207 (term -> number .)
    POINTCOMMA      reduce using rule 207 (term -> number .)
    LPAREN          reduce using rule 207 (term -> number .)
    NEGATION        reduce using rule 207 (term -> number .)
    COMMENT         reduce using rule 207 (term -> number .)
    MULTICOMMENT    reduce using rule 207 (term -> number .)
    FUNCTION        reduce using rule 207 (term -> number .)
    PRINT           reduce using rule 207 (term -> number .)
    NORMSTRING1     reduce using rule 207 (term -> number .)
    NORMSTRING2     reduce using rule 207 (term -> number .)
    MULTISTRING     reduce using rule 207 (term -> number .)
    ENUM            reduce using rule 207 (term -> number .)
    IF              reduce using rule 207 (term -> number .)
    WHILE           reduce using rule 207 (term -> number .)
    FOR             reduce using rule 207 (term -> number .)
    NUMBER          reduce using rule 207 (term -> number .)
    FLOAT           reduce using rule 207 (term -> number .)
    VARIABLE        reduce using rule 207 (term -> number .)
    LET             reduce using rule 207 (term -> number .)
    VAR             reduce using rule 207 (term -> number .)
    STATIC          reduce using rule 207 (term -> number .)
    CONST           reduce using rule 207 (term -> number .)
    OBJECTNAME      reduce using rule 207 (term -> number .)
    FUNMATH         reduce using rule 207 (term -> number .)
    $end            reduce using rule 207 (term -> number .)
    RKEY            reduce using rule 207 (term -> number .)
    RPAREN          reduce using rule 207 (term -> number .)
    RBRACKET        reduce using rule 207 (term -> number .)
    COMMA           reduce using rule 207 (term -> number .)
    INCREMENT       reduce using rule 203 (group -> number .)
    DECREMENT       reduce using rule 203 (group -> number .)

  ! INCREMENT       [ reduce using rule 207 (term -> number .) ]
  ! DECREMENT       [ reduce using rule 207 (term -> number .) ]
=======
    (199) term -> other_value .

    PLUS            reduce using rule 199 (term -> other_value .)
    MINUS           reduce using rule 199 (term -> other_value .)
    PRODUCT         reduce using rule 199 (term -> other_value .)
    DIVIDE          reduce using rule 199 (term -> other_value .)
    EQUALTO         reduce using rule 199 (term -> other_value .)
    NOTEQUALTO      reduce using rule 199 (term -> other_value .)
    GREATER         reduce using rule 199 (term -> other_value .)
    LESS            reduce using rule 199 (term -> other_value .)
    GREATEREQUAL    reduce using rule 199 (term -> other_value .)
    LESSEQUAL       reduce using rule 199 (term -> other_value .)
    AND             reduce using rule 199 (term -> other_value .)
    OR              reduce using rule 199 (term -> other_value .)
    POINTCOMMA      reduce using rule 199 (term -> other_value .)
    $end            reduce using rule 199 (term -> other_value .)
    RPAREN          reduce using rule 199 (term -> other_value .)
    RKEY            reduce using rule 199 (term -> other_value .)
    RBRACKET        reduce using rule 199 (term -> other_value .)
    COMMA           reduce using rule 199 (term -> other_value .)


state 48

    (226) string -> NORMSTRING1 .

    PLUS            reduce using rule 226 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 226 (string -> NORMSTRING1 .)
    $end            reduce using rule 226 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 226 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 226 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 226 (string -> NORMSTRING1 .)
    RPAREN          reduce using rule 226 (string -> NORMSTRING1 .)
>>>>>>> master


state 49

<<<<<<< HEAD
    (208) term -> factor_expr .

    PLUS            reduce using rule 208 (term -> factor_expr .)
    MINUS           reduce using rule 208 (term -> factor_expr .)
    PRODUCT         reduce using rule 208 (term -> factor_expr .)
    DIVIDE          reduce using rule 208 (term -> factor_expr .)
    EQUALTO         reduce using rule 208 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 208 (term -> factor_expr .)
    GREATER         reduce using rule 208 (term -> factor_expr .)
    LESS            reduce using rule 208 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 208 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 208 (term -> factor_expr .)
    AND             reduce using rule 208 (term -> factor_expr .)
    OR              reduce using rule 208 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 208 (term -> factor_expr .)
    LPAREN          reduce using rule 208 (term -> factor_expr .)
    NEGATION        reduce using rule 208 (term -> factor_expr .)
    COMMENT         reduce using rule 208 (term -> factor_expr .)
    MULTICOMMENT    reduce using rule 208 (term -> factor_expr .)
    FUNCTION        reduce using rule 208 (term -> factor_expr .)
    PRINT           reduce using rule 208 (term -> factor_expr .)
    INCREMENT       reduce using rule 208 (term -> factor_expr .)
    DECREMENT       reduce using rule 208 (term -> factor_expr .)
    NORMSTRING1     reduce using rule 208 (term -> factor_expr .)
    NORMSTRING2     reduce using rule 208 (term -> factor_expr .)
    MULTISTRING     reduce using rule 208 (term -> factor_expr .)
    ENUM            reduce using rule 208 (term -> factor_expr .)
    IF              reduce using rule 208 (term -> factor_expr .)
    WHILE           reduce using rule 208 (term -> factor_expr .)
    FOR             reduce using rule 208 (term -> factor_expr .)
    NUMBER          reduce using rule 208 (term -> factor_expr .)
    FLOAT           reduce using rule 208 (term -> factor_expr .)
    VARIABLE        reduce using rule 208 (term -> factor_expr .)
    LET             reduce using rule 208 (term -> factor_expr .)
    VAR             reduce using rule 208 (term -> factor_expr .)
    STATIC          reduce using rule 208 (term -> factor_expr .)
    CONST           reduce using rule 208 (term -> factor_expr .)
    OBJECTNAME      reduce using rule 208 (term -> factor_expr .)
    FUNMATH         reduce using rule 208 (term -> factor_expr .)
    $end            reduce using rule 208 (term -> factor_expr .)
    RKEY            reduce using rule 208 (term -> factor_expr .)
    RPAREN          reduce using rule 208 (term -> factor_expr .)
    RBRACKET        reduce using rule 208 (term -> factor_expr .)
    COMMA           reduce using rule 208 (term -> factor_expr .)
=======
    (227) string -> NORMSTRING2 .

    PLUS            reduce using rule 227 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 227 (string -> NORMSTRING2 .)
    $end            reduce using rule 227 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 227 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 227 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 227 (string -> NORMSTRING2 .)
    RPAREN          reduce using rule 227 (string -> NORMSTRING2 .)
>>>>>>> master


state 50

<<<<<<< HEAD
    (209) term -> other_value .

    PLUS            reduce using rule 209 (term -> other_value .)
    MINUS           reduce using rule 209 (term -> other_value .)
    PRODUCT         reduce using rule 209 (term -> other_value .)
    DIVIDE          reduce using rule 209 (term -> other_value .)
    EQUALTO         reduce using rule 209 (term -> other_value .)
    NOTEQUALTO      reduce using rule 209 (term -> other_value .)
    GREATER         reduce using rule 209 (term -> other_value .)
    LESS            reduce using rule 209 (term -> other_value .)
    GREATEREQUAL    reduce using rule 209 (term -> other_value .)
    LESSEQUAL       reduce using rule 209 (term -> other_value .)
    AND             reduce using rule 209 (term -> other_value .)
    OR              reduce using rule 209 (term -> other_value .)
    POINTCOMMA      reduce using rule 209 (term -> other_value .)
    LPAREN          reduce using rule 209 (term -> other_value .)
    NEGATION        reduce using rule 209 (term -> other_value .)
    COMMENT         reduce using rule 209 (term -> other_value .)
    MULTICOMMENT    reduce using rule 209 (term -> other_value .)
    FUNCTION        reduce using rule 209 (term -> other_value .)
    PRINT           reduce using rule 209 (term -> other_value .)
    INCREMENT       reduce using rule 209 (term -> other_value .)
    DECREMENT       reduce using rule 209 (term -> other_value .)
    NORMSTRING1     reduce using rule 209 (term -> other_value .)
    NORMSTRING2     reduce using rule 209 (term -> other_value .)
    MULTISTRING     reduce using rule 209 (term -> other_value .)
    ENUM            reduce using rule 209 (term -> other_value .)
    IF              reduce using rule 209 (term -> other_value .)
    WHILE           reduce using rule 209 (term -> other_value .)
    FOR             reduce using rule 209 (term -> other_value .)
    NUMBER          reduce using rule 209 (term -> other_value .)
    FLOAT           reduce using rule 209 (term -> other_value .)
    VARIABLE        reduce using rule 209 (term -> other_value .)
    LET             reduce using rule 209 (term -> other_value .)
    VAR             reduce using rule 209 (term -> other_value .)
    STATIC          reduce using rule 209 (term -> other_value .)
    CONST           reduce using rule 209 (term -> other_value .)
    OBJECTNAME      reduce using rule 209 (term -> other_value .)
    FUNMATH         reduce using rule 209 (term -> other_value .)
    $end            reduce using rule 209 (term -> other_value .)
    RKEY            reduce using rule 209 (term -> other_value .)
    RPAREN          reduce using rule 209 (term -> other_value .)
    RBRACKET        reduce using rule 209 (term -> other_value .)
    COMMA           reduce using rule 209 (term -> other_value .)
=======
    (228) string -> MULTISTRING .

    PLUS            reduce using rule 228 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 228 (string -> MULTISTRING .)
    $end            reduce using rule 228 (string -> MULTISTRING .)
    RKEY            reduce using rule 228 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 228 (string -> MULTISTRING .)
    COMMA           reduce using rule 228 (string -> MULTISTRING .)
    RPAREN          reduce using rule 228 (string -> MULTISTRING .)
>>>>>>> master


state 51

<<<<<<< HEAD
    (236) string -> NORMSTRING1 .

    PLUS            reduce using rule 236 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 236 (string -> NORMSTRING1 .)
    LPAREN          reduce using rule 236 (string -> NORMSTRING1 .)
    NEGATION        reduce using rule 236 (string -> NORMSTRING1 .)
    COMMENT         reduce using rule 236 (string -> NORMSTRING1 .)
    MULTICOMMENT    reduce using rule 236 (string -> NORMSTRING1 .)
    FUNCTION        reduce using rule 236 (string -> NORMSTRING1 .)
    PRINT           reduce using rule 236 (string -> NORMSTRING1 .)
    INCREMENT       reduce using rule 236 (string -> NORMSTRING1 .)
    DECREMENT       reduce using rule 236 (string -> NORMSTRING1 .)
    NORMSTRING1     reduce using rule 236 (string -> NORMSTRING1 .)
    NORMSTRING2     reduce using rule 236 (string -> NORMSTRING1 .)
    MULTISTRING     reduce using rule 236 (string -> NORMSTRING1 .)
    ENUM            reduce using rule 236 (string -> NORMSTRING1 .)
    IF              reduce using rule 236 (string -> NORMSTRING1 .)
    WHILE           reduce using rule 236 (string -> NORMSTRING1 .)
    FOR             reduce using rule 236 (string -> NORMSTRING1 .)
    NUMBER          reduce using rule 236 (string -> NORMSTRING1 .)
    FLOAT           reduce using rule 236 (string -> NORMSTRING1 .)
    VARIABLE        reduce using rule 236 (string -> NORMSTRING1 .)
    LET             reduce using rule 236 (string -> NORMSTRING1 .)
    VAR             reduce using rule 236 (string -> NORMSTRING1 .)
    STATIC          reduce using rule 236 (string -> NORMSTRING1 .)
    CONST           reduce using rule 236 (string -> NORMSTRING1 .)
    OBJECTNAME      reduce using rule 236 (string -> NORMSTRING1 .)
    FUNMATH         reduce using rule 236 (string -> NORMSTRING1 .)
    $end            reduce using rule 236 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 236 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 236 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 236 (string -> NORMSTRING1 .)
    RPAREN          reduce using rule 236 (string -> NORMSTRING1 .)
=======
    (93) var_boolean -> declare_boolean . EQUAL boolean_value
    (94) var_boolean -> declare_boolean .
    (79) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 160
    POINTCOMMA      reduce using rule 94 (var_boolean -> declare_boolean .)
    $end            reduce using rule 94 (var_boolean -> declare_boolean .)
    RKEY            reduce using rule 94 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 161
>>>>>>> master


state 52

<<<<<<< HEAD
    (237) string -> NORMSTRING2 .

    PLUS            reduce using rule 237 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 237 (string -> NORMSTRING2 .)
    LPAREN          reduce using rule 237 (string -> NORMSTRING2 .)
    NEGATION        reduce using rule 237 (string -> NORMSTRING2 .)
    COMMENT         reduce using rule 237 (string -> NORMSTRING2 .)
    MULTICOMMENT    reduce using rule 237 (string -> NORMSTRING2 .)
    FUNCTION        reduce using rule 237 (string -> NORMSTRING2 .)
    PRINT           reduce using rule 237 (string -> NORMSTRING2 .)
    INCREMENT       reduce using rule 237 (string -> NORMSTRING2 .)
    DECREMENT       reduce using rule 237 (string -> NORMSTRING2 .)
    NORMSTRING1     reduce using rule 237 (string -> NORMSTRING2 .)
    NORMSTRING2     reduce using rule 237 (string -> NORMSTRING2 .)
    MULTISTRING     reduce using rule 237 (string -> NORMSTRING2 .)
    ENUM            reduce using rule 237 (string -> NORMSTRING2 .)
    IF              reduce using rule 237 (string -> NORMSTRING2 .)
    WHILE           reduce using rule 237 (string -> NORMSTRING2 .)
    FOR             reduce using rule 237 (string -> NORMSTRING2 .)
    NUMBER          reduce using rule 237 (string -> NORMSTRING2 .)
    FLOAT           reduce using rule 237 (string -> NORMSTRING2 .)
    VARIABLE        reduce using rule 237 (string -> NORMSTRING2 .)
    LET             reduce using rule 237 (string -> NORMSTRING2 .)
    VAR             reduce using rule 237 (string -> NORMSTRING2 .)
    STATIC          reduce using rule 237 (string -> NORMSTRING2 .)
    CONST           reduce using rule 237 (string -> NORMSTRING2 .)
    OBJECTNAME      reduce using rule 237 (string -> NORMSTRING2 .)
    FUNMATH         reduce using rule 237 (string -> NORMSTRING2 .)
    $end            reduce using rule 237 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 237 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 237 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 237 (string -> NORMSTRING2 .)
    RPAREN          reduce using rule 237 (string -> NORMSTRING2 .)
=======
    (88) var_number -> declare_number . EQUAL number_value
    (89) var_number -> declare_number . EQUAL funcionmath
    (90) var_number -> declare_number .
    (91) var_number -> declare_number . EQUAL expression
    (75) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 162
    POINTCOMMA      reduce using rule 90 (var_number -> declare_number .)
    $end            reduce using rule 90 (var_number -> declare_number .)
    RKEY            reduce using rule 90 (var_number -> declare_number .)
    LBRACKET        shift and go to state 163
>>>>>>> master


state 53

<<<<<<< HEAD
    (238) string -> MULTISTRING .

    PLUS            reduce using rule 238 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 238 (string -> MULTISTRING .)
    LPAREN          reduce using rule 238 (string -> MULTISTRING .)
    NEGATION        reduce using rule 238 (string -> MULTISTRING .)
    COMMENT         reduce using rule 238 (string -> MULTISTRING .)
    MULTICOMMENT    reduce using rule 238 (string -> MULTISTRING .)
    FUNCTION        reduce using rule 238 (string -> MULTISTRING .)
    PRINT           reduce using rule 238 (string -> MULTISTRING .)
    INCREMENT       reduce using rule 238 (string -> MULTISTRING .)
    DECREMENT       reduce using rule 238 (string -> MULTISTRING .)
    NORMSTRING1     reduce using rule 238 (string -> MULTISTRING .)
    NORMSTRING2     reduce using rule 238 (string -> MULTISTRING .)
    MULTISTRING     reduce using rule 238 (string -> MULTISTRING .)
    ENUM            reduce using rule 238 (string -> MULTISTRING .)
    IF              reduce using rule 238 (string -> MULTISTRING .)
    WHILE           reduce using rule 238 (string -> MULTISTRING .)
    FOR             reduce using rule 238 (string -> MULTISTRING .)
    NUMBER          reduce using rule 238 (string -> MULTISTRING .)
    FLOAT           reduce using rule 238 (string -> MULTISTRING .)
    VARIABLE        reduce using rule 238 (string -> MULTISTRING .)
    LET             reduce using rule 238 (string -> MULTISTRING .)
    VAR             reduce using rule 238 (string -> MULTISTRING .)
    STATIC          reduce using rule 238 (string -> MULTISTRING .)
    CONST           reduce using rule 238 (string -> MULTISTRING .)
    OBJECTNAME      reduce using rule 238 (string -> MULTISTRING .)
    FUNMATH         reduce using rule 238 (string -> MULTISTRING .)
    $end            reduce using rule 238 (string -> MULTISTRING .)
    RKEY            reduce using rule 238 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 238 (string -> MULTISTRING .)
    COMMA           reduce using rule 238 (string -> MULTISTRING .)
    RPAREN          reduce using rule 238 (string -> MULTISTRING .)
=======
    (241) funciones -> funcionmath .

    PLUS            reduce using rule 241 (funciones -> funcionmath .)
    MINUS           reduce using rule 241 (funciones -> funcionmath .)
    PRODUCT         reduce using rule 241 (funciones -> funcionmath .)
    DIVIDE          reduce using rule 241 (funciones -> funcionmath .)
    EQUALTO         reduce using rule 241 (funciones -> funcionmath .)
    NOTEQUALTO      reduce using rule 241 (funciones -> funcionmath .)
    GREATER         reduce using rule 241 (funciones -> funcionmath .)
    LESS            reduce using rule 241 (funciones -> funcionmath .)
    GREATEREQUAL    reduce using rule 241 (funciones -> funcionmath .)
    LESSEQUAL       reduce using rule 241 (funciones -> funcionmath .)
    AND             reduce using rule 241 (funciones -> funcionmath .)
    OR              reduce using rule 241 (funciones -> funcionmath .)
    POINTCOMMA      reduce using rule 241 (funciones -> funcionmath .)
    $end            reduce using rule 241 (funciones -> funcionmath .)
    RPAREN          reduce using rule 241 (funciones -> funcionmath .)
    RKEY            reduce using rule 241 (funciones -> funcionmath .)
    RBRACKET        reduce using rule 241 (funciones -> funcionmath .)
    COMMA           reduce using rule 241 (funciones -> funcionmath .)
>>>>>>> master


state 54

<<<<<<< HEAD
    (102) var_boolean -> declare_boolean . EQUAL boolean_value
    (103) var_boolean -> declare_boolean .
    (88) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 165
    POINTCOMMA      reduce using rule 103 (var_boolean -> declare_boolean .)
    LPAREN          reduce using rule 103 (var_boolean -> declare_boolean .)
    NEGATION        reduce using rule 103 (var_boolean -> declare_boolean .)
    COMMENT         reduce using rule 103 (var_boolean -> declare_boolean .)
    MULTICOMMENT    reduce using rule 103 (var_boolean -> declare_boolean .)
    FUNCTION        reduce using rule 103 (var_boolean -> declare_boolean .)
    PRINT           reduce using rule 103 (var_boolean -> declare_boolean .)
    INCREMENT       reduce using rule 103 (var_boolean -> declare_boolean .)
    DECREMENT       reduce using rule 103 (var_boolean -> declare_boolean .)
    NORMSTRING1     reduce using rule 103 (var_boolean -> declare_boolean .)
    NORMSTRING2     reduce using rule 103 (var_boolean -> declare_boolean .)
    MULTISTRING     reduce using rule 103 (var_boolean -> declare_boolean .)
    ENUM            reduce using rule 103 (var_boolean -> declare_boolean .)
    IF              reduce using rule 103 (var_boolean -> declare_boolean .)
    WHILE           reduce using rule 103 (var_boolean -> declare_boolean .)
    FOR             reduce using rule 103 (var_boolean -> declare_boolean .)
    NUMBER          reduce using rule 103 (var_boolean -> declare_boolean .)
    FLOAT           reduce using rule 103 (var_boolean -> declare_boolean .)
    VARIABLE        reduce using rule 103 (var_boolean -> declare_boolean .)
    LET             reduce using rule 103 (var_boolean -> declare_boolean .)
    VAR             reduce using rule 103 (var_boolean -> declare_boolean .)
    STATIC          reduce using rule 103 (var_boolean -> declare_boolean .)
    CONST           reduce using rule 103 (var_boolean -> declare_boolean .)
    OBJECTNAME      reduce using rule 103 (var_boolean -> declare_boolean .)
    FUNMATH         reduce using rule 103 (var_boolean -> declare_boolean .)
    $end            reduce using rule 103 (var_boolean -> declare_boolean .)
    RKEY            reduce using rule 103 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 166
=======
    (96) var_string -> declare_string . EQUAL string_value
    (97) var_string -> declare_string .
    (83) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 164
    POINTCOMMA      reduce using rule 97 (var_string -> declare_string .)
    $end            reduce using rule 97 (var_string -> declare_string .)
    RKEY            reduce using rule 97 (var_string -> declare_string .)
    LBRACKET        shift and go to state 165
>>>>>>> master


state 55

<<<<<<< HEAD
    (97) var_number -> declare_number . EQUAL number_value
    (98) var_number -> declare_number . EQUAL funcionmath
    (99) var_number -> declare_number .
    (100) var_number -> declare_number . EQUAL expression
    (84) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 167
    POINTCOMMA      reduce using rule 99 (var_number -> declare_number .)
    LPAREN          reduce using rule 99 (var_number -> declare_number .)
    NEGATION        reduce using rule 99 (var_number -> declare_number .)
    COMMENT         reduce using rule 99 (var_number -> declare_number .)
    MULTICOMMENT    reduce using rule 99 (var_number -> declare_number .)
    FUNCTION        reduce using rule 99 (var_number -> declare_number .)
    PRINT           reduce using rule 99 (var_number -> declare_number .)
    INCREMENT       reduce using rule 99 (var_number -> declare_number .)
    DECREMENT       reduce using rule 99 (var_number -> declare_number .)
    NORMSTRING1     reduce using rule 99 (var_number -> declare_number .)
    NORMSTRING2     reduce using rule 99 (var_number -> declare_number .)
    MULTISTRING     reduce using rule 99 (var_number -> declare_number .)
    ENUM            reduce using rule 99 (var_number -> declare_number .)
    IF              reduce using rule 99 (var_number -> declare_number .)
    WHILE           reduce using rule 99 (var_number -> declare_number .)
    FOR             reduce using rule 99 (var_number -> declare_number .)
    NUMBER          reduce using rule 99 (var_number -> declare_number .)
    FLOAT           reduce using rule 99 (var_number -> declare_number .)
    VARIABLE        reduce using rule 99 (var_number -> declare_number .)
    LET             reduce using rule 99 (var_number -> declare_number .)
    VAR             reduce using rule 99 (var_number -> declare_number .)
    STATIC          reduce using rule 99 (var_number -> declare_number .)
    CONST           reduce using rule 99 (var_number -> declare_number .)
    OBJECTNAME      reduce using rule 99 (var_number -> declare_number .)
    FUNMATH         reduce using rule 99 (var_number -> declare_number .)
    $end            reduce using rule 99 (var_number -> declare_number .)
    RKEY            reduce using rule 99 (var_number -> declare_number .)
    LBRACKET        shift and go to state 168
=======
    (99) var_enum -> declare_var_enum . EQUAL enum_value
    (100) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 166
    POINTCOMMA      reduce using rule 100 (var_enum -> declare_var_enum .)
    $end            reduce using rule 100 (var_enum -> declare_var_enum .)
    RKEY            reduce using rule 100 (var_enum -> declare_var_enum .)
>>>>>>> master


state 56

<<<<<<< HEAD
    (251) funciones -> funcionmath .

    PLUS            reduce using rule 251 (funciones -> funcionmath .)
    MINUS           reduce using rule 251 (funciones -> funcionmath .)
    PRODUCT         reduce using rule 251 (funciones -> funcionmath .)
    DIVIDE          reduce using rule 251 (funciones -> funcionmath .)
    EQUALTO         reduce using rule 251 (funciones -> funcionmath .)
    NOTEQUALTO      reduce using rule 251 (funciones -> funcionmath .)
    GREATER         reduce using rule 251 (funciones -> funcionmath .)
    LESS            reduce using rule 251 (funciones -> funcionmath .)
    GREATEREQUAL    reduce using rule 251 (funciones -> funcionmath .)
    LESSEQUAL       reduce using rule 251 (funciones -> funcionmath .)
    AND             reduce using rule 251 (funciones -> funcionmath .)
    OR              reduce using rule 251 (funciones -> funcionmath .)
    POINTCOMMA      reduce using rule 251 (funciones -> funcionmath .)
    LPAREN          reduce using rule 251 (funciones -> funcionmath .)
    NEGATION        reduce using rule 251 (funciones -> funcionmath .)
    COMMENT         reduce using rule 251 (funciones -> funcionmath .)
    MULTICOMMENT    reduce using rule 251 (funciones -> funcionmath .)
    FUNCTION        reduce using rule 251 (funciones -> funcionmath .)
    PRINT           reduce using rule 251 (funciones -> funcionmath .)
    INCREMENT       reduce using rule 251 (funciones -> funcionmath .)
    DECREMENT       reduce using rule 251 (funciones -> funcionmath .)
    NORMSTRING1     reduce using rule 251 (funciones -> funcionmath .)
    NORMSTRING2     reduce using rule 251 (funciones -> funcionmath .)
    MULTISTRING     reduce using rule 251 (funciones -> funcionmath .)
    ENUM            reduce using rule 251 (funciones -> funcionmath .)
    IF              reduce using rule 251 (funciones -> funcionmath .)
    WHILE           reduce using rule 251 (funciones -> funcionmath .)
    FOR             reduce using rule 251 (funciones -> funcionmath .)
    NUMBER          reduce using rule 251 (funciones -> funcionmath .)
    FLOAT           reduce using rule 251 (funciones -> funcionmath .)
    VARIABLE        reduce using rule 251 (funciones -> funcionmath .)
    LET             reduce using rule 251 (funciones -> funcionmath .)
    VAR             reduce using rule 251 (funciones -> funcionmath .)
    STATIC          reduce using rule 251 (funciones -> funcionmath .)
    CONST           reduce using rule 251 (funciones -> funcionmath .)
    OBJECTNAME      reduce using rule 251 (funciones -> funcionmath .)
    FUNMATH         reduce using rule 251 (funciones -> funcionmath .)
    $end            reduce using rule 251 (funciones -> funcionmath .)
    RKEY            reduce using rule 251 (funciones -> funcionmath .)
    RPAREN          reduce using rule 251 (funciones -> funcionmath .)
    RBRACKET        reduce using rule 251 (funciones -> funcionmath .)
    COMMA           reduce using rule 251 (funciones -> funcionmath .)
=======
    (204) other_value -> enum_value .

    PLUS            reduce using rule 204 (other_value -> enum_value .)
    MINUS           reduce using rule 204 (other_value -> enum_value .)
    PRODUCT         reduce using rule 204 (other_value -> enum_value .)
    DIVIDE          reduce using rule 204 (other_value -> enum_value .)
    EQUALTO         reduce using rule 204 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 204 (other_value -> enum_value .)
    GREATER         reduce using rule 204 (other_value -> enum_value .)
    LESS            reduce using rule 204 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 204 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 204 (other_value -> enum_value .)
    AND             reduce using rule 204 (other_value -> enum_value .)
    OR              reduce using rule 204 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 204 (other_value -> enum_value .)
    $end            reduce using rule 204 (other_value -> enum_value .)
    RPAREN          reduce using rule 204 (other_value -> enum_value .)
    RKEY            reduce using rule 204 (other_value -> enum_value .)
    RBRACKET        reduce using rule 204 (other_value -> enum_value .)
    COMMA           reduce using rule 204 (other_value -> enum_value .)
>>>>>>> master


state 57

<<<<<<< HEAD
    (105) var_string -> declare_string . EQUAL string_value
    (106) var_string -> declare_string .
    (92) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 169
    POINTCOMMA      reduce using rule 106 (var_string -> declare_string .)
    LPAREN          reduce using rule 106 (var_string -> declare_string .)
    NEGATION        reduce using rule 106 (var_string -> declare_string .)
    COMMENT         reduce using rule 106 (var_string -> declare_string .)
    MULTICOMMENT    reduce using rule 106 (var_string -> declare_string .)
    FUNCTION        reduce using rule 106 (var_string -> declare_string .)
    PRINT           reduce using rule 106 (var_string -> declare_string .)
    INCREMENT       reduce using rule 106 (var_string -> declare_string .)
    DECREMENT       reduce using rule 106 (var_string -> declare_string .)
    NORMSTRING1     reduce using rule 106 (var_string -> declare_string .)
    NORMSTRING2     reduce using rule 106 (var_string -> declare_string .)
    MULTISTRING     reduce using rule 106 (var_string -> declare_string .)
    ENUM            reduce using rule 106 (var_string -> declare_string .)
    IF              reduce using rule 106 (var_string -> declare_string .)
    WHILE           reduce using rule 106 (var_string -> declare_string .)
    FOR             reduce using rule 106 (var_string -> declare_string .)
    NUMBER          reduce using rule 106 (var_string -> declare_string .)
    FLOAT           reduce using rule 106 (var_string -> declare_string .)
    VARIABLE        reduce using rule 106 (var_string -> declare_string .)
    LET             reduce using rule 106 (var_string -> declare_string .)
    VAR             reduce using rule 106 (var_string -> declare_string .)
    STATIC          reduce using rule 106 (var_string -> declare_string .)
    CONST           reduce using rule 106 (var_string -> declare_string .)
    OBJECTNAME      reduce using rule 106 (var_string -> declare_string .)
    FUNMATH         reduce using rule 106 (var_string -> declare_string .)
    $end            reduce using rule 106 (var_string -> declare_string .)
    RKEY            reduce using rule 106 (var_string -> declare_string .)
    LBRACKET        shift and go to state 170
=======
    (69) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 69 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 69 (declare_array -> declare_array_main_number .)
    RKEY            reduce using rule 69 (declare_array -> declare_array_main_number .)
>>>>>>> master


state 58

<<<<<<< HEAD
    (108) var_enum -> declare_var_enum . EQUAL enum_value
    (109) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 171
    POINTCOMMA      reduce using rule 109 (var_enum -> declare_var_enum .)
    LPAREN          reduce using rule 109 (var_enum -> declare_var_enum .)
    NEGATION        reduce using rule 109 (var_enum -> declare_var_enum .)
    COMMENT         reduce using rule 109 (var_enum -> declare_var_enum .)
    MULTICOMMENT    reduce using rule 109 (var_enum -> declare_var_enum .)
    FUNCTION        reduce using rule 109 (var_enum -> declare_var_enum .)
    PRINT           reduce using rule 109 (var_enum -> declare_var_enum .)
    INCREMENT       reduce using rule 109 (var_enum -> declare_var_enum .)
    DECREMENT       reduce using rule 109 (var_enum -> declare_var_enum .)
    NORMSTRING1     reduce using rule 109 (var_enum -> declare_var_enum .)
    NORMSTRING2     reduce using rule 109 (var_enum -> declare_var_enum .)
    MULTISTRING     reduce using rule 109 (var_enum -> declare_var_enum .)
    ENUM            reduce using rule 109 (var_enum -> declare_var_enum .)
    IF              reduce using rule 109 (var_enum -> declare_var_enum .)
    WHILE           reduce using rule 109 (var_enum -> declare_var_enum .)
    FOR             reduce using rule 109 (var_enum -> declare_var_enum .)
    NUMBER          reduce using rule 109 (var_enum -> declare_var_enum .)
    FLOAT           reduce using rule 109 (var_enum -> declare_var_enum .)
    VARIABLE        reduce using rule 109 (var_enum -> declare_var_enum .)
    LET             reduce using rule 109 (var_enum -> declare_var_enum .)
    VAR             reduce using rule 109 (var_enum -> declare_var_enum .)
    STATIC          reduce using rule 109 (var_enum -> declare_var_enum .)
    CONST           reduce using rule 109 (var_enum -> declare_var_enum .)
    OBJECTNAME      reduce using rule 109 (var_enum -> declare_var_enum .)
    FUNMATH         reduce using rule 109 (var_enum -> declare_var_enum .)
    $end            reduce using rule 109 (var_enum -> declare_var_enum .)
    RKEY            reduce using rule 109 (var_enum -> declare_var_enum .)
=======
    (70) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 70 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 70 (declare_array -> declare_array_main_boolean .)
    RKEY            reduce using rule 70 (declare_array -> declare_array_main_boolean .)
>>>>>>> master


state 59

<<<<<<< HEAD
    (214) other_value -> enum_value .

    PLUS            reduce using rule 214 (other_value -> enum_value .)
    MINUS           reduce using rule 214 (other_value -> enum_value .)
    PRODUCT         reduce using rule 214 (other_value -> enum_value .)
    DIVIDE          reduce using rule 214 (other_value -> enum_value .)
    EQUALTO         reduce using rule 214 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 214 (other_value -> enum_value .)
    GREATER         reduce using rule 214 (other_value -> enum_value .)
    LESS            reduce using rule 214 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 214 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 214 (other_value -> enum_value .)
    AND             reduce using rule 214 (other_value -> enum_value .)
    OR              reduce using rule 214 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 214 (other_value -> enum_value .)
    LPAREN          reduce using rule 214 (other_value -> enum_value .)
    NEGATION        reduce using rule 214 (other_value -> enum_value .)
    COMMENT         reduce using rule 214 (other_value -> enum_value .)
    MULTICOMMENT    reduce using rule 214 (other_value -> enum_value .)
    FUNCTION        reduce using rule 214 (other_value -> enum_value .)
    PRINT           reduce using rule 214 (other_value -> enum_value .)
    INCREMENT       reduce using rule 214 (other_value -> enum_value .)
    DECREMENT       reduce using rule 214 (other_value -> enum_value .)
    NORMSTRING1     reduce using rule 214 (other_value -> enum_value .)
    NORMSTRING2     reduce using rule 214 (other_value -> enum_value .)
    MULTISTRING     reduce using rule 214 (other_value -> enum_value .)
    ENUM            reduce using rule 214 (other_value -> enum_value .)
    IF              reduce using rule 214 (other_value -> enum_value .)
    WHILE           reduce using rule 214 (other_value -> enum_value .)
    FOR             reduce using rule 214 (other_value -> enum_value .)
    NUMBER          reduce using rule 214 (other_value -> enum_value .)
    FLOAT           reduce using rule 214 (other_value -> enum_value .)
    VARIABLE        reduce using rule 214 (other_value -> enum_value .)
    LET             reduce using rule 214 (other_value -> enum_value .)
    VAR             reduce using rule 214 (other_value -> enum_value .)
    STATIC          reduce using rule 214 (other_value -> enum_value .)
    CONST           reduce using rule 214 (other_value -> enum_value .)
    OBJECTNAME      reduce using rule 214 (other_value -> enum_value .)
    FUNMATH         reduce using rule 214 (other_value -> enum_value .)
    $end            reduce using rule 214 (other_value -> enum_value .)
    RKEY            reduce using rule 214 (other_value -> enum_value .)
    RPAREN          reduce using rule 214 (other_value -> enum_value .)
    RBRACKET        reduce using rule 214 (other_value -> enum_value .)
    COMMA           reduce using rule 214 (other_value -> enum_value .)
=======
    (71) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 71 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 71 (declare_array -> declare_array_main_string .)
    RKEY            reduce using rule 71 (declare_array -> declare_array_main_string .)
>>>>>>> master


state 60

<<<<<<< HEAD
    (78) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 78 (declare_array -> declare_array_main_number .)
    LPAREN          reduce using rule 78 (declare_array -> declare_array_main_number .)
    NEGATION        reduce using rule 78 (declare_array -> declare_array_main_number .)
    COMMENT         reduce using rule 78 (declare_array -> declare_array_main_number .)
    MULTICOMMENT    reduce using rule 78 (declare_array -> declare_array_main_number .)
    FUNCTION        reduce using rule 78 (declare_array -> declare_array_main_number .)
    PRINT           reduce using rule 78 (declare_array -> declare_array_main_number .)
    INCREMENT       reduce using rule 78 (declare_array -> declare_array_main_number .)
    DECREMENT       reduce using rule 78 (declare_array -> declare_array_main_number .)
    NORMSTRING1     reduce using rule 78 (declare_array -> declare_array_main_number .)
    NORMSTRING2     reduce using rule 78 (declare_array -> declare_array_main_number .)
    MULTISTRING     reduce using rule 78 (declare_array -> declare_array_main_number .)
    ENUM            reduce using rule 78 (declare_array -> declare_array_main_number .)
    IF              reduce using rule 78 (declare_array -> declare_array_main_number .)
    WHILE           reduce using rule 78 (declare_array -> declare_array_main_number .)
    FOR             reduce using rule 78 (declare_array -> declare_array_main_number .)
    NUMBER          reduce using rule 78 (declare_array -> declare_array_main_number .)
    FLOAT           reduce using rule 78 (declare_array -> declare_array_main_number .)
    VARIABLE        reduce using rule 78 (declare_array -> declare_array_main_number .)
    LET             reduce using rule 78 (declare_array -> declare_array_main_number .)
    VAR             reduce using rule 78 (declare_array -> declare_array_main_number .)
    STATIC          reduce using rule 78 (declare_array -> declare_array_main_number .)
    CONST           reduce using rule 78 (declare_array -> declare_array_main_number .)
    OBJECTNAME      reduce using rule 78 (declare_array -> declare_array_main_number .)
    FUNMATH         reduce using rule 78 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 78 (declare_array -> declare_array_main_number .)
    RKEY            reduce using rule 78 (declare_array -> declare_array_main_number .)
=======
    (72) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 72 (declare_array -> declare_generic_array .)
    $end            reduce using rule 72 (declare_array -> declare_generic_array .)
    RKEY            reduce using rule 72 (declare_array -> declare_generic_array .)
>>>>>>> master


state 61

<<<<<<< HEAD
    (79) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    LPAREN          reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    NEGATION        reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    COMMENT         reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    MULTICOMMENT    reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    FUNCTION        reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    PRINT           reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    INCREMENT       reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    DECREMENT       reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    NORMSTRING1     reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    NORMSTRING2     reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    MULTISTRING     reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    ENUM            reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    IF              reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    WHILE           reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    FOR             reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    NUMBER          reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    FLOAT           reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    VARIABLE        reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    LET             reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    VAR             reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    STATIC          reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    CONST           reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    OBJECTNAME      reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    FUNMATH         reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 79 (declare_array -> declare_array_main_boolean .)
    RKEY            reduce using rule 79 (declare_array -> declare_array_main_boolean .)
=======
    (34) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 167
>>>>>>> master


state 62

<<<<<<< HEAD
    (80) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 80 (declare_array -> declare_array_main_string .)
    LPAREN          reduce using rule 80 (declare_array -> declare_array_main_string .)
    NEGATION        reduce using rule 80 (declare_array -> declare_array_main_string .)
    COMMENT         reduce using rule 80 (declare_array -> declare_array_main_string .)
    MULTICOMMENT    reduce using rule 80 (declare_array -> declare_array_main_string .)
    FUNCTION        reduce using rule 80 (declare_array -> declare_array_main_string .)
    PRINT           reduce using rule 80 (declare_array -> declare_array_main_string .)
    INCREMENT       reduce using rule 80 (declare_array -> declare_array_main_string .)
    DECREMENT       reduce using rule 80 (declare_array -> declare_array_main_string .)
    NORMSTRING1     reduce using rule 80 (declare_array -> declare_array_main_string .)
    NORMSTRING2     reduce using rule 80 (declare_array -> declare_array_main_string .)
    MULTISTRING     reduce using rule 80 (declare_array -> declare_array_main_string .)
    ENUM            reduce using rule 80 (declare_array -> declare_array_main_string .)
    IF              reduce using rule 80 (declare_array -> declare_array_main_string .)
    WHILE           reduce using rule 80 (declare_array -> declare_array_main_string .)
    FOR             reduce using rule 80 (declare_array -> declare_array_main_string .)
    NUMBER          reduce using rule 80 (declare_array -> declare_array_main_string .)
    FLOAT           reduce using rule 80 (declare_array -> declare_array_main_string .)
    VARIABLE        reduce using rule 80 (declare_array -> declare_array_main_string .)
    LET             reduce using rule 80 (declare_array -> declare_array_main_string .)
    VAR             reduce using rule 80 (declare_array -> declare_array_main_string .)
    STATIC          reduce using rule 80 (declare_array -> declare_array_main_string .)
    CONST           reduce using rule 80 (declare_array -> declare_array_main_string .)
    OBJECTNAME      reduce using rule 80 (declare_array -> declare_array_main_string .)
    FUNMATH         reduce using rule 80 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 80 (declare_array -> declare_array_main_string .)
    RKEY            reduce using rule 80 (declare_array -> declare_array_main_string .)
=======
    (232) object_name -> OBJECTNAME .

    POINT           reduce using rule 232 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 232 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 232 (object_name -> OBJECTNAME .)
    $end            reduce using rule 232 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 232 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 232 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 232 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 232 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 232 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 232 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 232 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 232 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 232 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 232 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 232 (object_name -> OBJECTNAME .)
    AND             reduce using rule 232 (object_name -> OBJECTNAME .)
    OR              reduce using rule 232 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 232 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 232 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 232 (object_name -> OBJECTNAME .)
>>>>>>> master


state 63

<<<<<<< HEAD
    (81) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 81 (declare_array -> declare_generic_array .)
    LPAREN          reduce using rule 81 (declare_array -> declare_generic_array .)
    NEGATION        reduce using rule 81 (declare_array -> declare_generic_array .)
    COMMENT         reduce using rule 81 (declare_array -> declare_generic_array .)
    MULTICOMMENT    reduce using rule 81 (declare_array -> declare_generic_array .)
    FUNCTION        reduce using rule 81 (declare_array -> declare_generic_array .)
    PRINT           reduce using rule 81 (declare_array -> declare_generic_array .)
    INCREMENT       reduce using rule 81 (declare_array -> declare_generic_array .)
    DECREMENT       reduce using rule 81 (declare_array -> declare_generic_array .)
    NORMSTRING1     reduce using rule 81 (declare_array -> declare_generic_array .)
    NORMSTRING2     reduce using rule 81 (declare_array -> declare_generic_array .)
    MULTISTRING     reduce using rule 81 (declare_array -> declare_generic_array .)
    ENUM            reduce using rule 81 (declare_array -> declare_generic_array .)
    IF              reduce using rule 81 (declare_array -> declare_generic_array .)
    WHILE           reduce using rule 81 (declare_array -> declare_generic_array .)
    FOR             reduce using rule 81 (declare_array -> declare_generic_array .)
    NUMBER          reduce using rule 81 (declare_array -> declare_generic_array .)
    FLOAT           reduce using rule 81 (declare_array -> declare_generic_array .)
    VARIABLE        reduce using rule 81 (declare_array -> declare_generic_array .)
    LET             reduce using rule 81 (declare_array -> declare_generic_array .)
    VAR             reduce using rule 81 (declare_array -> declare_generic_array .)
    STATIC          reduce using rule 81 (declare_array -> declare_generic_array .)
    CONST           reduce using rule 81 (declare_array -> declare_generic_array .)
    OBJECTNAME      reduce using rule 81 (declare_array -> declare_generic_array .)
    FUNMATH         reduce using rule 81 (declare_array -> declare_generic_array .)
    $end            reduce using rule 81 (declare_array -> declare_generic_array .)
    RKEY            reduce using rule 81 (declare_array -> declare_generic_array .)
=======
    (108) assign_variable -> variable . EQUAL assign_value
    (109) assign_variable -> variable . EQUAL funciones
    (110) assign_variable -> variable . EQUAL list_types
    (201) other_value -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value
    (194) group -> variable .

    EQUAL           shift and go to state 168
    PLUS            reduce using rule 201 (other_value -> variable .)
    MINUS           reduce using rule 201 (other_value -> variable .)
    PRODUCT         reduce using rule 201 (other_value -> variable .)
    DIVIDE          reduce using rule 201 (other_value -> variable .)
    EQUALTO         reduce using rule 201 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 201 (other_value -> variable .)
    GREATER         reduce using rule 201 (other_value -> variable .)
    LESS            reduce using rule 201 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 201 (other_value -> variable .)
    LESSEQUAL       reduce using rule 201 (other_value -> variable .)
    AND             reduce using rule 201 (other_value -> variable .)
    OR              reduce using rule 201 (other_value -> variable .)
    POINTCOMMA      reduce using rule 201 (other_value -> variable .)
    $end            reduce using rule 201 (other_value -> variable .)
    RKEY            reduce using rule 201 (other_value -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
    INCREMENT       reduce using rule 194 (group -> variable .)
    DECREMENT       reduce using rule 194 (group -> variable .)
>>>>>>> master


state 64

<<<<<<< HEAD
    (37) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 172
=======
    (202) other_value -> funciones .

    PLUS            reduce using rule 202 (other_value -> funciones .)
    MINUS           reduce using rule 202 (other_value -> funciones .)
    PRODUCT         reduce using rule 202 (other_value -> funciones .)
    DIVIDE          reduce using rule 202 (other_value -> funciones .)
    EQUALTO         reduce using rule 202 (other_value -> funciones .)
    NOTEQUALTO      reduce using rule 202 (other_value -> funciones .)
    GREATER         reduce using rule 202 (other_value -> funciones .)
    LESS            reduce using rule 202 (other_value -> funciones .)
    GREATEREQUAL    reduce using rule 202 (other_value -> funciones .)
    LESSEQUAL       reduce using rule 202 (other_value -> funciones .)
    AND             reduce using rule 202 (other_value -> funciones .)
    OR              reduce using rule 202 (other_value -> funciones .)
    POINTCOMMA      reduce using rule 202 (other_value -> funciones .)
    $end            reduce using rule 202 (other_value -> funciones .)
    RPAREN          reduce using rule 202 (other_value -> funciones .)
    RKEY            reduce using rule 202 (other_value -> funciones .)
    RBRACKET        reduce using rule 202 (other_value -> funciones .)
    COMMA           reduce using rule 202 (other_value -> funciones .)
>>>>>>> master


state 65

<<<<<<< HEAD
    (242) object_name -> OBJECTNAME .

    POINT           reduce using rule 242 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 242 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 242 (object_name -> OBJECTNAME .)
    LPAREN          reduce using rule 242 (object_name -> OBJECTNAME .)
    NEGATION        reduce using rule 242 (object_name -> OBJECTNAME .)
    COMMENT         reduce using rule 242 (object_name -> OBJECTNAME .)
    MULTICOMMENT    reduce using rule 242 (object_name -> OBJECTNAME .)
    FUNCTION        reduce using rule 242 (object_name -> OBJECTNAME .)
    PRINT           reduce using rule 242 (object_name -> OBJECTNAME .)
    INCREMENT       reduce using rule 242 (object_name -> OBJECTNAME .)
    DECREMENT       reduce using rule 242 (object_name -> OBJECTNAME .)
    NORMSTRING1     reduce using rule 242 (object_name -> OBJECTNAME .)
    NORMSTRING2     reduce using rule 242 (object_name -> OBJECTNAME .)
    MULTISTRING     reduce using rule 242 (object_name -> OBJECTNAME .)
    ENUM            reduce using rule 242 (object_name -> OBJECTNAME .)
    IF              reduce using rule 242 (object_name -> OBJECTNAME .)
    WHILE           reduce using rule 242 (object_name -> OBJECTNAME .)
    FOR             reduce using rule 242 (object_name -> OBJECTNAME .)
    NUMBER          reduce using rule 242 (object_name -> OBJECTNAME .)
    FLOAT           reduce using rule 242 (object_name -> OBJECTNAME .)
    VARIABLE        reduce using rule 242 (object_name -> OBJECTNAME .)
    LET             reduce using rule 242 (object_name -> OBJECTNAME .)
    VAR             reduce using rule 242 (object_name -> OBJECTNAME .)
    STATIC          reduce using rule 242 (object_name -> OBJECTNAME .)
    CONST           reduce using rule 242 (object_name -> OBJECTNAME .)
    OBJECTNAME      reduce using rule 242 (object_name -> OBJECTNAME .)
    FUNMATH         reduce using rule 242 (object_name -> OBJECTNAME .)
    $end            reduce using rule 242 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 242 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 242 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 242 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 242 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 242 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 242 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 242 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 242 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 242 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 242 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 242 (object_name -> OBJECTNAME .)
    AND             reduce using rule 242 (object_name -> OBJECTNAME .)
    OR              reduce using rule 242 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 242 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 242 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 242 (object_name -> OBJECTNAME .)
=======
    (111) assign_array -> array_value . EQUAL general_value
    (203) other_value -> array_value .
    (195) group -> array_value .

    EQUAL           shift and go to state 171
    PLUS            reduce using rule 203 (other_value -> array_value .)
    MINUS           reduce using rule 203 (other_value -> array_value .)
    PRODUCT         reduce using rule 203 (other_value -> array_value .)
    DIVIDE          reduce using rule 203 (other_value -> array_value .)
    EQUALTO         reduce using rule 203 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 203 (other_value -> array_value .)
    GREATER         reduce using rule 203 (other_value -> array_value .)
    LESS            reduce using rule 203 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 203 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 203 (other_value -> array_value .)
    AND             reduce using rule 203 (other_value -> array_value .)
    OR              reduce using rule 203 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 203 (other_value -> array_value .)
    $end            reduce using rule 203 (other_value -> array_value .)
    RKEY            reduce using rule 203 (other_value -> array_value .)
    INCREMENT       reduce using rule 195 (group -> array_value .)
    DECREMENT       reduce using rule 195 (group -> array_value .)
>>>>>>> master


state 66

<<<<<<< HEAD
    (118) assign_variable -> variable . EQUAL assign_value
    (119) assign_variable -> variable . EQUAL funciones
    (120) assign_variable -> variable . EQUAL list_types
    (211) other_value -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value
    (204) group -> variable .

  ! reduce/reduce conflict for INCREMENT resolved using rule 204 (group -> variable .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 204 (group -> variable .)
    EQUAL           shift and go to state 173
    PLUS            reduce using rule 211 (other_value -> variable .)
    MINUS           reduce using rule 211 (other_value -> variable .)
    PRODUCT         reduce using rule 211 (other_value -> variable .)
    DIVIDE          reduce using rule 211 (other_value -> variable .)
    EQUALTO         reduce using rule 211 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 211 (other_value -> variable .)
    GREATER         reduce using rule 211 (other_value -> variable .)
    LESS            reduce using rule 211 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 211 (other_value -> variable .)
    LESSEQUAL       reduce using rule 211 (other_value -> variable .)
    AND             reduce using rule 211 (other_value -> variable .)
    OR              reduce using rule 211 (other_value -> variable .)
    POINTCOMMA      reduce using rule 211 (other_value -> variable .)
    LPAREN          reduce using rule 211 (other_value -> variable .)
    NEGATION        reduce using rule 211 (other_value -> variable .)
    COMMENT         reduce using rule 211 (other_value -> variable .)
    MULTICOMMENT    reduce using rule 211 (other_value -> variable .)
    FUNCTION        reduce using rule 211 (other_value -> variable .)
    PRINT           reduce using rule 211 (other_value -> variable .)
    NORMSTRING1     reduce using rule 211 (other_value -> variable .)
    NORMSTRING2     reduce using rule 211 (other_value -> variable .)
    MULTISTRING     reduce using rule 211 (other_value -> variable .)
    ENUM            reduce using rule 211 (other_value -> variable .)
    IF              reduce using rule 211 (other_value -> variable .)
    WHILE           reduce using rule 211 (other_value -> variable .)
    FOR             reduce using rule 211 (other_value -> variable .)
    NUMBER          reduce using rule 211 (other_value -> variable .)
    FLOAT           reduce using rule 211 (other_value -> variable .)
    VARIABLE        reduce using rule 211 (other_value -> variable .)
    LET             reduce using rule 211 (other_value -> variable .)
    VAR             reduce using rule 211 (other_value -> variable .)
    STATIC          reduce using rule 211 (other_value -> variable .)
    CONST           reduce using rule 211 (other_value -> variable .)
    OBJECTNAME      reduce using rule 211 (other_value -> variable .)
    FUNMATH         reduce using rule 211 (other_value -> variable .)
    $end            reduce using rule 211 (other_value -> variable .)
    RKEY            reduce using rule 211 (other_value -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)

  ! INCREMENT       [ reduce using rule 211 (other_value -> variable .) ]
  ! DECREMENT       [ reduce using rule 211 (other_value -> variable .) ]
=======
    (112) assign_object_value -> object_value_form1 . EQUAL general_value
    (113) assign_object_value -> object_value_form1 . EQUAL list_types
    (208) object_value -> object_value_form1 .

    EQUAL           shift and go to state 172
    PLUS            reduce using rule 208 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 208 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 208 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 208 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 208 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 208 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 208 (object_value -> object_value_form1 .)
    LESS            reduce using rule 208 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 208 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 208 (object_value -> object_value_form1 .)
    AND             reduce using rule 208 (object_value -> object_value_form1 .)
    OR              reduce using rule 208 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 208 (object_value -> object_value_form1 .)
    $end            reduce using rule 208 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 208 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 208 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 208 (object_value -> object_value_form1 .)
>>>>>>> master


state 67

<<<<<<< HEAD
    (212) other_value -> funciones .

    PLUS            reduce using rule 212 (other_value -> funciones .)
    MINUS           reduce using rule 212 (other_value -> funciones .)
    PRODUCT         reduce using rule 212 (other_value -> funciones .)
    DIVIDE          reduce using rule 212 (other_value -> funciones .)
    EQUALTO         reduce using rule 212 (other_value -> funciones .)
    NOTEQUALTO      reduce using rule 212 (other_value -> funciones .)
    GREATER         reduce using rule 212 (other_value -> funciones .)
    LESS            reduce using rule 212 (other_value -> funciones .)
    GREATEREQUAL    reduce using rule 212 (other_value -> funciones .)
    LESSEQUAL       reduce using rule 212 (other_value -> funciones .)
    AND             reduce using rule 212 (other_value -> funciones .)
    OR              reduce using rule 212 (other_value -> funciones .)
    POINTCOMMA      reduce using rule 212 (other_value -> funciones .)
    LPAREN          reduce using rule 212 (other_value -> funciones .)
    NEGATION        reduce using rule 212 (other_value -> funciones .)
    COMMENT         reduce using rule 212 (other_value -> funciones .)
    MULTICOMMENT    reduce using rule 212 (other_value -> funciones .)
    FUNCTION        reduce using rule 212 (other_value -> funciones .)
    PRINT           reduce using rule 212 (other_value -> funciones .)
    INCREMENT       reduce using rule 212 (other_value -> funciones .)
    DECREMENT       reduce using rule 212 (other_value -> funciones .)
    NORMSTRING1     reduce using rule 212 (other_value -> funciones .)
    NORMSTRING2     reduce using rule 212 (other_value -> funciones .)
    MULTISTRING     reduce using rule 212 (other_value -> funciones .)
    ENUM            reduce using rule 212 (other_value -> funciones .)
    IF              reduce using rule 212 (other_value -> funciones .)
    WHILE           reduce using rule 212 (other_value -> funciones .)
    FOR             reduce using rule 212 (other_value -> funciones .)
    NUMBER          reduce using rule 212 (other_value -> funciones .)
    FLOAT           reduce using rule 212 (other_value -> funciones .)
    VARIABLE        reduce using rule 212 (other_value -> funciones .)
    LET             reduce using rule 212 (other_value -> funciones .)
    VAR             reduce using rule 212 (other_value -> funciones .)
    STATIC          reduce using rule 212 (other_value -> funciones .)
    CONST           reduce using rule 212 (other_value -> funciones .)
    OBJECTNAME      reduce using rule 212 (other_value -> funciones .)
    FUNMATH         reduce using rule 212 (other_value -> funciones .)
    $end            reduce using rule 212 (other_value -> funciones .)
    RKEY            reduce using rule 212 (other_value -> funciones .)
    RPAREN          reduce using rule 212 (other_value -> funciones .)
    RBRACKET        reduce using rule 212 (other_value -> funciones .)
    COMMA           reduce using rule 212 (other_value -> funciones .)
=======
    (114) assign_object_value -> object_value_form2 . EQUAL general_value
    (209) object_value -> object_value_form2 .

    EQUAL           shift and go to state 173
    PLUS            reduce using rule 209 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 209 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 209 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 209 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 209 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 209 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 209 (object_value -> object_value_form2 .)
    LESS            reduce using rule 209 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 209 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 209 (object_value -> object_value_form2 .)
    AND             reduce using rule 209 (object_value -> object_value_form2 .)
    OR              reduce using rule 209 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 209 (object_value -> object_value_form2 .)
    $end            reduce using rule 209 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 209 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 209 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 209 (object_value -> object_value_form2 .)
>>>>>>> master


state 68

<<<<<<< HEAD
    (121) assign_array -> array_value . EQUAL general_value
    (213) other_value -> array_value .
    (205) group -> array_value .

  ! reduce/reduce conflict for INCREMENT resolved using rule 205 (group -> array_value .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 205 (group -> array_value .)
    EQUAL           shift and go to state 176
    PLUS            reduce using rule 213 (other_value -> array_value .)
    MINUS           reduce using rule 213 (other_value -> array_value .)
    PRODUCT         reduce using rule 213 (other_value -> array_value .)
    DIVIDE          reduce using rule 213 (other_value -> array_value .)
    EQUALTO         reduce using rule 213 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 213 (other_value -> array_value .)
    GREATER         reduce using rule 213 (other_value -> array_value .)
    LESS            reduce using rule 213 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 213 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 213 (other_value -> array_value .)
    AND             reduce using rule 213 (other_value -> array_value .)
    OR              reduce using rule 213 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 213 (other_value -> array_value .)
    LPAREN          reduce using rule 213 (other_value -> array_value .)
    NEGATION        reduce using rule 213 (other_value -> array_value .)
    COMMENT         reduce using rule 213 (other_value -> array_value .)
    MULTICOMMENT    reduce using rule 213 (other_value -> array_value .)
    FUNCTION        reduce using rule 213 (other_value -> array_value .)
    PRINT           reduce using rule 213 (other_value -> array_value .)
    NORMSTRING1     reduce using rule 213 (other_value -> array_value .)
    NORMSTRING2     reduce using rule 213 (other_value -> array_value .)
    MULTISTRING     reduce using rule 213 (other_value -> array_value .)
    ENUM            reduce using rule 213 (other_value -> array_value .)
    IF              reduce using rule 213 (other_value -> array_value .)
    WHILE           reduce using rule 213 (other_value -> array_value .)
    FOR             reduce using rule 213 (other_value -> array_value .)
    NUMBER          reduce using rule 213 (other_value -> array_value .)
    FLOAT           reduce using rule 213 (other_value -> array_value .)
    VARIABLE        reduce using rule 213 (other_value -> array_value .)
    LET             reduce using rule 213 (other_value -> array_value .)
    VAR             reduce using rule 213 (other_value -> array_value .)
    STATIC          reduce using rule 213 (other_value -> array_value .)
    CONST           reduce using rule 213 (other_value -> array_value .)
    OBJECTNAME      reduce using rule 213 (other_value -> array_value .)
    FUNMATH         reduce using rule 213 (other_value -> array_value .)
    $end            reduce using rule 213 (other_value -> array_value .)
    RKEY            reduce using rule 213 (other_value -> array_value .)
    INCREMENT       reduce using rule 205 (group -> array_value .)
    DECREMENT       reduce using rule 205 (group -> array_value .)

  ! INCREMENT       [ reduce using rule 213 (other_value -> array_value .) ]
  ! DECREMENT       [ reduce using rule 213 (other_value -> array_value .) ]
=======
    (104) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 174
>>>>>>> master


state 69

<<<<<<< HEAD
    (122) assign_object_value -> object_value_form1 . EQUAL general_value
    (123) assign_object_value -> object_value_form1 . EQUAL list_types
    (218) object_value -> object_value_form1 .

    EQUAL           shift and go to state 177
    PLUS            reduce using rule 218 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 218 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 218 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 218 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 218 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 218 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 218 (object_value -> object_value_form1 .)
    LESS            reduce using rule 218 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 218 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 218 (object_value -> object_value_form1 .)
    AND             reduce using rule 218 (object_value -> object_value_form1 .)
    OR              reduce using rule 218 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 218 (object_value -> object_value_form1 .)
    LPAREN          reduce using rule 218 (object_value -> object_value_form1 .)
    NEGATION        reduce using rule 218 (object_value -> object_value_form1 .)
    COMMENT         reduce using rule 218 (object_value -> object_value_form1 .)
    MULTICOMMENT    reduce using rule 218 (object_value -> object_value_form1 .)
    FUNCTION        reduce using rule 218 (object_value -> object_value_form1 .)
    PRINT           reduce using rule 218 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 218 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 218 (object_value -> object_value_form1 .)
    NORMSTRING1     reduce using rule 218 (object_value -> object_value_form1 .)
    NORMSTRING2     reduce using rule 218 (object_value -> object_value_form1 .)
    MULTISTRING     reduce using rule 218 (object_value -> object_value_form1 .)
    ENUM            reduce using rule 218 (object_value -> object_value_form1 .)
    IF              reduce using rule 218 (object_value -> object_value_form1 .)
    WHILE           reduce using rule 218 (object_value -> object_value_form1 .)
    FOR             reduce using rule 218 (object_value -> object_value_form1 .)
    NUMBER          reduce using rule 218 (object_value -> object_value_form1 .)
    FLOAT           reduce using rule 218 (object_value -> object_value_form1 .)
    VARIABLE        reduce using rule 218 (object_value -> object_value_form1 .)
    LET             reduce using rule 218 (object_value -> object_value_form1 .)
    VAR             reduce using rule 218 (object_value -> object_value_form1 .)
    STATIC          reduce using rule 218 (object_value -> object_value_form1 .)
    CONST           reduce using rule 218 (object_value -> object_value_form1 .)
    OBJECTNAME      reduce using rule 218 (object_value -> object_value_form1 .)
    FUNMATH         reduce using rule 218 (object_value -> object_value_form1 .)
    $end            reduce using rule 218 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 218 (object_value -> object_value_form1 .)
=======
    (44) funcionif -> IF . LPAREN formLog RPAREN substatement
    (45) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif
    (46) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif funcionelse
    (47) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelse

    LPAREN          shift and go to state 175
>>>>>>> master


state 70

<<<<<<< HEAD
    (124) assign_object_value -> object_value_form2 . EQUAL general_value
    (219) object_value -> object_value_form2 .

    EQUAL           shift and go to state 178
    PLUS            reduce using rule 219 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 219 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 219 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 219 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 219 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 219 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 219 (object_value -> object_value_form2 .)
    LESS            reduce using rule 219 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 219 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 219 (object_value -> object_value_form2 .)
    AND             reduce using rule 219 (object_value -> object_value_form2 .)
    OR              reduce using rule 219 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 219 (object_value -> object_value_form2 .)
    LPAREN          reduce using rule 219 (object_value -> object_value_form2 .)
    NEGATION        reduce using rule 219 (object_value -> object_value_form2 .)
    COMMENT         reduce using rule 219 (object_value -> object_value_form2 .)
    MULTICOMMENT    reduce using rule 219 (object_value -> object_value_form2 .)
    FUNCTION        reduce using rule 219 (object_value -> object_value_form2 .)
    PRINT           reduce using rule 219 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 219 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 219 (object_value -> object_value_form2 .)
    NORMSTRING1     reduce using rule 219 (object_value -> object_value_form2 .)
    NORMSTRING2     reduce using rule 219 (object_value -> object_value_form2 .)
    MULTISTRING     reduce using rule 219 (object_value -> object_value_form2 .)
    ENUM            reduce using rule 219 (object_value -> object_value_form2 .)
    IF              reduce using rule 219 (object_value -> object_value_form2 .)
    WHILE           reduce using rule 219 (object_value -> object_value_form2 .)
    FOR             reduce using rule 219 (object_value -> object_value_form2 .)
    NUMBER          reduce using rule 219 (object_value -> object_value_form2 .)
    FLOAT           reduce using rule 219 (object_value -> object_value_form2 .)
    VARIABLE        reduce using rule 219 (object_value -> object_value_form2 .)
    LET             reduce using rule 219 (object_value -> object_value_form2 .)
    VAR             reduce using rule 219 (object_value -> object_value_form2 .)
    STATIC          reduce using rule 219 (object_value -> object_value_form2 .)
    CONST           reduce using rule 219 (object_value -> object_value_form2 .)
    OBJECTNAME      reduce using rule 219 (object_value -> object_value_form2 .)
    FUNMATH         reduce using rule 219 (object_value -> object_value_form2 .)
    $end            reduce using rule 219 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 219 (object_value -> object_value_form2 .)
=======
    (53) funcionwhile -> WHILE . LPAREN formLog RPAREN substatement

    LPAREN          shift and go to state 176
>>>>>>> master


state 71

<<<<<<< HEAD
    (113) declare_any -> prefix . VARIABLE
    (114) declare_any -> prefix . VARIABLE TWOPOINTS ANY

    VARIABLE        shift and go to state 179
=======
    (51) funcionfor -> FOR . LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (52) funcionfor -> FOR . LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    LPAREN          shift and go to state 177
>>>>>>> master


state 72

<<<<<<< HEAD
    (51) funcionif -> IF . LPAREN formLog RPAREN substatement
    (52) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif
    (53) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif funcionelse
    (54) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelse

    LPAREN          shift and go to state 180
=======
    (192) term1 -> group .

    INCREMENT       reduce using rule 192 (term1 -> group .)
    DECREMENT       reduce using rule 192 (term1 -> group .)
    PLUS            reduce using rule 192 (term1 -> group .)
    MINUS           reduce using rule 192 (term1 -> group .)
    PRODUCT         reduce using rule 192 (term1 -> group .)
    DIVIDE          reduce using rule 192 (term1 -> group .)
    EQUALTO         reduce using rule 192 (term1 -> group .)
    NOTEQUALTO      reduce using rule 192 (term1 -> group .)
    GREATER         reduce using rule 192 (term1 -> group .)
    LESS            reduce using rule 192 (term1 -> group .)
    GREATEREQUAL    reduce using rule 192 (term1 -> group .)
    LESSEQUAL       reduce using rule 192 (term1 -> group .)
    AND             reduce using rule 192 (term1 -> group .)
    OR              reduce using rule 192 (term1 -> group .)
    POINTCOMMA      reduce using rule 192 (term1 -> group .)
    $end            reduce using rule 192 (term1 -> group .)
    RPAREN          reduce using rule 192 (term1 -> group .)
    RKEY            reduce using rule 192 (term1 -> group .)
    RBRACKET        reduce using rule 192 (term1 -> group .)
    COMMA           reduce using rule 192 (term1 -> group .)
>>>>>>> master


state 73

<<<<<<< HEAD
    (62) funcionwhile -> WHILE . LPAREN formLog RPAREN substatement

    LPAREN          shift and go to state 181
=======
    (224) number -> NUMBER .

    PLUS            reduce using rule 224 (number -> NUMBER .)
    MINUS           reduce using rule 224 (number -> NUMBER .)
    PRODUCT         reduce using rule 224 (number -> NUMBER .)
    DIVIDE          reduce using rule 224 (number -> NUMBER .)
    EQUALTO         reduce using rule 224 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 224 (number -> NUMBER .)
    GREATER         reduce using rule 224 (number -> NUMBER .)
    LESS            reduce using rule 224 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 224 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 224 (number -> NUMBER .)
    AND             reduce using rule 224 (number -> NUMBER .)
    OR              reduce using rule 224 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 224 (number -> NUMBER .)
    $end            reduce using rule 224 (number -> NUMBER .)
    INCREMENT       reduce using rule 224 (number -> NUMBER .)
    DECREMENT       reduce using rule 224 (number -> NUMBER .)
    RPAREN          reduce using rule 224 (number -> NUMBER .)
    RKEY            reduce using rule 224 (number -> NUMBER .)
    RBRACKET        reduce using rule 224 (number -> NUMBER .)
    COMMA           reduce using rule 224 (number -> NUMBER .)
>>>>>>> master


state 74

<<<<<<< HEAD
    (58) funcionfor -> FOR . LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (59) funcionfor -> FOR . LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> FOR . LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
    (61) funcionfor -> FOR . LPAREN VARIABLE IN VARIABLE RPAREN substatement

    LPAREN          shift and go to state 182
=======
    (225) number -> FLOAT .

    PLUS            reduce using rule 225 (number -> FLOAT .)
    MINUS           reduce using rule 225 (number -> FLOAT .)
    PRODUCT         reduce using rule 225 (number -> FLOAT .)
    DIVIDE          reduce using rule 225 (number -> FLOAT .)
    EQUALTO         reduce using rule 225 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 225 (number -> FLOAT .)
    GREATER         reduce using rule 225 (number -> FLOAT .)
    LESS            reduce using rule 225 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 225 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 225 (number -> FLOAT .)
    AND             reduce using rule 225 (number -> FLOAT .)
    OR              reduce using rule 225 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 225 (number -> FLOAT .)
    $end            reduce using rule 225 (number -> FLOAT .)
    INCREMENT       reduce using rule 225 (number -> FLOAT .)
    DECREMENT       reduce using rule 225 (number -> FLOAT .)
    RPAREN          reduce using rule 225 (number -> FLOAT .)
    RKEY            reduce using rule 225 (number -> FLOAT .)
    RBRACKET        reduce using rule 225 (number -> FLOAT .)
    COMMA           reduce using rule 225 (number -> FLOAT .)
>>>>>>> master


state 75

<<<<<<< HEAD
    (225) prefix -> LET .

    VARIABLE        reduce using rule 225 (prefix -> LET .)
=======
    (205) other_value -> object_value .
    (196) group -> object_value .

    PLUS            reduce using rule 205 (other_value -> object_value .)
    MINUS           reduce using rule 205 (other_value -> object_value .)
    PRODUCT         reduce using rule 205 (other_value -> object_value .)
    DIVIDE          reduce using rule 205 (other_value -> object_value .)
    EQUALTO         reduce using rule 205 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 205 (other_value -> object_value .)
    GREATER         reduce using rule 205 (other_value -> object_value .)
    LESS            reduce using rule 205 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 205 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 205 (other_value -> object_value .)
    AND             reduce using rule 205 (other_value -> object_value .)
    OR              reduce using rule 205 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 205 (other_value -> object_value .)
    $end            reduce using rule 205 (other_value -> object_value .)
    RPAREN          reduce using rule 205 (other_value -> object_value .)
    RKEY            reduce using rule 205 (other_value -> object_value .)
    RBRACKET        reduce using rule 205 (other_value -> object_value .)
    COMMA           reduce using rule 205 (other_value -> object_value .)
    INCREMENT       reduce using rule 196 (group -> object_value .)
    DECREMENT       reduce using rule 196 (group -> object_value .)
>>>>>>> master


state 76

<<<<<<< HEAD
    (202) term1 -> group .

    INCREMENT       reduce using rule 202 (term1 -> group .)
    DECREMENT       reduce using rule 202 (term1 -> group .)
    PLUS            reduce using rule 202 (term1 -> group .)
    MINUS           reduce using rule 202 (term1 -> group .)
    PRODUCT         reduce using rule 202 (term1 -> group .)
    DIVIDE          reduce using rule 202 (term1 -> group .)
    EQUALTO         reduce using rule 202 (term1 -> group .)
    NOTEQUALTO      reduce using rule 202 (term1 -> group .)
    GREATER         reduce using rule 202 (term1 -> group .)
    LESS            reduce using rule 202 (term1 -> group .)
    GREATEREQUAL    reduce using rule 202 (term1 -> group .)
    LESSEQUAL       reduce using rule 202 (term1 -> group .)
    AND             reduce using rule 202 (term1 -> group .)
    OR              reduce using rule 202 (term1 -> group .)
    POINTCOMMA      reduce using rule 202 (term1 -> group .)
    LPAREN          reduce using rule 202 (term1 -> group .)
    NEGATION        reduce using rule 202 (term1 -> group .)
    COMMENT         reduce using rule 202 (term1 -> group .)
    MULTICOMMENT    reduce using rule 202 (term1 -> group .)
    FUNCTION        reduce using rule 202 (term1 -> group .)
    PRINT           reduce using rule 202 (term1 -> group .)
    NORMSTRING1     reduce using rule 202 (term1 -> group .)
    NORMSTRING2     reduce using rule 202 (term1 -> group .)
    MULTISTRING     reduce using rule 202 (term1 -> group .)
    ENUM            reduce using rule 202 (term1 -> group .)
    IF              reduce using rule 202 (term1 -> group .)
    WHILE           reduce using rule 202 (term1 -> group .)
    FOR             reduce using rule 202 (term1 -> group .)
    NUMBER          reduce using rule 202 (term1 -> group .)
    FLOAT           reduce using rule 202 (term1 -> group .)
    VARIABLE        reduce using rule 202 (term1 -> group .)
    LET             reduce using rule 202 (term1 -> group .)
    VAR             reduce using rule 202 (term1 -> group .)
    STATIC          reduce using rule 202 (term1 -> group .)
    CONST           reduce using rule 202 (term1 -> group .)
    OBJECTNAME      reduce using rule 202 (term1 -> group .)
    FUNMATH         reduce using rule 202 (term1 -> group .)
    $end            reduce using rule 202 (term1 -> group .)
    RKEY            reduce using rule 202 (term1 -> group .)
    RPAREN          reduce using rule 202 (term1 -> group .)
    RBRACKET        reduce using rule 202 (term1 -> group .)
    COMMA           reduce using rule 202 (term1 -> group .)
=======
    (214) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 178
>>>>>>> master


state 77

<<<<<<< HEAD
    (234) number -> NUMBER .

    PLUS            reduce using rule 234 (number -> NUMBER .)
    MINUS           reduce using rule 234 (number -> NUMBER .)
    PRODUCT         reduce using rule 234 (number -> NUMBER .)
    DIVIDE          reduce using rule 234 (number -> NUMBER .)
    EQUALTO         reduce using rule 234 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 234 (number -> NUMBER .)
    GREATER         reduce using rule 234 (number -> NUMBER .)
    LESS            reduce using rule 234 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 234 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 234 (number -> NUMBER .)
    AND             reduce using rule 234 (number -> NUMBER .)
    OR              reduce using rule 234 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 234 (number -> NUMBER .)
    LPAREN          reduce using rule 234 (number -> NUMBER .)
    NEGATION        reduce using rule 234 (number -> NUMBER .)
    COMMENT         reduce using rule 234 (number -> NUMBER .)
    MULTICOMMENT    reduce using rule 234 (number -> NUMBER .)
    FUNCTION        reduce using rule 234 (number -> NUMBER .)
    PRINT           reduce using rule 234 (number -> NUMBER .)
    INCREMENT       reduce using rule 234 (number -> NUMBER .)
    DECREMENT       reduce using rule 234 (number -> NUMBER .)
    NORMSTRING1     reduce using rule 234 (number -> NUMBER .)
    NORMSTRING2     reduce using rule 234 (number -> NUMBER .)
    MULTISTRING     reduce using rule 234 (number -> NUMBER .)
    ENUM            reduce using rule 234 (number -> NUMBER .)
    IF              reduce using rule 234 (number -> NUMBER .)
    WHILE           reduce using rule 234 (number -> NUMBER .)
    FOR             reduce using rule 234 (number -> NUMBER .)
    NUMBER          reduce using rule 234 (number -> NUMBER .)
    FLOAT           reduce using rule 234 (number -> NUMBER .)
    VARIABLE        reduce using rule 234 (number -> NUMBER .)
    LET             reduce using rule 234 (number -> NUMBER .)
    VAR             reduce using rule 234 (number -> NUMBER .)
    STATIC          reduce using rule 234 (number -> NUMBER .)
    CONST           reduce using rule 234 (number -> NUMBER .)
    OBJECTNAME      reduce using rule 234 (number -> NUMBER .)
    FUNMATH         reduce using rule 234 (number -> NUMBER .)
    $end            reduce using rule 234 (number -> NUMBER .)
    RKEY            reduce using rule 234 (number -> NUMBER .)
    RPAREN          reduce using rule 234 (number -> NUMBER .)
    RBRACKET        reduce using rule 234 (number -> NUMBER .)
    COMMA           reduce using rule 234 (number -> NUMBER .)
=======
    (73) declare_array_main_number -> declare_array_number . EQUAL list_number
    (74) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 179
    POINTCOMMA      reduce using rule 74 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 74 (declare_array_main_number -> declare_array_number .)
    RKEY            reduce using rule 74 (declare_array_main_number -> declare_array_number .)
>>>>>>> master


state 78

<<<<<<< HEAD
    (235) number -> FLOAT .

    PLUS            reduce using rule 235 (number -> FLOAT .)
    MINUS           reduce using rule 235 (number -> FLOAT .)
    PRODUCT         reduce using rule 235 (number -> FLOAT .)
    DIVIDE          reduce using rule 235 (number -> FLOAT .)
    EQUALTO         reduce using rule 235 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 235 (number -> FLOAT .)
    GREATER         reduce using rule 235 (number -> FLOAT .)
    LESS            reduce using rule 235 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 235 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 235 (number -> FLOAT .)
    AND             reduce using rule 235 (number -> FLOAT .)
    OR              reduce using rule 235 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 235 (number -> FLOAT .)
    LPAREN          reduce using rule 235 (number -> FLOAT .)
    NEGATION        reduce using rule 235 (number -> FLOAT .)
    COMMENT         reduce using rule 235 (number -> FLOAT .)
    MULTICOMMENT    reduce using rule 235 (number -> FLOAT .)
    FUNCTION        reduce using rule 235 (number -> FLOAT .)
    PRINT           reduce using rule 235 (number -> FLOAT .)
    INCREMENT       reduce using rule 235 (number -> FLOAT .)
    DECREMENT       reduce using rule 235 (number -> FLOAT .)
    NORMSTRING1     reduce using rule 235 (number -> FLOAT .)
    NORMSTRING2     reduce using rule 235 (number -> FLOAT .)
    MULTISTRING     reduce using rule 235 (number -> FLOAT .)
    ENUM            reduce using rule 235 (number -> FLOAT .)
    IF              reduce using rule 235 (number -> FLOAT .)
    WHILE           reduce using rule 235 (number -> FLOAT .)
    FOR             reduce using rule 235 (number -> FLOAT .)
    NUMBER          reduce using rule 235 (number -> FLOAT .)
    FLOAT           reduce using rule 235 (number -> FLOAT .)
    VARIABLE        reduce using rule 235 (number -> FLOAT .)
    LET             reduce using rule 235 (number -> FLOAT .)
    VAR             reduce using rule 235 (number -> FLOAT .)
    STATIC          reduce using rule 235 (number -> FLOAT .)
    CONST           reduce using rule 235 (number -> FLOAT .)
    OBJECTNAME      reduce using rule 235 (number -> FLOAT .)
    FUNMATH         reduce using rule 235 (number -> FLOAT .)
    $end            reduce using rule 235 (number -> FLOAT .)
    RKEY            reduce using rule 235 (number -> FLOAT .)
    RPAREN          reduce using rule 235 (number -> FLOAT .)
    RBRACKET        reduce using rule 235 (number -> FLOAT .)
    COMMA           reduce using rule 235 (number -> FLOAT .)
=======
    (77) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (78) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 180
    POINTCOMMA      reduce using rule 78 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 78 (declare_array_main_boolean -> declare_array_boolean .)
    RKEY            reduce using rule 78 (declare_array_main_boolean -> declare_array_boolean .)
>>>>>>> master


state 79

<<<<<<< HEAD
    (215) other_value -> object_value .
    (206) group -> object_value .

  ! reduce/reduce conflict for INCREMENT resolved using rule 206 (group -> object_value .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 206 (group -> object_value .)
    PLUS            reduce using rule 215 (other_value -> object_value .)
    MINUS           reduce using rule 215 (other_value -> object_value .)
    PRODUCT         reduce using rule 215 (other_value -> object_value .)
    DIVIDE          reduce using rule 215 (other_value -> object_value .)
    EQUALTO         reduce using rule 215 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 215 (other_value -> object_value .)
    GREATER         reduce using rule 215 (other_value -> object_value .)
    LESS            reduce using rule 215 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 215 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 215 (other_value -> object_value .)
    AND             reduce using rule 215 (other_value -> object_value .)
    OR              reduce using rule 215 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 215 (other_value -> object_value .)
    LPAREN          reduce using rule 215 (other_value -> object_value .)
    NEGATION        reduce using rule 215 (other_value -> object_value .)
    COMMENT         reduce using rule 215 (other_value -> object_value .)
    MULTICOMMENT    reduce using rule 215 (other_value -> object_value .)
    FUNCTION        reduce using rule 215 (other_value -> object_value .)
    PRINT           reduce using rule 215 (other_value -> object_value .)
    NORMSTRING1     reduce using rule 215 (other_value -> object_value .)
    NORMSTRING2     reduce using rule 215 (other_value -> object_value .)
    MULTISTRING     reduce using rule 215 (other_value -> object_value .)
    ENUM            reduce using rule 215 (other_value -> object_value .)
    IF              reduce using rule 215 (other_value -> object_value .)
    WHILE           reduce using rule 215 (other_value -> object_value .)
    FOR             reduce using rule 215 (other_value -> object_value .)
    NUMBER          reduce using rule 215 (other_value -> object_value .)
    FLOAT           reduce using rule 215 (other_value -> object_value .)
    VARIABLE        reduce using rule 215 (other_value -> object_value .)
    LET             reduce using rule 215 (other_value -> object_value .)
    VAR             reduce using rule 215 (other_value -> object_value .)
    STATIC          reduce using rule 215 (other_value -> object_value .)
    CONST           reduce using rule 215 (other_value -> object_value .)
    OBJECTNAME      reduce using rule 215 (other_value -> object_value .)
    FUNMATH         reduce using rule 215 (other_value -> object_value .)
    $end            reduce using rule 215 (other_value -> object_value .)
    RKEY            reduce using rule 215 (other_value -> object_value .)
    RPAREN          reduce using rule 215 (other_value -> object_value .)
    RBRACKET        reduce using rule 215 (other_value -> object_value .)
    COMMA           reduce using rule 215 (other_value -> object_value .)
    INCREMENT       reduce using rule 206 (group -> object_value .)
    DECREMENT       reduce using rule 206 (group -> object_value .)

  ! INCREMENT       [ reduce using rule 215 (other_value -> object_value .) ]
  ! DECREMENT       [ reduce using rule 215 (other_value -> object_value .) ]
=======
    (81) declare_array_main_string -> declare_array_string . EQUAL list_string
    (82) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 181
    POINTCOMMA      reduce using rule 82 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 82 (declare_array_main_string -> declare_array_string .)
    RKEY            reduce using rule 82 (declare_array_main_string -> declare_array_string .)
>>>>>>> master


state 80

<<<<<<< HEAD
    (224) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 183
=======
    (215) prefix -> LET .

    VARIABLE        reduce using rule 215 (prefix -> LET .)
>>>>>>> master


state 81

<<<<<<< HEAD
    (82) declare_array_main_number -> declare_array_number . EQUAL list_number
    (83) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 184
    POINTCOMMA      reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    LPAREN          reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    NEGATION        reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    COMMENT         reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    MULTICOMMENT    reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    FUNCTION        reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    PRINT           reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    INCREMENT       reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    DECREMENT       reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    NORMSTRING1     reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    NORMSTRING2     reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    MULTISTRING     reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    ENUM            reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    IF              reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    WHILE           reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    FOR             reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    NUMBER          reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    FLOAT           reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    VARIABLE        reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    LET             reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    VAR             reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    STATIC          reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    CONST           reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    OBJECTNAME      reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    FUNMATH         reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 83 (declare_array_main_number -> declare_array_number .)
    RKEY            reduce using rule 83 (declare_array_main_number -> declare_array_number .)
=======
    (216) prefix -> VAR .

    VARIABLE        reduce using rule 216 (prefix -> VAR .)
>>>>>>> master


state 82

<<<<<<< HEAD
    (86) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (87) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 185
    POINTCOMMA      reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    LPAREN          reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    NEGATION        reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    COMMENT         reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    MULTICOMMENT    reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    FUNCTION        reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    PRINT           reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    INCREMENT       reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    DECREMENT       reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    NORMSTRING1     reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    NORMSTRING2     reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    MULTISTRING     reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    ENUM            reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    IF              reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    WHILE           reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    FOR             reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    NUMBER          reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    FLOAT           reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    VARIABLE        reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    LET             reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    VAR             reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    STATIC          reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    CONST           reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    OBJECTNAME      reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    FUNMATH         reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
    RKEY            reduce using rule 87 (declare_array_main_boolean -> declare_array_boolean .)
=======
    (217) prefix -> STATIC .

    VARIABLE        reduce using rule 217 (prefix -> STATIC .)
>>>>>>> master


state 83

<<<<<<< HEAD
    (90) declare_array_main_string -> declare_array_string . EQUAL list_string
    (91) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 186
    POINTCOMMA      reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    LPAREN          reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    NEGATION        reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    COMMENT         reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    MULTICOMMENT    reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    FUNCTION        reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    PRINT           reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    INCREMENT       reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    DECREMENT       reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    NORMSTRING1     reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    NORMSTRING2     reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    MULTISTRING     reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    ENUM            reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    IF              reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    WHILE           reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    FOR             reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    NUMBER          reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    FLOAT           reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    VARIABLE        reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    LET             reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    VAR             reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    STATIC          reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    CONST           reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    OBJECTNAME      reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    FUNMATH         reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 91 (declare_array_main_string -> declare_array_string .)
    RKEY            reduce using rule 91 (declare_array_main_string -> declare_array_string .)
=======
    (218) prefix -> CONST .

    VARIABLE        reduce using rule 218 (prefix -> CONST .)
>>>>>>> master


state 84

<<<<<<< HEAD
    (226) prefix -> VAR .

    VARIABLE        reduce using rule 226 (prefix -> VAR .)
=======
    (242) funciones -> funcionString .

    PLUS            reduce using rule 242 (funciones -> funcionString .)
    MINUS           reduce using rule 242 (funciones -> funcionString .)
    PRODUCT         reduce using rule 242 (funciones -> funcionString .)
    DIVIDE          reduce using rule 242 (funciones -> funcionString .)
    EQUALTO         reduce using rule 242 (funciones -> funcionString .)
    NOTEQUALTO      reduce using rule 242 (funciones -> funcionString .)
    GREATER         reduce using rule 242 (funciones -> funcionString .)
    LESS            reduce using rule 242 (funciones -> funcionString .)
    GREATEREQUAL    reduce using rule 242 (funciones -> funcionString .)
    LESSEQUAL       reduce using rule 242 (funciones -> funcionString .)
    AND             reduce using rule 242 (funciones -> funcionString .)
    OR              reduce using rule 242 (funciones -> funcionString .)
    POINTCOMMA      reduce using rule 242 (funciones -> funcionString .)
    $end            reduce using rule 242 (funciones -> funcionString .)
    RPAREN          reduce using rule 242 (funciones -> funcionString .)
    RKEY            reduce using rule 242 (funciones -> funcionString .)
    RBRACKET        reduce using rule 242 (funciones -> funcionString .)
    COMMA           reduce using rule 242 (funciones -> funcionString .)
>>>>>>> master


state 85

<<<<<<< HEAD
    (227) prefix -> STATIC .

    VARIABLE        reduce using rule 227 (prefix -> STATIC .)
=======
    (243) funciones -> funcionArray .

    PLUS            reduce using rule 243 (funciones -> funcionArray .)
    MINUS           reduce using rule 243 (funciones -> funcionArray .)
    PRODUCT         reduce using rule 243 (funciones -> funcionArray .)
    DIVIDE          reduce using rule 243 (funciones -> funcionArray .)
    EQUALTO         reduce using rule 243 (funciones -> funcionArray .)
    NOTEQUALTO      reduce using rule 243 (funciones -> funcionArray .)
    GREATER         reduce using rule 243 (funciones -> funcionArray .)
    LESS            reduce using rule 243 (funciones -> funcionArray .)
    GREATEREQUAL    reduce using rule 243 (funciones -> funcionArray .)
    LESSEQUAL       reduce using rule 243 (funciones -> funcionArray .)
    AND             reduce using rule 243 (funciones -> funcionArray .)
    OR              reduce using rule 243 (funciones -> funcionArray .)
    POINTCOMMA      reduce using rule 243 (funciones -> funcionArray .)
    $end            reduce using rule 243 (funciones -> funcionArray .)
    RPAREN          reduce using rule 243 (funciones -> funcionArray .)
    RKEY            reduce using rule 243 (funciones -> funcionArray .)
    RBRACKET        reduce using rule 243 (funciones -> funcionArray .)
    COMMA           reduce using rule 243 (funciones -> funcionArray .)
>>>>>>> master


state 86

<<<<<<< HEAD
    (228) prefix -> CONST .

    VARIABLE        reduce using rule 228 (prefix -> CONST .)
=======
    (244) funciones -> funcionConjunto .

    PLUS            reduce using rule 244 (funciones -> funcionConjunto .)
    MINUS           reduce using rule 244 (funciones -> funcionConjunto .)
    PRODUCT         reduce using rule 244 (funciones -> funcionConjunto .)
    DIVIDE          reduce using rule 244 (funciones -> funcionConjunto .)
    EQUALTO         reduce using rule 244 (funciones -> funcionConjunto .)
    NOTEQUALTO      reduce using rule 244 (funciones -> funcionConjunto .)
    GREATER         reduce using rule 244 (funciones -> funcionConjunto .)
    LESS            reduce using rule 244 (funciones -> funcionConjunto .)
    GREATEREQUAL    reduce using rule 244 (funciones -> funcionConjunto .)
    LESSEQUAL       reduce using rule 244 (funciones -> funcionConjunto .)
    AND             reduce using rule 244 (funciones -> funcionConjunto .)
    OR              reduce using rule 244 (funciones -> funcionConjunto .)
    POINTCOMMA      reduce using rule 244 (funciones -> funcionConjunto .)
    $end            reduce using rule 244 (funciones -> funcionConjunto .)
    RPAREN          reduce using rule 244 (funciones -> funcionConjunto .)
    RKEY            reduce using rule 244 (funciones -> funcionConjunto .)
    RBRACKET        reduce using rule 244 (funciones -> funcionConjunto .)
    COMMA           reduce using rule 244 (funciones -> funcionConjunto .)
>>>>>>> master


state 87

<<<<<<< HEAD
    (252) funciones -> funcionString .

    PLUS            reduce using rule 252 (funciones -> funcionString .)
    MINUS           reduce using rule 252 (funciones -> funcionString .)
    PRODUCT         reduce using rule 252 (funciones -> funcionString .)
    DIVIDE          reduce using rule 252 (funciones -> funcionString .)
    EQUALTO         reduce using rule 252 (funciones -> funcionString .)
    NOTEQUALTO      reduce using rule 252 (funciones -> funcionString .)
    GREATER         reduce using rule 252 (funciones -> funcionString .)
    LESS            reduce using rule 252 (funciones -> funcionString .)
    GREATEREQUAL    reduce using rule 252 (funciones -> funcionString .)
    LESSEQUAL       reduce using rule 252 (funciones -> funcionString .)
    AND             reduce using rule 252 (funciones -> funcionString .)
    OR              reduce using rule 252 (funciones -> funcionString .)
    POINTCOMMA      reduce using rule 252 (funciones -> funcionString .)
    LPAREN          reduce using rule 252 (funciones -> funcionString .)
    NEGATION        reduce using rule 252 (funciones -> funcionString .)
    COMMENT         reduce using rule 252 (funciones -> funcionString .)
    MULTICOMMENT    reduce using rule 252 (funciones -> funcionString .)
    FUNCTION        reduce using rule 252 (funciones -> funcionString .)
    PRINT           reduce using rule 252 (funciones -> funcionString .)
    INCREMENT       reduce using rule 252 (funciones -> funcionString .)
    DECREMENT       reduce using rule 252 (funciones -> funcionString .)
    NORMSTRING1     reduce using rule 252 (funciones -> funcionString .)
    NORMSTRING2     reduce using rule 252 (funciones -> funcionString .)
    MULTISTRING     reduce using rule 252 (funciones -> funcionString .)
    ENUM            reduce using rule 252 (funciones -> funcionString .)
    IF              reduce using rule 252 (funciones -> funcionString .)
    WHILE           reduce using rule 252 (funciones -> funcionString .)
    FOR             reduce using rule 252 (funciones -> funcionString .)
    NUMBER          reduce using rule 252 (funciones -> funcionString .)
    FLOAT           reduce using rule 252 (funciones -> funcionString .)
    VARIABLE        reduce using rule 252 (funciones -> funcionString .)
    LET             reduce using rule 252 (funciones -> funcionString .)
    VAR             reduce using rule 252 (funciones -> funcionString .)
    STATIC          reduce using rule 252 (funciones -> funcionString .)
    CONST           reduce using rule 252 (funciones -> funcionString .)
    OBJECTNAME      reduce using rule 252 (funciones -> funcionString .)
    FUNMATH         reduce using rule 252 (funciones -> funcionString .)
    $end            reduce using rule 252 (funciones -> funcionString .)
    RKEY            reduce using rule 252 (funciones -> funcionString .)
    RPAREN          reduce using rule 252 (funciones -> funcionString .)
    RBRACKET        reduce using rule 252 (funciones -> funcionString .)
    COMMA           reduce using rule 252 (funciones -> funcionString .)
=======
    (245) funcionmath -> mathAbs .

    PLUS            reduce using rule 245 (funcionmath -> mathAbs .)
    MINUS           reduce using rule 245 (funcionmath -> mathAbs .)
    PRODUCT         reduce using rule 245 (funcionmath -> mathAbs .)
    DIVIDE          reduce using rule 245 (funcionmath -> mathAbs .)
    EQUALTO         reduce using rule 245 (funcionmath -> mathAbs .)
    NOTEQUALTO      reduce using rule 245 (funcionmath -> mathAbs .)
    GREATER         reduce using rule 245 (funcionmath -> mathAbs .)
    LESS            reduce using rule 245 (funcionmath -> mathAbs .)
    GREATEREQUAL    reduce using rule 245 (funcionmath -> mathAbs .)
    LESSEQUAL       reduce using rule 245 (funcionmath -> mathAbs .)
    AND             reduce using rule 245 (funcionmath -> mathAbs .)
    OR              reduce using rule 245 (funcionmath -> mathAbs .)
    POINTCOMMA      reduce using rule 245 (funcionmath -> mathAbs .)
    $end            reduce using rule 245 (funcionmath -> mathAbs .)
    RPAREN          reduce using rule 245 (funcionmath -> mathAbs .)
    RKEY            reduce using rule 245 (funcionmath -> mathAbs .)
    RBRACKET        reduce using rule 245 (funcionmath -> mathAbs .)
    COMMA           reduce using rule 245 (funcionmath -> mathAbs .)
>>>>>>> master


state 88

<<<<<<< HEAD
    (253) funciones -> funcionArray .

    PLUS            reduce using rule 253 (funciones -> funcionArray .)
    MINUS           reduce using rule 253 (funciones -> funcionArray .)
    PRODUCT         reduce using rule 253 (funciones -> funcionArray .)
    DIVIDE          reduce using rule 253 (funciones -> funcionArray .)
    EQUALTO         reduce using rule 253 (funciones -> funcionArray .)
    NOTEQUALTO      reduce using rule 253 (funciones -> funcionArray .)
    GREATER         reduce using rule 253 (funciones -> funcionArray .)
    LESS            reduce using rule 253 (funciones -> funcionArray .)
    GREATEREQUAL    reduce using rule 253 (funciones -> funcionArray .)
    LESSEQUAL       reduce using rule 253 (funciones -> funcionArray .)
    AND             reduce using rule 253 (funciones -> funcionArray .)
    OR              reduce using rule 253 (funciones -> funcionArray .)
    POINTCOMMA      reduce using rule 253 (funciones -> funcionArray .)
    LPAREN          reduce using rule 253 (funciones -> funcionArray .)
    NEGATION        reduce using rule 253 (funciones -> funcionArray .)
    COMMENT         reduce using rule 253 (funciones -> funcionArray .)
    MULTICOMMENT    reduce using rule 253 (funciones -> funcionArray .)
    FUNCTION        reduce using rule 253 (funciones -> funcionArray .)
    PRINT           reduce using rule 253 (funciones -> funcionArray .)
    INCREMENT       reduce using rule 253 (funciones -> funcionArray .)
    DECREMENT       reduce using rule 253 (funciones -> funcionArray .)
    NORMSTRING1     reduce using rule 253 (funciones -> funcionArray .)
    NORMSTRING2     reduce using rule 253 (funciones -> funcionArray .)
    MULTISTRING     reduce using rule 253 (funciones -> funcionArray .)
    ENUM            reduce using rule 253 (funciones -> funcionArray .)
    IF              reduce using rule 253 (funciones -> funcionArray .)
    WHILE           reduce using rule 253 (funciones -> funcionArray .)
    FOR             reduce using rule 253 (funciones -> funcionArray .)
    NUMBER          reduce using rule 253 (funciones -> funcionArray .)
    FLOAT           reduce using rule 253 (funciones -> funcionArray .)
    VARIABLE        reduce using rule 253 (funciones -> funcionArray .)
    LET             reduce using rule 253 (funciones -> funcionArray .)
    VAR             reduce using rule 253 (funciones -> funcionArray .)
    STATIC          reduce using rule 253 (funciones -> funcionArray .)
    CONST           reduce using rule 253 (funciones -> funcionArray .)
    OBJECTNAME      reduce using rule 253 (funciones -> funcionArray .)
    FUNMATH         reduce using rule 253 (funciones -> funcionArray .)
    $end            reduce using rule 253 (funciones -> funcionArray .)
    RKEY            reduce using rule 253 (funciones -> funcionArray .)
    RPAREN          reduce using rule 253 (funciones -> funcionArray .)
    RBRACKET        reduce using rule 253 (funciones -> funcionArray .)
    COMMA           reduce using rule 253 (funciones -> funcionArray .)
=======
    (246) funcionmath -> mathRound .

    PLUS            reduce using rule 246 (funcionmath -> mathRound .)
    MINUS           reduce using rule 246 (funcionmath -> mathRound .)
    PRODUCT         reduce using rule 246 (funcionmath -> mathRound .)
    DIVIDE          reduce using rule 246 (funcionmath -> mathRound .)
    EQUALTO         reduce using rule 246 (funcionmath -> mathRound .)
    NOTEQUALTO      reduce using rule 246 (funcionmath -> mathRound .)
    GREATER         reduce using rule 246 (funcionmath -> mathRound .)
    LESS            reduce using rule 246 (funcionmath -> mathRound .)
    GREATEREQUAL    reduce using rule 246 (funcionmath -> mathRound .)
    LESSEQUAL       reduce using rule 246 (funcionmath -> mathRound .)
    AND             reduce using rule 246 (funcionmath -> mathRound .)
    OR              reduce using rule 246 (funcionmath -> mathRound .)
    POINTCOMMA      reduce using rule 246 (funcionmath -> mathRound .)
    $end            reduce using rule 246 (funcionmath -> mathRound .)
    RPAREN          reduce using rule 246 (funcionmath -> mathRound .)
    RKEY            reduce using rule 246 (funcionmath -> mathRound .)
    RBRACKET        reduce using rule 246 (funcionmath -> mathRound .)
    COMMA           reduce using rule 246 (funcionmath -> mathRound .)
>>>>>>> master


state 89

<<<<<<< HEAD
    (254) funciones -> funcionConjunto .

    PLUS            reduce using rule 254 (funciones -> funcionConjunto .)
    MINUS           reduce using rule 254 (funciones -> funcionConjunto .)
    PRODUCT         reduce using rule 254 (funciones -> funcionConjunto .)
    DIVIDE          reduce using rule 254 (funciones -> funcionConjunto .)
    EQUALTO         reduce using rule 254 (funciones -> funcionConjunto .)
    NOTEQUALTO      reduce using rule 254 (funciones -> funcionConjunto .)
    GREATER         reduce using rule 254 (funciones -> funcionConjunto .)
    LESS            reduce using rule 254 (funciones -> funcionConjunto .)
    GREATEREQUAL    reduce using rule 254 (funciones -> funcionConjunto .)
    LESSEQUAL       reduce using rule 254 (funciones -> funcionConjunto .)
    AND             reduce using rule 254 (funciones -> funcionConjunto .)
    OR              reduce using rule 254 (funciones -> funcionConjunto .)
    POINTCOMMA      reduce using rule 254 (funciones -> funcionConjunto .)
    LPAREN          reduce using rule 254 (funciones -> funcionConjunto .)
    NEGATION        reduce using rule 254 (funciones -> funcionConjunto .)
    COMMENT         reduce using rule 254 (funciones -> funcionConjunto .)
    MULTICOMMENT    reduce using rule 254 (funciones -> funcionConjunto .)
    FUNCTION        reduce using rule 254 (funciones -> funcionConjunto .)
    PRINT           reduce using rule 254 (funciones -> funcionConjunto .)
    INCREMENT       reduce using rule 254 (funciones -> funcionConjunto .)
    DECREMENT       reduce using rule 254 (funciones -> funcionConjunto .)
    NORMSTRING1     reduce using rule 254 (funciones -> funcionConjunto .)
    NORMSTRING2     reduce using rule 254 (funciones -> funcionConjunto .)
    MULTISTRING     reduce using rule 254 (funciones -> funcionConjunto .)
    ENUM            reduce using rule 254 (funciones -> funcionConjunto .)
    IF              reduce using rule 254 (funciones -> funcionConjunto .)
    WHILE           reduce using rule 254 (funciones -> funcionConjunto .)
    FOR             reduce using rule 254 (funciones -> funcionConjunto .)
    NUMBER          reduce using rule 254 (funciones -> funcionConjunto .)
    FLOAT           reduce using rule 254 (funciones -> funcionConjunto .)
    VARIABLE        reduce using rule 254 (funciones -> funcionConjunto .)
    LET             reduce using rule 254 (funciones -> funcionConjunto .)
    VAR             reduce using rule 254 (funciones -> funcionConjunto .)
    STATIC          reduce using rule 254 (funciones -> funcionConjunto .)
    CONST           reduce using rule 254 (funciones -> funcionConjunto .)
    OBJECTNAME      reduce using rule 254 (funciones -> funcionConjunto .)
    FUNMATH         reduce using rule 254 (funciones -> funcionConjunto .)
    $end            reduce using rule 254 (funciones -> funcionConjunto .)
    RKEY            reduce using rule 254 (funciones -> funcionConjunto .)
    RPAREN          reduce using rule 254 (funciones -> funcionConjunto .)
    RBRACKET        reduce using rule 254 (funciones -> funcionConjunto .)
    COMMA           reduce using rule 254 (funciones -> funcionConjunto .)
=======
    (247) funcionmath -> mathPow .

    PLUS            reduce using rule 247 (funcionmath -> mathPow .)
    MINUS           reduce using rule 247 (funcionmath -> mathPow .)
    PRODUCT         reduce using rule 247 (funcionmath -> mathPow .)
    DIVIDE          reduce using rule 247 (funcionmath -> mathPow .)
    EQUALTO         reduce using rule 247 (funcionmath -> mathPow .)
    NOTEQUALTO      reduce using rule 247 (funcionmath -> mathPow .)
    GREATER         reduce using rule 247 (funcionmath -> mathPow .)
    LESS            reduce using rule 247 (funcionmath -> mathPow .)
    GREATEREQUAL    reduce using rule 247 (funcionmath -> mathPow .)
    LESSEQUAL       reduce using rule 247 (funcionmath -> mathPow .)
    AND             reduce using rule 247 (funcionmath -> mathPow .)
    OR              reduce using rule 247 (funcionmath -> mathPow .)
    POINTCOMMA      reduce using rule 247 (funcionmath -> mathPow .)
    $end            reduce using rule 247 (funcionmath -> mathPow .)
    RPAREN          reduce using rule 247 (funcionmath -> mathPow .)
    RKEY            reduce using rule 247 (funcionmath -> mathPow .)
    RBRACKET        reduce using rule 247 (funcionmath -> mathPow .)
    COMMA           reduce using rule 247 (funcionmath -> mathPow .)
>>>>>>> master


state 90

<<<<<<< HEAD
    (255) funcionmath -> mathAbs .

    PLUS            reduce using rule 255 (funcionmath -> mathAbs .)
    MINUS           reduce using rule 255 (funcionmath -> mathAbs .)
    PRODUCT         reduce using rule 255 (funcionmath -> mathAbs .)
    DIVIDE          reduce using rule 255 (funcionmath -> mathAbs .)
    EQUALTO         reduce using rule 255 (funcionmath -> mathAbs .)
    NOTEQUALTO      reduce using rule 255 (funcionmath -> mathAbs .)
    GREATER         reduce using rule 255 (funcionmath -> mathAbs .)
    LESS            reduce using rule 255 (funcionmath -> mathAbs .)
    GREATEREQUAL    reduce using rule 255 (funcionmath -> mathAbs .)
    LESSEQUAL       reduce using rule 255 (funcionmath -> mathAbs .)
    AND             reduce using rule 255 (funcionmath -> mathAbs .)
    OR              reduce using rule 255 (funcionmath -> mathAbs .)
    POINTCOMMA      reduce using rule 255 (funcionmath -> mathAbs .)
    LPAREN          reduce using rule 255 (funcionmath -> mathAbs .)
    NEGATION        reduce using rule 255 (funcionmath -> mathAbs .)
    COMMENT         reduce using rule 255 (funcionmath -> mathAbs .)
    MULTICOMMENT    reduce using rule 255 (funcionmath -> mathAbs .)
    FUNCTION        reduce using rule 255 (funcionmath -> mathAbs .)
    PRINT           reduce using rule 255 (funcionmath -> mathAbs .)
    INCREMENT       reduce using rule 255 (funcionmath -> mathAbs .)
    DECREMENT       reduce using rule 255 (funcionmath -> mathAbs .)
    NORMSTRING1     reduce using rule 255 (funcionmath -> mathAbs .)
    NORMSTRING2     reduce using rule 255 (funcionmath -> mathAbs .)
    MULTISTRING     reduce using rule 255 (funcionmath -> mathAbs .)
    ENUM            reduce using rule 255 (funcionmath -> mathAbs .)
    IF              reduce using rule 255 (funcionmath -> mathAbs .)
    WHILE           reduce using rule 255 (funcionmath -> mathAbs .)
    FOR             reduce using rule 255 (funcionmath -> mathAbs .)
    NUMBER          reduce using rule 255 (funcionmath -> mathAbs .)
    FLOAT           reduce using rule 255 (funcionmath -> mathAbs .)
    VARIABLE        reduce using rule 255 (funcionmath -> mathAbs .)
    LET             reduce using rule 255 (funcionmath -> mathAbs .)
    VAR             reduce using rule 255 (funcionmath -> mathAbs .)
    STATIC          reduce using rule 255 (funcionmath -> mathAbs .)
    CONST           reduce using rule 255 (funcionmath -> mathAbs .)
    OBJECTNAME      reduce using rule 255 (funcionmath -> mathAbs .)
    FUNMATH         reduce using rule 255 (funcionmath -> mathAbs .)
    $end            reduce using rule 255 (funcionmath -> mathAbs .)
    RKEY            reduce using rule 255 (funcionmath -> mathAbs .)
    RPAREN          reduce using rule 255 (funcionmath -> mathAbs .)
    RBRACKET        reduce using rule 255 (funcionmath -> mathAbs .)
    COMMA           reduce using rule 255 (funcionmath -> mathAbs .)
=======
    (258) funcionString -> stringCharAt .

    PLUS            reduce using rule 258 (funcionString -> stringCharAt .)
    MINUS           reduce using rule 258 (funcionString -> stringCharAt .)
    PRODUCT         reduce using rule 258 (funcionString -> stringCharAt .)
    DIVIDE          reduce using rule 258 (funcionString -> stringCharAt .)
    EQUALTO         reduce using rule 258 (funcionString -> stringCharAt .)
    NOTEQUALTO      reduce using rule 258 (funcionString -> stringCharAt .)
    GREATER         reduce using rule 258 (funcionString -> stringCharAt .)
    LESS            reduce using rule 258 (funcionString -> stringCharAt .)
    GREATEREQUAL    reduce using rule 258 (funcionString -> stringCharAt .)
    LESSEQUAL       reduce using rule 258 (funcionString -> stringCharAt .)
    AND             reduce using rule 258 (funcionString -> stringCharAt .)
    OR              reduce using rule 258 (funcionString -> stringCharAt .)
    POINTCOMMA      reduce using rule 258 (funcionString -> stringCharAt .)
    $end            reduce using rule 258 (funcionString -> stringCharAt .)
    RPAREN          reduce using rule 258 (funcionString -> stringCharAt .)
    RKEY            reduce using rule 258 (funcionString -> stringCharAt .)
    RBRACKET        reduce using rule 258 (funcionString -> stringCharAt .)
    COMMA           reduce using rule 258 (funcionString -> stringCharAt .)
>>>>>>> master


state 91

<<<<<<< HEAD
    (256) funcionmath -> mathRound .

    PLUS            reduce using rule 256 (funcionmath -> mathRound .)
    MINUS           reduce using rule 256 (funcionmath -> mathRound .)
    PRODUCT         reduce using rule 256 (funcionmath -> mathRound .)
    DIVIDE          reduce using rule 256 (funcionmath -> mathRound .)
    EQUALTO         reduce using rule 256 (funcionmath -> mathRound .)
    NOTEQUALTO      reduce using rule 256 (funcionmath -> mathRound .)
    GREATER         reduce using rule 256 (funcionmath -> mathRound .)
    LESS            reduce using rule 256 (funcionmath -> mathRound .)
    GREATEREQUAL    reduce using rule 256 (funcionmath -> mathRound .)
    LESSEQUAL       reduce using rule 256 (funcionmath -> mathRound .)
    AND             reduce using rule 256 (funcionmath -> mathRound .)
    OR              reduce using rule 256 (funcionmath -> mathRound .)
    POINTCOMMA      reduce using rule 256 (funcionmath -> mathRound .)
    LPAREN          reduce using rule 256 (funcionmath -> mathRound .)
    NEGATION        reduce using rule 256 (funcionmath -> mathRound .)
    COMMENT         reduce using rule 256 (funcionmath -> mathRound .)
    MULTICOMMENT    reduce using rule 256 (funcionmath -> mathRound .)
    FUNCTION        reduce using rule 256 (funcionmath -> mathRound .)
    PRINT           reduce using rule 256 (funcionmath -> mathRound .)
    INCREMENT       reduce using rule 256 (funcionmath -> mathRound .)
    DECREMENT       reduce using rule 256 (funcionmath -> mathRound .)
    NORMSTRING1     reduce using rule 256 (funcionmath -> mathRound .)
    NORMSTRING2     reduce using rule 256 (funcionmath -> mathRound .)
    MULTISTRING     reduce using rule 256 (funcionmath -> mathRound .)
    ENUM            reduce using rule 256 (funcionmath -> mathRound .)
    IF              reduce using rule 256 (funcionmath -> mathRound .)
    WHILE           reduce using rule 256 (funcionmath -> mathRound .)
    FOR             reduce using rule 256 (funcionmath -> mathRound .)
    NUMBER          reduce using rule 256 (funcionmath -> mathRound .)
    FLOAT           reduce using rule 256 (funcionmath -> mathRound .)
    VARIABLE        reduce using rule 256 (funcionmath -> mathRound .)
    LET             reduce using rule 256 (funcionmath -> mathRound .)
    VAR             reduce using rule 256 (funcionmath -> mathRound .)
    STATIC          reduce using rule 256 (funcionmath -> mathRound .)
    CONST           reduce using rule 256 (funcionmath -> mathRound .)
    OBJECTNAME      reduce using rule 256 (funcionmath -> mathRound .)
    FUNMATH         reduce using rule 256 (funcionmath -> mathRound .)
    $end            reduce using rule 256 (funcionmath -> mathRound .)
    RKEY            reduce using rule 256 (funcionmath -> mathRound .)
    RPAREN          reduce using rule 256 (funcionmath -> mathRound .)
    RBRACKET        reduce using rule 256 (funcionmath -> mathRound .)
    COMMA           reduce using rule 256 (funcionmath -> mathRound .)
=======
    (259) funcionString -> stringConcat .

    PLUS            reduce using rule 259 (funcionString -> stringConcat .)
    MINUS           reduce using rule 259 (funcionString -> stringConcat .)
    PRODUCT         reduce using rule 259 (funcionString -> stringConcat .)
    DIVIDE          reduce using rule 259 (funcionString -> stringConcat .)
    EQUALTO         reduce using rule 259 (funcionString -> stringConcat .)
    NOTEQUALTO      reduce using rule 259 (funcionString -> stringConcat .)
    GREATER         reduce using rule 259 (funcionString -> stringConcat .)
    LESS            reduce using rule 259 (funcionString -> stringConcat .)
    GREATEREQUAL    reduce using rule 259 (funcionString -> stringConcat .)
    LESSEQUAL       reduce using rule 259 (funcionString -> stringConcat .)
    AND             reduce using rule 259 (funcionString -> stringConcat .)
    OR              reduce using rule 259 (funcionString -> stringConcat .)
    POINTCOMMA      reduce using rule 259 (funcionString -> stringConcat .)
    $end            reduce using rule 259 (funcionString -> stringConcat .)
    RPAREN          reduce using rule 259 (funcionString -> stringConcat .)
    RKEY            reduce using rule 259 (funcionString -> stringConcat .)
    RBRACKET        reduce using rule 259 (funcionString -> stringConcat .)
    COMMA           reduce using rule 259 (funcionString -> stringConcat .)
>>>>>>> master


state 92

<<<<<<< HEAD
    (257) funcionmath -> mathPow .

    PLUS            reduce using rule 257 (funcionmath -> mathPow .)
    MINUS           reduce using rule 257 (funcionmath -> mathPow .)
    PRODUCT         reduce using rule 257 (funcionmath -> mathPow .)
    DIVIDE          reduce using rule 257 (funcionmath -> mathPow .)
    EQUALTO         reduce using rule 257 (funcionmath -> mathPow .)
    NOTEQUALTO      reduce using rule 257 (funcionmath -> mathPow .)
    GREATER         reduce using rule 257 (funcionmath -> mathPow .)
    LESS            reduce using rule 257 (funcionmath -> mathPow .)
    GREATEREQUAL    reduce using rule 257 (funcionmath -> mathPow .)
    LESSEQUAL       reduce using rule 257 (funcionmath -> mathPow .)
    AND             reduce using rule 257 (funcionmath -> mathPow .)
    OR              reduce using rule 257 (funcionmath -> mathPow .)
    POINTCOMMA      reduce using rule 257 (funcionmath -> mathPow .)
    LPAREN          reduce using rule 257 (funcionmath -> mathPow .)
    NEGATION        reduce using rule 257 (funcionmath -> mathPow .)
    COMMENT         reduce using rule 257 (funcionmath -> mathPow .)
    MULTICOMMENT    reduce using rule 257 (funcionmath -> mathPow .)
    FUNCTION        reduce using rule 257 (funcionmath -> mathPow .)
    PRINT           reduce using rule 257 (funcionmath -> mathPow .)
    INCREMENT       reduce using rule 257 (funcionmath -> mathPow .)
    DECREMENT       reduce using rule 257 (funcionmath -> mathPow .)
    NORMSTRING1     reduce using rule 257 (funcionmath -> mathPow .)
    NORMSTRING2     reduce using rule 257 (funcionmath -> mathPow .)
    MULTISTRING     reduce using rule 257 (funcionmath -> mathPow .)
    ENUM            reduce using rule 257 (funcionmath -> mathPow .)
    IF              reduce using rule 257 (funcionmath -> mathPow .)
    WHILE           reduce using rule 257 (funcionmath -> mathPow .)
    FOR             reduce using rule 257 (funcionmath -> mathPow .)
    NUMBER          reduce using rule 257 (funcionmath -> mathPow .)
    FLOAT           reduce using rule 257 (funcionmath -> mathPow .)
    VARIABLE        reduce using rule 257 (funcionmath -> mathPow .)
    LET             reduce using rule 257 (funcionmath -> mathPow .)
    VAR             reduce using rule 257 (funcionmath -> mathPow .)
    STATIC          reduce using rule 257 (funcionmath -> mathPow .)
    CONST           reduce using rule 257 (funcionmath -> mathPow .)
    OBJECTNAME      reduce using rule 257 (funcionmath -> mathPow .)
    FUNMATH         reduce using rule 257 (funcionmath -> mathPow .)
    $end            reduce using rule 257 (funcionmath -> mathPow .)
    RKEY            reduce using rule 257 (funcionmath -> mathPow .)
    RPAREN          reduce using rule 257 (funcionmath -> mathPow .)
    RBRACKET        reduce using rule 257 (funcionmath -> mathPow .)
    COMMA           reduce using rule 257 (funcionmath -> mathPow .)
=======
    (260) funcionString -> stringSplit .

    PLUS            reduce using rule 260 (funcionString -> stringSplit .)
    MINUS           reduce using rule 260 (funcionString -> stringSplit .)
    PRODUCT         reduce using rule 260 (funcionString -> stringSplit .)
    DIVIDE          reduce using rule 260 (funcionString -> stringSplit .)
    EQUALTO         reduce using rule 260 (funcionString -> stringSplit .)
    NOTEQUALTO      reduce using rule 260 (funcionString -> stringSplit .)
    GREATER         reduce using rule 260 (funcionString -> stringSplit .)
    LESS            reduce using rule 260 (funcionString -> stringSplit .)
    GREATEREQUAL    reduce using rule 260 (funcionString -> stringSplit .)
    LESSEQUAL       reduce using rule 260 (funcionString -> stringSplit .)
    AND             reduce using rule 260 (funcionString -> stringSplit .)
    OR              reduce using rule 260 (funcionString -> stringSplit .)
    POINTCOMMA      reduce using rule 260 (funcionString -> stringSplit .)
    $end            reduce using rule 260 (funcionString -> stringSplit .)
    RPAREN          reduce using rule 260 (funcionString -> stringSplit .)
    RKEY            reduce using rule 260 (funcionString -> stringSplit .)
    RBRACKET        reduce using rule 260 (funcionString -> stringSplit .)
    COMMA           reduce using rule 260 (funcionString -> stringSplit .)
>>>>>>> master


state 93

<<<<<<< HEAD
    (268) funcionString -> stringCharAt .

    PLUS            reduce using rule 268 (funcionString -> stringCharAt .)
    MINUS           reduce using rule 268 (funcionString -> stringCharAt .)
    PRODUCT         reduce using rule 268 (funcionString -> stringCharAt .)
    DIVIDE          reduce using rule 268 (funcionString -> stringCharAt .)
    EQUALTO         reduce using rule 268 (funcionString -> stringCharAt .)
    NOTEQUALTO      reduce using rule 268 (funcionString -> stringCharAt .)
    GREATER         reduce using rule 268 (funcionString -> stringCharAt .)
    LESS            reduce using rule 268 (funcionString -> stringCharAt .)
    GREATEREQUAL    reduce using rule 268 (funcionString -> stringCharAt .)
    LESSEQUAL       reduce using rule 268 (funcionString -> stringCharAt .)
    AND             reduce using rule 268 (funcionString -> stringCharAt .)
    OR              reduce using rule 268 (funcionString -> stringCharAt .)
    POINTCOMMA      reduce using rule 268 (funcionString -> stringCharAt .)
    LPAREN          reduce using rule 268 (funcionString -> stringCharAt .)
    NEGATION        reduce using rule 268 (funcionString -> stringCharAt .)
    COMMENT         reduce using rule 268 (funcionString -> stringCharAt .)
    MULTICOMMENT    reduce using rule 268 (funcionString -> stringCharAt .)
    FUNCTION        reduce using rule 268 (funcionString -> stringCharAt .)
    PRINT           reduce using rule 268 (funcionString -> stringCharAt .)
    INCREMENT       reduce using rule 268 (funcionString -> stringCharAt .)
    DECREMENT       reduce using rule 268 (funcionString -> stringCharAt .)
    NORMSTRING1     reduce using rule 268 (funcionString -> stringCharAt .)
    NORMSTRING2     reduce using rule 268 (funcionString -> stringCharAt .)
    MULTISTRING     reduce using rule 268 (funcionString -> stringCharAt .)
    ENUM            reduce using rule 268 (funcionString -> stringCharAt .)
    IF              reduce using rule 268 (funcionString -> stringCharAt .)
    WHILE           reduce using rule 268 (funcionString -> stringCharAt .)
    FOR             reduce using rule 268 (funcionString -> stringCharAt .)
    NUMBER          reduce using rule 268 (funcionString -> stringCharAt .)
    FLOAT           reduce using rule 268 (funcionString -> stringCharAt .)
    VARIABLE        reduce using rule 268 (funcionString -> stringCharAt .)
    LET             reduce using rule 268 (funcionString -> stringCharAt .)
    VAR             reduce using rule 268 (funcionString -> stringCharAt .)
    STATIC          reduce using rule 268 (funcionString -> stringCharAt .)
    CONST           reduce using rule 268 (funcionString -> stringCharAt .)
    OBJECTNAME      reduce using rule 268 (funcionString -> stringCharAt .)
    FUNMATH         reduce using rule 268 (funcionString -> stringCharAt .)
    $end            reduce using rule 268 (funcionString -> stringCharAt .)
    RKEY            reduce using rule 268 (funcionString -> stringCharAt .)
    RPAREN          reduce using rule 268 (funcionString -> stringCharAt .)
    RBRACKET        reduce using rule 268 (funcionString -> stringCharAt .)
    COMMA           reduce using rule 268 (funcionString -> stringCharAt .)
=======
    (267) funcionArray -> arrayFilter .

    PLUS            reduce using rule 267 (funcionArray -> arrayFilter .)
    MINUS           reduce using rule 267 (funcionArray -> arrayFilter .)
    PRODUCT         reduce using rule 267 (funcionArray -> arrayFilter .)
    DIVIDE          reduce using rule 267 (funcionArray -> arrayFilter .)
    EQUALTO         reduce using rule 267 (funcionArray -> arrayFilter .)
    NOTEQUALTO      reduce using rule 267 (funcionArray -> arrayFilter .)
    GREATER         reduce using rule 267 (funcionArray -> arrayFilter .)
    LESS            reduce using rule 267 (funcionArray -> arrayFilter .)
    GREATEREQUAL    reduce using rule 267 (funcionArray -> arrayFilter .)
    LESSEQUAL       reduce using rule 267 (funcionArray -> arrayFilter .)
    AND             reduce using rule 267 (funcionArray -> arrayFilter .)
    OR              reduce using rule 267 (funcionArray -> arrayFilter .)
    POINTCOMMA      reduce using rule 267 (funcionArray -> arrayFilter .)
    $end            reduce using rule 267 (funcionArray -> arrayFilter .)
    RPAREN          reduce using rule 267 (funcionArray -> arrayFilter .)
    RKEY            reduce using rule 267 (funcionArray -> arrayFilter .)
    RBRACKET        reduce using rule 267 (funcionArray -> arrayFilter .)
    COMMA           reduce using rule 267 (funcionArray -> arrayFilter .)
>>>>>>> master


state 94

<<<<<<< HEAD
    (269) funcionString -> stringConcat .

    PLUS            reduce using rule 269 (funcionString -> stringConcat .)
    MINUS           reduce using rule 269 (funcionString -> stringConcat .)
    PRODUCT         reduce using rule 269 (funcionString -> stringConcat .)
    DIVIDE          reduce using rule 269 (funcionString -> stringConcat .)
    EQUALTO         reduce using rule 269 (funcionString -> stringConcat .)
    NOTEQUALTO      reduce using rule 269 (funcionString -> stringConcat .)
    GREATER         reduce using rule 269 (funcionString -> stringConcat .)
    LESS            reduce using rule 269 (funcionString -> stringConcat .)
    GREATEREQUAL    reduce using rule 269 (funcionString -> stringConcat .)
    LESSEQUAL       reduce using rule 269 (funcionString -> stringConcat .)
    AND             reduce using rule 269 (funcionString -> stringConcat .)
    OR              reduce using rule 269 (funcionString -> stringConcat .)
    POINTCOMMA      reduce using rule 269 (funcionString -> stringConcat .)
    LPAREN          reduce using rule 269 (funcionString -> stringConcat .)
    NEGATION        reduce using rule 269 (funcionString -> stringConcat .)
    COMMENT         reduce using rule 269 (funcionString -> stringConcat .)
    MULTICOMMENT    reduce using rule 269 (funcionString -> stringConcat .)
    FUNCTION        reduce using rule 269 (funcionString -> stringConcat .)
    PRINT           reduce using rule 269 (funcionString -> stringConcat .)
    INCREMENT       reduce using rule 269 (funcionString -> stringConcat .)
    DECREMENT       reduce using rule 269 (funcionString -> stringConcat .)
    NORMSTRING1     reduce using rule 269 (funcionString -> stringConcat .)
    NORMSTRING2     reduce using rule 269 (funcionString -> stringConcat .)
    MULTISTRING     reduce using rule 269 (funcionString -> stringConcat .)
    ENUM            reduce using rule 269 (funcionString -> stringConcat .)
    IF              reduce using rule 269 (funcionString -> stringConcat .)
    WHILE           reduce using rule 269 (funcionString -> stringConcat .)
    FOR             reduce using rule 269 (funcionString -> stringConcat .)
    NUMBER          reduce using rule 269 (funcionString -> stringConcat .)
    FLOAT           reduce using rule 269 (funcionString -> stringConcat .)
    VARIABLE        reduce using rule 269 (funcionString -> stringConcat .)
    LET             reduce using rule 269 (funcionString -> stringConcat .)
    VAR             reduce using rule 269 (funcionString -> stringConcat .)
    STATIC          reduce using rule 269 (funcionString -> stringConcat .)
    CONST           reduce using rule 269 (funcionString -> stringConcat .)
    OBJECTNAME      reduce using rule 269 (funcionString -> stringConcat .)
    FUNMATH         reduce using rule 269 (funcionString -> stringConcat .)
    $end            reduce using rule 269 (funcionString -> stringConcat .)
    RKEY            reduce using rule 269 (funcionString -> stringConcat .)
    RPAREN          reduce using rule 269 (funcionString -> stringConcat .)
    RBRACKET        reduce using rule 269 (funcionString -> stringConcat .)
    COMMA           reduce using rule 269 (funcionString -> stringConcat .)
=======
    (268) funcionArray -> arrayConcat .

    PLUS            reduce using rule 268 (funcionArray -> arrayConcat .)
    MINUS           reduce using rule 268 (funcionArray -> arrayConcat .)
    PRODUCT         reduce using rule 268 (funcionArray -> arrayConcat .)
    DIVIDE          reduce using rule 268 (funcionArray -> arrayConcat .)
    EQUALTO         reduce using rule 268 (funcionArray -> arrayConcat .)
    NOTEQUALTO      reduce using rule 268 (funcionArray -> arrayConcat .)
    GREATER         reduce using rule 268 (funcionArray -> arrayConcat .)
    LESS            reduce using rule 268 (funcionArray -> arrayConcat .)
    GREATEREQUAL    reduce using rule 268 (funcionArray -> arrayConcat .)
    LESSEQUAL       reduce using rule 268 (funcionArray -> arrayConcat .)
    AND             reduce using rule 268 (funcionArray -> arrayConcat .)
    OR              reduce using rule 268 (funcionArray -> arrayConcat .)
    POINTCOMMA      reduce using rule 268 (funcionArray -> arrayConcat .)
    $end            reduce using rule 268 (funcionArray -> arrayConcat .)
    RPAREN          reduce using rule 268 (funcionArray -> arrayConcat .)
    RKEY            reduce using rule 268 (funcionArray -> arrayConcat .)
    RBRACKET        reduce using rule 268 (funcionArray -> arrayConcat .)
    COMMA           reduce using rule 268 (funcionArray -> arrayConcat .)
>>>>>>> master


state 95

<<<<<<< HEAD
    (270) funcionString -> stringSplit .

    PLUS            reduce using rule 270 (funcionString -> stringSplit .)
    MINUS           reduce using rule 270 (funcionString -> stringSplit .)
    PRODUCT         reduce using rule 270 (funcionString -> stringSplit .)
    DIVIDE          reduce using rule 270 (funcionString -> stringSplit .)
    EQUALTO         reduce using rule 270 (funcionString -> stringSplit .)
    NOTEQUALTO      reduce using rule 270 (funcionString -> stringSplit .)
    GREATER         reduce using rule 270 (funcionString -> stringSplit .)
    LESS            reduce using rule 270 (funcionString -> stringSplit .)
    GREATEREQUAL    reduce using rule 270 (funcionString -> stringSplit .)
    LESSEQUAL       reduce using rule 270 (funcionString -> stringSplit .)
    AND             reduce using rule 270 (funcionString -> stringSplit .)
    OR              reduce using rule 270 (funcionString -> stringSplit .)
    POINTCOMMA      reduce using rule 270 (funcionString -> stringSplit .)
    LPAREN          reduce using rule 270 (funcionString -> stringSplit .)
    NEGATION        reduce using rule 270 (funcionString -> stringSplit .)
    COMMENT         reduce using rule 270 (funcionString -> stringSplit .)
    MULTICOMMENT    reduce using rule 270 (funcionString -> stringSplit .)
    FUNCTION        reduce using rule 270 (funcionString -> stringSplit .)
    PRINT           reduce using rule 270 (funcionString -> stringSplit .)
    INCREMENT       reduce using rule 270 (funcionString -> stringSplit .)
    DECREMENT       reduce using rule 270 (funcionString -> stringSplit .)
    NORMSTRING1     reduce using rule 270 (funcionString -> stringSplit .)
    NORMSTRING2     reduce using rule 270 (funcionString -> stringSplit .)
    MULTISTRING     reduce using rule 270 (funcionString -> stringSplit .)
    ENUM            reduce using rule 270 (funcionString -> stringSplit .)
    IF              reduce using rule 270 (funcionString -> stringSplit .)
    WHILE           reduce using rule 270 (funcionString -> stringSplit .)
    FOR             reduce using rule 270 (funcionString -> stringSplit .)
    NUMBER          reduce using rule 270 (funcionString -> stringSplit .)
    FLOAT           reduce using rule 270 (funcionString -> stringSplit .)
    VARIABLE        reduce using rule 270 (funcionString -> stringSplit .)
    LET             reduce using rule 270 (funcionString -> stringSplit .)
    VAR             reduce using rule 270 (funcionString -> stringSplit .)
    STATIC          reduce using rule 270 (funcionString -> stringSplit .)
    CONST           reduce using rule 270 (funcionString -> stringSplit .)
    OBJECTNAME      reduce using rule 270 (funcionString -> stringSplit .)
    FUNMATH         reduce using rule 270 (funcionString -> stringSplit .)
    $end            reduce using rule 270 (funcionString -> stringSplit .)
    RKEY            reduce using rule 270 (funcionString -> stringSplit .)
    RPAREN          reduce using rule 270 (funcionString -> stringSplit .)
    RBRACKET        reduce using rule 270 (funcionString -> stringSplit .)
    COMMA           reduce using rule 270 (funcionString -> stringSplit .)
=======
    (269) funcionArray -> arrayJoin .

    PLUS            reduce using rule 269 (funcionArray -> arrayJoin .)
    MINUS           reduce using rule 269 (funcionArray -> arrayJoin .)
    PRODUCT         reduce using rule 269 (funcionArray -> arrayJoin .)
    DIVIDE          reduce using rule 269 (funcionArray -> arrayJoin .)
    EQUALTO         reduce using rule 269 (funcionArray -> arrayJoin .)
    NOTEQUALTO      reduce using rule 269 (funcionArray -> arrayJoin .)
    GREATER         reduce using rule 269 (funcionArray -> arrayJoin .)
    LESS            reduce using rule 269 (funcionArray -> arrayJoin .)
    GREATEREQUAL    reduce using rule 269 (funcionArray -> arrayJoin .)
    LESSEQUAL       reduce using rule 269 (funcionArray -> arrayJoin .)
    AND             reduce using rule 269 (funcionArray -> arrayJoin .)
    OR              reduce using rule 269 (funcionArray -> arrayJoin .)
    POINTCOMMA      reduce using rule 269 (funcionArray -> arrayJoin .)
    $end            reduce using rule 269 (funcionArray -> arrayJoin .)
    RPAREN          reduce using rule 269 (funcionArray -> arrayJoin .)
    RKEY            reduce using rule 269 (funcionArray -> arrayJoin .)
    RBRACKET        reduce using rule 269 (funcionArray -> arrayJoin .)
    COMMA           reduce using rule 269 (funcionArray -> arrayJoin .)
>>>>>>> master


state 96

<<<<<<< HEAD
    (277) funcionArray -> arrayFilter .

    PLUS            reduce using rule 277 (funcionArray -> arrayFilter .)
    MINUS           reduce using rule 277 (funcionArray -> arrayFilter .)
    PRODUCT         reduce using rule 277 (funcionArray -> arrayFilter .)
    DIVIDE          reduce using rule 277 (funcionArray -> arrayFilter .)
    EQUALTO         reduce using rule 277 (funcionArray -> arrayFilter .)
    NOTEQUALTO      reduce using rule 277 (funcionArray -> arrayFilter .)
    GREATER         reduce using rule 277 (funcionArray -> arrayFilter .)
    LESS            reduce using rule 277 (funcionArray -> arrayFilter .)
    GREATEREQUAL    reduce using rule 277 (funcionArray -> arrayFilter .)
    LESSEQUAL       reduce using rule 277 (funcionArray -> arrayFilter .)
    AND             reduce using rule 277 (funcionArray -> arrayFilter .)
    OR              reduce using rule 277 (funcionArray -> arrayFilter .)
    POINTCOMMA      reduce using rule 277 (funcionArray -> arrayFilter .)
    LPAREN          reduce using rule 277 (funcionArray -> arrayFilter .)
    NEGATION        reduce using rule 277 (funcionArray -> arrayFilter .)
    COMMENT         reduce using rule 277 (funcionArray -> arrayFilter .)
    MULTICOMMENT    reduce using rule 277 (funcionArray -> arrayFilter .)
    FUNCTION        reduce using rule 277 (funcionArray -> arrayFilter .)
    PRINT           reduce using rule 277 (funcionArray -> arrayFilter .)
    INCREMENT       reduce using rule 277 (funcionArray -> arrayFilter .)
    DECREMENT       reduce using rule 277 (funcionArray -> arrayFilter .)
    NORMSTRING1     reduce using rule 277 (funcionArray -> arrayFilter .)
    NORMSTRING2     reduce using rule 277 (funcionArray -> arrayFilter .)
    MULTISTRING     reduce using rule 277 (funcionArray -> arrayFilter .)
    ENUM            reduce using rule 277 (funcionArray -> arrayFilter .)
    IF              reduce using rule 277 (funcionArray -> arrayFilter .)
    WHILE           reduce using rule 277 (funcionArray -> arrayFilter .)
    FOR             reduce using rule 277 (funcionArray -> arrayFilter .)
    NUMBER          reduce using rule 277 (funcionArray -> arrayFilter .)
    FLOAT           reduce using rule 277 (funcionArray -> arrayFilter .)
    VARIABLE        reduce using rule 277 (funcionArray -> arrayFilter .)
    LET             reduce using rule 277 (funcionArray -> arrayFilter .)
    VAR             reduce using rule 277 (funcionArray -> arrayFilter .)
    STATIC          reduce using rule 277 (funcionArray -> arrayFilter .)
    CONST           reduce using rule 277 (funcionArray -> arrayFilter .)
    OBJECTNAME      reduce using rule 277 (funcionArray -> arrayFilter .)
    FUNMATH         reduce using rule 277 (funcionArray -> arrayFilter .)
    $end            reduce using rule 277 (funcionArray -> arrayFilter .)
    RKEY            reduce using rule 277 (funcionArray -> arrayFilter .)
    RPAREN          reduce using rule 277 (funcionArray -> arrayFilter .)
    RBRACKET        reduce using rule 277 (funcionArray -> arrayFilter .)
    COMMA           reduce using rule 277 (funcionArray -> arrayFilter .)
=======
    (277) funcionConjunto -> conjuntoAdd .

    PLUS            reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    MINUS           reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    PRODUCT         reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    DIVIDE          reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    EQUALTO         reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    NOTEQUALTO      reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    GREATER         reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    LESS            reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    GREATEREQUAL    reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    LESSEQUAL       reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    AND             reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    OR              reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    POINTCOMMA      reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    $end            reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    RPAREN          reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    RKEY            reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    RBRACKET        reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
    COMMA           reduce using rule 277 (funcionConjunto -> conjuntoAdd .)
>>>>>>> master


state 97

<<<<<<< HEAD
    (278) funcionArray -> arrayConcat .

    PLUS            reduce using rule 278 (funcionArray -> arrayConcat .)
    MINUS           reduce using rule 278 (funcionArray -> arrayConcat .)
    PRODUCT         reduce using rule 278 (funcionArray -> arrayConcat .)
    DIVIDE          reduce using rule 278 (funcionArray -> arrayConcat .)
    EQUALTO         reduce using rule 278 (funcionArray -> arrayConcat .)
    NOTEQUALTO      reduce using rule 278 (funcionArray -> arrayConcat .)
    GREATER         reduce using rule 278 (funcionArray -> arrayConcat .)
    LESS            reduce using rule 278 (funcionArray -> arrayConcat .)
    GREATEREQUAL    reduce using rule 278 (funcionArray -> arrayConcat .)
    LESSEQUAL       reduce using rule 278 (funcionArray -> arrayConcat .)
    AND             reduce using rule 278 (funcionArray -> arrayConcat .)
    OR              reduce using rule 278 (funcionArray -> arrayConcat .)
    POINTCOMMA      reduce using rule 278 (funcionArray -> arrayConcat .)
    LPAREN          reduce using rule 278 (funcionArray -> arrayConcat .)
    NEGATION        reduce using rule 278 (funcionArray -> arrayConcat .)
    COMMENT         reduce using rule 278 (funcionArray -> arrayConcat .)
    MULTICOMMENT    reduce using rule 278 (funcionArray -> arrayConcat .)
    FUNCTION        reduce using rule 278 (funcionArray -> arrayConcat .)
    PRINT           reduce using rule 278 (funcionArray -> arrayConcat .)
    INCREMENT       reduce using rule 278 (funcionArray -> arrayConcat .)
    DECREMENT       reduce using rule 278 (funcionArray -> arrayConcat .)
    NORMSTRING1     reduce using rule 278 (funcionArray -> arrayConcat .)
    NORMSTRING2     reduce using rule 278 (funcionArray -> arrayConcat .)
    MULTISTRING     reduce using rule 278 (funcionArray -> arrayConcat .)
    ENUM            reduce using rule 278 (funcionArray -> arrayConcat .)
    IF              reduce using rule 278 (funcionArray -> arrayConcat .)
    WHILE           reduce using rule 278 (funcionArray -> arrayConcat .)
    FOR             reduce using rule 278 (funcionArray -> arrayConcat .)
    NUMBER          reduce using rule 278 (funcionArray -> arrayConcat .)
    FLOAT           reduce using rule 278 (funcionArray -> arrayConcat .)
    VARIABLE        reduce using rule 278 (funcionArray -> arrayConcat .)
    LET             reduce using rule 278 (funcionArray -> arrayConcat .)
    VAR             reduce using rule 278 (funcionArray -> arrayConcat .)
    STATIC          reduce using rule 278 (funcionArray -> arrayConcat .)
    CONST           reduce using rule 278 (funcionArray -> arrayConcat .)
    OBJECTNAME      reduce using rule 278 (funcionArray -> arrayConcat .)
    FUNMATH         reduce using rule 278 (funcionArray -> arrayConcat .)
    $end            reduce using rule 278 (funcionArray -> arrayConcat .)
    RKEY            reduce using rule 278 (funcionArray -> arrayConcat .)
    RPAREN          reduce using rule 278 (funcionArray -> arrayConcat .)
    RBRACKET        reduce using rule 278 (funcionArray -> arrayConcat .)
    COMMA           reduce using rule 278 (funcionArray -> arrayConcat .)
=======
    (278) funcionConjunto -> conjuntoHas .

    PLUS            reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    MINUS           reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    PRODUCT         reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    DIVIDE          reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    EQUALTO         reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    NOTEQUALTO      reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    GREATER         reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    LESS            reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    GREATEREQUAL    reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    LESSEQUAL       reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    AND             reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    OR              reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    POINTCOMMA      reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    $end            reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    RPAREN          reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    RKEY            reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    RBRACKET        reduce using rule 278 (funcionConjunto -> conjuntoHas .)
    COMMA           reduce using rule 278 (funcionConjunto -> conjuntoHas .)
>>>>>>> master


state 98

<<<<<<< HEAD
    (279) funcionArray -> arrayJoin .

    PLUS            reduce using rule 279 (funcionArray -> arrayJoin .)
    MINUS           reduce using rule 279 (funcionArray -> arrayJoin .)
    PRODUCT         reduce using rule 279 (funcionArray -> arrayJoin .)
    DIVIDE          reduce using rule 279 (funcionArray -> arrayJoin .)
    EQUALTO         reduce using rule 279 (funcionArray -> arrayJoin .)
    NOTEQUALTO      reduce using rule 279 (funcionArray -> arrayJoin .)
    GREATER         reduce using rule 279 (funcionArray -> arrayJoin .)
    LESS            reduce using rule 279 (funcionArray -> arrayJoin .)
    GREATEREQUAL    reduce using rule 279 (funcionArray -> arrayJoin .)
    LESSEQUAL       reduce using rule 279 (funcionArray -> arrayJoin .)
    AND             reduce using rule 279 (funcionArray -> arrayJoin .)
    OR              reduce using rule 279 (funcionArray -> arrayJoin .)
    POINTCOMMA      reduce using rule 279 (funcionArray -> arrayJoin .)
    LPAREN          reduce using rule 279 (funcionArray -> arrayJoin .)
    NEGATION        reduce using rule 279 (funcionArray -> arrayJoin .)
    COMMENT         reduce using rule 279 (funcionArray -> arrayJoin .)
    MULTICOMMENT    reduce using rule 279 (funcionArray -> arrayJoin .)
    FUNCTION        reduce using rule 279 (funcionArray -> arrayJoin .)
    PRINT           reduce using rule 279 (funcionArray -> arrayJoin .)
    INCREMENT       reduce using rule 279 (funcionArray -> arrayJoin .)
    DECREMENT       reduce using rule 279 (funcionArray -> arrayJoin .)
    NORMSTRING1     reduce using rule 279 (funcionArray -> arrayJoin .)
    NORMSTRING2     reduce using rule 279 (funcionArray -> arrayJoin .)
    MULTISTRING     reduce using rule 279 (funcionArray -> arrayJoin .)
    ENUM            reduce using rule 279 (funcionArray -> arrayJoin .)
    IF              reduce using rule 279 (funcionArray -> arrayJoin .)
    WHILE           reduce using rule 279 (funcionArray -> arrayJoin .)
    FOR             reduce using rule 279 (funcionArray -> arrayJoin .)
    NUMBER          reduce using rule 279 (funcionArray -> arrayJoin .)
    FLOAT           reduce using rule 279 (funcionArray -> arrayJoin .)
    VARIABLE        reduce using rule 279 (funcionArray -> arrayJoin .)
    LET             reduce using rule 279 (funcionArray -> arrayJoin .)
    VAR             reduce using rule 279 (funcionArray -> arrayJoin .)
    STATIC          reduce using rule 279 (funcionArray -> arrayJoin .)
    CONST           reduce using rule 279 (funcionArray -> arrayJoin .)
    OBJECTNAME      reduce using rule 279 (funcionArray -> arrayJoin .)
    FUNMATH         reduce using rule 279 (funcionArray -> arrayJoin .)
    $end            reduce using rule 279 (funcionArray -> arrayJoin .)
    RKEY            reduce using rule 279 (funcionArray -> arrayJoin .)
    RPAREN          reduce using rule 279 (funcionArray -> arrayJoin .)
    RBRACKET        reduce using rule 279 (funcionArray -> arrayJoin .)
    COMMA           reduce using rule 279 (funcionArray -> arrayJoin .)
=======
    (249) mathAbs -> FUNMATH . POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> FUNMATH . POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> FUNMATH . POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> FUNMATH . POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> FUNMATH . POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA VARIABLE RPAREN

    POINT           shift and go to state 182
>>>>>>> master


state 99

    (287) funcionConjunto -> conjuntoAdd .

    PLUS            reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    MINUS           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    PRODUCT         reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    DIVIDE          reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    EQUALTO         reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    NOTEQUALTO      reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    GREATER         reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    LESS            reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    GREATEREQUAL    reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    LESSEQUAL       reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    AND             reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    OR              reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    POINTCOMMA      reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    LPAREN          reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    NEGATION        reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    COMMENT         reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    MULTICOMMENT    reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    FUNCTION        reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    PRINT           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    INCREMENT       reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    DECREMENT       reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    NORMSTRING1     reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    NORMSTRING2     reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    MULTISTRING     reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    ENUM            reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    IF              reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    WHILE           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    FOR             reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    NUMBER          reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    FLOAT           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    VARIABLE        reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    LET             reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    VAR             reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    STATIC          reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    CONST           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    OBJECTNAME      reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    FUNMATH         reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    $end            reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    RKEY            reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    RPAREN          reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    RBRACKET        reduce using rule 287 (funcionConjunto -> conjuntoAdd .)
    COMMA           reduce using rule 287 (funcionConjunto -> conjuntoAdd .)


state 100

<<<<<<< HEAD
    (288) funcionConjunto -> conjuntoHas .

    PLUS            reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    MINUS           reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    PRODUCT         reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    DIVIDE          reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    EQUALTO         reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    NOTEQUALTO      reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    GREATER         reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    LESS            reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    GREATEREQUAL    reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    LESSEQUAL       reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    AND             reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    OR              reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    POINTCOMMA      reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    LPAREN          reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    NEGATION        reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    COMMENT         reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    MULTICOMMENT    reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    FUNCTION        reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    PRINT           reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    INCREMENT       reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    DECREMENT       reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    NORMSTRING1     reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    NORMSTRING2     reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    MULTISTRING     reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    ENUM            reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    IF              reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    WHILE           reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    FOR             reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    NUMBER          reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    FLOAT           reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    VARIABLE        reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    LET             reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    VAR             reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    STATIC          reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    CONST           reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    OBJECTNAME      reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    FUNMATH         reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    $end            reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    RKEY            reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    RPAREN          reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    RBRACKET        reduce using rule 288 (funcionConjunto -> conjuntoHas .)
    COMMA           reduce using rule 288 (funcionConjunto -> conjuntoHas .)


state 101

    (259) mathAbs -> FUNMATH . POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> FUNMATH . POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> FUNMATH . POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> FUNMATH . POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> FUNMATH . POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA VARIABLE RPAREN

    POINT           shift and go to state 187


state 102

    (2) statement -> atomicstatement statement .

    $end            reduce using rule 2 (statement -> atomicstatement statement .)
    RKEY            reduce using rule 2 (statement -> atomicstatement statement .)


state 103

    (4) atomicstatement -> statement_value POINTCOMMA .

    LPAREN          reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    NEGATION        reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    COMMENT         reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    MULTICOMMENT    reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    FUNCTION        reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    PRINT           reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    INCREMENT       reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    DECREMENT       reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    NORMSTRING1     reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    NORMSTRING2     reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    MULTISTRING     reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    ENUM            reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    IF              reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    WHILE           reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    FOR             reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    NUMBER          reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    FLOAT           reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    VARIABLE        reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    LET             reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    VAR             reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    STATIC          reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    CONST           reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    OBJECTNAME      reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    FUNMATH         reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    $end            reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)
    RKEY            reduce using rule 4 (atomicstatement -> statement_value POINTCOMMA .)


state 104

    (175) expression -> expression PLUS . term
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    term                           shift and go to state 188
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 105

    (176) expression -> expression MINUS . term
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    term                           shift and go to state 190
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 106

    (178) expression -> expression PRODUCT . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 191
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 107

    (179) expression -> expression DIVIDE . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 192
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 108

    (199) expCond -> expression operador . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 193
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 109

    (197) expOpLog -> expression oplogico . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 194
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 110

    (191) expEq -> expression EQUALTO . expression
    (247) operador -> EQUALTO .
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
=======
    (165) expression -> expression PLUS . term
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    term                           shift and go to state 183
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 101

    (166) expression -> expression MINUS . term
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    term                           shift and go to state 185
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 102

    (168) expression -> expression PRODUCT . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 186
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 103

    (169) expression -> expression DIVIDE . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 187
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 104

    (189) expCond -> expression operador . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 188
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 105

    (187) expOpLog -> expression oplogico . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 189
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 106

    (181) expEq -> expression EQUALTO . expression
    (237) operador -> EQUALTO .
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
>>>>>>> master

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
  ! shift/reduce conflict for FUNMATH resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
<<<<<<< HEAD
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

  ! INCREMENT       [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! FUNMATH         [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! LET             [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! VAR             [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! STATIC          [ reduce using rule 247 (operador -> EQUALTO .) ]
  ! CONST           [ reduce using rule 247 (operador -> EQUALTO .) ]

    expression                     shift and go to state 195
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

  ! INCREMENT       [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! FUNMATH         [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! LET             [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! VAR             [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! STATIC          [ reduce using rule 237 (operador -> EQUALTO .) ]
  ! CONST           [ reduce using rule 237 (operador -> EQUALTO .) ]

    expression                     shift and go to state 190
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 111

<<<<<<< HEAD
    (194) expNotEq -> expression NOTEQUALTO . expression
    (248) operador -> NOTEQUALTO .
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
=======
    (184) expNotEq -> expression NOTEQUALTO . expression
    (238) operador -> NOTEQUALTO .
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
>>>>>>> master

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
  ! shift/reduce conflict for FUNMATH resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for STATIC resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
<<<<<<< HEAD
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

  ! INCREMENT       [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! FUNMATH         [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! LET             [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! VAR             [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! STATIC          [ reduce using rule 248 (operador -> NOTEQUALTO .) ]
  ! CONST           [ reduce using rule 248 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 196
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 112
=======
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

  ! INCREMENT       [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! FUNMATH         [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! LET             [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! VAR             [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! STATIC          [ reduce using rule 238 (operador -> NOTEQUALTO .) ]
  ! CONST           [ reduce using rule 238 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 191
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 108

    (233) operador -> GREATER .

    INCREMENT       reduce using rule 233 (operador -> GREATER .)
    DECREMENT       reduce using rule 233 (operador -> GREATER .)
    LPAREN          reduce using rule 233 (operador -> GREATER .)
    NUMBER          reduce using rule 233 (operador -> GREATER .)
    FLOAT           reduce using rule 233 (operador -> GREATER .)
    VARIABLE        reduce using rule 233 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 233 (operador -> GREATER .)
    FUNMATH         reduce using rule 233 (operador -> GREATER .)
    LET             reduce using rule 233 (operador -> GREATER .)
    VAR             reduce using rule 233 (operador -> GREATER .)
    STATIC          reduce using rule 233 (operador -> GREATER .)
    CONST           reduce using rule 233 (operador -> GREATER .)


state 109

    (234) operador -> LESS .

    INCREMENT       reduce using rule 234 (operador -> LESS .)
    DECREMENT       reduce using rule 234 (operador -> LESS .)
    LPAREN          reduce using rule 234 (operador -> LESS .)
    NUMBER          reduce using rule 234 (operador -> LESS .)
    FLOAT           reduce using rule 234 (operador -> LESS .)
    VARIABLE        reduce using rule 234 (operador -> LESS .)
    OBJECTNAME      reduce using rule 234 (operador -> LESS .)
    FUNMATH         reduce using rule 234 (operador -> LESS .)
    LET             reduce using rule 234 (operador -> LESS .)
    VAR             reduce using rule 234 (operador -> LESS .)
    STATIC          reduce using rule 234 (operador -> LESS .)
    CONST           reduce using rule 234 (operador -> LESS .)


state 110

    (235) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 235 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 235 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 235 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 235 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 235 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 235 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 235 (operador -> GREATEREQUAL .)
    FUNMATH         reduce using rule 235 (operador -> GREATEREQUAL .)
    LET             reduce using rule 235 (operador -> GREATEREQUAL .)
    VAR             reduce using rule 235 (operador -> GREATEREQUAL .)
    STATIC          reduce using rule 235 (operador -> GREATEREQUAL .)
    CONST           reduce using rule 235 (operador -> GREATEREQUAL .)
>>>>>>> master

    (243) operador -> GREATER .

    INCREMENT       reduce using rule 243 (operador -> GREATER .)
    DECREMENT       reduce using rule 243 (operador -> GREATER .)
    LPAREN          reduce using rule 243 (operador -> GREATER .)
    NUMBER          reduce using rule 243 (operador -> GREATER .)
    FLOAT           reduce using rule 243 (operador -> GREATER .)
    VARIABLE        reduce using rule 243 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 243 (operador -> GREATER .)
    FUNMATH         reduce using rule 243 (operador -> GREATER .)
    LET             reduce using rule 243 (operador -> GREATER .)
    VAR             reduce using rule 243 (operador -> GREATER .)
    STATIC          reduce using rule 243 (operador -> GREATER .)
    CONST           reduce using rule 243 (operador -> GREATER .)

<<<<<<< HEAD

state 113
=======
    (236) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 236 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 236 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 236 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 236 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 236 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 236 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 236 (operador -> LESSEQUAL .)
    FUNMATH         reduce using rule 236 (operador -> LESSEQUAL .)
    LET             reduce using rule 236 (operador -> LESSEQUAL .)
    VAR             reduce using rule 236 (operador -> LESSEQUAL .)
    STATIC          reduce using rule 236 (operador -> LESSEQUAL .)
    CONST           reduce using rule 236 (operador -> LESSEQUAL .)
>>>>>>> master

    (244) operador -> LESS .

    INCREMENT       reduce using rule 244 (operador -> LESS .)
    DECREMENT       reduce using rule 244 (operador -> LESS .)
    LPAREN          reduce using rule 244 (operador -> LESS .)
    NUMBER          reduce using rule 244 (operador -> LESS .)
    FLOAT           reduce using rule 244 (operador -> LESS .)
    VARIABLE        reduce using rule 244 (operador -> LESS .)
    OBJECTNAME      reduce using rule 244 (operador -> LESS .)
    FUNMATH         reduce using rule 244 (operador -> LESS .)
    LET             reduce using rule 244 (operador -> LESS .)
    VAR             reduce using rule 244 (operador -> LESS .)
    STATIC          reduce using rule 244 (operador -> LESS .)
    CONST           reduce using rule 244 (operador -> LESS .)

<<<<<<< HEAD

state 114
=======
    (239) oplogico -> AND .

    INCREMENT       reduce using rule 239 (oplogico -> AND .)
    DECREMENT       reduce using rule 239 (oplogico -> AND .)
    LPAREN          reduce using rule 239 (oplogico -> AND .)
    NUMBER          reduce using rule 239 (oplogico -> AND .)
    FLOAT           reduce using rule 239 (oplogico -> AND .)
    VARIABLE        reduce using rule 239 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 239 (oplogico -> AND .)
    FUNMATH         reduce using rule 239 (oplogico -> AND .)
    LET             reduce using rule 239 (oplogico -> AND .)
    VAR             reduce using rule 239 (oplogico -> AND .)
    STATIC          reduce using rule 239 (oplogico -> AND .)
    CONST           reduce using rule 239 (oplogico -> AND .)
>>>>>>> master

    (245) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 245 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 245 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 245 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 245 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 245 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 245 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 245 (operador -> GREATEREQUAL .)
    FUNMATH         reduce using rule 245 (operador -> GREATEREQUAL .)
    LET             reduce using rule 245 (operador -> GREATEREQUAL .)
    VAR             reduce using rule 245 (operador -> GREATEREQUAL .)
    STATIC          reduce using rule 245 (operador -> GREATEREQUAL .)
    CONST           reduce using rule 245 (operador -> GREATEREQUAL .)

<<<<<<< HEAD

state 115
=======
    (240) oplogico -> OR .

    INCREMENT       reduce using rule 240 (oplogico -> OR .)
    DECREMENT       reduce using rule 240 (oplogico -> OR .)
    LPAREN          reduce using rule 240 (oplogico -> OR .)
    NUMBER          reduce using rule 240 (oplogico -> OR .)
    FLOAT           reduce using rule 240 (oplogico -> OR .)
    VARIABLE        reduce using rule 240 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 240 (oplogico -> OR .)
    FUNMATH         reduce using rule 240 (oplogico -> OR .)
    LET             reduce using rule 240 (oplogico -> OR .)
    VAR             reduce using rule 240 (oplogico -> OR .)
    STATIC          reduce using rule 240 (oplogico -> OR .)
    CONST           reduce using rule 240 (oplogico -> OR .)
>>>>>>> master

    (246) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 246 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 246 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 246 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 246 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 246 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 246 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 246 (operador -> LESSEQUAL .)
    FUNMATH         reduce using rule 246 (operador -> LESSEQUAL .)
    LET             reduce using rule 246 (operador -> LESSEQUAL .)
    VAR             reduce using rule 246 (operador -> LESSEQUAL .)
    STATIC          reduce using rule 246 (operador -> LESSEQUAL .)
    CONST           reduce using rule 246 (operador -> LESSEQUAL .)

<<<<<<< HEAD
=======
    (185) expOpLog -> expCond oplogico . expCond
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 118
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expCond                        shift and go to state 192
    expression                     shift and go to state 193
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 116

<<<<<<< HEAD
    (249) oplogico -> AND .
=======
    (179) expEq -> expCond EQUALTO . expCond
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 118
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expCond                        shift and go to state 194
    expression                     shift and go to state 193
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

    INCREMENT       reduce using rule 249 (oplogico -> AND .)
    DECREMENT       reduce using rule 249 (oplogico -> AND .)
    LPAREN          reduce using rule 249 (oplogico -> AND .)
    NUMBER          reduce using rule 249 (oplogico -> AND .)
    FLOAT           reduce using rule 249 (oplogico -> AND .)
    VARIABLE        reduce using rule 249 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 249 (oplogico -> AND .)
    FUNMATH         reduce using rule 249 (oplogico -> AND .)
    LET             reduce using rule 249 (oplogico -> AND .)
    VAR             reduce using rule 249 (oplogico -> AND .)
    STATIC          reduce using rule 249 (oplogico -> AND .)
    CONST           reduce using rule 249 (oplogico -> AND .)

<<<<<<< HEAD

state 117

    (250) oplogico -> OR .

    INCREMENT       reduce using rule 250 (oplogico -> OR .)
    DECREMENT       reduce using rule 250 (oplogico -> OR .)
    LPAREN          reduce using rule 250 (oplogico -> OR .)
    NUMBER          reduce using rule 250 (oplogico -> OR .)
    FLOAT           reduce using rule 250 (oplogico -> OR .)
    VARIABLE        reduce using rule 250 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 250 (oplogico -> OR .)
    FUNMATH         reduce using rule 250 (oplogico -> OR .)
    LET             reduce using rule 250 (oplogico -> OR .)
    VAR             reduce using rule 250 (oplogico -> OR .)
    STATIC          reduce using rule 250 (oplogico -> OR .)
    CONST           reduce using rule 250 (oplogico -> OR .)


state 118

    (195) expOpLog -> expCond oplogico . expCond
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 122
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expCond                        shift and go to state 197
    expression                     shift and go to state 198
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 119

    (189) expEq -> expCond EQUALTO . expCond
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 122
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expCond                        shift and go to state 199
    expression                     shift and go to state 198
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 120

    (192) expNotEq -> expCond NOTEQUALTO . expCond
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 122
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expCond                        shift and go to state 200
    expression                     shift and go to state 198
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 121

    (170) concatenate -> string PLUS . termS
    (171) termS -> . termS PLUS value
    (172) termS -> . value
    (173) value -> . expression
    (174) value -> . string
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    string                         shift and go to state 201
    termS                          shift and go to state 202
    value                          shift and go to state 203
    expression                     shift and go to state 204
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 122

    (200) expCond -> LPAREN . expression operador expression RPAREN
    (201) term1 -> LPAREN . group RPAREN
    (210) factor_expr -> LPAREN . expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    LPAREN          shift and go to state 189
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 205
    group                          shift and go to state 125
    term                           shift and go to state 18
    number                         shift and go to state 126
    variable                       shift and go to state 127
    array_value                    shift and go to state 128
    object_value                   shift and go to state 129
    term1                          shift and go to state 45
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    funciones                      shift and go to state 67
    enum_value                     shift and go to state 59
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (182) expNotEq -> expCond NOTEQUALTO . expCond
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 118
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expCond                        shift and go to state 195
    expression                     shift and go to state 193
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 117

    (160) concatenate -> string PLUS . termS
    (161) termS -> . termS PLUS value
    (162) termS -> . value
    (163) value -> . expression
    (164) value -> . string
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    string                         shift and go to state 196
    termS                          shift and go to state 197
    value                          shift and go to state 198
    expression                     shift and go to state 199
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 118

    (190) expCond -> LPAREN . expression operador expression RPAREN
    (191) term1 -> LPAREN . group RPAREN
    (200) factor_expr -> LPAREN . expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    LPAREN          shift and go to state 184
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 200
    group                          shift and go to state 121
    term                           shift and go to state 16
    number                         shift and go to state 122
    variable                       shift and go to state 123
    array_value                    shift and go to state 124
    object_value                   shift and go to state 125
    term1                          shift and go to state 42
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    funciones                      shift and go to state 64
    enum_value                     shift and go to state 56
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 119

    (190) expCond -> LPAREN expression . operador expression RPAREN
    (200) factor_expr -> LPAREN expression . RPAREN
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (189) expCond -> expression . operador expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204

    operador                       shift and go to state 201

state 120

    (188) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 205


state 121

    (191) term1 -> LPAREN group . RPAREN
    (192) term1 -> group .

    RPAREN          shift and go to state 206
    INCREMENT       reduce using rule 192 (term1 -> group .)
    DECREMENT       reduce using rule 192 (term1 -> group .)


state 122

    (193) group -> number .
    (197) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 193 (group -> number .)
    RPAREN          reduce using rule 193 (group -> number .)
    INCREMENT       reduce using rule 193 (group -> number .)
    DECREMENT       reduce using rule 193 (group -> number .)
    PLUS            reduce using rule 197 (term -> number .)
    MINUS           reduce using rule 197 (term -> number .)
    PRODUCT         reduce using rule 197 (term -> number .)
    DIVIDE          reduce using rule 197 (term -> number .)
    GREATER         reduce using rule 197 (term -> number .)
    LESS            reduce using rule 197 (term -> number .)
    GREATEREQUAL    reduce using rule 197 (term -> number .)
    LESSEQUAL       reduce using rule 197 (term -> number .)
    EQUALTO         reduce using rule 197 (term -> number .)
    NOTEQUALTO      reduce using rule 197 (term -> number .)
    AND             reduce using rule 197 (term -> number .)
    OR              reduce using rule 197 (term -> number .)

  ! RPAREN          [ reduce using rule 197 (term -> number .) ]


state 123

    (194) group -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (201) other_value -> variable .
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value
>>>>>>> master

  ! reduce/reduce conflict for RPAREN resolved using rule 194 (group -> variable .)
    RPAREN          reduce using rule 194 (group -> variable .)
    INCREMENT       reduce using rule 194 (group -> variable .)
    DECREMENT       reduce using rule 194 (group -> variable .)
    LBRACKET        shift and go to state 169
    PLUS            reduce using rule 201 (other_value -> variable .)
    MINUS           reduce using rule 201 (other_value -> variable .)
    PRODUCT         reduce using rule 201 (other_value -> variable .)
    DIVIDE          reduce using rule 201 (other_value -> variable .)
    GREATER         reduce using rule 201 (other_value -> variable .)
    LESS            reduce using rule 201 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 201 (other_value -> variable .)
    LESSEQUAL       reduce using rule 201 (other_value -> variable .)
    EQUALTO         reduce using rule 201 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 201 (other_value -> variable .)
    AND             reduce using rule 201 (other_value -> variable .)
    OR              reduce using rule 201 (other_value -> variable .)
    POINT           shift and go to state 170

<<<<<<< HEAD
    (200) expCond -> LPAREN expression . operador expression RPAREN
    (210) factor_expr -> LPAREN expression . RPAREN
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (199) expCond -> expression . operador expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209

    operador                       shift and go to state 206

state 124

    (198) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 210
=======
  ! RPAREN          [ reduce using rule 201 (other_value -> variable .) ]


state 124

    (195) group -> array_value .
    (203) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 195 (group -> array_value .)
    RPAREN          reduce using rule 195 (group -> array_value .)
    INCREMENT       reduce using rule 195 (group -> array_value .)
    DECREMENT       reduce using rule 195 (group -> array_value .)
    PLUS            reduce using rule 203 (other_value -> array_value .)
    MINUS           reduce using rule 203 (other_value -> array_value .)
    PRODUCT         reduce using rule 203 (other_value -> array_value .)
    DIVIDE          reduce using rule 203 (other_value -> array_value .)
    GREATER         reduce using rule 203 (other_value -> array_value .)
    LESS            reduce using rule 203 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 203 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 203 (other_value -> array_value .)
    EQUALTO         reduce using rule 203 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 203 (other_value -> array_value .)
    AND             reduce using rule 203 (other_value -> array_value .)
    OR              reduce using rule 203 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 203 (other_value -> array_value .) ]
>>>>>>> master


state 125

<<<<<<< HEAD
    (201) term1 -> LPAREN group . RPAREN
    (202) term1 -> group .

    RPAREN          shift and go to state 211
    INCREMENT       reduce using rule 202 (term1 -> group .)
    DECREMENT       reduce using rule 202 (term1 -> group .)
=======
    (196) group -> object_value .
    (205) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 196 (group -> object_value .)
    RPAREN          reduce using rule 196 (group -> object_value .)
    INCREMENT       reduce using rule 196 (group -> object_value .)
    DECREMENT       reduce using rule 196 (group -> object_value .)
    PLUS            reduce using rule 205 (other_value -> object_value .)
    MINUS           reduce using rule 205 (other_value -> object_value .)
    PRODUCT         reduce using rule 205 (other_value -> object_value .)
    DIVIDE          reduce using rule 205 (other_value -> object_value .)
    GREATER         reduce using rule 205 (other_value -> object_value .)
    LESS            reduce using rule 205 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 205 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 205 (other_value -> object_value .)
    EQUALTO         reduce using rule 205 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 205 (other_value -> object_value .)
    AND             reduce using rule 205 (other_value -> object_value .)
    OR              reduce using rule 205 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 205 (other_value -> object_value .) ]
>>>>>>> master


state 126

<<<<<<< HEAD
    (203) group -> number .
    (207) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 203 (group -> number .)
    RPAREN          reduce using rule 203 (group -> number .)
    INCREMENT       reduce using rule 203 (group -> number .)
    DECREMENT       reduce using rule 203 (group -> number .)
    PLUS            reduce using rule 207 (term -> number .)
    MINUS           reduce using rule 207 (term -> number .)
    PRODUCT         reduce using rule 207 (term -> number .)
    DIVIDE          reduce using rule 207 (term -> number .)
    GREATER         reduce using rule 207 (term -> number .)
    LESS            reduce using rule 207 (term -> number .)
    GREATEREQUAL    reduce using rule 207 (term -> number .)
    LESSEQUAL       reduce using rule 207 (term -> number .)
    EQUALTO         reduce using rule 207 (term -> number .)
    NOTEQUALTO      reduce using rule 207 (term -> number .)
    AND             reduce using rule 207 (term -> number .)
    OR              reduce using rule 207 (term -> number .)

  ! RPAREN          [ reduce using rule 207 (term -> number .) ]
=======
    (208) object_value -> object_value_form1 .

    RPAREN          reduce using rule 208 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 208 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 208 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 208 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 208 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 208 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 208 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 208 (object_value -> object_value_form1 .)
    LESS            reduce using rule 208 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 208 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 208 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 208 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 208 (object_value -> object_value_form1 .)
    AND             reduce using rule 208 (object_value -> object_value_form1 .)
    OR              reduce using rule 208 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 208 (object_value -> object_value_form1 .)
    $end            reduce using rule 208 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 208 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 208 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 208 (object_value -> object_value_form1 .)
>>>>>>> master


state 127

<<<<<<< HEAD
    (204) group -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (211) other_value -> variable .
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for RPAREN resolved using rule 204 (group -> variable .)
    RPAREN          reduce using rule 204 (group -> variable .)
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)
    LBRACKET        shift and go to state 174
    PLUS            reduce using rule 211 (other_value -> variable .)
    MINUS           reduce using rule 211 (other_value -> variable .)
    PRODUCT         reduce using rule 211 (other_value -> variable .)
    DIVIDE          reduce using rule 211 (other_value -> variable .)
    GREATER         reduce using rule 211 (other_value -> variable .)
    LESS            reduce using rule 211 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 211 (other_value -> variable .)
    LESSEQUAL       reduce using rule 211 (other_value -> variable .)
    EQUALTO         reduce using rule 211 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 211 (other_value -> variable .)
    AND             reduce using rule 211 (other_value -> variable .)
    OR              reduce using rule 211 (other_value -> variable .)
    POINT           shift and go to state 175

  ! RPAREN          [ reduce using rule 211 (other_value -> variable .) ]
=======
    (209) object_value -> object_value_form2 .

    RPAREN          reduce using rule 209 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 209 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 209 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 209 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 209 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 209 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 209 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 209 (object_value -> object_value_form2 .)
    LESS            reduce using rule 209 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 209 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 209 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 209 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 209 (object_value -> object_value_form2 .)
    AND             reduce using rule 209 (object_value -> object_value_form2 .)
    OR              reduce using rule 209 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 209 (object_value -> object_value_form2 .)
    $end            reduce using rule 209 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 209 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 209 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 209 (object_value -> object_value_form2 .)

>>>>>>> master


<<<<<<< HEAD
state 128

    (205) group -> array_value .
    (213) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 205 (group -> array_value .)
    RPAREN          reduce using rule 205 (group -> array_value .)
    INCREMENT       reduce using rule 205 (group -> array_value .)
    DECREMENT       reduce using rule 205 (group -> array_value .)
    PLUS            reduce using rule 213 (other_value -> array_value .)
    MINUS           reduce using rule 213 (other_value -> array_value .)
    PRODUCT         reduce using rule 213 (other_value -> array_value .)
    DIVIDE          reduce using rule 213 (other_value -> array_value .)
    GREATER         reduce using rule 213 (other_value -> array_value .)
    LESS            reduce using rule 213 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 213 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 213 (other_value -> array_value .)
    EQUALTO         reduce using rule 213 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 213 (other_value -> array_value .)
    AND             reduce using rule 213 (other_value -> array_value .)
    OR              reduce using rule 213 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 213 (other_value -> array_value .) ]


state 129

    (206) group -> object_value .
    (215) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 206 (group -> object_value .)
    RPAREN          reduce using rule 206 (group -> object_value .)
    INCREMENT       reduce using rule 206 (group -> object_value .)
    DECREMENT       reduce using rule 206 (group -> object_value .)
    PLUS            reduce using rule 215 (other_value -> object_value .)
    MINUS           reduce using rule 215 (other_value -> object_value .)
    PRODUCT         reduce using rule 215 (other_value -> object_value .)
    DIVIDE          reduce using rule 215 (other_value -> object_value .)
    GREATER         reduce using rule 215 (other_value -> object_value .)
    LESS            reduce using rule 215 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 215 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 215 (other_value -> object_value .)
    EQUALTO         reduce using rule 215 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 215 (other_value -> object_value .)
    AND             reduce using rule 215 (other_value -> object_value .)
    OR              reduce using rule 215 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 215 (other_value -> object_value .) ]


state 130

    (218) object_value -> object_value_form1 .

    RPAREN          reduce using rule 218 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 218 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 218 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 218 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 218 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 218 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 218 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 218 (object_value -> object_value_form1 .)
    LESS            reduce using rule 218 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 218 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 218 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 218 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 218 (object_value -> object_value_form1 .)
    AND             reduce using rule 218 (object_value -> object_value_form1 .)
    OR              reduce using rule 218 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 218 (object_value -> object_value_form1 .)
    LPAREN          reduce using rule 218 (object_value -> object_value_form1 .)
    NEGATION        reduce using rule 218 (object_value -> object_value_form1 .)
    COMMENT         reduce using rule 218 (object_value -> object_value_form1 .)
    MULTICOMMENT    reduce using rule 218 (object_value -> object_value_form1 .)
    FUNCTION        reduce using rule 218 (object_value -> object_value_form1 .)
    PRINT           reduce using rule 218 (object_value -> object_value_form1 .)
    NORMSTRING1     reduce using rule 218 (object_value -> object_value_form1 .)
    NORMSTRING2     reduce using rule 218 (object_value -> object_value_form1 .)
    MULTISTRING     reduce using rule 218 (object_value -> object_value_form1 .)
    ENUM            reduce using rule 218 (object_value -> object_value_form1 .)
    IF              reduce using rule 218 (object_value -> object_value_form1 .)
    WHILE           reduce using rule 218 (object_value -> object_value_form1 .)
    FOR             reduce using rule 218 (object_value -> object_value_form1 .)
    NUMBER          reduce using rule 218 (object_value -> object_value_form1 .)
    FLOAT           reduce using rule 218 (object_value -> object_value_form1 .)
    VARIABLE        reduce using rule 218 (object_value -> object_value_form1 .)
    LET             reduce using rule 218 (object_value -> object_value_form1 .)
    VAR             reduce using rule 218 (object_value -> object_value_form1 .)
    STATIC          reduce using rule 218 (object_value -> object_value_form1 .)
    CONST           reduce using rule 218 (object_value -> object_value_form1 .)
    OBJECTNAME      reduce using rule 218 (object_value -> object_value_form1 .)
    FUNMATH         reduce using rule 218 (object_value -> object_value_form1 .)
    $end            reduce using rule 218 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 218 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 218 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 218 (object_value -> object_value_form1 .)


state 131

    (219) object_value -> object_value_form2 .

    RPAREN          reduce using rule 219 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 219 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 219 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 219 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 219 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 219 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 219 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 219 (object_value -> object_value_form2 .)
    LESS            reduce using rule 219 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 219 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 219 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 219 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 219 (object_value -> object_value_form2 .)
    AND             reduce using rule 219 (object_value -> object_value_form2 .)
    OR              reduce using rule 219 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 219 (object_value -> object_value_form2 .)
    LPAREN          reduce using rule 219 (object_value -> object_value_form2 .)
    NEGATION        reduce using rule 219 (object_value -> object_value_form2 .)
    COMMENT         reduce using rule 219 (object_value -> object_value_form2 .)
    MULTICOMMENT    reduce using rule 219 (object_value -> object_value_form2 .)
    FUNCTION        reduce using rule 219 (object_value -> object_value_form2 .)
    PRINT           reduce using rule 219 (object_value -> object_value_form2 .)
    NORMSTRING1     reduce using rule 219 (object_value -> object_value_form2 .)
    NORMSTRING2     reduce using rule 219 (object_value -> object_value_form2 .)
    MULTISTRING     reduce using rule 219 (object_value -> object_value_form2 .)
    ENUM            reduce using rule 219 (object_value -> object_value_form2 .)
    IF              reduce using rule 219 (object_value -> object_value_form2 .)
    WHILE           reduce using rule 219 (object_value -> object_value_form2 .)
    FOR             reduce using rule 219 (object_value -> object_value_form2 .)
    NUMBER          reduce using rule 219 (object_value -> object_value_form2 .)
    FLOAT           reduce using rule 219 (object_value -> object_value_form2 .)
    VARIABLE        reduce using rule 219 (object_value -> object_value_form2 .)
    LET             reduce using rule 219 (object_value -> object_value_form2 .)
    VAR             reduce using rule 219 (object_value -> object_value_form2 .)
    STATIC          reduce using rule 219 (object_value -> object_value_form2 .)
    CONST           reduce using rule 219 (object_value -> object_value_form2 .)
    OBJECTNAME      reduce using rule 219 (object_value -> object_value_form2 .)
    FUNMATH         reduce using rule 219 (object_value -> object_value_form2 .)
    $end            reduce using rule 219 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 219 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 219 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 219 (object_value -> object_value_form2 .)
=======
    (248) mathAbs -> declare_any . EQUAL mathAbs
    (272) arrayJoin -> declare_any . arrayJoin
    (273) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    EQUAL           shift and go to state 207
    VARIABLE        shift and go to state 148
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    declare_any                    shift and go to state 144
    arrayJoin                      shift and go to state 147
    prefix                         shift and go to state 68

state 129

    (186) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (188) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 209

    factor_exprlog                 shift and go to state 208

state 130

    (180) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (188) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 209

    factor_exprlog                 shift and go to state 210

state 131

    (183) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (188) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 209
>>>>>>> master

    factor_exprlog                 shift and go to state 211

state 132

<<<<<<< HEAD
    (258) mathAbs -> declare_any . EQUAL mathAbs
    (282) arrayJoin -> declare_any . arrayJoin
    (283) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    EQUAL           shift and go to state 212
    VARIABLE        shift and go to state 152
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    declare_any                    shift and go to state 148
    arrayJoin                      shift and go to state 151
    prefix                         shift and go to state 71
=======
    (174) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 174 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 174 (expNeg -> NEGATION expOpLog .)
    RKEY            reduce using rule 174 (expNeg -> NEGATION expOpLog .)
    RBRACKET        reduce using rule 174 (expNeg -> NEGATION expOpLog .)
    COMMA           reduce using rule 174 (expNeg -> NEGATION expOpLog .)
    RPAREN          reduce using rule 174 (expNeg -> NEGATION expOpLog .)


state 133

    (175) expNeg -> NEGATION factor_exprlog .
    (186) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    RKEY            reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    RBRACKET        reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    COMMA           reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    RPAREN          reduce using rule 175 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 112
    OR              shift and go to state 113

    oplogico                       shift and go to state 129
>>>>>>> master

state 134

<<<<<<< HEAD
    (196) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (198) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 214
=======
    (176) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 176 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 176 (expNeg -> NEGATION boolean .)
    RKEY            reduce using rule 176 (expNeg -> NEGATION boolean .)
    RBRACKET        reduce using rule 176 (expNeg -> NEGATION boolean .)
    COMMA           reduce using rule 176 (expNeg -> NEGATION boolean .)
    RPAREN          reduce using rule 176 (expNeg -> NEGATION boolean .)
>>>>>>> master

    factor_exprlog                 shift and go to state 213

state 135

<<<<<<< HEAD
    (190) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (198) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 214

    factor_exprlog                 shift and go to state 215
=======
    (177) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (188) factor_exprlog -> LPAREN . expCond RPAREN
    (190) expCond -> LPAREN . expression operador expression RPAREN
    (191) term1 -> LPAREN . group RPAREN
    (200) factor_expr -> LPAREN . expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expOpLog                       shift and go to state 212
    expCond                        shift and go to state 213
    expression                     shift and go to state 214
    group                          shift and go to state 121
    factor_exprlog                 shift and go to state 215
    term                           shift and go to state 16
    number                         shift and go to state 122
    variable                       shift and go to state 123
    array_value                    shift and go to state 124
    object_value                   shift and go to state 125
    term1                          shift and go to state 42
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    funciones                      shift and go to state 64
    enum_value                     shift and go to state 56
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 136

<<<<<<< HEAD
    (193) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (198) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 214
=======
    (178) expNeg -> NEGATION VARIABLE .
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for POINT resolved as shift
    POINTCOMMA      reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    $end            reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    RKEY            reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    RBRACKET        reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    COMMA           reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    RPAREN          reduce using rule 178 (expNeg -> NEGATION VARIABLE .)
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master

    factor_exprlog                 shift and go to state 216

state 137

<<<<<<< HEAD
    (184) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    LPAREN          reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    NEGATION        reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    COMMENT         reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    MULTICOMMENT    reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    FUNCTION        reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    PRINT           reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    INCREMENT       reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    DECREMENT       reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    NORMSTRING1     reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    NORMSTRING2     reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    MULTISTRING     reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    ENUM            reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    IF              reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    WHILE           reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    FOR             reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    NUMBER          reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    FLOAT           reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    VARIABLE        reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    LET             reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    VAR             reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    STATIC          reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    CONST           reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    OBJECTNAME      reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    FUNMATH         reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    RKEY            reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    RBRACKET        reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    COMMA           reduce using rule 184 (expNeg -> NEGATION expOpLog .)
    RPAREN          reduce using rule 184 (expNeg -> NEGATION expOpLog .)
=======
    (185) expOpLog -> expCond . oplogico expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master


state 138

<<<<<<< HEAD
    (185) expNeg -> NEGATION factor_exprlog .
    (196) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    LPAREN          reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    NEGATION        reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    COMMENT         reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    MULTICOMMENT    reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    FUNCTION        reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    PRINT           reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    INCREMENT       reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    DECREMENT       reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    NORMSTRING1     reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    NORMSTRING2     reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    MULTISTRING     reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    ENUM            reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    IF              reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    WHILE           reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    FOR             reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    NUMBER          reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    FLOAT           reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    VARIABLE        reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    LET             reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    VAR             reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    STATIC          reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    CONST           reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    OBJECTNAME      reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    FUNMATH         reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    RKEY            reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    RBRACKET        reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    COMMA           reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    RPAREN          reduce using rule 185 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    oplogico                       shift and go to state 133
=======
    (187) expOpLog -> expression . oplogico expression
    (189) expCond -> expression . operador expression
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (239) oplogico -> . AND
    (240) oplogico -> . OR
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    AND             shift and go to state 112
    OR              shift and go to state 113
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204

    oplogico                       shift and go to state 105
    operador                       shift and go to state 104
>>>>>>> master

state 139

<<<<<<< HEAD
    (186) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 186 (expNeg -> NEGATION boolean .)
    LPAREN          reduce using rule 186 (expNeg -> NEGATION boolean .)
    NEGATION        reduce using rule 186 (expNeg -> NEGATION boolean .)
    COMMENT         reduce using rule 186 (expNeg -> NEGATION boolean .)
    MULTICOMMENT    reduce using rule 186 (expNeg -> NEGATION boolean .)
    FUNCTION        reduce using rule 186 (expNeg -> NEGATION boolean .)
    PRINT           reduce using rule 186 (expNeg -> NEGATION boolean .)
    INCREMENT       reduce using rule 186 (expNeg -> NEGATION boolean .)
    DECREMENT       reduce using rule 186 (expNeg -> NEGATION boolean .)
    NORMSTRING1     reduce using rule 186 (expNeg -> NEGATION boolean .)
    NORMSTRING2     reduce using rule 186 (expNeg -> NEGATION boolean .)
    MULTISTRING     reduce using rule 186 (expNeg -> NEGATION boolean .)
    ENUM            reduce using rule 186 (expNeg -> NEGATION boolean .)
    IF              reduce using rule 186 (expNeg -> NEGATION boolean .)
    WHILE           reduce using rule 186 (expNeg -> NEGATION boolean .)
    FOR             reduce using rule 186 (expNeg -> NEGATION boolean .)
    NUMBER          reduce using rule 186 (expNeg -> NEGATION boolean .)
    FLOAT           reduce using rule 186 (expNeg -> NEGATION boolean .)
    VARIABLE        reduce using rule 186 (expNeg -> NEGATION boolean .)
    LET             reduce using rule 186 (expNeg -> NEGATION boolean .)
    VAR             reduce using rule 186 (expNeg -> NEGATION boolean .)
    STATIC          reduce using rule 186 (expNeg -> NEGATION boolean .)
    CONST           reduce using rule 186 (expNeg -> NEGATION boolean .)
    OBJECTNAME      reduce using rule 186 (expNeg -> NEGATION boolean .)
    FUNMATH         reduce using rule 186 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 186 (expNeg -> NEGATION boolean .)
    RKEY            reduce using rule 186 (expNeg -> NEGATION boolean .)
    RBRACKET        reduce using rule 186 (expNeg -> NEGATION boolean .)
    COMMA           reduce using rule 186 (expNeg -> NEGATION boolean .)
    RPAREN          reduce using rule 186 (expNeg -> NEGATION boolean .)
=======
    (229) boolean -> TRUE .

    POINTCOMMA      reduce using rule 229 (boolean -> TRUE .)
    $end            reduce using rule 229 (boolean -> TRUE .)
    RKEY            reduce using rule 229 (boolean -> TRUE .)
    RBRACKET        reduce using rule 229 (boolean -> TRUE .)
    COMMA           reduce using rule 229 (boolean -> TRUE .)
    RPAREN          reduce using rule 229 (boolean -> TRUE .)
>>>>>>> master


state 140

<<<<<<< HEAD
    (187) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (198) factor_exprlog -> LPAREN . expCond RPAREN
    (200) expCond -> LPAREN . expression operador expression RPAREN
    (201) term1 -> LPAREN . group RPAREN
    (210) factor_expr -> LPAREN . expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expOpLog                       shift and go to state 217
    expCond                        shift and go to state 218
    expression                     shift and go to state 219
    group                          shift and go to state 125
    factor_exprlog                 shift and go to state 220
    term                           shift and go to state 18
    number                         shift and go to state 126
    variable                       shift and go to state 127
    array_value                    shift and go to state 128
    object_value                   shift and go to state 129
    term1                          shift and go to state 45
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    funciones                      shift and go to state 67
    enum_value                     shift and go to state 59
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (230) boolean -> FALSE .

    POINTCOMMA      reduce using rule 230 (boolean -> FALSE .)
    $end            reduce using rule 230 (boolean -> FALSE .)
    RKEY            reduce using rule 230 (boolean -> FALSE .)
    RBRACKET        reduce using rule 230 (boolean -> FALSE .)
    COMMA           reduce using rule 230 (boolean -> FALSE .)
    RPAREN          reduce using rule 230 (boolean -> FALSE .)

>>>>>>> master

state 141

<<<<<<< HEAD
    (188) expNeg -> NEGATION VARIABLE .
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! reduce/reduce conflict for INCREMENT resolved using rule 188 (expNeg -> NEGATION VARIABLE .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 188 (expNeg -> NEGATION VARIABLE .)
  ! shift/reduce conflict for POINT resolved as shift
    POINTCOMMA      reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    LPAREN          reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    NEGATION        reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    COMMENT         reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    MULTICOMMENT    reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    FUNCTION        reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    PRINT           reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    INCREMENT       reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    DECREMENT       reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    NORMSTRING1     reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    NORMSTRING2     reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    MULTISTRING     reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    ENUM            reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    IF              reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    WHILE           reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    FOR             reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    NUMBER          reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    FLOAT           reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    VARIABLE        reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    LET             reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    VAR             reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    STATIC          reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    CONST           reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    OBJECTNAME      reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    FUNMATH         reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    $end            reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    RKEY            reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    RBRACKET        reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    COMMA           reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    RPAREN          reduce using rule 188 (expNeg -> NEGATION VARIABLE .)
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! INCREMENT       [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! DECREMENT       [ reduce using rule 241 (variable -> VARIABLE .) ]
=======
    (201) other_value -> variable .
    (194) group -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value

    PLUS            reduce using rule 201 (other_value -> variable .)
    MINUS           reduce using rule 201 (other_value -> variable .)
    PRODUCT         reduce using rule 201 (other_value -> variable .)
    DIVIDE          reduce using rule 201 (other_value -> variable .)
    AND             reduce using rule 201 (other_value -> variable .)
    OR              reduce using rule 201 (other_value -> variable .)
    GREATER         reduce using rule 201 (other_value -> variable .)
    LESS            reduce using rule 201 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 201 (other_value -> variable .)
    LESSEQUAL       reduce using rule 201 (other_value -> variable .)
    EQUALTO         reduce using rule 201 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 201 (other_value -> variable .)
    POINTCOMMA      reduce using rule 201 (other_value -> variable .)
    $end            reduce using rule 201 (other_value -> variable .)
    RPAREN          reduce using rule 201 (other_value -> variable .)
    RKEY            reduce using rule 201 (other_value -> variable .)
    RBRACKET        reduce using rule 201 (other_value -> variable .)
    COMMA           reduce using rule 201 (other_value -> variable .)
    INCREMENT       reduce using rule 194 (group -> variable .)
    DECREMENT       reduce using rule 194 (group -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
>>>>>>> master


state 142

<<<<<<< HEAD
    (195) expOpLog -> expCond . oplogico expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR
=======
    (203) other_value -> array_value .
    (195) group -> array_value .

    PLUS            reduce using rule 203 (other_value -> array_value .)
    MINUS           reduce using rule 203 (other_value -> array_value .)
    PRODUCT         reduce using rule 203 (other_value -> array_value .)
    DIVIDE          reduce using rule 203 (other_value -> array_value .)
    AND             reduce using rule 203 (other_value -> array_value .)
    OR              reduce using rule 203 (other_value -> array_value .)
    GREATER         reduce using rule 203 (other_value -> array_value .)
    LESS            reduce using rule 203 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 203 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 203 (other_value -> array_value .)
    EQUALTO         reduce using rule 203 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 203 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 203 (other_value -> array_value .)
    $end            reduce using rule 203 (other_value -> array_value .)
    RPAREN          reduce using rule 203 (other_value -> array_value .)
    RKEY            reduce using rule 203 (other_value -> array_value .)
    RBRACKET        reduce using rule 203 (other_value -> array_value .)
    COMMA           reduce using rule 203 (other_value -> array_value .)
    INCREMENT       reduce using rule 195 (group -> array_value .)
    DECREMENT       reduce using rule 195 (group -> array_value .)
>>>>>>> master

    AND             shift and go to state 116
    OR              shift and go to state 117

<<<<<<< HEAD
    oplogico                       shift and go to state 118

state 142
=======
state 143

    (261) stringCharAt -> VARIABLE POINT . FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE POINT . FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE POINT . FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE POINT . FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE POINT . FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN string RPAREN

    FUNCTIONCHARAT  shift and go to state 216
    FUNCTIONCONCAT  shift and go to state 217
    FUNCTIONSPLIT   shift and go to state 218
    FUNCTIONFILTER  shift and go to state 219
    FUNCTIONJOIN    shift and go to state 220
    FUNCTIONADD     shift and go to state 221
    FUNCTIONHAS     shift and go to state 222
>>>>>>> master

    (197) expOpLog -> expression . oplogico expression
    (199) expCond -> expression . operador expression
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (249) oplogico -> . AND
    (250) oplogico -> . OR
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    AND             shift and go to state 116
    OR              shift and go to state 117
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209

    oplogico                       shift and go to state 109
    operador                       shift and go to state 108

state 144

<<<<<<< HEAD
    (239) boolean -> TRUE .

    POINTCOMMA      reduce using rule 239 (boolean -> TRUE .)
    LPAREN          reduce using rule 239 (boolean -> TRUE .)
    NEGATION        reduce using rule 239 (boolean -> TRUE .)
    COMMENT         reduce using rule 239 (boolean -> TRUE .)
    MULTICOMMENT    reduce using rule 239 (boolean -> TRUE .)
    FUNCTION        reduce using rule 239 (boolean -> TRUE .)
    PRINT           reduce using rule 239 (boolean -> TRUE .)
    INCREMENT       reduce using rule 239 (boolean -> TRUE .)
    DECREMENT       reduce using rule 239 (boolean -> TRUE .)
    NORMSTRING1     reduce using rule 239 (boolean -> TRUE .)
    NORMSTRING2     reduce using rule 239 (boolean -> TRUE .)
    MULTISTRING     reduce using rule 239 (boolean -> TRUE .)
    ENUM            reduce using rule 239 (boolean -> TRUE .)
    IF              reduce using rule 239 (boolean -> TRUE .)
    WHILE           reduce using rule 239 (boolean -> TRUE .)
    FOR             reduce using rule 239 (boolean -> TRUE .)
    NUMBER          reduce using rule 239 (boolean -> TRUE .)
    FLOAT           reduce using rule 239 (boolean -> TRUE .)
    VARIABLE        reduce using rule 239 (boolean -> TRUE .)
    LET             reduce using rule 239 (boolean -> TRUE .)
    VAR             reduce using rule 239 (boolean -> TRUE .)
    STATIC          reduce using rule 239 (boolean -> TRUE .)
    CONST           reduce using rule 239 (boolean -> TRUE .)
    OBJECTNAME      reduce using rule 239 (boolean -> TRUE .)
    FUNMATH         reduce using rule 239 (boolean -> TRUE .)
    $end            reduce using rule 239 (boolean -> TRUE .)
    RKEY            reduce using rule 239 (boolean -> TRUE .)
    RBRACKET        reduce using rule 239 (boolean -> TRUE .)
    COMMA           reduce using rule 239 (boolean -> TRUE .)
    RPAREN          reduce using rule 239 (boolean -> TRUE .)

=======
    (272) arrayJoin -> declare_any . arrayJoin
    (273) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 148
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    declare_any                    shift and go to state 144
    arrayJoin                      shift and go to state 147
    prefix                         shift and go to state 68
>>>>>>> master

state 145

<<<<<<< HEAD
    (240) boolean -> FALSE .

    POINTCOMMA      reduce using rule 240 (boolean -> FALSE .)
    LPAREN          reduce using rule 240 (boolean -> FALSE .)
    NEGATION        reduce using rule 240 (boolean -> FALSE .)
    COMMENT         reduce using rule 240 (boolean -> FALSE .)
    MULTICOMMENT    reduce using rule 240 (boolean -> FALSE .)
    FUNCTION        reduce using rule 240 (boolean -> FALSE .)
    PRINT           reduce using rule 240 (boolean -> FALSE .)
    INCREMENT       reduce using rule 240 (boolean -> FALSE .)
    DECREMENT       reduce using rule 240 (boolean -> FALSE .)
    NORMSTRING1     reduce using rule 240 (boolean -> FALSE .)
    NORMSTRING2     reduce using rule 240 (boolean -> FALSE .)
    MULTISTRING     reduce using rule 240 (boolean -> FALSE .)
    ENUM            reduce using rule 240 (boolean -> FALSE .)
    IF              reduce using rule 240 (boolean -> FALSE .)
    WHILE           reduce using rule 240 (boolean -> FALSE .)
    FOR             reduce using rule 240 (boolean -> FALSE .)
    NUMBER          reduce using rule 240 (boolean -> FALSE .)
    FLOAT           reduce using rule 240 (boolean -> FALSE .)
    VARIABLE        reduce using rule 240 (boolean -> FALSE .)
    LET             reduce using rule 240 (boolean -> FALSE .)
    VAR             reduce using rule 240 (boolean -> FALSE .)
    STATIC          reduce using rule 240 (boolean -> FALSE .)
    CONST           reduce using rule 240 (boolean -> FALSE .)
    OBJECTNAME      reduce using rule 240 (boolean -> FALSE .)
    FUNMATH         reduce using rule 240 (boolean -> FALSE .)
    $end            reduce using rule 240 (boolean -> FALSE .)
    RKEY            reduce using rule 240 (boolean -> FALSE .)
    RBRACKET        reduce using rule 240 (boolean -> FALSE .)
    COMMA           reduce using rule 240 (boolean -> FALSE .)
    RPAREN          reduce using rule 240 (boolean -> FALSE .)


state 145

    (211) other_value -> variable .
    (204) group -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for INCREMENT resolved using rule 204 (group -> variable .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 204 (group -> variable .)
    PLUS            reduce using rule 211 (other_value -> variable .)
    MINUS           reduce using rule 211 (other_value -> variable .)
    PRODUCT         reduce using rule 211 (other_value -> variable .)
    DIVIDE          reduce using rule 211 (other_value -> variable .)
    AND             reduce using rule 211 (other_value -> variable .)
    OR              reduce using rule 211 (other_value -> variable .)
    GREATER         reduce using rule 211 (other_value -> variable .)
    LESS            reduce using rule 211 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 211 (other_value -> variable .)
    LESSEQUAL       reduce using rule 211 (other_value -> variable .)
    EQUALTO         reduce using rule 211 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 211 (other_value -> variable .)
    POINTCOMMA      reduce using rule 211 (other_value -> variable .)
    LPAREN          reduce using rule 211 (other_value -> variable .)
    NEGATION        reduce using rule 211 (other_value -> variable .)
    COMMENT         reduce using rule 211 (other_value -> variable .)
    MULTICOMMENT    reduce using rule 211 (other_value -> variable .)
    FUNCTION        reduce using rule 211 (other_value -> variable .)
    PRINT           reduce using rule 211 (other_value -> variable .)
    NORMSTRING1     reduce using rule 211 (other_value -> variable .)
    NORMSTRING2     reduce using rule 211 (other_value -> variable .)
    MULTISTRING     reduce using rule 211 (other_value -> variable .)
    ENUM            reduce using rule 211 (other_value -> variable .)
    IF              reduce using rule 211 (other_value -> variable .)
    WHILE           reduce using rule 211 (other_value -> variable .)
    FOR             reduce using rule 211 (other_value -> variable .)
    NUMBER          reduce using rule 211 (other_value -> variable .)
    FLOAT           reduce using rule 211 (other_value -> variable .)
    VARIABLE        reduce using rule 211 (other_value -> variable .)
    LET             reduce using rule 211 (other_value -> variable .)
    VAR             reduce using rule 211 (other_value -> variable .)
    STATIC          reduce using rule 211 (other_value -> variable .)
    CONST           reduce using rule 211 (other_value -> variable .)
    OBJECTNAME      reduce using rule 211 (other_value -> variable .)
    FUNMATH         reduce using rule 211 (other_value -> variable .)
    $end            reduce using rule 211 (other_value -> variable .)
    RKEY            reduce using rule 211 (other_value -> variable .)
    RPAREN          reduce using rule 211 (other_value -> variable .)
    RBRACKET        reduce using rule 211 (other_value -> variable .)
    COMMA           reduce using rule 211 (other_value -> variable .)
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175

  ! INCREMENT       [ reduce using rule 211 (other_value -> variable .) ]
  ! DECREMENT       [ reduce using rule 211 (other_value -> variable .) ]

=======
    (56) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN
    (86) var_null -> declare_any EQUAL . NULL
    (87) var_undefined -> declare_any EQUAL . UNDEFINED
    (102) declare_generic -> declare_any EQUAL . assign_value
    (85) declare_generic_array -> declare_any EQUAL . list_types
    (248) mathAbs -> declare_any EQUAL . mathAbs
    (115) assign_value -> . general_value
    (116) assign_value -> . object_definition
    (117) assign_value -> . tuples_list
    (136) list_types -> . list_number
    (137) list_types -> . list_boolean
    (138) list_types -> . list_string
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (121) object_definition -> . LKEY attributes RKEY
    (118) tuples_list -> . LBRACKET tuples_values RBRACKET
    (139) list_number -> . LBRACKET numbers RBRACKET
    (142) list_boolean -> . LBRACKET booleans RBRACKET
    (145) list_string -> . LBRACKET strings RBRACKET
    (104) declare_any -> . prefix VARIABLE
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    NEW             shift and go to state 223
    NULL            shift and go to state 224
    UNDEFINED       shift and go to state 225
    FUNMATH         shift and go to state 98
    LKEY            shift and go to state 245
    LBRACKET        shift and go to state 246
    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62

    declare_any                    shift and go to state 128
    assign_value                   shift and go to state 226
    list_types                     shift and go to state 227
    mathAbs                        shift and go to state 228
    general_value                  shift and go to state 229
    object_definition              shift and go to state 230
    tuples_list                    shift and go to state 231
    list_number                    shift and go to state 232
    list_boolean                   shift and go to state 233
    list_string                    shift and go to state 234
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    prefix                         shift and go to state 68
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97

state 146

    (57) declare_tuples -> declare_any TWOPOINTS . tuples_2_variables
    (58) declare_tuples -> declare_any TWOPOINTS . tuples_2_variables EQUAL tuples_2_values
    (59) declare_tuples -> declare_any TWOPOINTS . tuples_3_variables
    (60) declare_tuples -> declare_any TWOPOINTS . tuples_3_variables EQUAL tuples_3_values
    (61) declare_tuples -> declare_any TWOPOINTS . tuples_4_variables
    (62) declare_tuples -> declare_any TWOPOINTS . tuples_4_variables EQUAL tuples_4_values
    (95) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (92) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (98) declare_string -> declare_any TWOPOINTS . VARSTRING
    (101) declare_var_enum -> declare_any TWOPOINTS . object_name
    (76) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (80) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (84) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (63) tuples_2_variables -> . LBRACKET types COMMA types RBRACKET
    (64) tuples_3_variables -> . LBRACKET types COMMA types COMMA types RBRACKET
    (65) tuples_4_variables -> . LBRACKET types COMMA types COMMA types COMMA types RBRACKET
    (232) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 250
    VARNUMBER       shift and go to state 251
    VARSTRING       shift and go to state 252
    ARRAY           shift and go to state 254
    LBRACKET        shift and go to state 255
    OBJECTNAME      shift and go to state 62

    tuples_2_variables             shift and go to state 247
    tuples_3_variables             shift and go to state 248
    tuples_4_variables             shift and go to state 249
    object_name                    shift and go to state 253
>>>>>>> master

state 147

<<<<<<< HEAD
    (213) other_value -> array_value .
    (205) group -> array_value .

  ! reduce/reduce conflict for INCREMENT resolved using rule 205 (group -> array_value .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 205 (group -> array_value .)
    PLUS            reduce using rule 213 (other_value -> array_value .)
    MINUS           reduce using rule 213 (other_value -> array_value .)
    PRODUCT         reduce using rule 213 (other_value -> array_value .)
    DIVIDE          reduce using rule 213 (other_value -> array_value .)
    AND             reduce using rule 213 (other_value -> array_value .)
    OR              reduce using rule 213 (other_value -> array_value .)
    GREATER         reduce using rule 213 (other_value -> array_value .)
    LESS            reduce using rule 213 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 213 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 213 (other_value -> array_value .)
    EQUALTO         reduce using rule 213 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 213 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 213 (other_value -> array_value .)
    LPAREN          reduce using rule 213 (other_value -> array_value .)
    NEGATION        reduce using rule 213 (other_value -> array_value .)
    COMMENT         reduce using rule 213 (other_value -> array_value .)
    MULTICOMMENT    reduce using rule 213 (other_value -> array_value .)
    FUNCTION        reduce using rule 213 (other_value -> array_value .)
    PRINT           reduce using rule 213 (other_value -> array_value .)
    NORMSTRING1     reduce using rule 213 (other_value -> array_value .)
    NORMSTRING2     reduce using rule 213 (other_value -> array_value .)
    MULTISTRING     reduce using rule 213 (other_value -> array_value .)
    ENUM            reduce using rule 213 (other_value -> array_value .)
    IF              reduce using rule 213 (other_value -> array_value .)
    WHILE           reduce using rule 213 (other_value -> array_value .)
    FOR             reduce using rule 213 (other_value -> array_value .)
    NUMBER          reduce using rule 213 (other_value -> array_value .)
    FLOAT           reduce using rule 213 (other_value -> array_value .)
    VARIABLE        reduce using rule 213 (other_value -> array_value .)
    LET             reduce using rule 213 (other_value -> array_value .)
    VAR             reduce using rule 213 (other_value -> array_value .)
    STATIC          reduce using rule 213 (other_value -> array_value .)
    CONST           reduce using rule 213 (other_value -> array_value .)
    OBJECTNAME      reduce using rule 213 (other_value -> array_value .)
    FUNMATH         reduce using rule 213 (other_value -> array_value .)
    $end            reduce using rule 213 (other_value -> array_value .)
    RKEY            reduce using rule 213 (other_value -> array_value .)
    RPAREN          reduce using rule 213 (other_value -> array_value .)
    RBRACKET        reduce using rule 213 (other_value -> array_value .)
    COMMA           reduce using rule 213 (other_value -> array_value .)
    INCREMENT       reduce using rule 205 (group -> array_value .)
    DECREMENT       reduce using rule 205 (group -> array_value .)

  ! INCREMENT       [ reduce using rule 213 (other_value -> array_value .) ]
  ! DECREMENT       [ reduce using rule 213 (other_value -> array_value .) ]
=======
    (272) arrayJoin -> declare_any arrayJoin .
    (273) arrayJoin -> declare_any arrayJoin . POINTCOMMA

  ! shift/reduce conflict for POINTCOMMA resolved as shift
    PLUS            reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    MINUS           reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    PRODUCT         reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    DIVIDE          reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    EQUALTO         reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    NOTEQUALTO      reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    GREATER         reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    LESS            reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    GREATEREQUAL    reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    LESSEQUAL       reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    AND             reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    OR              reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    $end            reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    RPAREN          reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    RKEY            reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    RBRACKET        reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    COMMA           reduce using rule 272 (arrayJoin -> declare_any arrayJoin .)
    POINTCOMMA      shift and go to state 256

  ! POINTCOMMA      [ reduce using rule 272 (arrayJoin -> declare_any arrayJoin .) ]
>>>>>>> master


state 148

<<<<<<< HEAD
    (271) stringCharAt -> VARIABLE POINT . FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE POINT . FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE POINT . FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE POINT . FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE POINT . FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE POINT . FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE POINT . FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE POINT . FUNCTIONHAS LPAREN string RPAREN

    FUNCTIONCHARAT  shift and go to state 221
    FUNCTIONCONCAT  shift and go to state 222
    FUNCTIONSPLIT   shift and go to state 223
    FUNCTIONFILTER  shift and go to state 224
    FUNCTIONJOIN    shift and go to state 225
    FUNCTIONADD     shift and go to state 226
    FUNCTIONHAS     shift and go to state 227
=======
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN

    POINT           shift and go to state 257
>>>>>>> master


state 149

<<<<<<< HEAD
    (282) arrayJoin -> declare_any . arrayJoin
    (283) arrayJoin -> declare_any . arrayJoin POINTCOMMA
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 152
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    declare_any                    shift and go to state 148
    arrayJoin                      shift and go to state 151
    prefix                         shift and go to state 71

state 149

    (65) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN
    (95) var_null -> declare_any EQUAL . NULL
    (96) var_undefined -> declare_any EQUAL . UNDEFINED
    (111) declare_generic -> declare_any EQUAL . assign_value
    (94) declare_generic_array -> declare_any EQUAL . list_types
    (258) mathAbs -> declare_any EQUAL . mathAbs
    (125) assign_value -> . general_value
    (126) assign_value -> . object_definition
    (127) assign_value -> . tuples_list
    (146) list_types -> . list_number
    (147) list_types -> . list_boolean
    (148) list_types -> . list_string
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (131) object_definition -> . LKEY attributes RKEY
    (128) tuples_list -> . LBRACKET tuples_values RBRACKET
    (149) list_number -> . LBRACKET numbers RBRACKET
    (152) list_boolean -> . LBRACKET booleans RBRACKET
    (155) list_string -> . LBRACKET strings RBRACKET
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    NEW             shift and go to state 228
    NULL            shift and go to state 229
    UNDEFINED       shift and go to state 230
    FUNMATH         shift and go to state 101
    LKEY            shift and go to state 250
    LBRACKET        shift and go to state 251
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65

    declare_any                    shift and go to state 132
    assign_value                   shift and go to state 231
    list_types                     shift and go to state 232
    mathAbs                        shift and go to state 233
    general_value                  shift and go to state 234
    object_definition              shift and go to state 235
    tuples_list                    shift and go to state 236
    list_number                    shift and go to state 237
    list_boolean                   shift and go to state 238
    list_string                    shift and go to state 239
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    prefix                         shift and go to state 71
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100

state 150

    (66) declare_tuples -> declare_any TWOPOINTS . tuples_2_variables
    (67) declare_tuples -> declare_any TWOPOINTS . tuples_2_variables EQUAL tuples_2_values
    (68) declare_tuples -> declare_any TWOPOINTS . tuples_3_variables
    (69) declare_tuples -> declare_any TWOPOINTS . tuples_3_variables EQUAL tuples_3_values
    (70) declare_tuples -> declare_any TWOPOINTS . tuples_4_variables
    (71) declare_tuples -> declare_any TWOPOINTS . tuples_4_variables EQUAL tuples_4_values
    (104) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (101) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (107) declare_string -> declare_any TWOPOINTS . VARSTRING
    (110) declare_var_enum -> declare_any TWOPOINTS . object_name
    (85) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (89) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (93) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (72) tuples_2_variables -> . LBRACKET types COMMA types RBRACKET
    (73) tuples_3_variables -> . LBRACKET types COMMA types COMMA types RBRACKET
    (74) tuples_4_variables -> . LBRACKET types COMMA types COMMA types COMMA types RBRACKET
    (242) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 255
    VARNUMBER       shift and go to state 256
    VARSTRING       shift and go to state 257
    ARRAY           shift and go to state 259
    LBRACKET        shift and go to state 260
    OBJECTNAME      shift and go to state 65

    tuples_2_variables             shift and go to state 252
    tuples_3_variables             shift and go to state 253
    tuples_4_variables             shift and go to state 254
    object_name                    shift and go to state 258

state 151

    (282) arrayJoin -> declare_any arrayJoin .
    (283) arrayJoin -> declare_any arrayJoin . POINTCOMMA

  ! shift/reduce conflict for POINTCOMMA resolved as shift
    PLUS            reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    MINUS           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    PRODUCT         reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    DIVIDE          reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    EQUALTO         reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    NOTEQUALTO      reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    GREATER         reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    LESS            reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    GREATEREQUAL    reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    LESSEQUAL       reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    AND             reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    OR              reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    LPAREN          reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    NEGATION        reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    COMMENT         reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    MULTICOMMENT    reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    FUNCTION        reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    PRINT           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    INCREMENT       reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    DECREMENT       reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    NORMSTRING1     reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    NORMSTRING2     reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    MULTISTRING     reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    ENUM            reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    IF              reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    WHILE           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    FOR             reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    NUMBER          reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    FLOAT           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    VARIABLE        reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    LET             reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    VAR             reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    STATIC          reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    CONST           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    OBJECTNAME      reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    FUNMATH         reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    $end            reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    RKEY            reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    RPAREN          reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    RBRACKET        reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    COMMA           reduce using rule 282 (arrayJoin -> declare_any arrayJoin .)
    POINTCOMMA      shift and go to state 261

  ! POINTCOMMA      [ reduce using rule 282 (arrayJoin -> declare_any arrayJoin .) ]
=======
    (19) consoleLog -> PRINT LPAREN . RPAREN
    (20) consoleLog -> PRINT LPAREN . VARIABLE RPAREN
    (21) consoleLog -> PRINT LPAREN . string RPAREN
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    RPAREN          shift and go to state 258
    VARIABLE        shift and go to state 259
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50

    string                         shift and go to state 260

state 150

    (170) term -> term1 INCREMENT .

    PLUS            reduce using rule 170 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 170 (term -> term1 INCREMENT .)
    PRODUCT         reduce using rule 170 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 170 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 170 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 170 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 170 (term -> term1 INCREMENT .)
    LESS            reduce using rule 170 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 170 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 170 (term -> term1 INCREMENT .)
    AND             reduce using rule 170 (term -> term1 INCREMENT .)
    OR              reduce using rule 170 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 170 (term -> term1 INCREMENT .)
    $end            reduce using rule 170 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 170 (term -> term1 INCREMENT .)
    RKEY            reduce using rule 170 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 170 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 170 (term -> term1 INCREMENT .)


state 151

    (172) term -> term1 DECREMENT .

    PLUS            reduce using rule 172 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 172 (term -> term1 DECREMENT .)
    PRODUCT         reduce using rule 172 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 172 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 172 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 172 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 172 (term -> term1 DECREMENT .)
    LESS            reduce using rule 172 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 172 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 172 (term -> term1 DECREMENT .)
    AND             reduce using rule 172 (term -> term1 DECREMENT .)
    OR              reduce using rule 172 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 172 (term -> term1 DECREMENT .)
    $end            reduce using rule 172 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 172 (term -> term1 DECREMENT .)
    RKEY            reduce using rule 172 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 172 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 172 (term -> term1 DECREMENT .)
>>>>>>> master


state 152

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN

    POINT           shift and go to state 262
=======
    (171) term -> INCREMENT term1 .

    PLUS            reduce using rule 171 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 171 (term -> INCREMENT term1 .)
    PRODUCT         reduce using rule 171 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 171 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 171 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 171 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 171 (term -> INCREMENT term1 .)
    LESS            reduce using rule 171 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 171 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 171 (term -> INCREMENT term1 .)
    AND             reduce using rule 171 (term -> INCREMENT term1 .)
    OR              reduce using rule 171 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 171 (term -> INCREMENT term1 .)
    $end            reduce using rule 171 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 171 (term -> INCREMENT term1 .)
    RKEY            reduce using rule 171 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 171 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 171 (term -> INCREMENT term1 .)
>>>>>>> master


state 153

<<<<<<< HEAD
    (47) funtionStatement -> FUNCTION VARIABLE . LPAREN RPAREN substatement
    (48) funtionStatement -> FUNCTION VARIABLE . LPAREN funcParametres RPAREN substatement

    LPAREN          shift and go to state 263


state 154

    (22) consoleLog -> PRINT LPAREN . RPAREN
    (23) consoleLog -> PRINT LPAREN . VARIABLE RPAREN
    (24) consoleLog -> PRINT LPAREN . string RPAREN
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
=======
    (191) term1 -> LPAREN . group RPAREN
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 158

    group                          shift and go to state 261
    number                         shift and go to state 154
    variable                       shift and go to state 155
    array_value                    shift and go to state 156
    object_value                   shift and go to state 157
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127

state 154

    (193) group -> number .

    PLUS            reduce using rule 193 (group -> number .)
    MINUS           reduce using rule 193 (group -> number .)
    PRODUCT         reduce using rule 193 (group -> number .)
    DIVIDE          reduce using rule 193 (group -> number .)
    EQUALTO         reduce using rule 193 (group -> number .)
    NOTEQUALTO      reduce using rule 193 (group -> number .)
    GREATER         reduce using rule 193 (group -> number .)
    LESS            reduce using rule 193 (group -> number .)
    GREATEREQUAL    reduce using rule 193 (group -> number .)
    LESSEQUAL       reduce using rule 193 (group -> number .)
    AND             reduce using rule 193 (group -> number .)
    OR              reduce using rule 193 (group -> number .)
    POINTCOMMA      reduce using rule 193 (group -> number .)
    $end            reduce using rule 193 (group -> number .)
    RPAREN          reduce using rule 193 (group -> number .)
    RKEY            reduce using rule 193 (group -> number .)
    RBRACKET        reduce using rule 193 (group -> number .)
    COMMA           reduce using rule 193 (group -> number .)
>>>>>>> master

    RPAREN          shift and go to state 264
    VARIABLE        shift and go to state 265
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    string                         shift and go to state 266

state 155

<<<<<<< HEAD
    (180) term -> term1 INCREMENT .

    PLUS            reduce using rule 180 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 180 (term -> term1 INCREMENT .)
    PRODUCT         reduce using rule 180 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 180 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 180 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 180 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 180 (term -> term1 INCREMENT .)
    LESS            reduce using rule 180 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 180 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 180 (term -> term1 INCREMENT .)
    AND             reduce using rule 180 (term -> term1 INCREMENT .)
    OR              reduce using rule 180 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 180 (term -> term1 INCREMENT .)
    LPAREN          reduce using rule 180 (term -> term1 INCREMENT .)
    NEGATION        reduce using rule 180 (term -> term1 INCREMENT .)
    COMMENT         reduce using rule 180 (term -> term1 INCREMENT .)
    MULTICOMMENT    reduce using rule 180 (term -> term1 INCREMENT .)
    FUNCTION        reduce using rule 180 (term -> term1 INCREMENT .)
    PRINT           reduce using rule 180 (term -> term1 INCREMENT .)
    INCREMENT       reduce using rule 180 (term -> term1 INCREMENT .)
    DECREMENT       reduce using rule 180 (term -> term1 INCREMENT .)
    NORMSTRING1     reduce using rule 180 (term -> term1 INCREMENT .)
    NORMSTRING2     reduce using rule 180 (term -> term1 INCREMENT .)
    MULTISTRING     reduce using rule 180 (term -> term1 INCREMENT .)
    ENUM            reduce using rule 180 (term -> term1 INCREMENT .)
    IF              reduce using rule 180 (term -> term1 INCREMENT .)
    WHILE           reduce using rule 180 (term -> term1 INCREMENT .)
    FOR             reduce using rule 180 (term -> term1 INCREMENT .)
    NUMBER          reduce using rule 180 (term -> term1 INCREMENT .)
    FLOAT           reduce using rule 180 (term -> term1 INCREMENT .)
    VARIABLE        reduce using rule 180 (term -> term1 INCREMENT .)
    LET             reduce using rule 180 (term -> term1 INCREMENT .)
    VAR             reduce using rule 180 (term -> term1 INCREMENT .)
    STATIC          reduce using rule 180 (term -> term1 INCREMENT .)
    CONST           reduce using rule 180 (term -> term1 INCREMENT .)
    OBJECTNAME      reduce using rule 180 (term -> term1 INCREMENT .)
    FUNMATH         reduce using rule 180 (term -> term1 INCREMENT .)
    $end            reduce using rule 180 (term -> term1 INCREMENT .)
    RKEY            reduce using rule 180 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 180 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 180 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 180 (term -> term1 INCREMENT .)
=======
    (194) group -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value

    PLUS            reduce using rule 194 (group -> variable .)
    MINUS           reduce using rule 194 (group -> variable .)
    PRODUCT         reduce using rule 194 (group -> variable .)
    DIVIDE          reduce using rule 194 (group -> variable .)
    EQUALTO         reduce using rule 194 (group -> variable .)
    NOTEQUALTO      reduce using rule 194 (group -> variable .)
    GREATER         reduce using rule 194 (group -> variable .)
    LESS            reduce using rule 194 (group -> variable .)
    GREATEREQUAL    reduce using rule 194 (group -> variable .)
    LESSEQUAL       reduce using rule 194 (group -> variable .)
    AND             reduce using rule 194 (group -> variable .)
    OR              reduce using rule 194 (group -> variable .)
    POINTCOMMA      reduce using rule 194 (group -> variable .)
    $end            reduce using rule 194 (group -> variable .)
    RPAREN          reduce using rule 194 (group -> variable .)
    RKEY            reduce using rule 194 (group -> variable .)
    RBRACKET        reduce using rule 194 (group -> variable .)
    COMMA           reduce using rule 194 (group -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
>>>>>>> master


state 156

<<<<<<< HEAD
    (182) term -> term1 DECREMENT .

    PLUS            reduce using rule 182 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 182 (term -> term1 DECREMENT .)
    PRODUCT         reduce using rule 182 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 182 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 182 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 182 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 182 (term -> term1 DECREMENT .)
    LESS            reduce using rule 182 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 182 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 182 (term -> term1 DECREMENT .)
    AND             reduce using rule 182 (term -> term1 DECREMENT .)
    OR              reduce using rule 182 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 182 (term -> term1 DECREMENT .)
    LPAREN          reduce using rule 182 (term -> term1 DECREMENT .)
    NEGATION        reduce using rule 182 (term -> term1 DECREMENT .)
    COMMENT         reduce using rule 182 (term -> term1 DECREMENT .)
    MULTICOMMENT    reduce using rule 182 (term -> term1 DECREMENT .)
    FUNCTION        reduce using rule 182 (term -> term1 DECREMENT .)
    PRINT           reduce using rule 182 (term -> term1 DECREMENT .)
    INCREMENT       reduce using rule 182 (term -> term1 DECREMENT .)
    DECREMENT       reduce using rule 182 (term -> term1 DECREMENT .)
    NORMSTRING1     reduce using rule 182 (term -> term1 DECREMENT .)
    NORMSTRING2     reduce using rule 182 (term -> term1 DECREMENT .)
    MULTISTRING     reduce using rule 182 (term -> term1 DECREMENT .)
    ENUM            reduce using rule 182 (term -> term1 DECREMENT .)
    IF              reduce using rule 182 (term -> term1 DECREMENT .)
    WHILE           reduce using rule 182 (term -> term1 DECREMENT .)
    FOR             reduce using rule 182 (term -> term1 DECREMENT .)
    NUMBER          reduce using rule 182 (term -> term1 DECREMENT .)
    FLOAT           reduce using rule 182 (term -> term1 DECREMENT .)
    VARIABLE        reduce using rule 182 (term -> term1 DECREMENT .)
    LET             reduce using rule 182 (term -> term1 DECREMENT .)
    VAR             reduce using rule 182 (term -> term1 DECREMENT .)
    STATIC          reduce using rule 182 (term -> term1 DECREMENT .)
    CONST           reduce using rule 182 (term -> term1 DECREMENT .)
    OBJECTNAME      reduce using rule 182 (term -> term1 DECREMENT .)
    FUNMATH         reduce using rule 182 (term -> term1 DECREMENT .)
    $end            reduce using rule 182 (term -> term1 DECREMENT .)
    RKEY            reduce using rule 182 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 182 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 182 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 182 (term -> term1 DECREMENT .)
=======
    (195) group -> array_value .

    PLUS            reduce using rule 195 (group -> array_value .)
    MINUS           reduce using rule 195 (group -> array_value .)
    PRODUCT         reduce using rule 195 (group -> array_value .)
    DIVIDE          reduce using rule 195 (group -> array_value .)
    EQUALTO         reduce using rule 195 (group -> array_value .)
    NOTEQUALTO      reduce using rule 195 (group -> array_value .)
    GREATER         reduce using rule 195 (group -> array_value .)
    LESS            reduce using rule 195 (group -> array_value .)
    GREATEREQUAL    reduce using rule 195 (group -> array_value .)
    LESSEQUAL       reduce using rule 195 (group -> array_value .)
    AND             reduce using rule 195 (group -> array_value .)
    OR              reduce using rule 195 (group -> array_value .)
    POINTCOMMA      reduce using rule 195 (group -> array_value .)
    $end            reduce using rule 195 (group -> array_value .)
    RPAREN          reduce using rule 195 (group -> array_value .)
    RKEY            reduce using rule 195 (group -> array_value .)
    RBRACKET        reduce using rule 195 (group -> array_value .)
    COMMA           reduce using rule 195 (group -> array_value .)
>>>>>>> master


state 157

<<<<<<< HEAD
    (181) term -> INCREMENT term1 .

    PLUS            reduce using rule 181 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 181 (term -> INCREMENT term1 .)
    PRODUCT         reduce using rule 181 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 181 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 181 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 181 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 181 (term -> INCREMENT term1 .)
    LESS            reduce using rule 181 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 181 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 181 (term -> INCREMENT term1 .)
    AND             reduce using rule 181 (term -> INCREMENT term1 .)
    OR              reduce using rule 181 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 181 (term -> INCREMENT term1 .)
    LPAREN          reduce using rule 181 (term -> INCREMENT term1 .)
    NEGATION        reduce using rule 181 (term -> INCREMENT term1 .)
    COMMENT         reduce using rule 181 (term -> INCREMENT term1 .)
    MULTICOMMENT    reduce using rule 181 (term -> INCREMENT term1 .)
    FUNCTION        reduce using rule 181 (term -> INCREMENT term1 .)
    PRINT           reduce using rule 181 (term -> INCREMENT term1 .)
    INCREMENT       reduce using rule 181 (term -> INCREMENT term1 .)
    DECREMENT       reduce using rule 181 (term -> INCREMENT term1 .)
    NORMSTRING1     reduce using rule 181 (term -> INCREMENT term1 .)
    NORMSTRING2     reduce using rule 181 (term -> INCREMENT term1 .)
    MULTISTRING     reduce using rule 181 (term -> INCREMENT term1 .)
    ENUM            reduce using rule 181 (term -> INCREMENT term1 .)
    IF              reduce using rule 181 (term -> INCREMENT term1 .)
    WHILE           reduce using rule 181 (term -> INCREMENT term1 .)
    FOR             reduce using rule 181 (term -> INCREMENT term1 .)
    NUMBER          reduce using rule 181 (term -> INCREMENT term1 .)
    FLOAT           reduce using rule 181 (term -> INCREMENT term1 .)
    VARIABLE        reduce using rule 181 (term -> INCREMENT term1 .)
    LET             reduce using rule 181 (term -> INCREMENT term1 .)
    VAR             reduce using rule 181 (term -> INCREMENT term1 .)
    STATIC          reduce using rule 181 (term -> INCREMENT term1 .)
    CONST           reduce using rule 181 (term -> INCREMENT term1 .)
    OBJECTNAME      reduce using rule 181 (term -> INCREMENT term1 .)
    FUNMATH         reduce using rule 181 (term -> INCREMENT term1 .)
    $end            reduce using rule 181 (term -> INCREMENT term1 .)
    RKEY            reduce using rule 181 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 181 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 181 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 181 (term -> INCREMENT term1 .)
=======
    (196) group -> object_value .

    PLUS            reduce using rule 196 (group -> object_value .)
    MINUS           reduce using rule 196 (group -> object_value .)
    PRODUCT         reduce using rule 196 (group -> object_value .)
    DIVIDE          reduce using rule 196 (group -> object_value .)
    EQUALTO         reduce using rule 196 (group -> object_value .)
    NOTEQUALTO      reduce using rule 196 (group -> object_value .)
    GREATER         reduce using rule 196 (group -> object_value .)
    LESS            reduce using rule 196 (group -> object_value .)
    GREATEREQUAL    reduce using rule 196 (group -> object_value .)
    LESSEQUAL       reduce using rule 196 (group -> object_value .)
    AND             reduce using rule 196 (group -> object_value .)
    OR              reduce using rule 196 (group -> object_value .)
    POINTCOMMA      reduce using rule 196 (group -> object_value .)
    $end            reduce using rule 196 (group -> object_value .)
    RPAREN          reduce using rule 196 (group -> object_value .)
    RKEY            reduce using rule 196 (group -> object_value .)
    RBRACKET        reduce using rule 196 (group -> object_value .)
    COMMA           reduce using rule 196 (group -> object_value .)
>>>>>>> master


state 158

<<<<<<< HEAD
    (201) term1 -> LPAREN . group RPAREN
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 163

    group                          shift and go to state 267
    number                         shift and go to state 159
    variable                       shift and go to state 160
    array_value                    shift and go to state 161
    object_value                   shift and go to state 162
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131

state 159

    (203) group -> number .

    PLUS            reduce using rule 203 (group -> number .)
    MINUS           reduce using rule 203 (group -> number .)
    PRODUCT         reduce using rule 203 (group -> number .)
    DIVIDE          reduce using rule 203 (group -> number .)
    EQUALTO         reduce using rule 203 (group -> number .)
    NOTEQUALTO      reduce using rule 203 (group -> number .)
    GREATER         reduce using rule 203 (group -> number .)
    LESS            reduce using rule 203 (group -> number .)
    GREATEREQUAL    reduce using rule 203 (group -> number .)
    LESSEQUAL       reduce using rule 203 (group -> number .)
    AND             reduce using rule 203 (group -> number .)
    OR              reduce using rule 203 (group -> number .)
    POINTCOMMA      reduce using rule 203 (group -> number .)
    LPAREN          reduce using rule 203 (group -> number .)
    NEGATION        reduce using rule 203 (group -> number .)
    COMMENT         reduce using rule 203 (group -> number .)
    MULTICOMMENT    reduce using rule 203 (group -> number .)
    FUNCTION        reduce using rule 203 (group -> number .)
    PRINT           reduce using rule 203 (group -> number .)
    INCREMENT       reduce using rule 203 (group -> number .)
    DECREMENT       reduce using rule 203 (group -> number .)
    NORMSTRING1     reduce using rule 203 (group -> number .)
    NORMSTRING2     reduce using rule 203 (group -> number .)
    MULTISTRING     reduce using rule 203 (group -> number .)
    ENUM            reduce using rule 203 (group -> number .)
    IF              reduce using rule 203 (group -> number .)
    WHILE           reduce using rule 203 (group -> number .)
    FOR             reduce using rule 203 (group -> number .)
    NUMBER          reduce using rule 203 (group -> number .)
    FLOAT           reduce using rule 203 (group -> number .)
    VARIABLE        reduce using rule 203 (group -> number .)
    LET             reduce using rule 203 (group -> number .)
    VAR             reduce using rule 203 (group -> number .)
    STATIC          reduce using rule 203 (group -> number .)
    CONST           reduce using rule 203 (group -> number .)
    OBJECTNAME      reduce using rule 203 (group -> number .)
    FUNMATH         reduce using rule 203 (group -> number .)
    $end            reduce using rule 203 (group -> number .)
    RKEY            reduce using rule 203 (group -> number .)
    RPAREN          reduce using rule 203 (group -> number .)
    RBRACKET        reduce using rule 203 (group -> number .)
    COMMA           reduce using rule 203 (group -> number .)
=======
    (231) variable -> VARIABLE .

    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    POINT           reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 231 (variable -> VARIABLE .)
    $end            reduce using rule 231 (variable -> VARIABLE .)
    RPAREN          reduce using rule 231 (variable -> VARIABLE .)
    RKEY            reduce using rule 231 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    COMMA           reduce using rule 231 (variable -> VARIABLE .)
    EQUAL           reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    TWOPOINTS       reduce using rule 231 (variable -> VARIABLE .)


state 159

    (173) term -> DECREMENT term1 .

    PLUS            reduce using rule 173 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 173 (term -> DECREMENT term1 .)
    PRODUCT         reduce using rule 173 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 173 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 173 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 173 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 173 (term -> DECREMENT term1 .)
    LESS            reduce using rule 173 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 173 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 173 (term -> DECREMENT term1 .)
    AND             reduce using rule 173 (term -> DECREMENT term1 .)
    OR              reduce using rule 173 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 173 (term -> DECREMENT term1 .)
    $end            reduce using rule 173 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 173 (term -> DECREMENT term1 .)
    RKEY            reduce using rule 173 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 173 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 173 (term -> DECREMENT term1 .)
>>>>>>> master


state 160

<<<<<<< HEAD
    (204) group -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value

    PLUS            reduce using rule 204 (group -> variable .)
    MINUS           reduce using rule 204 (group -> variable .)
    PRODUCT         reduce using rule 204 (group -> variable .)
    DIVIDE          reduce using rule 204 (group -> variable .)
    EQUALTO         reduce using rule 204 (group -> variable .)
    NOTEQUALTO      reduce using rule 204 (group -> variable .)
    GREATER         reduce using rule 204 (group -> variable .)
    LESS            reduce using rule 204 (group -> variable .)
    GREATEREQUAL    reduce using rule 204 (group -> variable .)
    LESSEQUAL       reduce using rule 204 (group -> variable .)
    AND             reduce using rule 204 (group -> variable .)
    OR              reduce using rule 204 (group -> variable .)
    POINTCOMMA      reduce using rule 204 (group -> variable .)
    LPAREN          reduce using rule 204 (group -> variable .)
    NEGATION        reduce using rule 204 (group -> variable .)
    COMMENT         reduce using rule 204 (group -> variable .)
    MULTICOMMENT    reduce using rule 204 (group -> variable .)
    FUNCTION        reduce using rule 204 (group -> variable .)
    PRINT           reduce using rule 204 (group -> variable .)
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)
    NORMSTRING1     reduce using rule 204 (group -> variable .)
    NORMSTRING2     reduce using rule 204 (group -> variable .)
    MULTISTRING     reduce using rule 204 (group -> variable .)
    ENUM            reduce using rule 204 (group -> variable .)
    IF              reduce using rule 204 (group -> variable .)
    WHILE           reduce using rule 204 (group -> variable .)
    FOR             reduce using rule 204 (group -> variable .)
    NUMBER          reduce using rule 204 (group -> variable .)
    FLOAT           reduce using rule 204 (group -> variable .)
    VARIABLE        reduce using rule 204 (group -> variable .)
    LET             reduce using rule 204 (group -> variable .)
    VAR             reduce using rule 204 (group -> variable .)
    STATIC          reduce using rule 204 (group -> variable .)
    CONST           reduce using rule 204 (group -> variable .)
    OBJECTNAME      reduce using rule 204 (group -> variable .)
    FUNMATH         reduce using rule 204 (group -> variable .)
    $end            reduce using rule 204 (group -> variable .)
    RKEY            reduce using rule 204 (group -> variable .)
    RPAREN          reduce using rule 204 (group -> variable .)
    RBRACKET        reduce using rule 204 (group -> variable .)
    COMMA           reduce using rule 204 (group -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175
=======
    (93) var_boolean -> declare_boolean EQUAL . boolean_value
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (104) declare_any -> . prefix VARIABLE
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    FUNMATH         shift and go to state 98
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    boolean_value                  shift and go to state 262
    boolean                        shift and go to state 263
    other_value                    shift and go to state 264
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    expression                     shift and go to state 271
    factor_exprlog                 shift and go to state 32
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    term                           shift and go to state 16
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    declare_any                    shift and go to state 128
    group                          shift and go to state 72
    prefix                         shift and go to state 68
>>>>>>> master


<<<<<<< HEAD
state 161

    (205) group -> array_value .

    PLUS            reduce using rule 205 (group -> array_value .)
    MINUS           reduce using rule 205 (group -> array_value .)
    PRODUCT         reduce using rule 205 (group -> array_value .)
    DIVIDE          reduce using rule 205 (group -> array_value .)
    EQUALTO         reduce using rule 205 (group -> array_value .)
    NOTEQUALTO      reduce using rule 205 (group -> array_value .)
    GREATER         reduce using rule 205 (group -> array_value .)
    LESS            reduce using rule 205 (group -> array_value .)
    GREATEREQUAL    reduce using rule 205 (group -> array_value .)
    LESSEQUAL       reduce using rule 205 (group -> array_value .)
    AND             reduce using rule 205 (group -> array_value .)
    OR              reduce using rule 205 (group -> array_value .)
    POINTCOMMA      reduce using rule 205 (group -> array_value .)
    LPAREN          reduce using rule 205 (group -> array_value .)
    NEGATION        reduce using rule 205 (group -> array_value .)
    COMMENT         reduce using rule 205 (group -> array_value .)
    MULTICOMMENT    reduce using rule 205 (group -> array_value .)
    FUNCTION        reduce using rule 205 (group -> array_value .)
    PRINT           reduce using rule 205 (group -> array_value .)
    INCREMENT       reduce using rule 205 (group -> array_value .)
    DECREMENT       reduce using rule 205 (group -> array_value .)
    NORMSTRING1     reduce using rule 205 (group -> array_value .)
    NORMSTRING2     reduce using rule 205 (group -> array_value .)
    MULTISTRING     reduce using rule 205 (group -> array_value .)
    ENUM            reduce using rule 205 (group -> array_value .)
    IF              reduce using rule 205 (group -> array_value .)
    WHILE           reduce using rule 205 (group -> array_value .)
    FOR             reduce using rule 205 (group -> array_value .)
    NUMBER          reduce using rule 205 (group -> array_value .)
    FLOAT           reduce using rule 205 (group -> array_value .)
    VARIABLE        reduce using rule 205 (group -> array_value .)
    LET             reduce using rule 205 (group -> array_value .)
    VAR             reduce using rule 205 (group -> array_value .)
    STATIC          reduce using rule 205 (group -> array_value .)
    CONST           reduce using rule 205 (group -> array_value .)
    OBJECTNAME      reduce using rule 205 (group -> array_value .)
    FUNMATH         reduce using rule 205 (group -> array_value .)
    $end            reduce using rule 205 (group -> array_value .)
    RKEY            reduce using rule 205 (group -> array_value .)
    RPAREN          reduce using rule 205 (group -> array_value .)
    RBRACKET        reduce using rule 205 (group -> array_value .)
    COMMA           reduce using rule 205 (group -> array_value .)
=======
    (79) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 272
>>>>>>> master


state 162

<<<<<<< HEAD
    (206) group -> object_value .

    PLUS            reduce using rule 206 (group -> object_value .)
    MINUS           reduce using rule 206 (group -> object_value .)
    PRODUCT         reduce using rule 206 (group -> object_value .)
    DIVIDE          reduce using rule 206 (group -> object_value .)
    EQUALTO         reduce using rule 206 (group -> object_value .)
    NOTEQUALTO      reduce using rule 206 (group -> object_value .)
    GREATER         reduce using rule 206 (group -> object_value .)
    LESS            reduce using rule 206 (group -> object_value .)
    GREATEREQUAL    reduce using rule 206 (group -> object_value .)
    LESSEQUAL       reduce using rule 206 (group -> object_value .)
    AND             reduce using rule 206 (group -> object_value .)
    OR              reduce using rule 206 (group -> object_value .)
    POINTCOMMA      reduce using rule 206 (group -> object_value .)
    LPAREN          reduce using rule 206 (group -> object_value .)
    NEGATION        reduce using rule 206 (group -> object_value .)
    COMMENT         reduce using rule 206 (group -> object_value .)
    MULTICOMMENT    reduce using rule 206 (group -> object_value .)
    FUNCTION        reduce using rule 206 (group -> object_value .)
    PRINT           reduce using rule 206 (group -> object_value .)
    INCREMENT       reduce using rule 206 (group -> object_value .)
    DECREMENT       reduce using rule 206 (group -> object_value .)
    NORMSTRING1     reduce using rule 206 (group -> object_value .)
    NORMSTRING2     reduce using rule 206 (group -> object_value .)
    MULTISTRING     reduce using rule 206 (group -> object_value .)
    ENUM            reduce using rule 206 (group -> object_value .)
    IF              reduce using rule 206 (group -> object_value .)
    WHILE           reduce using rule 206 (group -> object_value .)
    FOR             reduce using rule 206 (group -> object_value .)
    NUMBER          reduce using rule 206 (group -> object_value .)
    FLOAT           reduce using rule 206 (group -> object_value .)
    VARIABLE        reduce using rule 206 (group -> object_value .)
    LET             reduce using rule 206 (group -> object_value .)
    VAR             reduce using rule 206 (group -> object_value .)
    STATIC          reduce using rule 206 (group -> object_value .)
    CONST           reduce using rule 206 (group -> object_value .)
    OBJECTNAME      reduce using rule 206 (group -> object_value .)
    FUNMATH         reduce using rule 206 (group -> object_value .)
    $end            reduce using rule 206 (group -> object_value .)
    RKEY            reduce using rule 206 (group -> object_value .)
    RPAREN          reduce using rule 206 (group -> object_value .)
    RBRACKET        reduce using rule 206 (group -> object_value .)
    COMMA           reduce using rule 206 (group -> object_value .)
=======
    (88) var_number -> declare_number EQUAL . number_value
    (89) var_number -> declare_number EQUAL . funcionmath
    (91) var_number -> declare_number EQUAL . expression
    (148) number_value -> . expression
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (104) declare_any -> . prefix VARIABLE
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    FUNMATH         shift and go to state 98
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62

    number_value                   shift and go to state 273
    funcionmath                    shift and go to state 274
    expression                     shift and go to state 275
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    term                           shift and go to state 16
    declare_any                    shift and go to state 128
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    prefix                         shift and go to state 68
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
>>>>>>> master


<<<<<<< HEAD
state 163

    (241) variable -> VARIABLE .

    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    POINT           reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 241 (variable -> VARIABLE .)
    LPAREN          reduce using rule 241 (variable -> VARIABLE .)
    NEGATION        reduce using rule 241 (variable -> VARIABLE .)
    COMMENT         reduce using rule 241 (variable -> VARIABLE .)
    MULTICOMMENT    reduce using rule 241 (variable -> VARIABLE .)
    FUNCTION        reduce using rule 241 (variable -> VARIABLE .)
    PRINT           reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING1     reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING2     reduce using rule 241 (variable -> VARIABLE .)
    MULTISTRING     reduce using rule 241 (variable -> VARIABLE .)
    ENUM            reduce using rule 241 (variable -> VARIABLE .)
    IF              reduce using rule 241 (variable -> VARIABLE .)
    WHILE           reduce using rule 241 (variable -> VARIABLE .)
    FOR             reduce using rule 241 (variable -> VARIABLE .)
    NUMBER          reduce using rule 241 (variable -> VARIABLE .)
    FLOAT           reduce using rule 241 (variable -> VARIABLE .)
    VARIABLE        reduce using rule 241 (variable -> VARIABLE .)
    LET             reduce using rule 241 (variable -> VARIABLE .)
    VAR             reduce using rule 241 (variable -> VARIABLE .)
    STATIC          reduce using rule 241 (variable -> VARIABLE .)
    CONST           reduce using rule 241 (variable -> VARIABLE .)
    OBJECTNAME      reduce using rule 241 (variable -> VARIABLE .)
    FUNMATH         reduce using rule 241 (variable -> VARIABLE .)
    $end            reduce using rule 241 (variable -> VARIABLE .)
    RKEY            reduce using rule 241 (variable -> VARIABLE .)
    RPAREN          reduce using rule 241 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    COMMA           reduce using rule 241 (variable -> VARIABLE .)
    EQUAL           reduce using rule 241 (variable -> VARIABLE .)
    TWOPOINTS       reduce using rule 241 (variable -> VARIABLE .)
=======
    (75) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 276
>>>>>>> master


state 164

<<<<<<< HEAD
    (183) term -> DECREMENT term1 .

    PLUS            reduce using rule 183 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 183 (term -> DECREMENT term1 .)
    PRODUCT         reduce using rule 183 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 183 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 183 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 183 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 183 (term -> DECREMENT term1 .)
    LESS            reduce using rule 183 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 183 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 183 (term -> DECREMENT term1 .)
    AND             reduce using rule 183 (term -> DECREMENT term1 .)
    OR              reduce using rule 183 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 183 (term -> DECREMENT term1 .)
    LPAREN          reduce using rule 183 (term -> DECREMENT term1 .)
    NEGATION        reduce using rule 183 (term -> DECREMENT term1 .)
    COMMENT         reduce using rule 183 (term -> DECREMENT term1 .)
    MULTICOMMENT    reduce using rule 183 (term -> DECREMENT term1 .)
    FUNCTION        reduce using rule 183 (term -> DECREMENT term1 .)
    PRINT           reduce using rule 183 (term -> DECREMENT term1 .)
    INCREMENT       reduce using rule 183 (term -> DECREMENT term1 .)
    DECREMENT       reduce using rule 183 (term -> DECREMENT term1 .)
    NORMSTRING1     reduce using rule 183 (term -> DECREMENT term1 .)
    NORMSTRING2     reduce using rule 183 (term -> DECREMENT term1 .)
    MULTISTRING     reduce using rule 183 (term -> DECREMENT term1 .)
    ENUM            reduce using rule 183 (term -> DECREMENT term1 .)
    IF              reduce using rule 183 (term -> DECREMENT term1 .)
    WHILE           reduce using rule 183 (term -> DECREMENT term1 .)
    FOR             reduce using rule 183 (term -> DECREMENT term1 .)
    NUMBER          reduce using rule 183 (term -> DECREMENT term1 .)
    FLOAT           reduce using rule 183 (term -> DECREMENT term1 .)
    VARIABLE        reduce using rule 183 (term -> DECREMENT term1 .)
    LET             reduce using rule 183 (term -> DECREMENT term1 .)
    VAR             reduce using rule 183 (term -> DECREMENT term1 .)
    STATIC          reduce using rule 183 (term -> DECREMENT term1 .)
    CONST           reduce using rule 183 (term -> DECREMENT term1 .)
    OBJECTNAME      reduce using rule 183 (term -> DECREMENT term1 .)
    FUNMATH         reduce using rule 183 (term -> DECREMENT term1 .)
    $end            reduce using rule 183 (term -> DECREMENT term1 .)
    RKEY            reduce using rule 183 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 183 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 183 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 183 (term -> DECREMENT term1 .)


state 165
=======
    (96) var_string -> declare_string EQUAL . string_value
    (156) string_value -> . string
    (157) string_value -> . other_value
    (158) string_value -> . string_object
    (159) string_value -> . concatenate
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (160) concatenate -> . string PLUS termS
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    string_value                   shift and go to state 277
    string                         shift and go to state 278
    other_value                    shift and go to state 279
    string_object                  shift and go to state 280
    concatenate                    shift and go to state 281
    variable                       shift and go to state 282
    funciones                      shift and go to state 64
    array_value                    shift and go to state 283
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 284
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 165

    (83) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 286
>>>>>>> master

    (102) var_boolean -> declare_boolean EQUAL . boolean_value
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    FUNMATH         shift and go to state 101
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    boolean_value                  shift and go to state 268
    boolean                        shift and go to state 269
    other_value                    shift and go to state 270
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    expression                     shift and go to state 277
    factor_exprlog                 shift and go to state 34
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    term                           shift and go to state 18
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    declare_any                    shift and go to state 132
    group                          shift and go to state 76
    prefix                         shift and go to state 71

state 166

<<<<<<< HEAD
    (88) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 278


state 167

    (97) var_number -> declare_number EQUAL . number_value
    (98) var_number -> declare_number EQUAL . funcionmath
    (100) var_number -> declare_number EQUAL . expression
    (158) number_value -> . expression
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    FUNMATH         shift and go to state 101
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65

    number_value                   shift and go to state 279
    funcionmath                    shift and go to state 280
    expression                     shift and go to state 281
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    term                           shift and go to state 18
    declare_any                    shift and go to state 132
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    prefix                         shift and go to state 71
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100

state 168
=======
    (99) var_enum -> declare_var_enum EQUAL . enum_value
    (214) enum_value -> . object_name POINT object_name
    (232) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 62

    enum_value                     shift and go to state 287
    object_name                    shift and go to state 76

state 167

    (34) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 288
>>>>>>> master

    (84) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 282

<<<<<<< HEAD

state 169

    (105) var_string -> declare_string EQUAL . string_value
    (166) string_value -> . string
    (167) string_value -> . other_value
    (168) string_value -> . string_object
    (169) string_value -> . concatenate
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (170) concatenate -> . string PLUS termS
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    string_value                   shift and go to state 283
    string                         shift and go to state 284
    other_value                    shift and go to state 285
    string_object                  shift and go to state 286
    concatenate                    shift and go to state 287
    variable                       shift and go to state 288
    funciones                      shift and go to state 67
    array_value                    shift and go to state 289
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 290
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 170

    (92) declare_array_string -> declare_string LBRACKET . RBRACKET
=======
    (108) assign_variable -> variable EQUAL . assign_value
    (109) assign_variable -> variable EQUAL . funciones
    (110) assign_variable -> variable EQUAL . list_types
    (115) assign_value -> . general_value
    (116) assign_value -> . object_definition
    (117) assign_value -> . tuples_list
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (136) list_types -> . list_number
    (137) list_types -> . list_boolean
    (138) list_types -> . list_string
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (121) object_definition -> . LKEY attributes RKEY
    (118) tuples_list -> . LBRACKET tuples_values RBRACKET
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (139) list_number -> . LBRACKET numbers RBRACKET
    (142) list_boolean -> . LBRACKET booleans RBRACKET
    (145) list_string -> . LBRACKET strings RBRACKET
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (104) declare_any -> . prefix VARIABLE
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value

    LKEY            shift and go to state 245
    LBRACKET        shift and go to state 246
    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    FUNMATH         shift and go to state 98
    VARIABLE        shift and go to state 292
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
    OBJECTNAME      shift and go to state 62

    variable                       shift and go to state 141
    assign_value                   shift and go to state 289
    funciones                      shift and go to state 290
    list_types                     shift and go to state 291
    general_value                  shift and go to state 229
    object_definition              shift and go to state 230
    tuples_list                    shift and go to state 231
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    list_number                    shift and go to state 232
    list_boolean                   shift and go to state 233
    list_string                    shift and go to state 234
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    declare_any                    shift and go to state 128
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    prefix                         shift and go to state 68
    group                          shift and go to state 72
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127

state 169

    (213) array_value -> variable LBRACKET . expression RBRACKET
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    variable                       shift and go to state 141
    expression                     shift and go to state 293
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 170

    (211) object_value_form1 -> variable POINT . variable
    (212) object_value_form2 -> variable POINT . array_value
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
>>>>>>> master

    RBRACKET        shift and go to state 292

<<<<<<< HEAD

state 171

    (108) var_enum -> declare_var_enum EQUAL . enum_value
    (224) enum_value -> . object_name POINT object_name
    (242) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 65

    enum_value                     shift and go to state 293
    object_name                    shift and go to state 80

state 172

    (37) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 294


state 173

    (118) assign_variable -> variable EQUAL . assign_value
    (119) assign_variable -> variable EQUAL . funciones
    (120) assign_variable -> variable EQUAL . list_types
    (125) assign_value -> . general_value
    (126) assign_value -> . object_definition
    (127) assign_value -> . tuples_list
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (146) list_types -> . list_number
    (147) list_types -> . list_boolean
    (148) list_types -> . list_string
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (131) object_definition -> . LKEY attributes RKEY
    (128) tuples_list -> . LBRACKET tuples_values RBRACKET
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (149) list_number -> . LBRACKET numbers RBRACKET
    (152) list_boolean -> . LBRACKET booleans RBRACKET
    (155) list_string -> . LBRACKET strings RBRACKET
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value

    LKEY            shift and go to state 250
    LBRACKET        shift and go to state 251
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    FUNMATH         shift and go to state 101
    VARIABLE        shift and go to state 298
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    OBJECTNAME      shift and go to state 65

    variable                       shift and go to state 145
    assign_value                   shift and go to state 295
    funciones                      shift and go to state 296
    list_types                     shift and go to state 297
    general_value                  shift and go to state 234
    object_definition              shift and go to state 235
    tuples_list                    shift and go to state 236
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    list_number                    shift and go to state 237
    list_boolean                   shift and go to state 238
    list_string                    shift and go to state 239
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    declare_any                    shift and go to state 132
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    prefix                         shift and go to state 71
    group                          shift and go to state 76
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131

state 174

    (223) array_value -> variable LBRACKET . expression RBRACKET
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    variable                       shift and go to state 145
    expression                     shift and go to state 299
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 175
=======
    variable                       shift and go to state 294
    array_value                    shift and go to state 295

state 171

    (111) assign_array -> array_value EQUAL . general_value
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    array_value                    shift and go to state 142
    general_value                  shift and go to state 296
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 172

    (112) assign_object_value -> object_value_form1 EQUAL . general_value
    (113) assign_object_value -> object_value_form1 EQUAL . list_types
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (136) list_types -> . list_number
    (137) list_types -> . list_boolean
    (138) list_types -> . list_string
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (139) list_number -> . LBRACKET numbers RBRACKET
    (142) list_boolean -> . LBRACKET booleans RBRACKET
    (145) list_string -> . LBRACKET strings RBRACKET
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    LBRACKET        shift and go to state 299
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    object_value_form1             shift and go to state 126
    general_value                  shift and go to state 297
    list_types                     shift and go to state 298
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    list_number                    shift and go to state 232
    list_boolean                   shift and go to state 233
    list_string                    shift and go to state 234
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 173

    (114) assign_object_value -> object_value_form2 EQUAL . general_value
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    object_value_form2             shift and go to state 127
    general_value                  shift and go to state 300
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 174

    (104) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 104 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 104 (declare_any -> prefix VARIABLE .)
    VARIABLE        reduce using rule 104 (declare_any -> prefix VARIABLE .)
    LET             reduce using rule 104 (declare_any -> prefix VARIABLE .)
    VAR             reduce using rule 104 (declare_any -> prefix VARIABLE .)
    STATIC          reduce using rule 104 (declare_any -> prefix VARIABLE .)
    CONST           reduce using rule 104 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 104 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 104 (declare_any -> prefix VARIABLE .)
    RKEY            reduce using rule 104 (declare_any -> prefix VARIABLE .)
>>>>>>> master

    (221) object_value_form1 -> variable POINT . variable
    (222) object_value_form2 -> variable POINT . array_value
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 163

<<<<<<< HEAD
    variable                       shift and go to state 300
    array_value                    shift and go to state 301

state 176

    (121) assign_array -> array_value EQUAL . general_value
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    array_value                    shift and go to state 146
    general_value                  shift and go to state 302
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 177

    (122) assign_object_value -> object_value_form1 EQUAL . general_value
    (123) assign_object_value -> object_value_form1 EQUAL . list_types
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (146) list_types -> . list_number
    (147) list_types -> . list_boolean
    (148) list_types -> . list_string
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (149) list_number -> . LBRACKET numbers RBRACKET
    (152) list_boolean -> . LBRACKET booleans RBRACKET
    (155) list_string -> . LBRACKET strings RBRACKET
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    LBRACKET        shift and go to state 305
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    object_value_form1             shift and go to state 130
    general_value                  shift and go to state 303
    list_types                     shift and go to state 304
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    list_number                    shift and go to state 237
    list_boolean                   shift and go to state 238
    list_string                    shift and go to state 239
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 178

    (124) assign_object_value -> object_value_form2 EQUAL . general_value
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    object_value_form2             shift and go to state 131
    general_value                  shift and go to state 306
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 179

    (113) declare_any -> prefix VARIABLE .
    (114) declare_any -> prefix VARIABLE . TWOPOINTS ANY

  ! shift/reduce conflict for TWOPOINTS resolved as shift
    EQUAL           reduce using rule 113 (declare_any -> prefix VARIABLE .)
    VARIABLE        reduce using rule 113 (declare_any -> prefix VARIABLE .)
    LET             reduce using rule 113 (declare_any -> prefix VARIABLE .)
    VAR             reduce using rule 113 (declare_any -> prefix VARIABLE .)
    STATIC          reduce using rule 113 (declare_any -> prefix VARIABLE .)
    CONST           reduce using rule 113 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 113 (declare_any -> prefix VARIABLE .)
    LPAREN          reduce using rule 113 (declare_any -> prefix VARIABLE .)
    NEGATION        reduce using rule 113 (declare_any -> prefix VARIABLE .)
    COMMENT         reduce using rule 113 (declare_any -> prefix VARIABLE .)
    MULTICOMMENT    reduce using rule 113 (declare_any -> prefix VARIABLE .)
    FUNCTION        reduce using rule 113 (declare_any -> prefix VARIABLE .)
    PRINT           reduce using rule 113 (declare_any -> prefix VARIABLE .)
    INCREMENT       reduce using rule 113 (declare_any -> prefix VARIABLE .)
    DECREMENT       reduce using rule 113 (declare_any -> prefix VARIABLE .)
    NORMSTRING1     reduce using rule 113 (declare_any -> prefix VARIABLE .)
    NORMSTRING2     reduce using rule 113 (declare_any -> prefix VARIABLE .)
    MULTISTRING     reduce using rule 113 (declare_any -> prefix VARIABLE .)
    ENUM            reduce using rule 113 (declare_any -> prefix VARIABLE .)
    IF              reduce using rule 113 (declare_any -> prefix VARIABLE .)
    WHILE           reduce using rule 113 (declare_any -> prefix VARIABLE .)
    FOR             reduce using rule 113 (declare_any -> prefix VARIABLE .)
    NUMBER          reduce using rule 113 (declare_any -> prefix VARIABLE .)
    FLOAT           reduce using rule 113 (declare_any -> prefix VARIABLE .)
    OBJECTNAME      reduce using rule 113 (declare_any -> prefix VARIABLE .)
    FUNMATH         reduce using rule 113 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 113 (declare_any -> prefix VARIABLE .)
    RKEY            reduce using rule 113 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       shift and go to state 307

  ! TWOPOINTS       [ reduce using rule 113 (declare_any -> prefix VARIABLE .) ]


state 180

    (51) funcionif -> IF LPAREN . formLog RPAREN substatement
    (52) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif
    (53) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif funcionelse
    (54) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelse
    (216) formLog -> . expCond
    (217) formLog -> . expOpLog
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    formLog                        shift and go to state 308
    expCond                        shift and go to state 309
    expOpLog                       shift and go to state 310
    expression                     shift and go to state 311
    factor_exprlog                 shift and go to state 220
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 181

    (62) funcionwhile -> WHILE LPAREN . formLog RPAREN substatement
    (216) formLog -> . expCond
    (217) formLog -> . expOpLog
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    formLog                        shift and go to state 312
    expCond                        shift and go to state 309
    expOpLog                       shift and go to state 310
    expression                     shift and go to state 311
    factor_exprlog                 shift and go to state 220
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 182

    (58) funcionfor -> FOR LPAREN . LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (59) funcionfor -> FOR LPAREN . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> FOR LPAREN . LET VARIABLE IN VARIABLE RPAREN substatement
    (61) funcionfor -> FOR LPAREN . VARIABLE IN VARIABLE RPAREN substatement

    LET             shift and go to state 313
    VARIABLE        shift and go to state 314
=======
    (44) funcionif -> IF LPAREN . formLog RPAREN substatement
    (45) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif
    (46) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif funcionelse
    (47) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelse
    (206) formLog -> . expCond
    (207) formLog -> . expOpLog
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    formLog                        shift and go to state 301
    expCond                        shift and go to state 302
    expOpLog                       shift and go to state 303
    expression                     shift and go to state 304
    factor_exprlog                 shift and go to state 215
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 176

    (53) funcionwhile -> WHILE LPAREN . formLog RPAREN substatement
    (206) formLog -> . expCond
    (207) formLog -> . expOpLog
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    formLog                        shift and go to state 305
    expCond                        shift and go to state 302
    expOpLog                       shift and go to state 303
    expression                     shift and go to state 304
    factor_exprlog                 shift and go to state 215
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 177

    (51) funcionfor -> FOR LPAREN . prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (52) funcionfor -> FOR LPAREN . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 307
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    prefix                         shift and go to state 306

state 178

    (214) enum_value -> object_name POINT . object_name
    (232) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 62

    object_name                    shift and go to state 308

state 179

    (73) declare_array_main_number -> declare_array_number EQUAL . list_number
    (139) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 310

    list_number                    shift and go to state 309

state 180

    (77) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (142) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 312

    list_boolean                   shift and go to state 311

state 181

    (81) declare_array_main_string -> declare_array_string EQUAL . list_string
    (145) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 314

    list_string                    shift and go to state 313

state 182

    (249) mathAbs -> FUNMATH POINT . ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> FUNMATH POINT . ABS LPAREN number_value RPAREN
    (251) mathAbs -> FUNMATH POINT . ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> FUNMATH POINT . ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> FUNMATH POINT . ROUND LPAREN number_value RPAREN
    (254) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA VARIABLE RPAREN

    ABS             shift and go to state 315
    ROUND           shift and go to state 316
    POW             shift and go to state 317
>>>>>>> master


state 183

<<<<<<< HEAD
    (224) enum_value -> object_name POINT . object_name
    (242) object_name -> . OBJECTNAME
=======
    (165) expression -> expression PLUS term .

    PLUS            reduce using rule 165 (expression -> expression PLUS term .)
    MINUS           reduce using rule 165 (expression -> expression PLUS term .)
    PRODUCT         reduce using rule 165 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 165 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 165 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 165 (expression -> expression PLUS term .)
    GREATER         reduce using rule 165 (expression -> expression PLUS term .)
    LESS            reduce using rule 165 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 165 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 165 (expression -> expression PLUS term .)
    AND             reduce using rule 165 (expression -> expression PLUS term .)
    OR              reduce using rule 165 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 165 (expression -> expression PLUS term .)
    $end            reduce using rule 165 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 165 (expression -> expression PLUS term .)
    RKEY            reduce using rule 165 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 165 (expression -> expression PLUS term .)
    COMMA           reduce using rule 165 (expression -> expression PLUS term .)
>>>>>>> master

    OBJECTNAME      shift and go to state 65

    object_name                    shift and go to state 315

state 184

<<<<<<< HEAD
    (82) declare_array_main_number -> declare_array_number EQUAL . list_number
    (149) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 317

    list_number                    shift and go to state 316

state 185

    (86) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (152) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 319
=======
    (191) term1 -> LPAREN . group RPAREN
    (200) factor_expr -> LPAREN . expression RPAREN
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    group                          shift and go to state 121
    expression                     shift and go to state 318
    number                         shift and go to state 122
    variable                       shift and go to state 319
    array_value                    shift and go to state 124
    object_value                   shift and go to state 125
    term                           shift and go to state 16
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    term1                          shift and go to state 42
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    funciones                      shift and go to state 64
    enum_value                     shift and go to state 56
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 185

    (166) expression -> expression MINUS term .

    PLUS            reduce using rule 166 (expression -> expression MINUS term .)
    MINUS           reduce using rule 166 (expression -> expression MINUS term .)
    PRODUCT         reduce using rule 166 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 166 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 166 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 166 (expression -> expression MINUS term .)
    GREATER         reduce using rule 166 (expression -> expression MINUS term .)
    LESS            reduce using rule 166 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 166 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 166 (expression -> expression MINUS term .)
    AND             reduce using rule 166 (expression -> expression MINUS term .)
    OR              reduce using rule 166 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 166 (expression -> expression MINUS term .)
    $end            reduce using rule 166 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 166 (expression -> expression MINUS term .)
    RKEY            reduce using rule 166 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 166 (expression -> expression MINUS term .)
    COMMA           reduce using rule 166 (expression -> expression MINUS term .)
>>>>>>> master

    list_boolean                   shift and go to state 318

state 186

<<<<<<< HEAD
    (90) declare_array_main_string -> declare_array_string EQUAL . list_string
    (155) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 321
=======
    (168) expression -> expression PRODUCT expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    EQUALTO         reduce using rule 168 (expression -> expression PRODUCT expression .)
    NOTEQUALTO      reduce using rule 168 (expression -> expression PRODUCT expression .)
    GREATER         reduce using rule 168 (expression -> expression PRODUCT expression .)
    LESS            reduce using rule 168 (expression -> expression PRODUCT expression .)
    GREATEREQUAL    reduce using rule 168 (expression -> expression PRODUCT expression .)
    LESSEQUAL       reduce using rule 168 (expression -> expression PRODUCT expression .)
    AND             reduce using rule 168 (expression -> expression PRODUCT expression .)
    OR              reduce using rule 168 (expression -> expression PRODUCT expression .)
    POINTCOMMA      reduce using rule 168 (expression -> expression PRODUCT expression .)
    $end            reduce using rule 168 (expression -> expression PRODUCT expression .)
    RPAREN          reduce using rule 168 (expression -> expression PRODUCT expression .)
    RKEY            reduce using rule 168 (expression -> expression PRODUCT expression .)
    RBRACKET        reduce using rule 168 (expression -> expression PRODUCT expression .)
    COMMA           reduce using rule 168 (expression -> expression PRODUCT expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103

  ! PLUS            [ reduce using rule 168 (expression -> expression PRODUCT expression .) ]
  ! MINUS           [ reduce using rule 168 (expression -> expression PRODUCT expression .) ]
  ! PRODUCT         [ reduce using rule 168 (expression -> expression PRODUCT expression .) ]
  ! DIVIDE          [ reduce using rule 168 (expression -> expression PRODUCT expression .) ]
>>>>>>> master

    list_string                    shift and go to state 320

state 187

<<<<<<< HEAD
    (259) mathAbs -> FUNMATH POINT . ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> FUNMATH POINT . ABS LPAREN number_value RPAREN
    (261) mathAbs -> FUNMATH POINT . ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> FUNMATH POINT . ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> FUNMATH POINT . ROUND LPAREN number_value RPAREN
    (264) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA VARIABLE RPAREN

    ABS             shift and go to state 322
    ROUND           shift and go to state 323
    POW             shift and go to state 324
=======
    (169) expression -> expression DIVIDE expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    EQUALTO         reduce using rule 169 (expression -> expression DIVIDE expression .)
    NOTEQUALTO      reduce using rule 169 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 169 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 169 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 169 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 169 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 169 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 169 (expression -> expression DIVIDE expression .)
    POINTCOMMA      reduce using rule 169 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 169 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 169 (expression -> expression DIVIDE expression .)
    RKEY            reduce using rule 169 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 169 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 169 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103

  ! PLUS            [ reduce using rule 169 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 169 (expression -> expression DIVIDE expression .) ]
  ! PRODUCT         [ reduce using rule 169 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 169 (expression -> expression DIVIDE expression .) ]
>>>>>>> master


state 188

<<<<<<< HEAD
    (175) expression -> expression PLUS term .

    PLUS            reduce using rule 175 (expression -> expression PLUS term .)
    MINUS           reduce using rule 175 (expression -> expression PLUS term .)
    PRODUCT         reduce using rule 175 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 175 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 175 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 175 (expression -> expression PLUS term .)
    GREATER         reduce using rule 175 (expression -> expression PLUS term .)
    LESS            reduce using rule 175 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 175 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 175 (expression -> expression PLUS term .)
    AND             reduce using rule 175 (expression -> expression PLUS term .)
    OR              reduce using rule 175 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 175 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 175 (expression -> expression PLUS term .)
    NEGATION        reduce using rule 175 (expression -> expression PLUS term .)
    COMMENT         reduce using rule 175 (expression -> expression PLUS term .)
    MULTICOMMENT    reduce using rule 175 (expression -> expression PLUS term .)
    FUNCTION        reduce using rule 175 (expression -> expression PLUS term .)
    PRINT           reduce using rule 175 (expression -> expression PLUS term .)
    INCREMENT       reduce using rule 175 (expression -> expression PLUS term .)
    DECREMENT       reduce using rule 175 (expression -> expression PLUS term .)
    NORMSTRING1     reduce using rule 175 (expression -> expression PLUS term .)
    NORMSTRING2     reduce using rule 175 (expression -> expression PLUS term .)
    MULTISTRING     reduce using rule 175 (expression -> expression PLUS term .)
    ENUM            reduce using rule 175 (expression -> expression PLUS term .)
    IF              reduce using rule 175 (expression -> expression PLUS term .)
    WHILE           reduce using rule 175 (expression -> expression PLUS term .)
    FOR             reduce using rule 175 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 175 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 175 (expression -> expression PLUS term .)
    VARIABLE        reduce using rule 175 (expression -> expression PLUS term .)
    LET             reduce using rule 175 (expression -> expression PLUS term .)
    VAR             reduce using rule 175 (expression -> expression PLUS term .)
    STATIC          reduce using rule 175 (expression -> expression PLUS term .)
    CONST           reduce using rule 175 (expression -> expression PLUS term .)
    OBJECTNAME      reduce using rule 175 (expression -> expression PLUS term .)
    FUNMATH         reduce using rule 175 (expression -> expression PLUS term .)
    $end            reduce using rule 175 (expression -> expression PLUS term .)
    RKEY            reduce using rule 175 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 175 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 175 (expression -> expression PLUS term .)
    COMMA           reduce using rule 175 (expression -> expression PLUS term .)
=======
    (189) expCond -> expression operador expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    EQUALTO         reduce using rule 189 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 189 (expCond -> expression operador expression .)
    AND             reduce using rule 189 (expCond -> expression operador expression .)
    OR              reduce using rule 189 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 189 (expCond -> expression operador expression .)
    $end            reduce using rule 189 (expCond -> expression operador expression .)
    RKEY            reduce using rule 189 (expCond -> expression operador expression .)
    RBRACKET        reduce using rule 189 (expCond -> expression operador expression .)
    COMMA           reduce using rule 189 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 189 (expCond -> expression operador expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 189

<<<<<<< HEAD
    (201) term1 -> LPAREN . group RPAREN
    (210) factor_expr -> LPAREN . expression RPAREN
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    group                          shift and go to state 125
    expression                     shift and go to state 325
    number                         shift and go to state 126
    variable                       shift and go to state 326
    array_value                    shift and go to state 128
    object_value                   shift and go to state 129
    term                           shift and go to state 18
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    term1                          shift and go to state 45
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    funciones                      shift and go to state 67
    enum_value                     shift and go to state 59
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 190

    (176) expression -> expression MINUS term .

    PLUS            reduce using rule 176 (expression -> expression MINUS term .)
    MINUS           reduce using rule 176 (expression -> expression MINUS term .)
    PRODUCT         reduce using rule 176 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 176 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 176 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 176 (expression -> expression MINUS term .)
    GREATER         reduce using rule 176 (expression -> expression MINUS term .)
    LESS            reduce using rule 176 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 176 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 176 (expression -> expression MINUS term .)
    AND             reduce using rule 176 (expression -> expression MINUS term .)
    OR              reduce using rule 176 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 176 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 176 (expression -> expression MINUS term .)
    NEGATION        reduce using rule 176 (expression -> expression MINUS term .)
    COMMENT         reduce using rule 176 (expression -> expression MINUS term .)
    MULTICOMMENT    reduce using rule 176 (expression -> expression MINUS term .)
    FUNCTION        reduce using rule 176 (expression -> expression MINUS term .)
    PRINT           reduce using rule 176 (expression -> expression MINUS term .)
    INCREMENT       reduce using rule 176 (expression -> expression MINUS term .)
    DECREMENT       reduce using rule 176 (expression -> expression MINUS term .)
    NORMSTRING1     reduce using rule 176 (expression -> expression MINUS term .)
    NORMSTRING2     reduce using rule 176 (expression -> expression MINUS term .)
    MULTISTRING     reduce using rule 176 (expression -> expression MINUS term .)
    ENUM            reduce using rule 176 (expression -> expression MINUS term .)
    IF              reduce using rule 176 (expression -> expression MINUS term .)
    WHILE           reduce using rule 176 (expression -> expression MINUS term .)
    FOR             reduce using rule 176 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 176 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 176 (expression -> expression MINUS term .)
    VARIABLE        reduce using rule 176 (expression -> expression MINUS term .)
    LET             reduce using rule 176 (expression -> expression MINUS term .)
    VAR             reduce using rule 176 (expression -> expression MINUS term .)
    STATIC          reduce using rule 176 (expression -> expression MINUS term .)
    CONST           reduce using rule 176 (expression -> expression MINUS term .)
    OBJECTNAME      reduce using rule 176 (expression -> expression MINUS term .)
    FUNMATH         reduce using rule 176 (expression -> expression MINUS term .)
    $end            reduce using rule 176 (expression -> expression MINUS term .)
    RKEY            reduce using rule 176 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 176 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 176 (expression -> expression MINUS term .)
    COMMA           reduce using rule 176 (expression -> expression MINUS term .)
=======
    (187) expOpLog -> expression oplogico expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 187 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 187 (expOpLog -> expression oplogico expression .)
    RKEY            reduce using rule 187 (expOpLog -> expression oplogico expression .)
    RBRACKET        reduce using rule 187 (expOpLog -> expression oplogico expression .)
    COMMA           reduce using rule 187 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 187 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103


state 190

    (181) expEq -> expression EQUALTO expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 181 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 181 (expEq -> expression EQUALTO expression .)
    RKEY            reduce using rule 181 (expEq -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 181 (expEq -> expression EQUALTO expression .)
    COMMA           reduce using rule 181 (expEq -> expression EQUALTO expression .)
    RPAREN          reduce using rule 181 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 191

<<<<<<< HEAD
    (178) expression -> expression PRODUCT expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    EQUALTO         reduce using rule 178 (expression -> expression PRODUCT expression .)
    NOTEQUALTO      reduce using rule 178 (expression -> expression PRODUCT expression .)
    GREATER         reduce using rule 178 (expression -> expression PRODUCT expression .)
    LESS            reduce using rule 178 (expression -> expression PRODUCT expression .)
    GREATEREQUAL    reduce using rule 178 (expression -> expression PRODUCT expression .)
    LESSEQUAL       reduce using rule 178 (expression -> expression PRODUCT expression .)
    AND             reduce using rule 178 (expression -> expression PRODUCT expression .)
    OR              reduce using rule 178 (expression -> expression PRODUCT expression .)
    POINTCOMMA      reduce using rule 178 (expression -> expression PRODUCT expression .)
    LPAREN          reduce using rule 178 (expression -> expression PRODUCT expression .)
    NEGATION        reduce using rule 178 (expression -> expression PRODUCT expression .)
    COMMENT         reduce using rule 178 (expression -> expression PRODUCT expression .)
    MULTICOMMENT    reduce using rule 178 (expression -> expression PRODUCT expression .)
    FUNCTION        reduce using rule 178 (expression -> expression PRODUCT expression .)
    PRINT           reduce using rule 178 (expression -> expression PRODUCT expression .)
    INCREMENT       reduce using rule 178 (expression -> expression PRODUCT expression .)
    DECREMENT       reduce using rule 178 (expression -> expression PRODUCT expression .)
    NORMSTRING1     reduce using rule 178 (expression -> expression PRODUCT expression .)
    NORMSTRING2     reduce using rule 178 (expression -> expression PRODUCT expression .)
    MULTISTRING     reduce using rule 178 (expression -> expression PRODUCT expression .)
    ENUM            reduce using rule 178 (expression -> expression PRODUCT expression .)
    IF              reduce using rule 178 (expression -> expression PRODUCT expression .)
    WHILE           reduce using rule 178 (expression -> expression PRODUCT expression .)
    FOR             reduce using rule 178 (expression -> expression PRODUCT expression .)
    NUMBER          reduce using rule 178 (expression -> expression PRODUCT expression .)
    FLOAT           reduce using rule 178 (expression -> expression PRODUCT expression .)
    VARIABLE        reduce using rule 178 (expression -> expression PRODUCT expression .)
    LET             reduce using rule 178 (expression -> expression PRODUCT expression .)
    VAR             reduce using rule 178 (expression -> expression PRODUCT expression .)
    STATIC          reduce using rule 178 (expression -> expression PRODUCT expression .)
    CONST           reduce using rule 178 (expression -> expression PRODUCT expression .)
    OBJECTNAME      reduce using rule 178 (expression -> expression PRODUCT expression .)
    FUNMATH         reduce using rule 178 (expression -> expression PRODUCT expression .)
    $end            reduce using rule 178 (expression -> expression PRODUCT expression .)
    RKEY            reduce using rule 178 (expression -> expression PRODUCT expression .)
    RPAREN          reduce using rule 178 (expression -> expression PRODUCT expression .)
    RBRACKET        reduce using rule 178 (expression -> expression PRODUCT expression .)
    COMMA           reduce using rule 178 (expression -> expression PRODUCT expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

  ! PLUS            [ reduce using rule 178 (expression -> expression PRODUCT expression .) ]
  ! MINUS           [ reduce using rule 178 (expression -> expression PRODUCT expression .) ]
  ! PRODUCT         [ reduce using rule 178 (expression -> expression PRODUCT expression .) ]
  ! DIVIDE          [ reduce using rule 178 (expression -> expression PRODUCT expression .) ]
=======
    (184) expNotEq -> expression NOTEQUALTO expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    RKEY            reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    RBRACKET        reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    COMMA           reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    RPAREN          reduce using rule 184 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 192

<<<<<<< HEAD
    (179) expression -> expression DIVIDE expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    EQUALTO         reduce using rule 179 (expression -> expression DIVIDE expression .)
    NOTEQUALTO      reduce using rule 179 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 179 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 179 (expression -> expression DIVIDE expression .)
    GREATEREQUAL    reduce using rule 179 (expression -> expression DIVIDE expression .)
    LESSEQUAL       reduce using rule 179 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 179 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 179 (expression -> expression DIVIDE expression .)
    POINTCOMMA      reduce using rule 179 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 179 (expression -> expression DIVIDE expression .)
    NEGATION        reduce using rule 179 (expression -> expression DIVIDE expression .)
    COMMENT         reduce using rule 179 (expression -> expression DIVIDE expression .)
    MULTICOMMENT    reduce using rule 179 (expression -> expression DIVIDE expression .)
    FUNCTION        reduce using rule 179 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 179 (expression -> expression DIVIDE expression .)
    INCREMENT       reduce using rule 179 (expression -> expression DIVIDE expression .)
    DECREMENT       reduce using rule 179 (expression -> expression DIVIDE expression .)
    NORMSTRING1     reduce using rule 179 (expression -> expression DIVIDE expression .)
    NORMSTRING2     reduce using rule 179 (expression -> expression DIVIDE expression .)
    MULTISTRING     reduce using rule 179 (expression -> expression DIVIDE expression .)
    ENUM            reduce using rule 179 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 179 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 179 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 179 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 179 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 179 (expression -> expression DIVIDE expression .)
    VARIABLE        reduce using rule 179 (expression -> expression DIVIDE expression .)
    LET             reduce using rule 179 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 179 (expression -> expression DIVIDE expression .)
    STATIC          reduce using rule 179 (expression -> expression DIVIDE expression .)
    CONST           reduce using rule 179 (expression -> expression DIVIDE expression .)
    OBJECTNAME      reduce using rule 179 (expression -> expression DIVIDE expression .)
    FUNMATH         reduce using rule 179 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 179 (expression -> expression DIVIDE expression .)
    RKEY            reduce using rule 179 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 179 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 179 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 179 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

  ! PLUS            [ reduce using rule 179 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 179 (expression -> expression DIVIDE expression .) ]
  ! PRODUCT         [ reduce using rule 179 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 179 (expression -> expression DIVIDE expression .) ]
=======
    (185) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
    RKEY            reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
    RBRACKET        reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
    COMMA           reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 185 (expOpLog -> expCond oplogico expCond .)
>>>>>>> master


state 193

<<<<<<< HEAD
    (199) expCond -> expression operador expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    EQUALTO         reduce using rule 199 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 199 (expCond -> expression operador expression .)
    AND             reduce using rule 199 (expCond -> expression operador expression .)
    OR              reduce using rule 199 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 199 (expCond -> expression operador expression .)
    LPAREN          reduce using rule 199 (expCond -> expression operador expression .)
    NEGATION        reduce using rule 199 (expCond -> expression operador expression .)
    COMMENT         reduce using rule 199 (expCond -> expression operador expression .)
    MULTICOMMENT    reduce using rule 199 (expCond -> expression operador expression .)
    FUNCTION        reduce using rule 199 (expCond -> expression operador expression .)
    PRINT           reduce using rule 199 (expCond -> expression operador expression .)
    INCREMENT       reduce using rule 199 (expCond -> expression operador expression .)
    DECREMENT       reduce using rule 199 (expCond -> expression operador expression .)
    NORMSTRING1     reduce using rule 199 (expCond -> expression operador expression .)
    NORMSTRING2     reduce using rule 199 (expCond -> expression operador expression .)
    MULTISTRING     reduce using rule 199 (expCond -> expression operador expression .)
    ENUM            reduce using rule 199 (expCond -> expression operador expression .)
    IF              reduce using rule 199 (expCond -> expression operador expression .)
    WHILE           reduce using rule 199 (expCond -> expression operador expression .)
    FOR             reduce using rule 199 (expCond -> expression operador expression .)
    NUMBER          reduce using rule 199 (expCond -> expression operador expression .)
    FLOAT           reduce using rule 199 (expCond -> expression operador expression .)
    VARIABLE        reduce using rule 199 (expCond -> expression operador expression .)
    LET             reduce using rule 199 (expCond -> expression operador expression .)
    VAR             reduce using rule 199 (expCond -> expression operador expression .)
    STATIC          reduce using rule 199 (expCond -> expression operador expression .)
    CONST           reduce using rule 199 (expCond -> expression operador expression .)
    OBJECTNAME      reduce using rule 199 (expCond -> expression operador expression .)
    FUNMATH         reduce using rule 199 (expCond -> expression operador expression .)
    $end            reduce using rule 199 (expCond -> expression operador expression .)
    RKEY            reduce using rule 199 (expCond -> expression operador expression .)
    RBRACKET        reduce using rule 199 (expCond -> expression operador expression .)
    COMMA           reduce using rule 199 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 199 (expCond -> expression operador expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (189) expCond -> expression . operador expression
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204

    operador                       shift and go to state 104
>>>>>>> master


<<<<<<< HEAD
state 194

    (197) expOpLog -> expression oplogico expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 197 (expOpLog -> expression oplogico expression .)
    LPAREN          reduce using rule 197 (expOpLog -> expression oplogico expression .)
    NEGATION        reduce using rule 197 (expOpLog -> expression oplogico expression .)
    COMMENT         reduce using rule 197 (expOpLog -> expression oplogico expression .)
    MULTICOMMENT    reduce using rule 197 (expOpLog -> expression oplogico expression .)
    FUNCTION        reduce using rule 197 (expOpLog -> expression oplogico expression .)
    PRINT           reduce using rule 197 (expOpLog -> expression oplogico expression .)
    INCREMENT       reduce using rule 197 (expOpLog -> expression oplogico expression .)
    DECREMENT       reduce using rule 197 (expOpLog -> expression oplogico expression .)
    NORMSTRING1     reduce using rule 197 (expOpLog -> expression oplogico expression .)
    NORMSTRING2     reduce using rule 197 (expOpLog -> expression oplogico expression .)
    MULTISTRING     reduce using rule 197 (expOpLog -> expression oplogico expression .)
    ENUM            reduce using rule 197 (expOpLog -> expression oplogico expression .)
    IF              reduce using rule 197 (expOpLog -> expression oplogico expression .)
    WHILE           reduce using rule 197 (expOpLog -> expression oplogico expression .)
    FOR             reduce using rule 197 (expOpLog -> expression oplogico expression .)
    NUMBER          reduce using rule 197 (expOpLog -> expression oplogico expression .)
    FLOAT           reduce using rule 197 (expOpLog -> expression oplogico expression .)
    VARIABLE        reduce using rule 197 (expOpLog -> expression oplogico expression .)
    LET             reduce using rule 197 (expOpLog -> expression oplogico expression .)
    VAR             reduce using rule 197 (expOpLog -> expression oplogico expression .)
    STATIC          reduce using rule 197 (expOpLog -> expression oplogico expression .)
    CONST           reduce using rule 197 (expOpLog -> expression oplogico expression .)
    OBJECTNAME      reduce using rule 197 (expOpLog -> expression oplogico expression .)
    FUNMATH         reduce using rule 197 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 197 (expOpLog -> expression oplogico expression .)
    RKEY            reduce using rule 197 (expOpLog -> expression oplogico expression .)
    RBRACKET        reduce using rule 197 (expOpLog -> expression oplogico expression .)
    COMMA           reduce using rule 197 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 197 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (179) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
    RKEY            reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
    RBRACKET        reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
    COMMA           reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
    RPAREN          reduce using rule 179 (expEq -> expCond EQUALTO expCond .)
>>>>>>> master


state 195

<<<<<<< HEAD
    (191) expEq -> expression EQUALTO expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 191 (expEq -> expression EQUALTO expression .)
    LPAREN          reduce using rule 191 (expEq -> expression EQUALTO expression .)
    NEGATION        reduce using rule 191 (expEq -> expression EQUALTO expression .)
    COMMENT         reduce using rule 191 (expEq -> expression EQUALTO expression .)
    MULTICOMMENT    reduce using rule 191 (expEq -> expression EQUALTO expression .)
    FUNCTION        reduce using rule 191 (expEq -> expression EQUALTO expression .)
    PRINT           reduce using rule 191 (expEq -> expression EQUALTO expression .)
    INCREMENT       reduce using rule 191 (expEq -> expression EQUALTO expression .)
    DECREMENT       reduce using rule 191 (expEq -> expression EQUALTO expression .)
    NORMSTRING1     reduce using rule 191 (expEq -> expression EQUALTO expression .)
    NORMSTRING2     reduce using rule 191 (expEq -> expression EQUALTO expression .)
    MULTISTRING     reduce using rule 191 (expEq -> expression EQUALTO expression .)
    ENUM            reduce using rule 191 (expEq -> expression EQUALTO expression .)
    IF              reduce using rule 191 (expEq -> expression EQUALTO expression .)
    WHILE           reduce using rule 191 (expEq -> expression EQUALTO expression .)
    FOR             reduce using rule 191 (expEq -> expression EQUALTO expression .)
    NUMBER          reduce using rule 191 (expEq -> expression EQUALTO expression .)
    FLOAT           reduce using rule 191 (expEq -> expression EQUALTO expression .)
    VARIABLE        reduce using rule 191 (expEq -> expression EQUALTO expression .)
    LET             reduce using rule 191 (expEq -> expression EQUALTO expression .)
    VAR             reduce using rule 191 (expEq -> expression EQUALTO expression .)
    STATIC          reduce using rule 191 (expEq -> expression EQUALTO expression .)
    CONST           reduce using rule 191 (expEq -> expression EQUALTO expression .)
    OBJECTNAME      reduce using rule 191 (expEq -> expression EQUALTO expression .)
    FUNMATH         reduce using rule 191 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 191 (expEq -> expression EQUALTO expression .)
    RKEY            reduce using rule 191 (expEq -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 191 (expEq -> expression EQUALTO expression .)
    COMMA           reduce using rule 191 (expEq -> expression EQUALTO expression .)
    RPAREN          reduce using rule 191 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (182) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
    RKEY            reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
    RBRACKET        reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMA           reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
    RPAREN          reduce using rule 182 (expNotEq -> expCond NOTEQUALTO expCond .)
>>>>>>> master


state 196

<<<<<<< HEAD
    (194) expNotEq -> expression NOTEQUALTO expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    POINTCOMMA      reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    LPAREN          reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    NEGATION        reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    COMMENT         reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    MULTICOMMENT    reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    FUNCTION        reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    PRINT           reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    INCREMENT       reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    DECREMENT       reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    NORMSTRING1     reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    NORMSTRING2     reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    MULTISTRING     reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    ENUM            reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    IF              reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    WHILE           reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    FOR             reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    NUMBER          reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    FLOAT           reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    VARIABLE        reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    LET             reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    VAR             reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    STATIC          reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    CONST           reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    OBJECTNAME      reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    FUNMATH         reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    RKEY            reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    RBRACKET        reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    COMMA           reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    RPAREN          reduce using rule 194 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (164) value -> string .

    PLUS            reduce using rule 164 (value -> string .)
    POINTCOMMA      reduce using rule 164 (value -> string .)
    $end            reduce using rule 164 (value -> string .)
    RKEY            reduce using rule 164 (value -> string .)
    RBRACKET        reduce using rule 164 (value -> string .)
    COMMA           reduce using rule 164 (value -> string .)
>>>>>>> master


state 197

<<<<<<< HEAD
    (195) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    LPAREN          reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    NEGATION        reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    COMMENT         reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    MULTICOMMENT    reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    FUNCTION        reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    PRINT           reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    INCREMENT       reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    DECREMENT       reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    NORMSTRING1     reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    NORMSTRING2     reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    MULTISTRING     reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    ENUM            reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    IF              reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    WHILE           reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    FOR             reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    NUMBER          reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    FLOAT           reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    VARIABLE        reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    LET             reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    VAR             reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    STATIC          reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    CONST           reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    OBJECTNAME      reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    FUNMATH         reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    RKEY            reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    RBRACKET        reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    COMMA           reduce using rule 195 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 195 (expOpLog -> expCond oplogico expCond .)


state 198
=======
    (160) concatenate -> string PLUS termS .
    (161) termS -> termS . PLUS value

    POINTCOMMA      reduce using rule 160 (concatenate -> string PLUS termS .)
    $end            reduce using rule 160 (concatenate -> string PLUS termS .)
    RKEY            reduce using rule 160 (concatenate -> string PLUS termS .)
    RBRACKET        reduce using rule 160 (concatenate -> string PLUS termS .)
    COMMA           reduce using rule 160 (concatenate -> string PLUS termS .)
    PLUS            shift and go to state 320


state 198

    (162) termS -> value .

    PLUS            reduce using rule 162 (termS -> value .)
    POINTCOMMA      reduce using rule 162 (termS -> value .)
    $end            reduce using rule 162 (termS -> value .)
    RKEY            reduce using rule 162 (termS -> value .)
    RBRACKET        reduce using rule 162 (termS -> value .)
    COMMA           reduce using rule 162 (termS -> value .)
>>>>>>> master

    (199) expCond -> expression . operador expression
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209

    operador                       shift and go to state 108

state 199

<<<<<<< HEAD
    (189) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    LPAREN          reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    NEGATION        reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    COMMENT         reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    MULTICOMMENT    reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    FUNCTION        reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    PRINT           reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    INCREMENT       reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    DECREMENT       reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    NORMSTRING1     reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    NORMSTRING2     reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    MULTISTRING     reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    ENUM            reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    IF              reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    WHILE           reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    FOR             reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    NUMBER          reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    FLOAT           reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    VARIABLE        reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    LET             reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    VAR             reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    STATIC          reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    CONST           reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    OBJECTNAME      reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    FUNMATH         reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    RKEY            reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    RBRACKET        reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    COMMA           reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
    RPAREN          reduce using rule 189 (expEq -> expCond EQUALTO expCond .)
=======
    (163) value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 163 (value -> expression .)
    $end            reduce using rule 163 (value -> expression .)
    RKEY            reduce using rule 163 (value -> expression .)
    RBRACKET        reduce using rule 163 (value -> expression .)
    COMMA           reduce using rule 163 (value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master

  ! PLUS            [ reduce using rule 163 (value -> expression .) ]


<<<<<<< HEAD
    (192) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    LPAREN          reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    NEGATION        reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMENT         reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    MULTICOMMENT    reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    FUNCTION        reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    PRINT           reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    INCREMENT       reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    DECREMENT       reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    NORMSTRING1     reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    NORMSTRING2     reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    MULTISTRING     reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    ENUM            reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    IF              reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    WHILE           reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    FOR             reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    NUMBER          reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    FLOAT           reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    VARIABLE        reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    LET             reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    VAR             reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    STATIC          reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    CONST           reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    OBJECTNAME      reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    FUNMATH         reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    RKEY            reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    RBRACKET        reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMA           reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
    RPAREN          reduce using rule 192 (expNotEq -> expCond NOTEQUALTO expCond .)
=======
state 200

    (190) expCond -> LPAREN expression . operador expression RPAREN
    (200) factor_expr -> LPAREN expression . RPAREN
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204
>>>>>>> master

    operador                       shift and go to state 321

state 201

<<<<<<< HEAD
    (174) value -> string .

    PLUS            reduce using rule 174 (value -> string .)
    POINTCOMMA      reduce using rule 174 (value -> string .)
    LPAREN          reduce using rule 174 (value -> string .)
    NEGATION        reduce using rule 174 (value -> string .)
    COMMENT         reduce using rule 174 (value -> string .)
    MULTICOMMENT    reduce using rule 174 (value -> string .)
    FUNCTION        reduce using rule 174 (value -> string .)
    PRINT           reduce using rule 174 (value -> string .)
    INCREMENT       reduce using rule 174 (value -> string .)
    DECREMENT       reduce using rule 174 (value -> string .)
    NORMSTRING1     reduce using rule 174 (value -> string .)
    NORMSTRING2     reduce using rule 174 (value -> string .)
    MULTISTRING     reduce using rule 174 (value -> string .)
    ENUM            reduce using rule 174 (value -> string .)
    IF              reduce using rule 174 (value -> string .)
    WHILE           reduce using rule 174 (value -> string .)
    FOR             reduce using rule 174 (value -> string .)
    NUMBER          reduce using rule 174 (value -> string .)
    FLOAT           reduce using rule 174 (value -> string .)
    VARIABLE        reduce using rule 174 (value -> string .)
    LET             reduce using rule 174 (value -> string .)
    VAR             reduce using rule 174 (value -> string .)
    STATIC          reduce using rule 174 (value -> string .)
    CONST           reduce using rule 174 (value -> string .)
    OBJECTNAME      reduce using rule 174 (value -> string .)
    FUNMATH         reduce using rule 174 (value -> string .)
    $end            reduce using rule 174 (value -> string .)
    RKEY            reduce using rule 174 (value -> string .)
    RBRACKET        reduce using rule 174 (value -> string .)
    COMMA           reduce using rule 174 (value -> string .)


state 202

    (170) concatenate -> string PLUS termS .
    (171) termS -> termS . PLUS value

    POINTCOMMA      reduce using rule 170 (concatenate -> string PLUS termS .)
    LPAREN          reduce using rule 170 (concatenate -> string PLUS termS .)
    NEGATION        reduce using rule 170 (concatenate -> string PLUS termS .)
    COMMENT         reduce using rule 170 (concatenate -> string PLUS termS .)
    MULTICOMMENT    reduce using rule 170 (concatenate -> string PLUS termS .)
    FUNCTION        reduce using rule 170 (concatenate -> string PLUS termS .)
    PRINT           reduce using rule 170 (concatenate -> string PLUS termS .)
    INCREMENT       reduce using rule 170 (concatenate -> string PLUS termS .)
    DECREMENT       reduce using rule 170 (concatenate -> string PLUS termS .)
    NORMSTRING1     reduce using rule 170 (concatenate -> string PLUS termS .)
    NORMSTRING2     reduce using rule 170 (concatenate -> string PLUS termS .)
    MULTISTRING     reduce using rule 170 (concatenate -> string PLUS termS .)
    ENUM            reduce using rule 170 (concatenate -> string PLUS termS .)
    IF              reduce using rule 170 (concatenate -> string PLUS termS .)
    WHILE           reduce using rule 170 (concatenate -> string PLUS termS .)
    FOR             reduce using rule 170 (concatenate -> string PLUS termS .)
    NUMBER          reduce using rule 170 (concatenate -> string PLUS termS .)
    FLOAT           reduce using rule 170 (concatenate -> string PLUS termS .)
    VARIABLE        reduce using rule 170 (concatenate -> string PLUS termS .)
    LET             reduce using rule 170 (concatenate -> string PLUS termS .)
    VAR             reduce using rule 170 (concatenate -> string PLUS termS .)
    STATIC          reduce using rule 170 (concatenate -> string PLUS termS .)
    CONST           reduce using rule 170 (concatenate -> string PLUS termS .)
    OBJECTNAME      reduce using rule 170 (concatenate -> string PLUS termS .)
    FUNMATH         reduce using rule 170 (concatenate -> string PLUS termS .)
    $end            reduce using rule 170 (concatenate -> string PLUS termS .)
    RKEY            reduce using rule 170 (concatenate -> string PLUS termS .)
    RBRACKET        reduce using rule 170 (concatenate -> string PLUS termS .)
    COMMA           reduce using rule 170 (concatenate -> string PLUS termS .)
    PLUS            shift and go to state 327
=======
    (190) expCond -> LPAREN expression operador . expression RPAREN
    (189) expCond -> expression operador . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expression                     shift and go to state 322
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 202

    (200) factor_expr -> LPAREN expression RPAREN .

    PLUS            reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    PRODUCT         reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    RKEY            reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 200 (factor_expr -> LPAREN expression RPAREN .)
>>>>>>> master


state 203

<<<<<<< HEAD
    (172) termS -> value .

    PLUS            reduce using rule 172 (termS -> value .)
    POINTCOMMA      reduce using rule 172 (termS -> value .)
    LPAREN          reduce using rule 172 (termS -> value .)
    NEGATION        reduce using rule 172 (termS -> value .)
    COMMENT         reduce using rule 172 (termS -> value .)
    MULTICOMMENT    reduce using rule 172 (termS -> value .)
    FUNCTION        reduce using rule 172 (termS -> value .)
    PRINT           reduce using rule 172 (termS -> value .)
    INCREMENT       reduce using rule 172 (termS -> value .)
    DECREMENT       reduce using rule 172 (termS -> value .)
    NORMSTRING1     reduce using rule 172 (termS -> value .)
    NORMSTRING2     reduce using rule 172 (termS -> value .)
    MULTISTRING     reduce using rule 172 (termS -> value .)
    ENUM            reduce using rule 172 (termS -> value .)
    IF              reduce using rule 172 (termS -> value .)
    WHILE           reduce using rule 172 (termS -> value .)
    FOR             reduce using rule 172 (termS -> value .)
    NUMBER          reduce using rule 172 (termS -> value .)
    FLOAT           reduce using rule 172 (termS -> value .)
    VARIABLE        reduce using rule 172 (termS -> value .)
    LET             reduce using rule 172 (termS -> value .)
    VAR             reduce using rule 172 (termS -> value .)
    STATIC          reduce using rule 172 (termS -> value .)
    CONST           reduce using rule 172 (termS -> value .)
    OBJECTNAME      reduce using rule 172 (termS -> value .)
    FUNMATH         reduce using rule 172 (termS -> value .)
    $end            reduce using rule 172 (termS -> value .)
    RKEY            reduce using rule 172 (termS -> value .)
    RBRACKET        reduce using rule 172 (termS -> value .)
    COMMA           reduce using rule 172 (termS -> value .)
=======
    (237) operador -> EQUALTO .

    INCREMENT       reduce using rule 237 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 237 (operador -> EQUALTO .)
    LPAREN          reduce using rule 237 (operador -> EQUALTO .)
    NUMBER          reduce using rule 237 (operador -> EQUALTO .)
    FLOAT           reduce using rule 237 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 237 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 237 (operador -> EQUALTO .)
    FUNMATH         reduce using rule 237 (operador -> EQUALTO .)
    LET             reduce using rule 237 (operador -> EQUALTO .)
    VAR             reduce using rule 237 (operador -> EQUALTO .)
    STATIC          reduce using rule 237 (operador -> EQUALTO .)
    CONST           reduce using rule 237 (operador -> EQUALTO .)
>>>>>>> master


state 204

<<<<<<< HEAD
    (173) value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
=======
    (238) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 238 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 238 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 238 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 238 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 238 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 238 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 238 (operador -> NOTEQUALTO .)
    FUNMATH         reduce using rule 238 (operador -> NOTEQUALTO .)
    LET             reduce using rule 238 (operador -> NOTEQUALTO .)
    VAR             reduce using rule 238 (operador -> NOTEQUALTO .)
    STATIC          reduce using rule 238 (operador -> NOTEQUALTO .)
    CONST           reduce using rule 238 (operador -> NOTEQUALTO .)

>>>>>>> master

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 173 (value -> expression .)
    LPAREN          reduce using rule 173 (value -> expression .)
    NEGATION        reduce using rule 173 (value -> expression .)
    COMMENT         reduce using rule 173 (value -> expression .)
    MULTICOMMENT    reduce using rule 173 (value -> expression .)
    FUNCTION        reduce using rule 173 (value -> expression .)
    PRINT           reduce using rule 173 (value -> expression .)
    INCREMENT       reduce using rule 173 (value -> expression .)
    DECREMENT       reduce using rule 173 (value -> expression .)
    NORMSTRING1     reduce using rule 173 (value -> expression .)
    NORMSTRING2     reduce using rule 173 (value -> expression .)
    MULTISTRING     reduce using rule 173 (value -> expression .)
    ENUM            reduce using rule 173 (value -> expression .)
    IF              reduce using rule 173 (value -> expression .)
    WHILE           reduce using rule 173 (value -> expression .)
    FOR             reduce using rule 173 (value -> expression .)
    NUMBER          reduce using rule 173 (value -> expression .)
    FLOAT           reduce using rule 173 (value -> expression .)
    VARIABLE        reduce using rule 173 (value -> expression .)
    LET             reduce using rule 173 (value -> expression .)
    VAR             reduce using rule 173 (value -> expression .)
    STATIC          reduce using rule 173 (value -> expression .)
    CONST           reduce using rule 173 (value -> expression .)
    OBJECTNAME      reduce using rule 173 (value -> expression .)
    FUNMATH         reduce using rule 173 (value -> expression .)
    $end            reduce using rule 173 (value -> expression .)
    RKEY            reduce using rule 173 (value -> expression .)
    RBRACKET        reduce using rule 173 (value -> expression .)
    COMMA           reduce using rule 173 (value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

  ! PLUS            [ reduce using rule 173 (value -> expression .) ]

<<<<<<< HEAD

state 205
=======
    (188) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    RKEY            reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    RBRACKET        reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMA           reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 188 (factor_exprlog -> LPAREN expCond RPAREN .)
>>>>>>> master

    (200) expCond -> LPAREN expression . operador expression RPAREN
    (210) factor_expr -> LPAREN expression . RPAREN
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209

    operador                       shift and go to state 328

state 206

<<<<<<< HEAD
    (200) expCond -> LPAREN expression operador . expression RPAREN
    (199) expCond -> expression operador . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 329
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 207

    (210) factor_expr -> LPAREN expression RPAREN .

    PLUS            reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    PRODUCT         reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    NEGATION        reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    COMMENT         reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    MULTICOMMENT    reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    FUNCTION        reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    INCREMENT       reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    DECREMENT       reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    NORMSTRING1     reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    NORMSTRING2     reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    MULTISTRING     reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    ENUM            reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    IF              reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    FOR             reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    FLOAT           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    VARIABLE        reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    LET             reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    VAR             reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    STATIC          reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    CONST           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    OBJECTNAME      reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    FUNMATH         reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    RKEY            reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 210 (factor_expr -> LPAREN expression RPAREN .)
=======
    (191) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    RKEY            reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 191 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 191 (term1 -> LPAREN group RPAREN .)


state 207

    (248) mathAbs -> declare_any EQUAL . mathAbs
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    FUNMATH         shift and go to state 325
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
>>>>>>> master

    declare_any                    shift and go to state 323
    mathAbs                        shift and go to state 324
    prefix                         shift and go to state 68

state 208

<<<<<<< HEAD
    (247) operador -> EQUALTO .

    INCREMENT       reduce using rule 247 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 247 (operador -> EQUALTO .)
    LPAREN          reduce using rule 247 (operador -> EQUALTO .)
    NUMBER          reduce using rule 247 (operador -> EQUALTO .)
    FLOAT           reduce using rule 247 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 247 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 247 (operador -> EQUALTO .)
    FUNMATH         reduce using rule 247 (operador -> EQUALTO .)
    LET             reduce using rule 247 (operador -> EQUALTO .)
    VAR             reduce using rule 247 (operador -> EQUALTO .)
    STATIC          reduce using rule 247 (operador -> EQUALTO .)
    CONST           reduce using rule 247 (operador -> EQUALTO .)
=======
    (186) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RKEY            reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RBRACKET        reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMA           reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 186 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
>>>>>>> master


state 209

<<<<<<< HEAD
    (248) operador -> NOTEQUALTO .
=======
    (188) factor_exprlog -> LPAREN . expCond RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 118
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    expCond                        shift and go to state 120
    expression                     shift and go to state 193
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

    INCREMENT       reduce using rule 248 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 248 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 248 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 248 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 248 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 248 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 248 (operador -> NOTEQUALTO .)
    FUNMATH         reduce using rule 248 (operador -> NOTEQUALTO .)
    LET             reduce using rule 248 (operador -> NOTEQUALTO .)
    VAR             reduce using rule 248 (operador -> NOTEQUALTO .)
    STATIC          reduce using rule 248 (operador -> NOTEQUALTO .)
    CONST           reduce using rule 248 (operador -> NOTEQUALTO .)

<<<<<<< HEAD

state 210

    (198) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    LPAREN          reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    NEGATION        reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMENT         reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    MULTICOMMENT    reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    FUNCTION        reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    PRINT           reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    INCREMENT       reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    DECREMENT       reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    NORMSTRING1     reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    NORMSTRING2     reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    MULTISTRING     reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    ENUM            reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    IF              reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    WHILE           reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    FOR             reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    NUMBER          reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    FLOAT           reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    VARIABLE        reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    LET             reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    VAR             reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    STATIC          reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    CONST           reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    OBJECTNAME      reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    FUNMATH         reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    RKEY            reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    RBRACKET        reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMA           reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 198 (factor_exprlog -> LPAREN expCond RPAREN .)
=======
    (180) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RKEY            reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMA           reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RPAREN          reduce using rule 180 (expEq -> factor_exprlog EQUALTO factor_exprlog .)

>>>>>>> master


<<<<<<< HEAD
state 211

    (201) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    LPAREN          reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    NEGATION        reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    COMMENT         reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    MULTICOMMENT    reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    FUNCTION        reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    PRINT           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    NORMSTRING1     reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    NORMSTRING2     reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    MULTISTRING     reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    ENUM            reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    IF              reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    WHILE           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    FOR             reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    NUMBER          reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    FLOAT           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    VARIABLE        reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    LET             reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    VAR             reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    STATIC          reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    CONST           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    OBJECTNAME      reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    FUNMATH         reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    RKEY            reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 201 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 201 (term1 -> LPAREN group RPAREN .)
=======
    (183) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RKEY            reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMA           reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RPAREN          reduce using rule 183 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
>>>>>>> master


state 212

<<<<<<< HEAD
    (258) mathAbs -> declare_any EQUAL . mathAbs
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    FUNMATH         shift and go to state 332
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    declare_any                    shift and go to state 330
    mathAbs                        shift and go to state 331
    prefix                         shift and go to state 71

state 213

    (196) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    LPAREN          reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    NEGATION        reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMENT         reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    MULTICOMMENT    reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    FUNCTION        reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    PRINT           reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    INCREMENT       reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    DECREMENT       reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    NORMSTRING1     reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    NORMSTRING2     reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    MULTISTRING     reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    ENUM            reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    IF              reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    WHILE           reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    FOR             reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    NUMBER          reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    FLOAT           reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    VARIABLE        reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    LET             reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    VAR             reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    STATIC          reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    CONST           reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    OBJECTNAME      reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    FUNMATH         reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RKEY            reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RBRACKET        reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMA           reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 196 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
=======
    (177) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 326


state 213

    (188) factor_exprlog -> LPAREN expCond . RPAREN
    (185) expOpLog -> expCond . oplogico expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    RPAREN          shift and go to state 205
    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master

    oplogico                       shift and go to state 114

state 214

<<<<<<< HEAD
    (198) factor_exprlog -> LPAREN . expCond RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 122
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expCond                        shift and go to state 124
    expression                     shift and go to state 198
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 215

    (190) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    LPAREN          reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    NEGATION        reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMENT         reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    MULTICOMMENT    reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    FUNCTION        reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    PRINT           reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    INCREMENT       reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    DECREMENT       reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    NORMSTRING1     reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    NORMSTRING2     reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    MULTISTRING     reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    ENUM            reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    IF              reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    WHILE           reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    FOR             reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    NUMBER          reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    FLOAT           reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    VARIABLE        reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    LET             reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    VAR             reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    STATIC          reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    CONST           reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    OBJECTNAME      reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    FUNMATH         reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RKEY            reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMA           reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RPAREN          reduce using rule 190 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
=======
    (190) expCond -> LPAREN expression . operador expression RPAREN
    (200) factor_expr -> LPAREN expression . RPAREN
    (187) expOpLog -> expression . oplogico expression
    (189) expCond -> expression . operador expression
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 201
    oplogico                       shift and go to state 105

state 215

    (186) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master

    oplogico                       shift and go to state 129

state 216

<<<<<<< HEAD
    (193) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    LPAREN          reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    NEGATION        reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMENT         reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    MULTICOMMENT    reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    FUNCTION        reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    PRINT           reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    INCREMENT       reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    DECREMENT       reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    NORMSTRING1     reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    NORMSTRING2     reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    MULTISTRING     reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    ENUM            reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    IF              reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    WHILE           reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    FOR             reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    NUMBER          reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    FLOAT           reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    VARIABLE        reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    LET             reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    VAR             reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    STATIC          reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    CONST           reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    OBJECTNAME      reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    FUNMATH         reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RKEY            reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMA           reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RPAREN          reduce using rule 193 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
=======
    (261) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT . LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT . LPAREN number_value RPAREN

    LPAREN          shift and go to state 327
>>>>>>> master


state 217

<<<<<<< HEAD
    (187) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 333
=======
    (263) stringConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN string RPAREN
    (270) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN list_types RPAREN

    LPAREN          shift and go to state 328
>>>>>>> master


state 218

<<<<<<< HEAD
    (198) factor_exprlog -> LPAREN expCond . RPAREN
    (195) expOpLog -> expCond . oplogico expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    RPAREN          shift and go to state 210
    AND             shift and go to state 116
    OR              shift and go to state 117
=======
    (265) stringSplit -> VARIABLE POINT FUNCTIONSPLIT . LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE POINT FUNCTIONSPLIT . LPAREN string RPAREN

    LPAREN          shift and go to state 329
>>>>>>> master

    oplogico                       shift and go to state 118

state 219

<<<<<<< HEAD
    (200) expCond -> LPAREN expression . operador expression RPAREN
    (210) factor_expr -> LPAREN expression . RPAREN
    (197) expOpLog -> expression . oplogico expression
    (199) expCond -> expression . operador expression
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 206
    oplogico                       shift and go to state 109

state 220

    (196) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    AND             shift and go to state 116
    OR              shift and go to state 117
=======
    (276) arrayFilter -> VARIABLE POINT FUNCTIONFILTER . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 330


state 220

    (274) arrayJoin -> VARIABLE POINT FUNCTIONJOIN . LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE POINT FUNCTIONJOIN . LPAREN string RPAREN

    LPAREN          shift and go to state 331
>>>>>>> master

    oplogico                       shift and go to state 133

state 221

<<<<<<< HEAD
    (271) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT . LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT . LPAREN number_value RPAREN

    LPAREN          shift and go to state 334
=======
    (279) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN string RPAREN

    LPAREN          shift and go to state 332
>>>>>>> master


state 222

<<<<<<< HEAD
    (273) stringConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN string RPAREN
    (280) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT . LPAREN list_types RPAREN

    LPAREN          shift and go to state 335
=======
    (283) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN string RPAREN

    LPAREN          shift and go to state 333
>>>>>>> master


state 223

<<<<<<< HEAD
    (275) stringSplit -> VARIABLE POINT FUNCTIONSPLIT . LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE POINT FUNCTIONSPLIT . LPAREN string RPAREN

    LPAREN          shift and go to state 336
=======
    (56) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN
    (210) string_object -> NEW . OBJECTSTRING LPAREN string RPAREN

    SET             shift and go to state 334
    OBJECTSTRING    shift and go to state 335
>>>>>>> master


state 224

<<<<<<< HEAD
    (286) arrayFilter -> VARIABLE POINT FUNCTIONFILTER . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 337
=======
    (86) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 86 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 86 (var_null -> declare_any EQUAL NULL .)
    RKEY            reduce using rule 86 (var_null -> declare_any EQUAL NULL .)
>>>>>>> master


state 225

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE POINT FUNCTIONJOIN . LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE POINT FUNCTIONJOIN . LPAREN string RPAREN

    LPAREN          shift and go to state 338
=======
    (87) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 87 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 87 (var_undefined -> declare_any EQUAL UNDEFINED .)
    RKEY            reduce using rule 87 (var_undefined -> declare_any EQUAL UNDEFINED .)
>>>>>>> master


state 226

<<<<<<< HEAD
    (289) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE POINT FUNCTIONADD . LPAREN string RPAREN

    LPAREN          shift and go to state 339
=======
    (102) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 102 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 102 (declare_generic -> declare_any EQUAL assign_value .)
    RKEY            reduce using rule 102 (declare_generic -> declare_any EQUAL assign_value .)
>>>>>>> master


state 227

<<<<<<< HEAD
    (293) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE POINT FUNCTIONHAS . LPAREN string RPAREN

    LPAREN          shift and go to state 340
=======
    (85) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 85 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 85 (declare_generic_array -> declare_any EQUAL list_types .)
    RKEY            reduce using rule 85 (declare_generic_array -> declare_any EQUAL list_types .)
>>>>>>> master


state 228

<<<<<<< HEAD
    (65) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN
    (220) string_object -> NEW . OBJECTSTRING LPAREN string RPAREN

    SET             shift and go to state 341
    OBJECTSTRING    shift and go to state 342
=======
    (248) mathAbs -> declare_any EQUAL mathAbs .
    (245) funcionmath -> mathAbs .

  ! reduce/reduce conflict for PLUS resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for MINUS resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for PRODUCT resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for EQUALTO resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NOTEQUALTO resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for GREATER resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LESS resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for AND resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for OR resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for POINTCOMMA resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for $end resolved using rule 245 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for RKEY resolved using rule 245 (funcionmath -> mathAbs .)
    PLUS            reduce using rule 245 (funcionmath -> mathAbs .)
    MINUS           reduce using rule 245 (funcionmath -> mathAbs .)
    PRODUCT         reduce using rule 245 (funcionmath -> mathAbs .)
    DIVIDE          reduce using rule 245 (funcionmath -> mathAbs .)
    EQUALTO         reduce using rule 245 (funcionmath -> mathAbs .)
    NOTEQUALTO      reduce using rule 245 (funcionmath -> mathAbs .)
    GREATER         reduce using rule 245 (funcionmath -> mathAbs .)
    LESS            reduce using rule 245 (funcionmath -> mathAbs .)
    GREATEREQUAL    reduce using rule 245 (funcionmath -> mathAbs .)
    LESSEQUAL       reduce using rule 245 (funcionmath -> mathAbs .)
    AND             reduce using rule 245 (funcionmath -> mathAbs .)
    OR              reduce using rule 245 (funcionmath -> mathAbs .)
    POINTCOMMA      reduce using rule 245 (funcionmath -> mathAbs .)
    $end            reduce using rule 245 (funcionmath -> mathAbs .)
    RKEY            reduce using rule 245 (funcionmath -> mathAbs .)

  ! PLUS            [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! MINUS           [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! PRODUCT         [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! DIVIDE          [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! EQUALTO         [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NOTEQUALTO      [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! GREATER         [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LESS            [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! GREATEREQUAL    [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LESSEQUAL       [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! AND             [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! OR              [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! POINTCOMMA      [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! $end            [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! RKEY            [ reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .) ]
>>>>>>> master


state 229

<<<<<<< HEAD
    (95) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    LPAREN          reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    NEGATION        reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    COMMENT         reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    MULTICOMMENT    reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    FUNCTION        reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    PRINT           reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    INCREMENT       reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    DECREMENT       reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    NORMSTRING1     reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    NORMSTRING2     reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    MULTISTRING     reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    ENUM            reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    IF              reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    WHILE           reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    FOR             reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    NUMBER          reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    FLOAT           reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    VARIABLE        reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    LET             reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    VAR             reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    STATIC          reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    CONST           reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    OBJECTNAME      reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    FUNMATH         reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 95 (var_null -> declare_any EQUAL NULL .)
    RKEY            reduce using rule 95 (var_null -> declare_any EQUAL NULL .)


state 230

    (96) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    LPAREN          reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    NEGATION        reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    COMMENT         reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    MULTICOMMENT    reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    FUNCTION        reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    PRINT           reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    INCREMENT       reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    DECREMENT       reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    NORMSTRING1     reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    NORMSTRING2     reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    MULTISTRING     reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    ENUM            reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    IF              reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    WHILE           reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    FOR             reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    NUMBER          reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    FLOAT           reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    VARIABLE        reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    LET             reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    VAR             reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    STATIC          reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    CONST           reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    OBJECTNAME      reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    FUNMATH         reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
    RKEY            reduce using rule 96 (var_undefined -> declare_any EQUAL UNDEFINED .)
=======
    (115) assign_value -> general_value .

    POINTCOMMA      reduce using rule 115 (assign_value -> general_value .)
    $end            reduce using rule 115 (assign_value -> general_value .)
    RKEY            reduce using rule 115 (assign_value -> general_value .)


state 230

    (116) assign_value -> object_definition .

    POINTCOMMA      reduce using rule 116 (assign_value -> object_definition .)
    $end            reduce using rule 116 (assign_value -> object_definition .)
    RKEY            reduce using rule 116 (assign_value -> object_definition .)


state 231

    (117) assign_value -> tuples_list .

    POINTCOMMA      reduce using rule 117 (assign_value -> tuples_list .)
    $end            reduce using rule 117 (assign_value -> tuples_list .)
    RKEY            reduce using rule 117 (assign_value -> tuples_list .)


state 232

    (136) list_types -> list_number .

    POINTCOMMA      reduce using rule 136 (list_types -> list_number .)
    $end            reduce using rule 136 (list_types -> list_number .)
    RKEY            reduce using rule 136 (list_types -> list_number .)
    RPAREN          reduce using rule 136 (list_types -> list_number .)
    COMMA           reduce using rule 136 (list_types -> list_number .)


state 233

    (137) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 137 (list_types -> list_boolean .)
    $end            reduce using rule 137 (list_types -> list_boolean .)
    RKEY            reduce using rule 137 (list_types -> list_boolean .)
    RPAREN          reduce using rule 137 (list_types -> list_boolean .)
    COMMA           reduce using rule 137 (list_types -> list_boolean .)


state 234

    (138) list_types -> list_string .

    POINTCOMMA      reduce using rule 138 (list_types -> list_string .)
    $end            reduce using rule 138 (list_types -> list_string .)
    RKEY            reduce using rule 138 (list_types -> list_string .)
    RPAREN          reduce using rule 138 (list_types -> list_string .)
    COMMA           reduce using rule 138 (list_types -> list_string .)


state 235

    (126) general_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (181) expEq -> expression . EQUALTO expression
    (184) expNotEq -> expression . NOTEQUALTO expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 126 (general_value -> expression .)
    $end            reduce using rule 126 (general_value -> expression .)
    RKEY            reduce using rule 126 (general_value -> expression .)
    COMMA           reduce using rule 126 (general_value -> expression .)
    RBRACKET        reduce using rule 126 (general_value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105

state 236

    (127) general_value -> boolean .

    POINTCOMMA      reduce using rule 127 (general_value -> boolean .)
    $end            reduce using rule 127 (general_value -> boolean .)
    RKEY            reduce using rule 127 (general_value -> boolean .)
    COMMA           reduce using rule 127 (general_value -> boolean .)
    RBRACKET        reduce using rule 127 (general_value -> boolean .)
>>>>>>> master


state 237

<<<<<<< HEAD
    (111) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    LPAREN          reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    NEGATION        reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    COMMENT         reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    MULTICOMMENT    reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    FUNCTION        reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    PRINT           reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    INCREMENT       reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    DECREMENT       reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    NORMSTRING1     reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    NORMSTRING2     reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    MULTISTRING     reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    ENUM            reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    IF              reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    WHILE           reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    FOR             reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    NUMBER          reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    FLOAT           reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    VARIABLE        reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    LET             reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    VAR             reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    STATIC          reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    CONST           reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    OBJECTNAME      reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    FUNMATH         reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
    RKEY            reduce using rule 111 (declare_generic -> declare_any EQUAL assign_value .)
=======
    (128) general_value -> string .
    (160) concatenate -> string . PLUS termS

    POINTCOMMA      reduce using rule 128 (general_value -> string .)
    $end            reduce using rule 128 (general_value -> string .)
    RKEY            reduce using rule 128 (general_value -> string .)
    COMMA           reduce using rule 128 (general_value -> string .)
    RBRACKET        reduce using rule 128 (general_value -> string .)
    PLUS            shift and go to state 117
>>>>>>> master


state 238

    (129) general_value -> concatenate .

    POINTCOMMA      reduce using rule 129 (general_value -> concatenate .)
    $end            reduce using rule 129 (general_value -> concatenate .)
    RKEY            reduce using rule 129 (general_value -> concatenate .)
    COMMA           reduce using rule 129 (general_value -> concatenate .)
    RBRACKET        reduce using rule 129 (general_value -> concatenate .)


state 239

    (130) general_value -> string_object .

    POINTCOMMA      reduce using rule 130 (general_value -> string_object .)
    $end            reduce using rule 130 (general_value -> string_object .)
    RKEY            reduce using rule 130 (general_value -> string_object .)
    COMMA           reduce using rule 130 (general_value -> string_object .)
    RBRACKET        reduce using rule 130 (general_value -> string_object .)

<<<<<<< HEAD
    (94) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    LPAREN          reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    NEGATION        reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    COMMENT         reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    MULTICOMMENT    reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    FUNCTION        reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    PRINT           reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    INCREMENT       reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    DECREMENT       reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    NORMSTRING1     reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    NORMSTRING2     reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    MULTISTRING     reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    ENUM            reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    IF              reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    WHILE           reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    FOR             reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    NUMBER          reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    FLOAT           reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    VARIABLE        reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    LET             reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    VAR             reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    STATIC          reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    CONST           reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    OBJECTNAME      reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    FUNMATH         reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
    RKEY            reduce using rule 94 (declare_generic_array -> declare_any EQUAL list_types .)
=======

state 240

    (131) general_value -> expCond .
    (185) expOpLog -> expCond . oplogico expCond
    (179) expEq -> expCond . EQUALTO expCond
    (182) expNotEq -> expCond . NOTEQUALTO expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 131 (general_value -> expCond .)
    $end            reduce using rule 131 (general_value -> expCond .)
    RKEY            reduce using rule 131 (general_value -> expCond .)
    COMMA           reduce using rule 131 (general_value -> expCond .)
    RBRACKET        reduce using rule 131 (general_value -> expCond .)
    EQUALTO         shift and go to state 115
    NOTEQUALTO      shift and go to state 116
    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master


state 241

<<<<<<< HEAD
    (258) mathAbs -> declare_any EQUAL mathAbs .
    (255) funcionmath -> mathAbs .

  ! reduce/reduce conflict for PLUS resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for MINUS resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for PRODUCT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for EQUALTO resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NOTEQUALTO resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for GREATER resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LESS resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for AND resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for OR resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for POINTCOMMA resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LPAREN resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NEGATION resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for COMMENT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for MULTICOMMENT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for PRINT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NORMSTRING1 resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NORMSTRING2 resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for MULTISTRING resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for ENUM resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for IF resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for WHILE resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for FOR resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for NUMBER resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for FLOAT resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for LET resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for VAR resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for STATIC resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for CONST resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for OBJECTNAME resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for FUNMATH resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for $end resolved using rule 255 (funcionmath -> mathAbs .)
  ! reduce/reduce conflict for RKEY resolved using rule 255 (funcionmath -> mathAbs .)
    PLUS            reduce using rule 255 (funcionmath -> mathAbs .)
    MINUS           reduce using rule 255 (funcionmath -> mathAbs .)
    PRODUCT         reduce using rule 255 (funcionmath -> mathAbs .)
    DIVIDE          reduce using rule 255 (funcionmath -> mathAbs .)
    EQUALTO         reduce using rule 255 (funcionmath -> mathAbs .)
    NOTEQUALTO      reduce using rule 255 (funcionmath -> mathAbs .)
    GREATER         reduce using rule 255 (funcionmath -> mathAbs .)
    LESS            reduce using rule 255 (funcionmath -> mathAbs .)
    GREATEREQUAL    reduce using rule 255 (funcionmath -> mathAbs .)
    LESSEQUAL       reduce using rule 255 (funcionmath -> mathAbs .)
    AND             reduce using rule 255 (funcionmath -> mathAbs .)
    OR              reduce using rule 255 (funcionmath -> mathAbs .)
    POINTCOMMA      reduce using rule 255 (funcionmath -> mathAbs .)
    LPAREN          reduce using rule 255 (funcionmath -> mathAbs .)
    NEGATION        reduce using rule 255 (funcionmath -> mathAbs .)
    COMMENT         reduce using rule 255 (funcionmath -> mathAbs .)
    MULTICOMMENT    reduce using rule 255 (funcionmath -> mathAbs .)
    FUNCTION        reduce using rule 255 (funcionmath -> mathAbs .)
    PRINT           reduce using rule 255 (funcionmath -> mathAbs .)
    INCREMENT       reduce using rule 255 (funcionmath -> mathAbs .)
    DECREMENT       reduce using rule 255 (funcionmath -> mathAbs .)
    NORMSTRING1     reduce using rule 255 (funcionmath -> mathAbs .)
    NORMSTRING2     reduce using rule 255 (funcionmath -> mathAbs .)
    MULTISTRING     reduce using rule 255 (funcionmath -> mathAbs .)
    ENUM            reduce using rule 255 (funcionmath -> mathAbs .)
    IF              reduce using rule 255 (funcionmath -> mathAbs .)
    WHILE           reduce using rule 255 (funcionmath -> mathAbs .)
    FOR             reduce using rule 255 (funcionmath -> mathAbs .)
    NUMBER          reduce using rule 255 (funcionmath -> mathAbs .)
    FLOAT           reduce using rule 255 (funcionmath -> mathAbs .)
    VARIABLE        reduce using rule 255 (funcionmath -> mathAbs .)
    LET             reduce using rule 255 (funcionmath -> mathAbs .)
    VAR             reduce using rule 255 (funcionmath -> mathAbs .)
    STATIC          reduce using rule 255 (funcionmath -> mathAbs .)
    CONST           reduce using rule 255 (funcionmath -> mathAbs .)
    OBJECTNAME      reduce using rule 255 (funcionmath -> mathAbs .)
    FUNMATH         reduce using rule 255 (funcionmath -> mathAbs .)
    $end            reduce using rule 255 (funcionmath -> mathAbs .)
    RKEY            reduce using rule 255 (funcionmath -> mathAbs .)

  ! PLUS            [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! MINUS           [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! PRODUCT         [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! DIVIDE          [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! EQUALTO         [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NOTEQUALTO      [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! GREATER         [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LESS            [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! GREATEREQUAL    [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LESSEQUAL       [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! AND             [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! OR              [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! POINTCOMMA      [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LPAREN          [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NEGATION        [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! COMMENT         [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! MULTICOMMENT    [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! FUNCTION        [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! PRINT           [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! INCREMENT       [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! DECREMENT       [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NORMSTRING1     [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NORMSTRING2     [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! MULTISTRING     [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! ENUM            [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! IF              [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! WHILE           [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! FOR             [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! NUMBER          [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! FLOAT           [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! VARIABLE        [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! LET             [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! VAR             [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! STATIC          [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! CONST           [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! OBJECTNAME      [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! FUNMATH         [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! $end            [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
  ! RKEY            [ reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .) ]
=======
    (132) general_value -> expOpLog .

    POINTCOMMA      reduce using rule 132 (general_value -> expOpLog .)
    $end            reduce using rule 132 (general_value -> expOpLog .)
    RKEY            reduce using rule 132 (general_value -> expOpLog .)
    COMMA           reduce using rule 132 (general_value -> expOpLog .)
    RBRACKET        reduce using rule 132 (general_value -> expOpLog .)
>>>>>>> master


state 242

<<<<<<< HEAD
    (125) assign_value -> general_value .

    POINTCOMMA      reduce using rule 125 (assign_value -> general_value .)
    LPAREN          reduce using rule 125 (assign_value -> general_value .)
    NEGATION        reduce using rule 125 (assign_value -> general_value .)
    COMMENT         reduce using rule 125 (assign_value -> general_value .)
    MULTICOMMENT    reduce using rule 125 (assign_value -> general_value .)
    FUNCTION        reduce using rule 125 (assign_value -> general_value .)
    PRINT           reduce using rule 125 (assign_value -> general_value .)
    INCREMENT       reduce using rule 125 (assign_value -> general_value .)
    DECREMENT       reduce using rule 125 (assign_value -> general_value .)
    NORMSTRING1     reduce using rule 125 (assign_value -> general_value .)
    NORMSTRING2     reduce using rule 125 (assign_value -> general_value .)
    MULTISTRING     reduce using rule 125 (assign_value -> general_value .)
    ENUM            reduce using rule 125 (assign_value -> general_value .)
    IF              reduce using rule 125 (assign_value -> general_value .)
    WHILE           reduce using rule 125 (assign_value -> general_value .)
    FOR             reduce using rule 125 (assign_value -> general_value .)
    NUMBER          reduce using rule 125 (assign_value -> general_value .)
    FLOAT           reduce using rule 125 (assign_value -> general_value .)
    VARIABLE        reduce using rule 125 (assign_value -> general_value .)
    LET             reduce using rule 125 (assign_value -> general_value .)
    VAR             reduce using rule 125 (assign_value -> general_value .)
    STATIC          reduce using rule 125 (assign_value -> general_value .)
    CONST           reduce using rule 125 (assign_value -> general_value .)
    OBJECTNAME      reduce using rule 125 (assign_value -> general_value .)
    FUNMATH         reduce using rule 125 (assign_value -> general_value .)
    $end            reduce using rule 125 (assign_value -> general_value .)
    RKEY            reduce using rule 125 (assign_value -> general_value .)
=======
    (133) general_value -> expNeg .

    POINTCOMMA      reduce using rule 133 (general_value -> expNeg .)
    $end            reduce using rule 133 (general_value -> expNeg .)
    RKEY            reduce using rule 133 (general_value -> expNeg .)
    COMMA           reduce using rule 133 (general_value -> expNeg .)
    RBRACKET        reduce using rule 133 (general_value -> expNeg .)
>>>>>>> master


state 243

<<<<<<< HEAD
    (126) assign_value -> object_definition .

    POINTCOMMA      reduce using rule 126 (assign_value -> object_definition .)
    LPAREN          reduce using rule 126 (assign_value -> object_definition .)
    NEGATION        reduce using rule 126 (assign_value -> object_definition .)
    COMMENT         reduce using rule 126 (assign_value -> object_definition .)
    MULTICOMMENT    reduce using rule 126 (assign_value -> object_definition .)
    FUNCTION        reduce using rule 126 (assign_value -> object_definition .)
    PRINT           reduce using rule 126 (assign_value -> object_definition .)
    INCREMENT       reduce using rule 126 (assign_value -> object_definition .)
    DECREMENT       reduce using rule 126 (assign_value -> object_definition .)
    NORMSTRING1     reduce using rule 126 (assign_value -> object_definition .)
    NORMSTRING2     reduce using rule 126 (assign_value -> object_definition .)
    MULTISTRING     reduce using rule 126 (assign_value -> object_definition .)
    ENUM            reduce using rule 126 (assign_value -> object_definition .)
    IF              reduce using rule 126 (assign_value -> object_definition .)
    WHILE           reduce using rule 126 (assign_value -> object_definition .)
    FOR             reduce using rule 126 (assign_value -> object_definition .)
    NUMBER          reduce using rule 126 (assign_value -> object_definition .)
    FLOAT           reduce using rule 126 (assign_value -> object_definition .)
    VARIABLE        reduce using rule 126 (assign_value -> object_definition .)
    LET             reduce using rule 126 (assign_value -> object_definition .)
    VAR             reduce using rule 126 (assign_value -> object_definition .)
    STATIC          reduce using rule 126 (assign_value -> object_definition .)
    CONST           reduce using rule 126 (assign_value -> object_definition .)
    OBJECTNAME      reduce using rule 126 (assign_value -> object_definition .)
    FUNMATH         reduce using rule 126 (assign_value -> object_definition .)
    $end            reduce using rule 126 (assign_value -> object_definition .)
    RKEY            reduce using rule 126 (assign_value -> object_definition .)
=======
    (134) general_value -> expEq .

    POINTCOMMA      reduce using rule 134 (general_value -> expEq .)
    $end            reduce using rule 134 (general_value -> expEq .)
    RKEY            reduce using rule 134 (general_value -> expEq .)
    COMMA           reduce using rule 134 (general_value -> expEq .)
    RBRACKET        reduce using rule 134 (general_value -> expEq .)
>>>>>>> master


state 244

<<<<<<< HEAD
    (127) assign_value -> tuples_list .

    POINTCOMMA      reduce using rule 127 (assign_value -> tuples_list .)
    LPAREN          reduce using rule 127 (assign_value -> tuples_list .)
    NEGATION        reduce using rule 127 (assign_value -> tuples_list .)
    COMMENT         reduce using rule 127 (assign_value -> tuples_list .)
    MULTICOMMENT    reduce using rule 127 (assign_value -> tuples_list .)
    FUNCTION        reduce using rule 127 (assign_value -> tuples_list .)
    PRINT           reduce using rule 127 (assign_value -> tuples_list .)
    INCREMENT       reduce using rule 127 (assign_value -> tuples_list .)
    DECREMENT       reduce using rule 127 (assign_value -> tuples_list .)
    NORMSTRING1     reduce using rule 127 (assign_value -> tuples_list .)
    NORMSTRING2     reduce using rule 127 (assign_value -> tuples_list .)
    MULTISTRING     reduce using rule 127 (assign_value -> tuples_list .)
    ENUM            reduce using rule 127 (assign_value -> tuples_list .)
    IF              reduce using rule 127 (assign_value -> tuples_list .)
    WHILE           reduce using rule 127 (assign_value -> tuples_list .)
    FOR             reduce using rule 127 (assign_value -> tuples_list .)
    NUMBER          reduce using rule 127 (assign_value -> tuples_list .)
    FLOAT           reduce using rule 127 (assign_value -> tuples_list .)
    VARIABLE        reduce using rule 127 (assign_value -> tuples_list .)
    LET             reduce using rule 127 (assign_value -> tuples_list .)
    VAR             reduce using rule 127 (assign_value -> tuples_list .)
    STATIC          reduce using rule 127 (assign_value -> tuples_list .)
    CONST           reduce using rule 127 (assign_value -> tuples_list .)
    OBJECTNAME      reduce using rule 127 (assign_value -> tuples_list .)
    FUNMATH         reduce using rule 127 (assign_value -> tuples_list .)
    $end            reduce using rule 127 (assign_value -> tuples_list .)
    RKEY            reduce using rule 127 (assign_value -> tuples_list .)
=======
    (135) general_value -> expNotEq .

    POINTCOMMA      reduce using rule 135 (general_value -> expNotEq .)
    $end            reduce using rule 135 (general_value -> expNotEq .)
    RKEY            reduce using rule 135 (general_value -> expNotEq .)
    COMMA           reduce using rule 135 (general_value -> expNotEq .)
    RBRACKET        reduce using rule 135 (general_value -> expNotEq .)
>>>>>>> master


state 245

<<<<<<< HEAD
    (146) list_types -> list_number .

    POINTCOMMA      reduce using rule 146 (list_types -> list_number .)
    LPAREN          reduce using rule 146 (list_types -> list_number .)
    NEGATION        reduce using rule 146 (list_types -> list_number .)
    COMMENT         reduce using rule 146 (list_types -> list_number .)
    MULTICOMMENT    reduce using rule 146 (list_types -> list_number .)
    FUNCTION        reduce using rule 146 (list_types -> list_number .)
    PRINT           reduce using rule 146 (list_types -> list_number .)
    INCREMENT       reduce using rule 146 (list_types -> list_number .)
    DECREMENT       reduce using rule 146 (list_types -> list_number .)
    NORMSTRING1     reduce using rule 146 (list_types -> list_number .)
    NORMSTRING2     reduce using rule 146 (list_types -> list_number .)
    MULTISTRING     reduce using rule 146 (list_types -> list_number .)
    ENUM            reduce using rule 146 (list_types -> list_number .)
    IF              reduce using rule 146 (list_types -> list_number .)
    WHILE           reduce using rule 146 (list_types -> list_number .)
    FOR             reduce using rule 146 (list_types -> list_number .)
    NUMBER          reduce using rule 146 (list_types -> list_number .)
    FLOAT           reduce using rule 146 (list_types -> list_number .)
    VARIABLE        reduce using rule 146 (list_types -> list_number .)
    LET             reduce using rule 146 (list_types -> list_number .)
    VAR             reduce using rule 146 (list_types -> list_number .)
    STATIC          reduce using rule 146 (list_types -> list_number .)
    CONST           reduce using rule 146 (list_types -> list_number .)
    OBJECTNAME      reduce using rule 146 (list_types -> list_number .)
    FUNMATH         reduce using rule 146 (list_types -> list_number .)
    $end            reduce using rule 146 (list_types -> list_number .)
    RKEY            reduce using rule 146 (list_types -> list_number .)
    RPAREN          reduce using rule 146 (list_types -> list_number .)
    COMMA           reduce using rule 146 (list_types -> list_number .)

=======
    (121) object_definition -> LKEY . attributes RKEY
    (122) attributes -> . attributes COMMA attribute
    (123) attributes -> . attribute
    (124) attribute -> . variable TWOPOINTS general_value
    (125) attribute -> . variable TWOPOINTS list_types
    (231) variable -> . VARIABLE

    VARIABLE        shift and go to state 158

    attributes                     shift and go to state 336
    attribute                      shift and go to state 337
    variable                       shift and go to state 338
>>>>>>> master

state 246

<<<<<<< HEAD
    (147) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 147 (list_types -> list_boolean .)
    LPAREN          reduce using rule 147 (list_types -> list_boolean .)
    NEGATION        reduce using rule 147 (list_types -> list_boolean .)
    COMMENT         reduce using rule 147 (list_types -> list_boolean .)
    MULTICOMMENT    reduce using rule 147 (list_types -> list_boolean .)
    FUNCTION        reduce using rule 147 (list_types -> list_boolean .)
    PRINT           reduce using rule 147 (list_types -> list_boolean .)
    INCREMENT       reduce using rule 147 (list_types -> list_boolean .)
    DECREMENT       reduce using rule 147 (list_types -> list_boolean .)
    NORMSTRING1     reduce using rule 147 (list_types -> list_boolean .)
    NORMSTRING2     reduce using rule 147 (list_types -> list_boolean .)
    MULTISTRING     reduce using rule 147 (list_types -> list_boolean .)
    ENUM            reduce using rule 147 (list_types -> list_boolean .)
    IF              reduce using rule 147 (list_types -> list_boolean .)
    WHILE           reduce using rule 147 (list_types -> list_boolean .)
    FOR             reduce using rule 147 (list_types -> list_boolean .)
    NUMBER          reduce using rule 147 (list_types -> list_boolean .)
    FLOAT           reduce using rule 147 (list_types -> list_boolean .)
    VARIABLE        reduce using rule 147 (list_types -> list_boolean .)
    LET             reduce using rule 147 (list_types -> list_boolean .)
    VAR             reduce using rule 147 (list_types -> list_boolean .)
    STATIC          reduce using rule 147 (list_types -> list_boolean .)
    CONST           reduce using rule 147 (list_types -> list_boolean .)
    OBJECTNAME      reduce using rule 147 (list_types -> list_boolean .)
    FUNMATH         reduce using rule 147 (list_types -> list_boolean .)
    $end            reduce using rule 147 (list_types -> list_boolean .)
    RKEY            reduce using rule 147 (list_types -> list_boolean .)
    RPAREN          reduce using rule 147 (list_types -> list_boolean .)
    COMMA           reduce using rule 147 (list_types -> list_boolean .)


state 239

    (148) list_types -> list_string .

    POINTCOMMA      reduce using rule 148 (list_types -> list_string .)
    LPAREN          reduce using rule 148 (list_types -> list_string .)
    NEGATION        reduce using rule 148 (list_types -> list_string .)
    COMMENT         reduce using rule 148 (list_types -> list_string .)
    MULTICOMMENT    reduce using rule 148 (list_types -> list_string .)
    FUNCTION        reduce using rule 148 (list_types -> list_string .)
    PRINT           reduce using rule 148 (list_types -> list_string .)
    INCREMENT       reduce using rule 148 (list_types -> list_string .)
    DECREMENT       reduce using rule 148 (list_types -> list_string .)
    NORMSTRING1     reduce using rule 148 (list_types -> list_string .)
    NORMSTRING2     reduce using rule 148 (list_types -> list_string .)
    MULTISTRING     reduce using rule 148 (list_types -> list_string .)
    ENUM            reduce using rule 148 (list_types -> list_string .)
    IF              reduce using rule 148 (list_types -> list_string .)
    WHILE           reduce using rule 148 (list_types -> list_string .)
    FOR             reduce using rule 148 (list_types -> list_string .)
    NUMBER          reduce using rule 148 (list_types -> list_string .)
    FLOAT           reduce using rule 148 (list_types -> list_string .)
    VARIABLE        reduce using rule 148 (list_types -> list_string .)
    LET             reduce using rule 148 (list_types -> list_string .)
    VAR             reduce using rule 148 (list_types -> list_string .)
    STATIC          reduce using rule 148 (list_types -> list_string .)
    CONST           reduce using rule 148 (list_types -> list_string .)
    OBJECTNAME      reduce using rule 148 (list_types -> list_string .)
    FUNMATH         reduce using rule 148 (list_types -> list_string .)
    $end            reduce using rule 148 (list_types -> list_string .)
    RKEY            reduce using rule 148 (list_types -> list_string .)
    RPAREN          reduce using rule 148 (list_types -> list_string .)
    COMMA           reduce using rule 148 (list_types -> list_string .)


state 240

    (136) general_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (191) expEq -> expression . EQUALTO expression
    (194) expNotEq -> expression . NOTEQUALTO expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 136 (general_value -> expression .)
    LPAREN          reduce using rule 136 (general_value -> expression .)
    NEGATION        reduce using rule 136 (general_value -> expression .)
    COMMENT         reduce using rule 136 (general_value -> expression .)
    MULTICOMMENT    reduce using rule 136 (general_value -> expression .)
    FUNCTION        reduce using rule 136 (general_value -> expression .)
    PRINT           reduce using rule 136 (general_value -> expression .)
    INCREMENT       reduce using rule 136 (general_value -> expression .)
    DECREMENT       reduce using rule 136 (general_value -> expression .)
    NORMSTRING1     reduce using rule 136 (general_value -> expression .)
    NORMSTRING2     reduce using rule 136 (general_value -> expression .)
    MULTISTRING     reduce using rule 136 (general_value -> expression .)
    ENUM            reduce using rule 136 (general_value -> expression .)
    IF              reduce using rule 136 (general_value -> expression .)
    WHILE           reduce using rule 136 (general_value -> expression .)
    FOR             reduce using rule 136 (general_value -> expression .)
    NUMBER          reduce using rule 136 (general_value -> expression .)
    FLOAT           reduce using rule 136 (general_value -> expression .)
    VARIABLE        reduce using rule 136 (general_value -> expression .)
    LET             reduce using rule 136 (general_value -> expression .)
    VAR             reduce using rule 136 (general_value -> expression .)
    STATIC          reduce using rule 136 (general_value -> expression .)
    CONST           reduce using rule 136 (general_value -> expression .)
    OBJECTNAME      reduce using rule 136 (general_value -> expression .)
    FUNMATH         reduce using rule 136 (general_value -> expression .)
    $end            reduce using rule 136 (general_value -> expression .)
    RKEY            reduce using rule 136 (general_value -> expression .)
    COMMA           reduce using rule 136 (general_value -> expression .)
    RBRACKET        reduce using rule 136 (general_value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    EQUALTO         shift and go to state 110
    NOTEQUALTO      shift and go to state 111
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109
=======
    (118) tuples_list -> LBRACKET . tuples_values RBRACKET
    (139) list_number -> LBRACKET . numbers RBRACKET
    (142) list_boolean -> LBRACKET . booleans RBRACKET
    (145) list_string -> LBRACKET . strings RBRACKET
    (119) tuples_values -> . tuples_values COMMA general_value
    (120) tuples_values -> . general_value
    (140) numbers -> . numbers COMMA number_value
    (141) numbers -> . number_value
    (143) booleans -> . booleans COMMA boolean_value
    (144) booleans -> . boolean_value
    (146) strings -> . strings COMMA string_value
    (147) strings -> . string_value
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (148) number_value -> . expression
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (156) string_value -> . string
    (157) string_value -> . other_value
    (158) string_value -> . string_object
    (159) string_value -> . concatenate
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    tuples_values                  shift and go to state 339
    numbers                        shift and go to state 340
    booleans                       shift and go to state 341
    strings                        shift and go to state 342
    general_value                  shift and go to state 343
    number_value                   shift and go to state 344
    boolean_value                  shift and go to state 345
    string_value                   shift and go to state 346
    expression                     shift and go to state 347
    boolean                        shift and go to state 348
    string                         shift and go to state 349
    concatenate                    shift and go to state 350
    string_object                  shift and go to state 351
    expCond                        shift and go to state 352
    expOpLog                       shift and go to state 353
    expNeg                         shift and go to state 354
    expEq                          shift and go to state 355
    expNotEq                       shift and go to state 356
    other_value                    shift and go to state 357
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    group                          shift and go to state 72
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 247

    (57) declare_tuples -> declare_any TWOPOINTS tuples_2_variables .
    (58) declare_tuples -> declare_any TWOPOINTS tuples_2_variables . EQUAL tuples_2_values
>>>>>>> master

    POINTCOMMA      reduce using rule 57 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    $end            reduce using rule 57 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    RKEY            reduce using rule 57 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    EQUAL           shift and go to state 358

<<<<<<< HEAD
    (137) general_value -> boolean .

    POINTCOMMA      reduce using rule 137 (general_value -> boolean .)
    LPAREN          reduce using rule 137 (general_value -> boolean .)
    NEGATION        reduce using rule 137 (general_value -> boolean .)
    COMMENT         reduce using rule 137 (general_value -> boolean .)
    MULTICOMMENT    reduce using rule 137 (general_value -> boolean .)
    FUNCTION        reduce using rule 137 (general_value -> boolean .)
    PRINT           reduce using rule 137 (general_value -> boolean .)
    INCREMENT       reduce using rule 137 (general_value -> boolean .)
    DECREMENT       reduce using rule 137 (general_value -> boolean .)
    NORMSTRING1     reduce using rule 137 (general_value -> boolean .)
    NORMSTRING2     reduce using rule 137 (general_value -> boolean .)
    MULTISTRING     reduce using rule 137 (general_value -> boolean .)
    ENUM            reduce using rule 137 (general_value -> boolean .)
    IF              reduce using rule 137 (general_value -> boolean .)
    WHILE           reduce using rule 137 (general_value -> boolean .)
    FOR             reduce using rule 137 (general_value -> boolean .)
    NUMBER          reduce using rule 137 (general_value -> boolean .)
    FLOAT           reduce using rule 137 (general_value -> boolean .)
    VARIABLE        reduce using rule 137 (general_value -> boolean .)
    LET             reduce using rule 137 (general_value -> boolean .)
    VAR             reduce using rule 137 (general_value -> boolean .)
    STATIC          reduce using rule 137 (general_value -> boolean .)
    CONST           reduce using rule 137 (general_value -> boolean .)
    OBJECTNAME      reduce using rule 137 (general_value -> boolean .)
    FUNMATH         reduce using rule 137 (general_value -> boolean .)
    $end            reduce using rule 137 (general_value -> boolean .)
    RKEY            reduce using rule 137 (general_value -> boolean .)
    COMMA           reduce using rule 137 (general_value -> boolean .)
    RBRACKET        reduce using rule 137 (general_value -> boolean .)
=======

state 248
>>>>>>> master

    (59) declare_tuples -> declare_any TWOPOINTS tuples_3_variables .
    (60) declare_tuples -> declare_any TWOPOINTS tuples_3_variables . EQUAL tuples_3_values

    POINTCOMMA      reduce using rule 59 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    $end            reduce using rule 59 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    RKEY            reduce using rule 59 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    EQUAL           shift and go to state 359

<<<<<<< HEAD
    (138) general_value -> string .
    (170) concatenate -> string . PLUS termS

    POINTCOMMA      reduce using rule 138 (general_value -> string .)
    LPAREN          reduce using rule 138 (general_value -> string .)
    NEGATION        reduce using rule 138 (general_value -> string .)
    COMMENT         reduce using rule 138 (general_value -> string .)
    MULTICOMMENT    reduce using rule 138 (general_value -> string .)
    FUNCTION        reduce using rule 138 (general_value -> string .)
    PRINT           reduce using rule 138 (general_value -> string .)
    INCREMENT       reduce using rule 138 (general_value -> string .)
    DECREMENT       reduce using rule 138 (general_value -> string .)
    NORMSTRING1     reduce using rule 138 (general_value -> string .)
    NORMSTRING2     reduce using rule 138 (general_value -> string .)
    MULTISTRING     reduce using rule 138 (general_value -> string .)
    ENUM            reduce using rule 138 (general_value -> string .)
    IF              reduce using rule 138 (general_value -> string .)
    WHILE           reduce using rule 138 (general_value -> string .)
    FOR             reduce using rule 138 (general_value -> string .)
    NUMBER          reduce using rule 138 (general_value -> string .)
    FLOAT           reduce using rule 138 (general_value -> string .)
    VARIABLE        reduce using rule 138 (general_value -> string .)
    LET             reduce using rule 138 (general_value -> string .)
    VAR             reduce using rule 138 (general_value -> string .)
    STATIC          reduce using rule 138 (general_value -> string .)
    CONST           reduce using rule 138 (general_value -> string .)
    OBJECTNAME      reduce using rule 138 (general_value -> string .)
    FUNMATH         reduce using rule 138 (general_value -> string .)
    $end            reduce using rule 138 (general_value -> string .)
    RKEY            reduce using rule 138 (general_value -> string .)
    COMMA           reduce using rule 138 (general_value -> string .)
    RBRACKET        reduce using rule 138 (general_value -> string .)
    PLUS            shift and go to state 121
=======

state 249
>>>>>>> master

    (61) declare_tuples -> declare_any TWOPOINTS tuples_4_variables .
    (62) declare_tuples -> declare_any TWOPOINTS tuples_4_variables . EQUAL tuples_4_values

    POINTCOMMA      reduce using rule 61 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    $end            reduce using rule 61 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    RKEY            reduce using rule 61 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    EQUAL           shift and go to state 360

<<<<<<< HEAD
    (139) general_value -> concatenate .

    POINTCOMMA      reduce using rule 139 (general_value -> concatenate .)
    LPAREN          reduce using rule 139 (general_value -> concatenate .)
    NEGATION        reduce using rule 139 (general_value -> concatenate .)
    COMMENT         reduce using rule 139 (general_value -> concatenate .)
    MULTICOMMENT    reduce using rule 139 (general_value -> concatenate .)
    FUNCTION        reduce using rule 139 (general_value -> concatenate .)
    PRINT           reduce using rule 139 (general_value -> concatenate .)
    INCREMENT       reduce using rule 139 (general_value -> concatenate .)
    DECREMENT       reduce using rule 139 (general_value -> concatenate .)
    NORMSTRING1     reduce using rule 139 (general_value -> concatenate .)
    NORMSTRING2     reduce using rule 139 (general_value -> concatenate .)
    MULTISTRING     reduce using rule 139 (general_value -> concatenate .)
    ENUM            reduce using rule 139 (general_value -> concatenate .)
    IF              reduce using rule 139 (general_value -> concatenate .)
    WHILE           reduce using rule 139 (general_value -> concatenate .)
    FOR             reduce using rule 139 (general_value -> concatenate .)
    NUMBER          reduce using rule 139 (general_value -> concatenate .)
    FLOAT           reduce using rule 139 (general_value -> concatenate .)
    VARIABLE        reduce using rule 139 (general_value -> concatenate .)
    LET             reduce using rule 139 (general_value -> concatenate .)
    VAR             reduce using rule 139 (general_value -> concatenate .)
    STATIC          reduce using rule 139 (general_value -> concatenate .)
    CONST           reduce using rule 139 (general_value -> concatenate .)
    OBJECTNAME      reduce using rule 139 (general_value -> concatenate .)
    FUNMATH         reduce using rule 139 (general_value -> concatenate .)
    $end            reduce using rule 139 (general_value -> concatenate .)
    RKEY            reduce using rule 139 (general_value -> concatenate .)
    COMMA           reduce using rule 139 (general_value -> concatenate .)
    RBRACKET        reduce using rule 139 (general_value -> concatenate .)
=======

state 250
>>>>>>> master

    (95) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 95 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 95 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 95 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 95 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    RKEY            reduce using rule 95 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)

<<<<<<< HEAD
    (140) general_value -> string_object .

    POINTCOMMA      reduce using rule 140 (general_value -> string_object .)
    LPAREN          reduce using rule 140 (general_value -> string_object .)
    NEGATION        reduce using rule 140 (general_value -> string_object .)
    COMMENT         reduce using rule 140 (general_value -> string_object .)
    MULTICOMMENT    reduce using rule 140 (general_value -> string_object .)
    FUNCTION        reduce using rule 140 (general_value -> string_object .)
    PRINT           reduce using rule 140 (general_value -> string_object .)
    INCREMENT       reduce using rule 140 (general_value -> string_object .)
    DECREMENT       reduce using rule 140 (general_value -> string_object .)
    NORMSTRING1     reduce using rule 140 (general_value -> string_object .)
    NORMSTRING2     reduce using rule 140 (general_value -> string_object .)
    MULTISTRING     reduce using rule 140 (general_value -> string_object .)
    ENUM            reduce using rule 140 (general_value -> string_object .)
    IF              reduce using rule 140 (general_value -> string_object .)
    WHILE           reduce using rule 140 (general_value -> string_object .)
    FOR             reduce using rule 140 (general_value -> string_object .)
    NUMBER          reduce using rule 140 (general_value -> string_object .)
    FLOAT           reduce using rule 140 (general_value -> string_object .)
    VARIABLE        reduce using rule 140 (general_value -> string_object .)
    LET             reduce using rule 140 (general_value -> string_object .)
    VAR             reduce using rule 140 (general_value -> string_object .)
    STATIC          reduce using rule 140 (general_value -> string_object .)
    CONST           reduce using rule 140 (general_value -> string_object .)
    OBJECTNAME      reduce using rule 140 (general_value -> string_object .)
    FUNMATH         reduce using rule 140 (general_value -> string_object .)
    $end            reduce using rule 140 (general_value -> string_object .)
    RKEY            reduce using rule 140 (general_value -> string_object .)
    COMMA           reduce using rule 140 (general_value -> string_object .)
    RBRACKET        reduce using rule 140 (general_value -> string_object .)
=======
>>>>>>> master

state 251

    (92) declare_number -> declare_any TWOPOINTS VARNUMBER .

<<<<<<< HEAD
    (141) general_value -> expCond .
    (195) expOpLog -> expCond . oplogico expCond
    (189) expEq -> expCond . EQUALTO expCond
    (192) expNotEq -> expCond . NOTEQUALTO expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 141 (general_value -> expCond .)
    LPAREN          reduce using rule 141 (general_value -> expCond .)
    NEGATION        reduce using rule 141 (general_value -> expCond .)
    COMMENT         reduce using rule 141 (general_value -> expCond .)
    MULTICOMMENT    reduce using rule 141 (general_value -> expCond .)
    FUNCTION        reduce using rule 141 (general_value -> expCond .)
    PRINT           reduce using rule 141 (general_value -> expCond .)
    INCREMENT       reduce using rule 141 (general_value -> expCond .)
    DECREMENT       reduce using rule 141 (general_value -> expCond .)
    NORMSTRING1     reduce using rule 141 (general_value -> expCond .)
    NORMSTRING2     reduce using rule 141 (general_value -> expCond .)
    MULTISTRING     reduce using rule 141 (general_value -> expCond .)
    ENUM            reduce using rule 141 (general_value -> expCond .)
    IF              reduce using rule 141 (general_value -> expCond .)
    WHILE           reduce using rule 141 (general_value -> expCond .)
    FOR             reduce using rule 141 (general_value -> expCond .)
    NUMBER          reduce using rule 141 (general_value -> expCond .)
    FLOAT           reduce using rule 141 (general_value -> expCond .)
    VARIABLE        reduce using rule 141 (general_value -> expCond .)
    LET             reduce using rule 141 (general_value -> expCond .)
    VAR             reduce using rule 141 (general_value -> expCond .)
    STATIC          reduce using rule 141 (general_value -> expCond .)
    CONST           reduce using rule 141 (general_value -> expCond .)
    OBJECTNAME      reduce using rule 141 (general_value -> expCond .)
    FUNMATH         reduce using rule 141 (general_value -> expCond .)
    $end            reduce using rule 141 (general_value -> expCond .)
    RKEY            reduce using rule 141 (general_value -> expCond .)
    COMMA           reduce using rule 141 (general_value -> expCond .)
    RBRACKET        reduce using rule 141 (general_value -> expCond .)
    EQUALTO         shift and go to state 119
    NOTEQUALTO      shift and go to state 120
    AND             shift and go to state 116
    OR              shift and go to state 117

    oplogico                       shift and go to state 118
=======
    EQUAL           reduce using rule 92 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 92 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 92 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 92 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    RKEY            reduce using rule 92 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 252
>>>>>>> master

    (98) declare_string -> declare_any TWOPOINTS VARSTRING .

<<<<<<< HEAD
    (142) general_value -> expOpLog .

    POINTCOMMA      reduce using rule 142 (general_value -> expOpLog .)
    LPAREN          reduce using rule 142 (general_value -> expOpLog .)
    NEGATION        reduce using rule 142 (general_value -> expOpLog .)
    COMMENT         reduce using rule 142 (general_value -> expOpLog .)
    MULTICOMMENT    reduce using rule 142 (general_value -> expOpLog .)
    FUNCTION        reduce using rule 142 (general_value -> expOpLog .)
    PRINT           reduce using rule 142 (general_value -> expOpLog .)
    INCREMENT       reduce using rule 142 (general_value -> expOpLog .)
    DECREMENT       reduce using rule 142 (general_value -> expOpLog .)
    NORMSTRING1     reduce using rule 142 (general_value -> expOpLog .)
    NORMSTRING2     reduce using rule 142 (general_value -> expOpLog .)
    MULTISTRING     reduce using rule 142 (general_value -> expOpLog .)
    ENUM            reduce using rule 142 (general_value -> expOpLog .)
    IF              reduce using rule 142 (general_value -> expOpLog .)
    WHILE           reduce using rule 142 (general_value -> expOpLog .)
    FOR             reduce using rule 142 (general_value -> expOpLog .)
    NUMBER          reduce using rule 142 (general_value -> expOpLog .)
    FLOAT           reduce using rule 142 (general_value -> expOpLog .)
    VARIABLE        reduce using rule 142 (general_value -> expOpLog .)
    LET             reduce using rule 142 (general_value -> expOpLog .)
    VAR             reduce using rule 142 (general_value -> expOpLog .)
    STATIC          reduce using rule 142 (general_value -> expOpLog .)
    CONST           reduce using rule 142 (general_value -> expOpLog .)
    OBJECTNAME      reduce using rule 142 (general_value -> expOpLog .)
    FUNMATH         reduce using rule 142 (general_value -> expOpLog .)
    $end            reduce using rule 142 (general_value -> expOpLog .)
    RKEY            reduce using rule 142 (general_value -> expOpLog .)
    COMMA           reduce using rule 142 (general_value -> expOpLog .)
    RBRACKET        reduce using rule 142 (general_value -> expOpLog .)
=======
    EQUAL           reduce using rule 98 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 98 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 98 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 98 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    RKEY            reduce using rule 98 (declare_string -> declare_any TWOPOINTS VARSTRING .)

>>>>>>> master

state 253

    (101) declare_var_enum -> declare_any TWOPOINTS object_name .

<<<<<<< HEAD
    (143) general_value -> expNeg .

    POINTCOMMA      reduce using rule 143 (general_value -> expNeg .)
    LPAREN          reduce using rule 143 (general_value -> expNeg .)
    NEGATION        reduce using rule 143 (general_value -> expNeg .)
    COMMENT         reduce using rule 143 (general_value -> expNeg .)
    MULTICOMMENT    reduce using rule 143 (general_value -> expNeg .)
    FUNCTION        reduce using rule 143 (general_value -> expNeg .)
    PRINT           reduce using rule 143 (general_value -> expNeg .)
    INCREMENT       reduce using rule 143 (general_value -> expNeg .)
    DECREMENT       reduce using rule 143 (general_value -> expNeg .)
    NORMSTRING1     reduce using rule 143 (general_value -> expNeg .)
    NORMSTRING2     reduce using rule 143 (general_value -> expNeg .)
    MULTISTRING     reduce using rule 143 (general_value -> expNeg .)
    ENUM            reduce using rule 143 (general_value -> expNeg .)
    IF              reduce using rule 143 (general_value -> expNeg .)
    WHILE           reduce using rule 143 (general_value -> expNeg .)
    FOR             reduce using rule 143 (general_value -> expNeg .)
    NUMBER          reduce using rule 143 (general_value -> expNeg .)
    FLOAT           reduce using rule 143 (general_value -> expNeg .)
    VARIABLE        reduce using rule 143 (general_value -> expNeg .)
    LET             reduce using rule 143 (general_value -> expNeg .)
    VAR             reduce using rule 143 (general_value -> expNeg .)
    STATIC          reduce using rule 143 (general_value -> expNeg .)
    CONST           reduce using rule 143 (general_value -> expNeg .)
    OBJECTNAME      reduce using rule 143 (general_value -> expNeg .)
    FUNMATH         reduce using rule 143 (general_value -> expNeg .)
    $end            reduce using rule 143 (general_value -> expNeg .)
    RKEY            reduce using rule 143 (general_value -> expNeg .)
    COMMA           reduce using rule 143 (general_value -> expNeg .)
    RBRACKET        reduce using rule 143 (general_value -> expNeg .)
=======
    EQUAL           reduce using rule 101 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 101 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 101 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    RKEY            reduce using rule 101 (declare_var_enum -> declare_any TWOPOINTS object_name .)

>>>>>>> master

state 254

    (76) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (80) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (84) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

<<<<<<< HEAD
    (144) general_value -> expEq .

    POINTCOMMA      reduce using rule 144 (general_value -> expEq .)
    LPAREN          reduce using rule 144 (general_value -> expEq .)
    NEGATION        reduce using rule 144 (general_value -> expEq .)
    COMMENT         reduce using rule 144 (general_value -> expEq .)
    MULTICOMMENT    reduce using rule 144 (general_value -> expEq .)
    FUNCTION        reduce using rule 144 (general_value -> expEq .)
    PRINT           reduce using rule 144 (general_value -> expEq .)
    INCREMENT       reduce using rule 144 (general_value -> expEq .)
    DECREMENT       reduce using rule 144 (general_value -> expEq .)
    NORMSTRING1     reduce using rule 144 (general_value -> expEq .)
    NORMSTRING2     reduce using rule 144 (general_value -> expEq .)
    MULTISTRING     reduce using rule 144 (general_value -> expEq .)
    ENUM            reduce using rule 144 (general_value -> expEq .)
    IF              reduce using rule 144 (general_value -> expEq .)
    WHILE           reduce using rule 144 (general_value -> expEq .)
    FOR             reduce using rule 144 (general_value -> expEq .)
    NUMBER          reduce using rule 144 (general_value -> expEq .)
    FLOAT           reduce using rule 144 (general_value -> expEq .)
    VARIABLE        reduce using rule 144 (general_value -> expEq .)
    LET             reduce using rule 144 (general_value -> expEq .)
    VAR             reduce using rule 144 (general_value -> expEq .)
    STATIC          reduce using rule 144 (general_value -> expEq .)
    CONST           reduce using rule 144 (general_value -> expEq .)
    OBJECTNAME      reduce using rule 144 (general_value -> expEq .)
    FUNMATH         reduce using rule 144 (general_value -> expEq .)
    $end            reduce using rule 144 (general_value -> expEq .)
    RKEY            reduce using rule 144 (general_value -> expEq .)
    COMMA           reduce using rule 144 (general_value -> expEq .)
    RBRACKET        reduce using rule 144 (general_value -> expEq .)
=======
    LESS            shift and go to state 361

>>>>>>> master

state 255

    (63) tuples_2_variables -> LBRACKET . types COMMA types RBRACKET
    (64) tuples_3_variables -> LBRACKET . types COMMA types COMMA types RBRACKET
    (65) tuples_4_variables -> LBRACKET . types COMMA types COMMA types COMMA types RBRACKET
    (221) types -> . VARNUMBER
    (222) types -> . VARSTRING
    (223) types -> . VARBOOLEAN

<<<<<<< HEAD
    (145) general_value -> expNotEq .

    POINTCOMMA      reduce using rule 145 (general_value -> expNotEq .)
    LPAREN          reduce using rule 145 (general_value -> expNotEq .)
    NEGATION        reduce using rule 145 (general_value -> expNotEq .)
    COMMENT         reduce using rule 145 (general_value -> expNotEq .)
    MULTICOMMENT    reduce using rule 145 (general_value -> expNotEq .)
    FUNCTION        reduce using rule 145 (general_value -> expNotEq .)
    PRINT           reduce using rule 145 (general_value -> expNotEq .)
    INCREMENT       reduce using rule 145 (general_value -> expNotEq .)
    DECREMENT       reduce using rule 145 (general_value -> expNotEq .)
    NORMSTRING1     reduce using rule 145 (general_value -> expNotEq .)
    NORMSTRING2     reduce using rule 145 (general_value -> expNotEq .)
    MULTISTRING     reduce using rule 145 (general_value -> expNotEq .)
    ENUM            reduce using rule 145 (general_value -> expNotEq .)
    IF              reduce using rule 145 (general_value -> expNotEq .)
    WHILE           reduce using rule 145 (general_value -> expNotEq .)
    FOR             reduce using rule 145 (general_value -> expNotEq .)
    NUMBER          reduce using rule 145 (general_value -> expNotEq .)
    FLOAT           reduce using rule 145 (general_value -> expNotEq .)
    VARIABLE        reduce using rule 145 (general_value -> expNotEq .)
    LET             reduce using rule 145 (general_value -> expNotEq .)
    VAR             reduce using rule 145 (general_value -> expNotEq .)
    STATIC          reduce using rule 145 (general_value -> expNotEq .)
    CONST           reduce using rule 145 (general_value -> expNotEq .)
    OBJECTNAME      reduce using rule 145 (general_value -> expNotEq .)
    FUNMATH         reduce using rule 145 (general_value -> expNotEq .)
    $end            reduce using rule 145 (general_value -> expNotEq .)
    RKEY            reduce using rule 145 (general_value -> expNotEq .)
    COMMA           reduce using rule 145 (general_value -> expNotEq .)
    RBRACKET        reduce using rule 145 (general_value -> expNotEq .)
=======
    VARNUMBER       shift and go to state 363
    VARSTRING       shift and go to state 364
    VARBOOLEAN      shift and go to state 365

    types                          shift and go to state 362

state 256
>>>>>>> master

    (273) arrayJoin -> declare_any arrayJoin POINTCOMMA .

    PLUS            reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    MINUS           reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    PRODUCT         reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    DIVIDE          reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    EQUALTO         reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NOTEQUALTO      reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    GREATER         reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LESS            reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    GREATEREQUAL    reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LESSEQUAL       reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    AND             reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    OR              reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    POINTCOMMA      reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    $end            reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RPAREN          reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RKEY            reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RBRACKET        reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    COMMA           reduce using rule 273 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)


<<<<<<< HEAD
    (131) object_definition -> LKEY . attributes RKEY
    (132) attributes -> . attributes COMMA attribute
    (133) attributes -> . attribute
    (134) attribute -> . variable TWOPOINTS general_value
    (135) attribute -> . variable TWOPOINTS list_types
    (241) variable -> . VARIABLE

    VARIABLE        shift and go to state 163

    attributes                     shift and go to state 343
    attribute                      shift and go to state 344
    variable                       shift and go to state 345
=======
state 257

    (274) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN string RPAREN

    FUNCTIONJOIN    shift and go to state 220
>>>>>>> master


<<<<<<< HEAD
    (128) tuples_list -> LBRACKET . tuples_values RBRACKET
    (149) list_number -> LBRACKET . numbers RBRACKET
    (152) list_boolean -> LBRACKET . booleans RBRACKET
    (155) list_string -> LBRACKET . strings RBRACKET
    (129) tuples_values -> . tuples_values COMMA general_value
    (130) tuples_values -> . general_value
    (150) numbers -> . numbers COMMA number_value
    (151) numbers -> . number_value
    (153) booleans -> . booleans COMMA boolean_value
    (154) booleans -> . boolean_value
    (156) strings -> . strings COMMA string_value
    (157) strings -> . string_value
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (158) number_value -> . expression
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (166) string_value -> . string
    (167) string_value -> . other_value
    (168) string_value -> . string_object
    (169) string_value -> . concatenate
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    VARIABLE        shift and go to state 36
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    tuples_values                  shift and go to state 346
    numbers                        shift and go to state 347
    booleans                       shift and go to state 348
    strings                        shift and go to state 349
    general_value                  shift and go to state 350
    number_value                   shift and go to state 351
    boolean_value                  shift and go to state 352
    string_value                   shift and go to state 353
    expression                     shift and go to state 354
    boolean                        shift and go to state 355
    string                         shift and go to state 356
    concatenate                    shift and go to state 357
    string_object                  shift and go to state 358
    expCond                        shift and go to state 359
    expOpLog                       shift and go to state 360
    expNeg                         shift and go to state 361
    expEq                          shift and go to state 362
    expNotEq                       shift and go to state 363
    other_value                    shift and go to state 364
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    group                          shift and go to state 76
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
state 258

    (19) consoleLog -> PRINT LPAREN RPAREN .

    POINTCOMMA      reduce using rule 19 (consoleLog -> PRINT LPAREN RPAREN .)
    $end            reduce using rule 19 (consoleLog -> PRINT LPAREN RPAREN .)
    RKEY            reduce using rule 19 (consoleLog -> PRINT LPAREN RPAREN .)
>>>>>>> master


<<<<<<< HEAD
    (66) declare_tuples -> declare_any TWOPOINTS tuples_2_variables .
    (67) declare_tuples -> declare_any TWOPOINTS tuples_2_variables . EQUAL tuples_2_values

    POINTCOMMA      reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    LPAREN          reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    NEGATION        reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    COMMENT         reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    MULTICOMMENT    reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    FUNCTION        reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    PRINT           reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    INCREMENT       reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    DECREMENT       reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    NORMSTRING1     reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    NORMSTRING2     reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    MULTISTRING     reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    ENUM            reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    IF              reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    WHILE           reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    FOR             reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    NUMBER          reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    FLOAT           reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    VARIABLE        reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    LET             reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    VAR             reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    STATIC          reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    CONST           reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    OBJECTNAME      reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    FUNMATH         reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    $end            reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    RKEY            reduce using rule 66 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables .)
    EQUAL           shift and go to state 365
=======
state 259

    (20) consoleLog -> PRINT LPAREN VARIABLE . RPAREN
>>>>>>> master

    RPAREN          shift and go to state 366


<<<<<<< HEAD
    (68) declare_tuples -> declare_any TWOPOINTS tuples_3_variables .
    (69) declare_tuples -> declare_any TWOPOINTS tuples_3_variables . EQUAL tuples_3_values

    POINTCOMMA      reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    LPAREN          reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    NEGATION        reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    COMMENT         reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    MULTICOMMENT    reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    FUNCTION        reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    PRINT           reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    INCREMENT       reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    DECREMENT       reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    NORMSTRING1     reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    NORMSTRING2     reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    MULTISTRING     reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    ENUM            reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    IF              reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    WHILE           reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    FOR             reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    NUMBER          reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    FLOAT           reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    VARIABLE        reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    LET             reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    VAR             reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    STATIC          reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    CONST           reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    OBJECTNAME      reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    FUNMATH         reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    $end            reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    RKEY            reduce using rule 68 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables .)
    EQUAL           shift and go to state 366
=======
state 260

    (21) consoleLog -> PRINT LPAREN string . RPAREN

    RPAREN          shift and go to state 367
>>>>>>> master


state 261

<<<<<<< HEAD
    (70) declare_tuples -> declare_any TWOPOINTS tuples_4_variables .
    (71) declare_tuples -> declare_any TWOPOINTS tuples_4_variables . EQUAL tuples_4_values

    POINTCOMMA      reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    LPAREN          reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    NEGATION        reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    COMMENT         reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    MULTICOMMENT    reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    FUNCTION        reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    PRINT           reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    INCREMENT       reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    DECREMENT       reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    NORMSTRING1     reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    NORMSTRING2     reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    MULTISTRING     reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    ENUM            reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    IF              reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    WHILE           reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    FOR             reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    NUMBER          reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    FLOAT           reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    VARIABLE        reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    LET             reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    VAR             reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    STATIC          reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    CONST           reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    OBJECTNAME      reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    FUNMATH         reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    $end            reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    RKEY            reduce using rule 70 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables .)
    EQUAL           shift and go to state 367
=======
    (191) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 206
>>>>>>> master


state 262

<<<<<<< HEAD
    (104) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LPAREN          reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    NEGATION        reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    COMMENT         reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    MULTICOMMENT    reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    FUNCTION        reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    PRINT           reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    INCREMENT       reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    DECREMENT       reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    NORMSTRING1     reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    NORMSTRING2     reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    MULTISTRING     reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    ENUM            reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    IF              reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    WHILE           reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    FOR             reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    NUMBER          reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    FLOAT           reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    VARIABLE        reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LET             reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    VAR             reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    STATIC          reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    CONST           reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    OBJECTNAME      reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    FUNMATH         reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    RKEY            reduce using rule 104 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
=======
    (93) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 93 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 93 (var_boolean -> declare_boolean EQUAL boolean_value .)
    RKEY            reduce using rule 93 (var_boolean -> declare_boolean EQUAL boolean_value .)
>>>>>>> master


state 263

<<<<<<< HEAD
    (101) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LPAREN          reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    NEGATION        reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    COMMENT         reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    MULTICOMMENT    reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    FUNCTION        reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    PRINT           reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    INCREMENT       reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    DECREMENT       reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    NORMSTRING1     reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    NORMSTRING2     reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    MULTISTRING     reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    ENUM            reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    IF              reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    WHILE           reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    FOR             reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    NUMBER          reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    FLOAT           reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    VARIABLE        reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LET             reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    VAR             reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    STATIC          reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    CONST           reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    OBJECTNAME      reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    FUNMATH         reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    RKEY            reduce using rule 101 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
=======
    (149) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 149 (boolean_value -> boolean .)
    $end            reduce using rule 149 (boolean_value -> boolean .)
    RKEY            reduce using rule 149 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 149 (boolean_value -> boolean .)
    COMMA           reduce using rule 149 (boolean_value -> boolean .)
    RPAREN          reduce using rule 149 (boolean_value -> boolean .)
>>>>>>> master


state 264

<<<<<<< HEAD
    (107) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LPAREN          reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    NEGATION        reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    COMMENT         reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    MULTICOMMENT    reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    FUNCTION        reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    PRINT           reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    INCREMENT       reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    DECREMENT       reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    NORMSTRING1     reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    NORMSTRING2     reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    MULTISTRING     reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    ENUM            reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    IF              reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    WHILE           reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    FOR             reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    NUMBER          reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    FLOAT           reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    VARIABLE        reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LET             reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    VAR             reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    STATIC          reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    CONST           reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    OBJECTNAME      reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    FUNMATH         reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    RKEY            reduce using rule 107 (declare_string -> declare_any TWOPOINTS VARSTRING .)
=======
    (150) boolean_value -> other_value .
    (199) term -> other_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 150 (boolean_value -> other_value .)
    POINTCOMMA      reduce using rule 150 (boolean_value -> other_value .)
    $end            reduce using rule 150 (boolean_value -> other_value .)
    RKEY            reduce using rule 150 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 150 (boolean_value -> other_value .)
    COMMA           reduce using rule 150 (boolean_value -> other_value .)
    RPAREN          reduce using rule 150 (boolean_value -> other_value .)
    EQUALTO         reduce using rule 199 (term -> other_value .)
    NOTEQUALTO      reduce using rule 199 (term -> other_value .)
    PLUS            reduce using rule 199 (term -> other_value .)
    MINUS           reduce using rule 199 (term -> other_value .)
    PRODUCT         reduce using rule 199 (term -> other_value .)
    DIVIDE          reduce using rule 199 (term -> other_value .)
    GREATER         reduce using rule 199 (term -> other_value .)
    LESS            reduce using rule 199 (term -> other_value .)
    GREATEREQUAL    reduce using rule 199 (term -> other_value .)
    LESSEQUAL       reduce using rule 199 (term -> other_value .)
    AND             reduce using rule 199 (term -> other_value .)
    OR              reduce using rule 199 (term -> other_value .)

  ! RPAREN          [ reduce using rule 199 (term -> other_value .) ]
>>>>>>> master


state 265

<<<<<<< HEAD
    (110) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    LPAREN          reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    NEGATION        reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    COMMENT         reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    MULTICOMMENT    reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    FUNCTION        reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    PRINT           reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    INCREMENT       reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    DECREMENT       reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    NORMSTRING1     reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    NORMSTRING2     reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    MULTISTRING     reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    ENUM            reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    IF              reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    WHILE           reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    FOR             reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    NUMBER          reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    FLOAT           reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    VARIABLE        reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    LET             reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    VAR             reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    STATIC          reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    CONST           reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    OBJECTNAME      reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    FUNMATH         reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    RKEY            reduce using rule 110 (declare_var_enum -> declare_any TWOPOINTS object_name .)

=======
    (151) boolean_value -> expCond .
    (185) expOpLog -> expCond . oplogico expCond
    (179) expEq -> expCond . EQUALTO expCond
    (182) expNotEq -> expCond . NOTEQUALTO expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    POINTCOMMA      reduce using rule 151 (boolean_value -> expCond .)
    $end            reduce using rule 151 (boolean_value -> expCond .)
    RKEY            reduce using rule 151 (boolean_value -> expCond .)
    RBRACKET        reduce using rule 151 (boolean_value -> expCond .)
    COMMA           reduce using rule 151 (boolean_value -> expCond .)
    RPAREN          reduce using rule 151 (boolean_value -> expCond .)
    EQUALTO         shift and go to state 115
    NOTEQUALTO      shift and go to state 116
    AND             shift and go to state 112
    OR              shift and go to state 113

    oplogico                       shift and go to state 114
>>>>>>> master

state 266

<<<<<<< HEAD
    (85) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (89) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (93) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 368
=======
    (152) boolean_value -> expOpLog .

    POINTCOMMA      reduce using rule 152 (boolean_value -> expOpLog .)
    $end            reduce using rule 152 (boolean_value -> expOpLog .)
    RKEY            reduce using rule 152 (boolean_value -> expOpLog .)
    RBRACKET        reduce using rule 152 (boolean_value -> expOpLog .)
    COMMA           reduce using rule 152 (boolean_value -> expOpLog .)
    RPAREN          reduce using rule 152 (boolean_value -> expOpLog .)
>>>>>>> master


state 267

<<<<<<< HEAD
    (72) tuples_2_variables -> LBRACKET . types COMMA types RBRACKET
    (73) tuples_3_variables -> LBRACKET . types COMMA types COMMA types RBRACKET
    (74) tuples_4_variables -> LBRACKET . types COMMA types COMMA types COMMA types RBRACKET
    (231) types -> . VARNUMBER
    (232) types -> . VARSTRING
    (233) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 370
    VARSTRING       shift and go to state 371
    VARBOOLEAN      shift and go to state 372
=======
    (153) boolean_value -> expNeg .

    POINTCOMMA      reduce using rule 153 (boolean_value -> expNeg .)
    $end            reduce using rule 153 (boolean_value -> expNeg .)
    RKEY            reduce using rule 153 (boolean_value -> expNeg .)
    RBRACKET        reduce using rule 153 (boolean_value -> expNeg .)
    COMMA           reduce using rule 153 (boolean_value -> expNeg .)
    RPAREN          reduce using rule 153 (boolean_value -> expNeg .)
>>>>>>> master

    types                          shift and go to state 369

state 268

<<<<<<< HEAD
    (283) arrayJoin -> declare_any arrayJoin POINTCOMMA .

    PLUS            reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    MINUS           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    PRODUCT         reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    DIVIDE          reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    EQUALTO         reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NOTEQUALTO      reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    GREATER         reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LESS            reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    GREATEREQUAL    reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LESSEQUAL       reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    AND             reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    OR              reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    POINTCOMMA      reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LPAREN          reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NEGATION        reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    COMMENT         reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    MULTICOMMENT    reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    FUNCTION        reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    PRINT           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    INCREMENT       reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    DECREMENT       reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NORMSTRING1     reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NORMSTRING2     reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    MULTISTRING     reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    ENUM            reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    IF              reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    WHILE           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    FOR             reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    NUMBER          reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    FLOAT           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    VARIABLE        reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    LET             reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    VAR             reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    STATIC          reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    CONST           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    OBJECTNAME      reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    FUNMATH         reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    $end            reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RKEY            reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RPAREN          reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    RBRACKET        reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
    COMMA           reduce using rule 283 (arrayJoin -> declare_any arrayJoin POINTCOMMA .)
=======
    (154) boolean_value -> expEq .

    POINTCOMMA      reduce using rule 154 (boolean_value -> expEq .)
    $end            reduce using rule 154 (boolean_value -> expEq .)
    RKEY            reduce using rule 154 (boolean_value -> expEq .)
    RBRACKET        reduce using rule 154 (boolean_value -> expEq .)
    COMMA           reduce using rule 154 (boolean_value -> expEq .)
    RPAREN          reduce using rule 154 (boolean_value -> expEq .)
>>>>>>> master


state 269

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE POINT . FUNCTIONJOIN LPAREN string RPAREN

    FUNCTIONJOIN    shift and go to state 225
=======
    (155) boolean_value -> expNotEq .

    POINTCOMMA      reduce using rule 155 (boolean_value -> expNotEq .)
    $end            reduce using rule 155 (boolean_value -> expNotEq .)
    RKEY            reduce using rule 155 (boolean_value -> expNotEq .)
    RBRACKET        reduce using rule 155 (boolean_value -> expNotEq .)
    COMMA           reduce using rule 155 (boolean_value -> expNotEq .)
    RPAREN          reduce using rule 155 (boolean_value -> expNotEq .)
>>>>>>> master


state 270

<<<<<<< HEAD
    (47) funtionStatement -> FUNCTION VARIABLE LPAREN . RPAREN substatement
    (48) funtionStatement -> FUNCTION VARIABLE LPAREN . funcParametres RPAREN substatement
    (49) funcParametres -> . VARIABLE
    (50) funcParametres -> . VARIABLE COMMA funcParametres

    RPAREN          shift and go to state 374
    VARIABLE        shift and go to state 373
=======
    (201) other_value -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value
    (194) group -> variable .

    POINTCOMMA      reduce using rule 201 (other_value -> variable .)
    $end            reduce using rule 201 (other_value -> variable .)
    RKEY            reduce using rule 201 (other_value -> variable .)
    EQUALTO         reduce using rule 201 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 201 (other_value -> variable .)
    PLUS            reduce using rule 201 (other_value -> variable .)
    MINUS           reduce using rule 201 (other_value -> variable .)
    PRODUCT         reduce using rule 201 (other_value -> variable .)
    DIVIDE          reduce using rule 201 (other_value -> variable .)
    GREATER         reduce using rule 201 (other_value -> variable .)
    LESS            reduce using rule 201 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 201 (other_value -> variable .)
    LESSEQUAL       reduce using rule 201 (other_value -> variable .)
    AND             reduce using rule 201 (other_value -> variable .)
    OR              reduce using rule 201 (other_value -> variable .)
    RBRACKET        reduce using rule 201 (other_value -> variable .)
    COMMA           reduce using rule 201 (other_value -> variable .)
    RPAREN          reduce using rule 201 (other_value -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
    INCREMENT       reduce using rule 194 (group -> variable .)
    DECREMENT       reduce using rule 194 (group -> variable .)
>>>>>>> master

    funcParametres                 shift and go to state 375

state 271

<<<<<<< HEAD
    (22) consoleLog -> PRINT LPAREN RPAREN .

    POINTCOMMA      reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    LPAREN          reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    NEGATION        reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    COMMENT         reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    MULTICOMMENT    reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    FUNCTION        reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    PRINT           reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    INCREMENT       reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    DECREMENT       reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    NORMSTRING1     reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    NORMSTRING2     reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    MULTISTRING     reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    ENUM            reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    IF              reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    WHILE           reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    FOR             reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    NUMBER          reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    FLOAT           reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    VARIABLE        reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    LET             reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    VAR             reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    STATIC          reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    CONST           reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    OBJECTNAME      reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    FUNMATH         reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    $end            reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)
    RKEY            reduce using rule 22 (consoleLog -> PRINT LPAREN RPAREN .)

=======
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (181) expEq -> expression . EQUALTO expression
    (184) expNotEq -> expression . NOTEQUALTO expression
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105
>>>>>>> master

state 272

<<<<<<< HEAD
    (23) consoleLog -> PRINT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 376
=======
    (79) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 79 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 79 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 79 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    RKEY            reduce using rule 79 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
>>>>>>> master


state 273

<<<<<<< HEAD
    (24) consoleLog -> PRINT LPAREN string . RPAREN

    RPAREN          shift and go to state 377
=======
    (88) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 88 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 88 (var_number -> declare_number EQUAL number_value .)
    RKEY            reduce using rule 88 (var_number -> declare_number EQUAL number_value .)
>>>>>>> master


state 274

<<<<<<< HEAD
    (201) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 211
=======
    (89) var_number -> declare_number EQUAL funcionmath .
    (241) funciones -> funcionmath .

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 89 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for $end resolved using rule 89 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for RKEY resolved using rule 89 (var_number -> declare_number EQUAL funcionmath .)
    POINTCOMMA      reduce using rule 89 (var_number -> declare_number EQUAL funcionmath .)
    $end            reduce using rule 89 (var_number -> declare_number EQUAL funcionmath .)
    RKEY            reduce using rule 89 (var_number -> declare_number EQUAL funcionmath .)
    PLUS            reduce using rule 241 (funciones -> funcionmath .)
    MINUS           reduce using rule 241 (funciones -> funcionmath .)
    PRODUCT         reduce using rule 241 (funciones -> funcionmath .)
    DIVIDE          reduce using rule 241 (funciones -> funcionmath .)

  ! POINTCOMMA      [ reduce using rule 241 (funciones -> funcionmath .) ]
  ! $end            [ reduce using rule 241 (funciones -> funcionmath .) ]
  ! RKEY            [ reduce using rule 241 (funciones -> funcionmath .) ]
>>>>>>> master


state 275

<<<<<<< HEAD
    (102) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    LPAREN          reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    NEGATION        reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    COMMENT         reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    MULTICOMMENT    reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    FUNCTION        reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    PRINT           reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    INCREMENT       reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    DECREMENT       reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    NORMSTRING1     reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    NORMSTRING2     reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    MULTISTRING     reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    ENUM            reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    IF              reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    WHILE           reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    FOR             reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    NUMBER          reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    FLOAT           reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    VARIABLE        reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    LET             reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    VAR             reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    STATIC          reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    CONST           reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    OBJECTNAME      reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    FUNMATH         reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
    RKEY            reduce using rule 102 (var_boolean -> declare_boolean EQUAL boolean_value .)
=======
    (91) var_number -> declare_number EQUAL expression .
    (148) number_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 91 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for $end resolved using rule 91 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for RKEY resolved using rule 91 (var_number -> declare_number EQUAL expression .)
    POINTCOMMA      reduce using rule 91 (var_number -> declare_number EQUAL expression .)
    $end            reduce using rule 91 (var_number -> declare_number EQUAL expression .)
    RKEY            reduce using rule 91 (var_number -> declare_number EQUAL expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103

  ! POINTCOMMA      [ reduce using rule 148 (number_value -> expression .) ]
  ! $end            [ reduce using rule 148 (number_value -> expression .) ]
  ! RKEY            [ reduce using rule 148 (number_value -> expression .) ]
>>>>>>> master


state 276

<<<<<<< HEAD
    (159) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 159 (boolean_value -> boolean .)
    LPAREN          reduce using rule 159 (boolean_value -> boolean .)
    NEGATION        reduce using rule 159 (boolean_value -> boolean .)
    COMMENT         reduce using rule 159 (boolean_value -> boolean .)
    MULTICOMMENT    reduce using rule 159 (boolean_value -> boolean .)
    FUNCTION        reduce using rule 159 (boolean_value -> boolean .)
    PRINT           reduce using rule 159 (boolean_value -> boolean .)
    INCREMENT       reduce using rule 159 (boolean_value -> boolean .)
    DECREMENT       reduce using rule 159 (boolean_value -> boolean .)
    NORMSTRING1     reduce using rule 159 (boolean_value -> boolean .)
    NORMSTRING2     reduce using rule 159 (boolean_value -> boolean .)
    MULTISTRING     reduce using rule 159 (boolean_value -> boolean .)
    ENUM            reduce using rule 159 (boolean_value -> boolean .)
    IF              reduce using rule 159 (boolean_value -> boolean .)
    WHILE           reduce using rule 159 (boolean_value -> boolean .)
    FOR             reduce using rule 159 (boolean_value -> boolean .)
    NUMBER          reduce using rule 159 (boolean_value -> boolean .)
    FLOAT           reduce using rule 159 (boolean_value -> boolean .)
    VARIABLE        reduce using rule 159 (boolean_value -> boolean .)
    LET             reduce using rule 159 (boolean_value -> boolean .)
    VAR             reduce using rule 159 (boolean_value -> boolean .)
    STATIC          reduce using rule 159 (boolean_value -> boolean .)
    CONST           reduce using rule 159 (boolean_value -> boolean .)
    OBJECTNAME      reduce using rule 159 (boolean_value -> boolean .)
    FUNMATH         reduce using rule 159 (boolean_value -> boolean .)
    $end            reduce using rule 159 (boolean_value -> boolean .)
    RKEY            reduce using rule 159 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 159 (boolean_value -> boolean .)
    COMMA           reduce using rule 159 (boolean_value -> boolean .)
    RPAREN          reduce using rule 159 (boolean_value -> boolean .)
=======
    (75) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 75 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 75 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 75 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    RKEY            reduce using rule 75 (declare_array_number -> declare_number LBRACKET RBRACKET .)
>>>>>>> master


state 277

<<<<<<< HEAD
    (160) boolean_value -> other_value .
    (209) term -> other_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 160 (boolean_value -> other_value .)
    POINTCOMMA      reduce using rule 160 (boolean_value -> other_value .)
    LPAREN          reduce using rule 160 (boolean_value -> other_value .)
    NEGATION        reduce using rule 160 (boolean_value -> other_value .)
    COMMENT         reduce using rule 160 (boolean_value -> other_value .)
    MULTICOMMENT    reduce using rule 160 (boolean_value -> other_value .)
    FUNCTION        reduce using rule 160 (boolean_value -> other_value .)
    PRINT           reduce using rule 160 (boolean_value -> other_value .)
    INCREMENT       reduce using rule 160 (boolean_value -> other_value .)
    DECREMENT       reduce using rule 160 (boolean_value -> other_value .)
    NORMSTRING1     reduce using rule 160 (boolean_value -> other_value .)
    NORMSTRING2     reduce using rule 160 (boolean_value -> other_value .)
    MULTISTRING     reduce using rule 160 (boolean_value -> other_value .)
    ENUM            reduce using rule 160 (boolean_value -> other_value .)
    IF              reduce using rule 160 (boolean_value -> other_value .)
    WHILE           reduce using rule 160 (boolean_value -> other_value .)
    FOR             reduce using rule 160 (boolean_value -> other_value .)
    NUMBER          reduce using rule 160 (boolean_value -> other_value .)
    FLOAT           reduce using rule 160 (boolean_value -> other_value .)
    VARIABLE        reduce using rule 160 (boolean_value -> other_value .)
    LET             reduce using rule 160 (boolean_value -> other_value .)
    VAR             reduce using rule 160 (boolean_value -> other_value .)
    STATIC          reduce using rule 160 (boolean_value -> other_value .)
    CONST           reduce using rule 160 (boolean_value -> other_value .)
    OBJECTNAME      reduce using rule 160 (boolean_value -> other_value .)
    FUNMATH         reduce using rule 160 (boolean_value -> other_value .)
    $end            reduce using rule 160 (boolean_value -> other_value .)
    RKEY            reduce using rule 160 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 160 (boolean_value -> other_value .)
    COMMA           reduce using rule 160 (boolean_value -> other_value .)
    RPAREN          reduce using rule 160 (boolean_value -> other_value .)
    EQUALTO         reduce using rule 209 (term -> other_value .)
    NOTEQUALTO      reduce using rule 209 (term -> other_value .)
    PLUS            reduce using rule 209 (term -> other_value .)
    MINUS           reduce using rule 209 (term -> other_value .)
    PRODUCT         reduce using rule 209 (term -> other_value .)
    DIVIDE          reduce using rule 209 (term -> other_value .)
    GREATER         reduce using rule 209 (term -> other_value .)
    LESS            reduce using rule 209 (term -> other_value .)
    GREATEREQUAL    reduce using rule 209 (term -> other_value .)
    LESSEQUAL       reduce using rule 209 (term -> other_value .)
    AND             reduce using rule 209 (term -> other_value .)
    OR              reduce using rule 209 (term -> other_value .)

  ! RPAREN          [ reduce using rule 209 (term -> other_value .) ]
=======
    (96) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 96 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 96 (var_string -> declare_string EQUAL string_value .)
    RKEY            reduce using rule 96 (var_string -> declare_string EQUAL string_value .)
>>>>>>> master


state 278

<<<<<<< HEAD
    (161) boolean_value -> expCond .
    (195) expOpLog -> expCond . oplogico expCond
    (189) expEq -> expCond . EQUALTO expCond
    (192) expNotEq -> expCond . NOTEQUALTO expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    POINTCOMMA      reduce using rule 161 (boolean_value -> expCond .)
    LPAREN          reduce using rule 161 (boolean_value -> expCond .)
    NEGATION        reduce using rule 161 (boolean_value -> expCond .)
    COMMENT         reduce using rule 161 (boolean_value -> expCond .)
    MULTICOMMENT    reduce using rule 161 (boolean_value -> expCond .)
    FUNCTION        reduce using rule 161 (boolean_value -> expCond .)
    PRINT           reduce using rule 161 (boolean_value -> expCond .)
    INCREMENT       reduce using rule 161 (boolean_value -> expCond .)
    DECREMENT       reduce using rule 161 (boolean_value -> expCond .)
    NORMSTRING1     reduce using rule 161 (boolean_value -> expCond .)
    NORMSTRING2     reduce using rule 161 (boolean_value -> expCond .)
    MULTISTRING     reduce using rule 161 (boolean_value -> expCond .)
    ENUM            reduce using rule 161 (boolean_value -> expCond .)
    IF              reduce using rule 161 (boolean_value -> expCond .)
    WHILE           reduce using rule 161 (boolean_value -> expCond .)
    FOR             reduce using rule 161 (boolean_value -> expCond .)
    NUMBER          reduce using rule 161 (boolean_value -> expCond .)
    FLOAT           reduce using rule 161 (boolean_value -> expCond .)
    VARIABLE        reduce using rule 161 (boolean_value -> expCond .)
    LET             reduce using rule 161 (boolean_value -> expCond .)
    VAR             reduce using rule 161 (boolean_value -> expCond .)
    STATIC          reduce using rule 161 (boolean_value -> expCond .)
    CONST           reduce using rule 161 (boolean_value -> expCond .)
    OBJECTNAME      reduce using rule 161 (boolean_value -> expCond .)
    FUNMATH         reduce using rule 161 (boolean_value -> expCond .)
    $end            reduce using rule 161 (boolean_value -> expCond .)
    RKEY            reduce using rule 161 (boolean_value -> expCond .)
    RBRACKET        reduce using rule 161 (boolean_value -> expCond .)
    COMMA           reduce using rule 161 (boolean_value -> expCond .)
    RPAREN          reduce using rule 161 (boolean_value -> expCond .)
    EQUALTO         shift and go to state 119
    NOTEQUALTO      shift and go to state 120
    AND             shift and go to state 116
    OR              shift and go to state 117

    oplogico                       shift and go to state 118
=======
    (156) string_value -> string .
    (160) concatenate -> string . PLUS termS

    POINTCOMMA      reduce using rule 156 (string_value -> string .)
    $end            reduce using rule 156 (string_value -> string .)
    RKEY            reduce using rule 156 (string_value -> string .)
    RBRACKET        reduce using rule 156 (string_value -> string .)
    COMMA           reduce using rule 156 (string_value -> string .)
    PLUS            shift and go to state 117

>>>>>>> master

state 279

<<<<<<< HEAD
    (162) boolean_value -> expOpLog .

    POINTCOMMA      reduce using rule 162 (boolean_value -> expOpLog .)
    LPAREN          reduce using rule 162 (boolean_value -> expOpLog .)
    NEGATION        reduce using rule 162 (boolean_value -> expOpLog .)
    COMMENT         reduce using rule 162 (boolean_value -> expOpLog .)
    MULTICOMMENT    reduce using rule 162 (boolean_value -> expOpLog .)
    FUNCTION        reduce using rule 162 (boolean_value -> expOpLog .)
    PRINT           reduce using rule 162 (boolean_value -> expOpLog .)
    INCREMENT       reduce using rule 162 (boolean_value -> expOpLog .)
    DECREMENT       reduce using rule 162 (boolean_value -> expOpLog .)
    NORMSTRING1     reduce using rule 162 (boolean_value -> expOpLog .)
    NORMSTRING2     reduce using rule 162 (boolean_value -> expOpLog .)
    MULTISTRING     reduce using rule 162 (boolean_value -> expOpLog .)
    ENUM            reduce using rule 162 (boolean_value -> expOpLog .)
    IF              reduce using rule 162 (boolean_value -> expOpLog .)
    WHILE           reduce using rule 162 (boolean_value -> expOpLog .)
    FOR             reduce using rule 162 (boolean_value -> expOpLog .)
    NUMBER          reduce using rule 162 (boolean_value -> expOpLog .)
    FLOAT           reduce using rule 162 (boolean_value -> expOpLog .)
    VARIABLE        reduce using rule 162 (boolean_value -> expOpLog .)
    LET             reduce using rule 162 (boolean_value -> expOpLog .)
    VAR             reduce using rule 162 (boolean_value -> expOpLog .)
    STATIC          reduce using rule 162 (boolean_value -> expOpLog .)
    CONST           reduce using rule 162 (boolean_value -> expOpLog .)
    OBJECTNAME      reduce using rule 162 (boolean_value -> expOpLog .)
    FUNMATH         reduce using rule 162 (boolean_value -> expOpLog .)
    $end            reduce using rule 162 (boolean_value -> expOpLog .)
    RKEY            reduce using rule 162 (boolean_value -> expOpLog .)
    RBRACKET        reduce using rule 162 (boolean_value -> expOpLog .)
    COMMA           reduce using rule 162 (boolean_value -> expOpLog .)
    RPAREN          reduce using rule 162 (boolean_value -> expOpLog .)
=======
    (157) string_value -> other_value .

    POINTCOMMA      reduce using rule 157 (string_value -> other_value .)
    $end            reduce using rule 157 (string_value -> other_value .)
    RKEY            reduce using rule 157 (string_value -> other_value .)
    RBRACKET        reduce using rule 157 (string_value -> other_value .)
    COMMA           reduce using rule 157 (string_value -> other_value .)
>>>>>>> master


state 280

<<<<<<< HEAD
    (163) boolean_value -> expNeg .

    POINTCOMMA      reduce using rule 163 (boolean_value -> expNeg .)
    LPAREN          reduce using rule 163 (boolean_value -> expNeg .)
    NEGATION        reduce using rule 163 (boolean_value -> expNeg .)
    COMMENT         reduce using rule 163 (boolean_value -> expNeg .)
    MULTICOMMENT    reduce using rule 163 (boolean_value -> expNeg .)
    FUNCTION        reduce using rule 163 (boolean_value -> expNeg .)
    PRINT           reduce using rule 163 (boolean_value -> expNeg .)
    INCREMENT       reduce using rule 163 (boolean_value -> expNeg .)
    DECREMENT       reduce using rule 163 (boolean_value -> expNeg .)
    NORMSTRING1     reduce using rule 163 (boolean_value -> expNeg .)
    NORMSTRING2     reduce using rule 163 (boolean_value -> expNeg .)
    MULTISTRING     reduce using rule 163 (boolean_value -> expNeg .)
    ENUM            reduce using rule 163 (boolean_value -> expNeg .)
    IF              reduce using rule 163 (boolean_value -> expNeg .)
    WHILE           reduce using rule 163 (boolean_value -> expNeg .)
    FOR             reduce using rule 163 (boolean_value -> expNeg .)
    NUMBER          reduce using rule 163 (boolean_value -> expNeg .)
    FLOAT           reduce using rule 163 (boolean_value -> expNeg .)
    VARIABLE        reduce using rule 163 (boolean_value -> expNeg .)
    LET             reduce using rule 163 (boolean_value -> expNeg .)
    VAR             reduce using rule 163 (boolean_value -> expNeg .)
    STATIC          reduce using rule 163 (boolean_value -> expNeg .)
    CONST           reduce using rule 163 (boolean_value -> expNeg .)
    OBJECTNAME      reduce using rule 163 (boolean_value -> expNeg .)
    FUNMATH         reduce using rule 163 (boolean_value -> expNeg .)
    $end            reduce using rule 163 (boolean_value -> expNeg .)
    RKEY            reduce using rule 163 (boolean_value -> expNeg .)
    RBRACKET        reduce using rule 163 (boolean_value -> expNeg .)
    COMMA           reduce using rule 163 (boolean_value -> expNeg .)
    RPAREN          reduce using rule 163 (boolean_value -> expNeg .)
=======
    (158) string_value -> string_object .

    POINTCOMMA      reduce using rule 158 (string_value -> string_object .)
    $end            reduce using rule 158 (string_value -> string_object .)
    RKEY            reduce using rule 158 (string_value -> string_object .)
    RBRACKET        reduce using rule 158 (string_value -> string_object .)
    COMMA           reduce using rule 158 (string_value -> string_object .)
>>>>>>> master


state 281

<<<<<<< HEAD
    (164) boolean_value -> expEq .

    POINTCOMMA      reduce using rule 164 (boolean_value -> expEq .)
    LPAREN          reduce using rule 164 (boolean_value -> expEq .)
    NEGATION        reduce using rule 164 (boolean_value -> expEq .)
    COMMENT         reduce using rule 164 (boolean_value -> expEq .)
    MULTICOMMENT    reduce using rule 164 (boolean_value -> expEq .)
    FUNCTION        reduce using rule 164 (boolean_value -> expEq .)
    PRINT           reduce using rule 164 (boolean_value -> expEq .)
    INCREMENT       reduce using rule 164 (boolean_value -> expEq .)
    DECREMENT       reduce using rule 164 (boolean_value -> expEq .)
    NORMSTRING1     reduce using rule 164 (boolean_value -> expEq .)
    NORMSTRING2     reduce using rule 164 (boolean_value -> expEq .)
    MULTISTRING     reduce using rule 164 (boolean_value -> expEq .)
    ENUM            reduce using rule 164 (boolean_value -> expEq .)
    IF              reduce using rule 164 (boolean_value -> expEq .)
    WHILE           reduce using rule 164 (boolean_value -> expEq .)
    FOR             reduce using rule 164 (boolean_value -> expEq .)
    NUMBER          reduce using rule 164 (boolean_value -> expEq .)
    FLOAT           reduce using rule 164 (boolean_value -> expEq .)
    VARIABLE        reduce using rule 164 (boolean_value -> expEq .)
    LET             reduce using rule 164 (boolean_value -> expEq .)
    VAR             reduce using rule 164 (boolean_value -> expEq .)
    STATIC          reduce using rule 164 (boolean_value -> expEq .)
    CONST           reduce using rule 164 (boolean_value -> expEq .)
    OBJECTNAME      reduce using rule 164 (boolean_value -> expEq .)
    FUNMATH         reduce using rule 164 (boolean_value -> expEq .)
    $end            reduce using rule 164 (boolean_value -> expEq .)
    RKEY            reduce using rule 164 (boolean_value -> expEq .)
    RBRACKET        reduce using rule 164 (boolean_value -> expEq .)
    COMMA           reduce using rule 164 (boolean_value -> expEq .)
    RPAREN          reduce using rule 164 (boolean_value -> expEq .)
=======
    (159) string_value -> concatenate .

    POINTCOMMA      reduce using rule 159 (string_value -> concatenate .)
    $end            reduce using rule 159 (string_value -> concatenate .)
    RKEY            reduce using rule 159 (string_value -> concatenate .)
    RBRACKET        reduce using rule 159 (string_value -> concatenate .)
    COMMA           reduce using rule 159 (string_value -> concatenate .)
>>>>>>> master


state 282

<<<<<<< HEAD
    (165) boolean_value -> expNotEq .

    POINTCOMMA      reduce using rule 165 (boolean_value -> expNotEq .)
    LPAREN          reduce using rule 165 (boolean_value -> expNotEq .)
    NEGATION        reduce using rule 165 (boolean_value -> expNotEq .)
    COMMENT         reduce using rule 165 (boolean_value -> expNotEq .)
    MULTICOMMENT    reduce using rule 165 (boolean_value -> expNotEq .)
    FUNCTION        reduce using rule 165 (boolean_value -> expNotEq .)
    PRINT           reduce using rule 165 (boolean_value -> expNotEq .)
    INCREMENT       reduce using rule 165 (boolean_value -> expNotEq .)
    DECREMENT       reduce using rule 165 (boolean_value -> expNotEq .)
    NORMSTRING1     reduce using rule 165 (boolean_value -> expNotEq .)
    NORMSTRING2     reduce using rule 165 (boolean_value -> expNotEq .)
    MULTISTRING     reduce using rule 165 (boolean_value -> expNotEq .)
    ENUM            reduce using rule 165 (boolean_value -> expNotEq .)
    IF              reduce using rule 165 (boolean_value -> expNotEq .)
    WHILE           reduce using rule 165 (boolean_value -> expNotEq .)
    FOR             reduce using rule 165 (boolean_value -> expNotEq .)
    NUMBER          reduce using rule 165 (boolean_value -> expNotEq .)
    FLOAT           reduce using rule 165 (boolean_value -> expNotEq .)
    VARIABLE        reduce using rule 165 (boolean_value -> expNotEq .)
    LET             reduce using rule 165 (boolean_value -> expNotEq .)
    VAR             reduce using rule 165 (boolean_value -> expNotEq .)
    STATIC          reduce using rule 165 (boolean_value -> expNotEq .)
    CONST           reduce using rule 165 (boolean_value -> expNotEq .)
    OBJECTNAME      reduce using rule 165 (boolean_value -> expNotEq .)
    FUNMATH         reduce using rule 165 (boolean_value -> expNotEq .)
    $end            reduce using rule 165 (boolean_value -> expNotEq .)
    RKEY            reduce using rule 165 (boolean_value -> expNotEq .)
    RBRACKET        reduce using rule 165 (boolean_value -> expNotEq .)
    COMMA           reduce using rule 165 (boolean_value -> expNotEq .)
    RPAREN          reduce using rule 165 (boolean_value -> expNotEq .)
=======
    (201) other_value -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 201 (other_value -> variable .)
    $end            reduce using rule 201 (other_value -> variable .)
    RKEY            reduce using rule 201 (other_value -> variable .)
    RBRACKET        reduce using rule 201 (other_value -> variable .)
    COMMA           reduce using rule 201 (other_value -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
>>>>>>> master


state 283

<<<<<<< HEAD
    (211) other_value -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value
    (204) group -> variable .

  ! reduce/reduce conflict for INCREMENT resolved using rule 204 (group -> variable .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 204 (group -> variable .)
    POINTCOMMA      reduce using rule 211 (other_value -> variable .)
    LPAREN          reduce using rule 211 (other_value -> variable .)
    NEGATION        reduce using rule 211 (other_value -> variable .)
    COMMENT         reduce using rule 211 (other_value -> variable .)
    MULTICOMMENT    reduce using rule 211 (other_value -> variable .)
    FUNCTION        reduce using rule 211 (other_value -> variable .)
    PRINT           reduce using rule 211 (other_value -> variable .)
    NORMSTRING1     reduce using rule 211 (other_value -> variable .)
    NORMSTRING2     reduce using rule 211 (other_value -> variable .)
    MULTISTRING     reduce using rule 211 (other_value -> variable .)
    ENUM            reduce using rule 211 (other_value -> variable .)
    IF              reduce using rule 211 (other_value -> variable .)
    WHILE           reduce using rule 211 (other_value -> variable .)
    FOR             reduce using rule 211 (other_value -> variable .)
    NUMBER          reduce using rule 211 (other_value -> variable .)
    FLOAT           reduce using rule 211 (other_value -> variable .)
    VARIABLE        reduce using rule 211 (other_value -> variable .)
    LET             reduce using rule 211 (other_value -> variable .)
    VAR             reduce using rule 211 (other_value -> variable .)
    STATIC          reduce using rule 211 (other_value -> variable .)
    CONST           reduce using rule 211 (other_value -> variable .)
    OBJECTNAME      reduce using rule 211 (other_value -> variable .)
    FUNMATH         reduce using rule 211 (other_value -> variable .)
    $end            reduce using rule 211 (other_value -> variable .)
    RKEY            reduce using rule 211 (other_value -> variable .)
    EQUALTO         reduce using rule 211 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 211 (other_value -> variable .)
    PLUS            reduce using rule 211 (other_value -> variable .)
    MINUS           reduce using rule 211 (other_value -> variable .)
    PRODUCT         reduce using rule 211 (other_value -> variable .)
    DIVIDE          reduce using rule 211 (other_value -> variable .)
    GREATER         reduce using rule 211 (other_value -> variable .)
    LESS            reduce using rule 211 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 211 (other_value -> variable .)
    LESSEQUAL       reduce using rule 211 (other_value -> variable .)
    AND             reduce using rule 211 (other_value -> variable .)
    OR              reduce using rule 211 (other_value -> variable .)
    RBRACKET        reduce using rule 211 (other_value -> variable .)
    COMMA           reduce using rule 211 (other_value -> variable .)
    RPAREN          reduce using rule 211 (other_value -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)

  ! INCREMENT       [ reduce using rule 211 (other_value -> variable .) ]
  ! DECREMENT       [ reduce using rule 211 (other_value -> variable .) ]
=======
    (203) other_value -> array_value .

    POINTCOMMA      reduce using rule 203 (other_value -> array_value .)
    $end            reduce using rule 203 (other_value -> array_value .)
    RKEY            reduce using rule 203 (other_value -> array_value .)
    RBRACKET        reduce using rule 203 (other_value -> array_value .)
    COMMA           reduce using rule 203 (other_value -> array_value .)
>>>>>>> master


state 284

<<<<<<< HEAD
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (191) expEq -> expression . EQUALTO expression
    (194) expNotEq -> expression . NOTEQUALTO expression
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    EQUALTO         shift and go to state 110
    NOTEQUALTO      shift and go to state 111
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109
=======
    (205) other_value -> object_value .

    POINTCOMMA      reduce using rule 205 (other_value -> object_value .)
    $end            reduce using rule 205 (other_value -> object_value .)
    RKEY            reduce using rule 205 (other_value -> object_value .)
    RBRACKET        reduce using rule 205 (other_value -> object_value .)
    COMMA           reduce using rule 205 (other_value -> object_value .)

>>>>>>> master

state 285

<<<<<<< HEAD
    (88) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    LPAREN          reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    NEGATION        reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    COMMENT         reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    MULTICOMMENT    reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    PRINT           reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    INCREMENT       reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    DECREMENT       reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    NORMSTRING1     reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    NORMSTRING2     reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    MULTISTRING     reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    ENUM            reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    IF              reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    WHILE           reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    FOR             reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    NUMBER          reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    FLOAT           reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    LET             reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    VAR             reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    STATIC          reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    CONST           reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    OBJECTNAME      reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    FUNMATH         reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    RKEY            reduce using rule 88 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 279

    (97) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    LPAREN          reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    NEGATION        reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    COMMENT         reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    MULTICOMMENT    reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    FUNCTION        reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    PRINT           reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    INCREMENT       reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    DECREMENT       reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    NORMSTRING1     reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    NORMSTRING2     reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    MULTISTRING     reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    ENUM            reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    IF              reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    WHILE           reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    FOR             reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    NUMBER          reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    FLOAT           reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    VARIABLE        reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    LET             reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    VAR             reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    STATIC          reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    CONST           reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    OBJECTNAME      reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    FUNMATH         reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
    RKEY            reduce using rule 97 (var_number -> declare_number EQUAL number_value .)
=======
    (210) string_object -> NEW . OBJECTSTRING LPAREN string RPAREN

    OBJECTSTRING    shift and go to state 335


state 286
>>>>>>> master

    (83) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 83 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 83 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 83 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    RKEY            reduce using rule 83 (declare_array_string -> declare_string LBRACKET RBRACKET .)

<<<<<<< HEAD
    (98) var_number -> declare_number EQUAL funcionmath .
    (251) funciones -> funcionmath .

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for LPAREN resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for NEGATION resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for COMMENT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for MULTICOMMENT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for PRINT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for NORMSTRING1 resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for NORMSTRING2 resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for MULTISTRING resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for ENUM resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for IF resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for WHILE resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for FOR resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for NUMBER resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for FLOAT resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for LET resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for VAR resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for STATIC resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for CONST resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for OBJECTNAME resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for FUNMATH resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for $end resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
  ! reduce/reduce conflict for RKEY resolved using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    POINTCOMMA      reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    LPAREN          reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    NEGATION        reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    COMMENT         reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    MULTICOMMENT    reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    FUNCTION        reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    PRINT           reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    INCREMENT       reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    DECREMENT       reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    NORMSTRING1     reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    NORMSTRING2     reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    MULTISTRING     reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    ENUM            reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    IF              reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    WHILE           reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    FOR             reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    NUMBER          reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    FLOAT           reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    VARIABLE        reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    LET             reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    VAR             reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    STATIC          reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    CONST           reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    OBJECTNAME      reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    FUNMATH         reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    $end            reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    RKEY            reduce using rule 98 (var_number -> declare_number EQUAL funcionmath .)
    PLUS            reduce using rule 251 (funciones -> funcionmath .)
    MINUS           reduce using rule 251 (funciones -> funcionmath .)
    PRODUCT         reduce using rule 251 (funciones -> funcionmath .)
    DIVIDE          reduce using rule 251 (funciones -> funcionmath .)

  ! POINTCOMMA      [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! LPAREN          [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! NEGATION        [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! COMMENT         [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! MULTICOMMENT    [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! FUNCTION        [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! PRINT           [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! INCREMENT       [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! DECREMENT       [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! NORMSTRING1     [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! NORMSTRING2     [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! MULTISTRING     [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! ENUM            [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! IF              [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! WHILE           [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! FOR             [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! NUMBER          [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! FLOAT           [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! VARIABLE        [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! LET             [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! VAR             [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! STATIC          [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! CONST           [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! OBJECTNAME      [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! FUNMATH         [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! $end            [ reduce using rule 251 (funciones -> funcionmath .) ]
  ! RKEY            [ reduce using rule 251 (funciones -> funcionmath .) ]
=======
>>>>>>> master

state 287

    (99) var_enum -> declare_var_enum EQUAL enum_value .

<<<<<<< HEAD
    (100) var_number -> declare_number EQUAL expression .
    (158) number_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for LPAREN resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for NEGATION resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for COMMENT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for MULTICOMMENT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for PRINT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for NORMSTRING1 resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for NORMSTRING2 resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for MULTISTRING resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for ENUM resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for IF resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for FOR resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for LET resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for VAR resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for STATIC resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for CONST resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for OBJECTNAME resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for FUNMATH resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for $end resolved using rule 100 (var_number -> declare_number EQUAL expression .)
  ! reduce/reduce conflict for RKEY resolved using rule 100 (var_number -> declare_number EQUAL expression .)
    POINTCOMMA      reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    LPAREN          reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    NEGATION        reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    COMMENT         reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    MULTICOMMENT    reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    FUNCTION        reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    PRINT           reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    INCREMENT       reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    DECREMENT       reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    NORMSTRING1     reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    NORMSTRING2     reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    MULTISTRING     reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    ENUM            reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    IF              reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    WHILE           reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    FOR             reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    NUMBER          reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    FLOAT           reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    VARIABLE        reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    LET             reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    VAR             reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    STATIC          reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    CONST           reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    OBJECTNAME      reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    FUNMATH         reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    $end            reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    RKEY            reduce using rule 100 (var_number -> declare_number EQUAL expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

  ! POINTCOMMA      [ reduce using rule 158 (number_value -> expression .) ]
  ! LPAREN          [ reduce using rule 158 (number_value -> expression .) ]
  ! NEGATION        [ reduce using rule 158 (number_value -> expression .) ]
  ! COMMENT         [ reduce using rule 158 (number_value -> expression .) ]
  ! MULTICOMMENT    [ reduce using rule 158 (number_value -> expression .) ]
  ! FUNCTION        [ reduce using rule 158 (number_value -> expression .) ]
  ! PRINT           [ reduce using rule 158 (number_value -> expression .) ]
  ! INCREMENT       [ reduce using rule 158 (number_value -> expression .) ]
  ! DECREMENT       [ reduce using rule 158 (number_value -> expression .) ]
  ! NORMSTRING1     [ reduce using rule 158 (number_value -> expression .) ]
  ! NORMSTRING2     [ reduce using rule 158 (number_value -> expression .) ]
  ! MULTISTRING     [ reduce using rule 158 (number_value -> expression .) ]
  ! ENUM            [ reduce using rule 158 (number_value -> expression .) ]
  ! IF              [ reduce using rule 158 (number_value -> expression .) ]
  ! WHILE           [ reduce using rule 158 (number_value -> expression .) ]
  ! FOR             [ reduce using rule 158 (number_value -> expression .) ]
  ! NUMBER          [ reduce using rule 158 (number_value -> expression .) ]
  ! FLOAT           [ reduce using rule 158 (number_value -> expression .) ]
  ! VARIABLE        [ reduce using rule 158 (number_value -> expression .) ]
  ! LET             [ reduce using rule 158 (number_value -> expression .) ]
  ! VAR             [ reduce using rule 158 (number_value -> expression .) ]
  ! STATIC          [ reduce using rule 158 (number_value -> expression .) ]
  ! CONST           [ reduce using rule 158 (number_value -> expression .) ]
  ! OBJECTNAME      [ reduce using rule 158 (number_value -> expression .) ]
  ! FUNMATH         [ reduce using rule 158 (number_value -> expression .) ]
  ! $end            [ reduce using rule 158 (number_value -> expression .) ]
  ! RKEY            [ reduce using rule 158 (number_value -> expression .) ]
=======
    POINTCOMMA      reduce using rule 99 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 99 (var_enum -> declare_var_enum EQUAL enum_value .)
    RKEY            reduce using rule 99 (var_enum -> declare_var_enum EQUAL enum_value .)

>>>>>>> master

state 288

    (34) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (35) enums -> . enums_numeric
    (36) enums -> . enums_string
    (37) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (38) enums_numeric -> . enums_numeric_value
    (41) enums_string -> . enums_string COMMA enums_string_value
    (42) enums_string -> . enums_string_value
    (39) enums_numeric_value -> . object_name EQUAL number
    (40) enums_numeric_value -> . object_name
    (43) enums_string_value -> . object_name EQUAL string
    (232) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 62

    enums                          shift and go to state 368
    enums_numeric                  shift and go to state 369
    enums_string                   shift and go to state 370
    enums_numeric_value            shift and go to state 371
    enums_string_value             shift and go to state 372
    object_name                    shift and go to state 373

state 289

    (108) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 108 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 108 (assign_variable -> variable EQUAL assign_value .)
    RKEY            reduce using rule 108 (assign_variable -> variable EQUAL assign_value .)


state 290

    (109) assign_variable -> variable EQUAL funciones .
    (202) other_value -> funciones .

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 109 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for $end resolved using rule 109 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for RKEY resolved using rule 109 (assign_variable -> variable EQUAL funciones .)
    POINTCOMMA      reduce using rule 109 (assign_variable -> variable EQUAL funciones .)
    $end            reduce using rule 109 (assign_variable -> variable EQUAL funciones .)
    RKEY            reduce using rule 109 (assign_variable -> variable EQUAL funciones .)
    PLUS            reduce using rule 202 (other_value -> funciones .)
    MINUS           reduce using rule 202 (other_value -> funciones .)
    PRODUCT         reduce using rule 202 (other_value -> funciones .)
    DIVIDE          reduce using rule 202 (other_value -> funciones .)
    EQUALTO         reduce using rule 202 (other_value -> funciones .)
    NOTEQUALTO      reduce using rule 202 (other_value -> funciones .)
    GREATER         reduce using rule 202 (other_value -> funciones .)
    LESS            reduce using rule 202 (other_value -> funciones .)
    GREATEREQUAL    reduce using rule 202 (other_value -> funciones .)
    LESSEQUAL       reduce using rule 202 (other_value -> funciones .)
    AND             reduce using rule 202 (other_value -> funciones .)
    OR              reduce using rule 202 (other_value -> funciones .)

  ! POINTCOMMA      [ reduce using rule 202 (other_value -> funciones .) ]
  ! $end            [ reduce using rule 202 (other_value -> funciones .) ]
  ! RKEY            [ reduce using rule 202 (other_value -> funciones .) ]


state 291

    (110) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 110 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 110 (assign_variable -> variable EQUAL list_types .)
    RKEY            reduce using rule 110 (assign_variable -> variable EQUAL list_types .)


state 292

<<<<<<< HEAD
    (84) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    LPAREN          reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    NEGATION        reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    COMMENT         reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    MULTICOMMENT    reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    PRINT           reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    INCREMENT       reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    DECREMENT       reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    NORMSTRING1     reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    NORMSTRING2     reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    MULTISTRING     reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    ENUM            reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    IF              reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    WHILE           reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    FOR             reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    NUMBER          reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    FLOAT           reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    LET             reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    VAR             reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    STATIC          reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    CONST           reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    OBJECTNAME      reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    FUNMATH         reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    RKEY            reduce using rule 84 (declare_array_number -> declare_number LBRACKET RBRACKET .)
=======
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN
    (231) variable -> VARIABLE .

  ! shift/reduce conflict for POINT resolved as shift
    POINT           shift and go to state 143
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 231 (variable -> VARIABLE .)
    $end            reduce using rule 231 (variable -> VARIABLE .)
    RKEY            reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 293

<<<<<<< HEAD
    (105) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    LPAREN          reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    NEGATION        reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    COMMENT         reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    MULTICOMMENT    reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    FUNCTION        reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    PRINT           reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    INCREMENT       reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    DECREMENT       reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    NORMSTRING1     reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    NORMSTRING2     reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    MULTISTRING     reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    ENUM            reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    IF              reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    WHILE           reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    FOR             reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    NUMBER          reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    FLOAT           reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    VARIABLE        reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    LET             reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    VAR             reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    STATIC          reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    CONST           reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    OBJECTNAME      reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    FUNMATH         reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
    RKEY            reduce using rule 105 (var_string -> declare_string EQUAL string_value .)
=======
    (213) array_value -> variable LBRACKET expression . RBRACKET
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 374
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 294

<<<<<<< HEAD
    (166) string_value -> string .
    (170) concatenate -> string . PLUS termS

    POINTCOMMA      reduce using rule 166 (string_value -> string .)
    LPAREN          reduce using rule 166 (string_value -> string .)
    NEGATION        reduce using rule 166 (string_value -> string .)
    COMMENT         reduce using rule 166 (string_value -> string .)
    MULTICOMMENT    reduce using rule 166 (string_value -> string .)
    FUNCTION        reduce using rule 166 (string_value -> string .)
    PRINT           reduce using rule 166 (string_value -> string .)
    INCREMENT       reduce using rule 166 (string_value -> string .)
    DECREMENT       reduce using rule 166 (string_value -> string .)
    NORMSTRING1     reduce using rule 166 (string_value -> string .)
    NORMSTRING2     reduce using rule 166 (string_value -> string .)
    MULTISTRING     reduce using rule 166 (string_value -> string .)
    ENUM            reduce using rule 166 (string_value -> string .)
    IF              reduce using rule 166 (string_value -> string .)
    WHILE           reduce using rule 166 (string_value -> string .)
    FOR             reduce using rule 166 (string_value -> string .)
    NUMBER          reduce using rule 166 (string_value -> string .)
    FLOAT           reduce using rule 166 (string_value -> string .)
    VARIABLE        reduce using rule 166 (string_value -> string .)
    LET             reduce using rule 166 (string_value -> string .)
    VAR             reduce using rule 166 (string_value -> string .)
    STATIC          reduce using rule 166 (string_value -> string .)
    CONST           reduce using rule 166 (string_value -> string .)
    OBJECTNAME      reduce using rule 166 (string_value -> string .)
    FUNMATH         reduce using rule 166 (string_value -> string .)
    $end            reduce using rule 166 (string_value -> string .)
    RKEY            reduce using rule 166 (string_value -> string .)
    RBRACKET        reduce using rule 166 (string_value -> string .)
    COMMA           reduce using rule 166 (string_value -> string .)
    PLUS            shift and go to state 121
=======
    (211) object_value_form1 -> variable POINT variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    RKEY            reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 211 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 169
>>>>>>> master


state 295

<<<<<<< HEAD
    (167) string_value -> other_value .

    POINTCOMMA      reduce using rule 167 (string_value -> other_value .)
    LPAREN          reduce using rule 167 (string_value -> other_value .)
    NEGATION        reduce using rule 167 (string_value -> other_value .)
    COMMENT         reduce using rule 167 (string_value -> other_value .)
    MULTICOMMENT    reduce using rule 167 (string_value -> other_value .)
    FUNCTION        reduce using rule 167 (string_value -> other_value .)
    PRINT           reduce using rule 167 (string_value -> other_value .)
    INCREMENT       reduce using rule 167 (string_value -> other_value .)
    DECREMENT       reduce using rule 167 (string_value -> other_value .)
    NORMSTRING1     reduce using rule 167 (string_value -> other_value .)
    NORMSTRING2     reduce using rule 167 (string_value -> other_value .)
    MULTISTRING     reduce using rule 167 (string_value -> other_value .)
    ENUM            reduce using rule 167 (string_value -> other_value .)
    IF              reduce using rule 167 (string_value -> other_value .)
    WHILE           reduce using rule 167 (string_value -> other_value .)
    FOR             reduce using rule 167 (string_value -> other_value .)
    NUMBER          reduce using rule 167 (string_value -> other_value .)
    FLOAT           reduce using rule 167 (string_value -> other_value .)
    VARIABLE        reduce using rule 167 (string_value -> other_value .)
    LET             reduce using rule 167 (string_value -> other_value .)
    VAR             reduce using rule 167 (string_value -> other_value .)
    STATIC          reduce using rule 167 (string_value -> other_value .)
    CONST           reduce using rule 167 (string_value -> other_value .)
    OBJECTNAME      reduce using rule 167 (string_value -> other_value .)
    FUNMATH         reduce using rule 167 (string_value -> other_value .)
    $end            reduce using rule 167 (string_value -> other_value .)
    RKEY            reduce using rule 167 (string_value -> other_value .)
    RBRACKET        reduce using rule 167 (string_value -> other_value .)
    COMMA           reduce using rule 167 (string_value -> other_value .)
=======
    (212) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    RKEY            reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 212 (object_value_form2 -> variable POINT array_value .)
>>>>>>> master


state 296

<<<<<<< HEAD
    (168) string_value -> string_object .

    POINTCOMMA      reduce using rule 168 (string_value -> string_object .)
    LPAREN          reduce using rule 168 (string_value -> string_object .)
    NEGATION        reduce using rule 168 (string_value -> string_object .)
    COMMENT         reduce using rule 168 (string_value -> string_object .)
    MULTICOMMENT    reduce using rule 168 (string_value -> string_object .)
    FUNCTION        reduce using rule 168 (string_value -> string_object .)
    PRINT           reduce using rule 168 (string_value -> string_object .)
    INCREMENT       reduce using rule 168 (string_value -> string_object .)
    DECREMENT       reduce using rule 168 (string_value -> string_object .)
    NORMSTRING1     reduce using rule 168 (string_value -> string_object .)
    NORMSTRING2     reduce using rule 168 (string_value -> string_object .)
    MULTISTRING     reduce using rule 168 (string_value -> string_object .)
    ENUM            reduce using rule 168 (string_value -> string_object .)
    IF              reduce using rule 168 (string_value -> string_object .)
    WHILE           reduce using rule 168 (string_value -> string_object .)
    FOR             reduce using rule 168 (string_value -> string_object .)
    NUMBER          reduce using rule 168 (string_value -> string_object .)
    FLOAT           reduce using rule 168 (string_value -> string_object .)
    VARIABLE        reduce using rule 168 (string_value -> string_object .)
    LET             reduce using rule 168 (string_value -> string_object .)
    VAR             reduce using rule 168 (string_value -> string_object .)
    STATIC          reduce using rule 168 (string_value -> string_object .)
    CONST           reduce using rule 168 (string_value -> string_object .)
    OBJECTNAME      reduce using rule 168 (string_value -> string_object .)
    FUNMATH         reduce using rule 168 (string_value -> string_object .)
    $end            reduce using rule 168 (string_value -> string_object .)
    RKEY            reduce using rule 168 (string_value -> string_object .)
    RBRACKET        reduce using rule 168 (string_value -> string_object .)
    COMMA           reduce using rule 168 (string_value -> string_object .)
=======
    (111) assign_array -> array_value EQUAL general_value .

    POINTCOMMA      reduce using rule 111 (assign_array -> array_value EQUAL general_value .)
    $end            reduce using rule 111 (assign_array -> array_value EQUAL general_value .)
    RKEY            reduce using rule 111 (assign_array -> array_value EQUAL general_value .)
>>>>>>> master


state 297

<<<<<<< HEAD
    (169) string_value -> concatenate .

    POINTCOMMA      reduce using rule 169 (string_value -> concatenate .)
    LPAREN          reduce using rule 169 (string_value -> concatenate .)
    NEGATION        reduce using rule 169 (string_value -> concatenate .)
    COMMENT         reduce using rule 169 (string_value -> concatenate .)
    MULTICOMMENT    reduce using rule 169 (string_value -> concatenate .)
    FUNCTION        reduce using rule 169 (string_value -> concatenate .)
    PRINT           reduce using rule 169 (string_value -> concatenate .)
    INCREMENT       reduce using rule 169 (string_value -> concatenate .)
    DECREMENT       reduce using rule 169 (string_value -> concatenate .)
    NORMSTRING1     reduce using rule 169 (string_value -> concatenate .)
    NORMSTRING2     reduce using rule 169 (string_value -> concatenate .)
    MULTISTRING     reduce using rule 169 (string_value -> concatenate .)
    ENUM            reduce using rule 169 (string_value -> concatenate .)
    IF              reduce using rule 169 (string_value -> concatenate .)
    WHILE           reduce using rule 169 (string_value -> concatenate .)
    FOR             reduce using rule 169 (string_value -> concatenate .)
    NUMBER          reduce using rule 169 (string_value -> concatenate .)
    FLOAT           reduce using rule 169 (string_value -> concatenate .)
    VARIABLE        reduce using rule 169 (string_value -> concatenate .)
    LET             reduce using rule 169 (string_value -> concatenate .)
    VAR             reduce using rule 169 (string_value -> concatenate .)
    STATIC          reduce using rule 169 (string_value -> concatenate .)
    CONST           reduce using rule 169 (string_value -> concatenate .)
    OBJECTNAME      reduce using rule 169 (string_value -> concatenate .)
    FUNMATH         reduce using rule 169 (string_value -> concatenate .)
    $end            reduce using rule 169 (string_value -> concatenate .)
    RKEY            reduce using rule 169 (string_value -> concatenate .)
    RBRACKET        reduce using rule 169 (string_value -> concatenate .)
    COMMA           reduce using rule 169 (string_value -> concatenate .)
=======
    (112) assign_object_value -> object_value_form1 EQUAL general_value .

    POINTCOMMA      reduce using rule 112 (assign_object_value -> object_value_form1 EQUAL general_value .)
    $end            reduce using rule 112 (assign_object_value -> object_value_form1 EQUAL general_value .)
    RKEY            reduce using rule 112 (assign_object_value -> object_value_form1 EQUAL general_value .)
>>>>>>> master


state 298

<<<<<<< HEAD
    (211) other_value -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 211 (other_value -> variable .)
    LPAREN          reduce using rule 211 (other_value -> variable .)
    NEGATION        reduce using rule 211 (other_value -> variable .)
    COMMENT         reduce using rule 211 (other_value -> variable .)
    MULTICOMMENT    reduce using rule 211 (other_value -> variable .)
    FUNCTION        reduce using rule 211 (other_value -> variable .)
    PRINT           reduce using rule 211 (other_value -> variable .)
    INCREMENT       reduce using rule 211 (other_value -> variable .)
    DECREMENT       reduce using rule 211 (other_value -> variable .)
    NORMSTRING1     reduce using rule 211 (other_value -> variable .)
    NORMSTRING2     reduce using rule 211 (other_value -> variable .)
    MULTISTRING     reduce using rule 211 (other_value -> variable .)
    ENUM            reduce using rule 211 (other_value -> variable .)
    IF              reduce using rule 211 (other_value -> variable .)
    WHILE           reduce using rule 211 (other_value -> variable .)
    FOR             reduce using rule 211 (other_value -> variable .)
    NUMBER          reduce using rule 211 (other_value -> variable .)
    FLOAT           reduce using rule 211 (other_value -> variable .)
    VARIABLE        reduce using rule 211 (other_value -> variable .)
    LET             reduce using rule 211 (other_value -> variable .)
    VAR             reduce using rule 211 (other_value -> variable .)
    STATIC          reduce using rule 211 (other_value -> variable .)
    CONST           reduce using rule 211 (other_value -> variable .)
    OBJECTNAME      reduce using rule 211 (other_value -> variable .)
    FUNMATH         reduce using rule 211 (other_value -> variable .)
    $end            reduce using rule 211 (other_value -> variable .)
    RKEY            reduce using rule 211 (other_value -> variable .)
    RBRACKET        reduce using rule 211 (other_value -> variable .)
    COMMA           reduce using rule 211 (other_value -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175
=======
    (113) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 113 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 113 (assign_object_value -> object_value_form1 EQUAL list_types .)
    RKEY            reduce using rule 113 (assign_object_value -> object_value_form1 EQUAL list_types .)
>>>>>>> master


state 299

    (139) list_number -> LBRACKET . numbers RBRACKET
    (142) list_boolean -> LBRACKET . booleans RBRACKET
    (145) list_string -> LBRACKET . strings RBRACKET
    (140) numbers -> . numbers COMMA number_value
    (141) numbers -> . number_value
    (143) booleans -> . booleans COMMA boolean_value
    (144) booleans -> . boolean_value
    (146) strings -> . strings COMMA string_value
    (147) strings -> . string_value
    (148) number_value -> . expression
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (156) string_value -> . string
    (157) string_value -> . other_value
    (158) string_value -> . string_object
    (159) string_value -> . concatenate
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (160) concatenate -> . string PLUS termS
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    VARIABLE        shift and go to state 34
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    numbers                        shift and go to state 340
    booleans                       shift and go to state 341
    strings                        shift and go to state 342
    number_value                   shift and go to state 344
    boolean_value                  shift and go to state 345
    string_value                   shift and go to state 346
    expression                     shift and go to state 375
    boolean                        shift and go to state 263
    other_value                    shift and go to state 357
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    string                         shift and go to state 278
    string_object                  shift and go to state 280
    concatenate                    shift and go to state 281
    term                           shift and go to state 16
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    group                          shift and go to state 72
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 300

<<<<<<< HEAD
    (213) other_value -> array_value .

    POINTCOMMA      reduce using rule 213 (other_value -> array_value .)
    LPAREN          reduce using rule 213 (other_value -> array_value .)
    NEGATION        reduce using rule 213 (other_value -> array_value .)
    COMMENT         reduce using rule 213 (other_value -> array_value .)
    MULTICOMMENT    reduce using rule 213 (other_value -> array_value .)
    FUNCTION        reduce using rule 213 (other_value -> array_value .)
    PRINT           reduce using rule 213 (other_value -> array_value .)
    INCREMENT       reduce using rule 213 (other_value -> array_value .)
    DECREMENT       reduce using rule 213 (other_value -> array_value .)
    NORMSTRING1     reduce using rule 213 (other_value -> array_value .)
    NORMSTRING2     reduce using rule 213 (other_value -> array_value .)
    MULTISTRING     reduce using rule 213 (other_value -> array_value .)
    ENUM            reduce using rule 213 (other_value -> array_value .)
    IF              reduce using rule 213 (other_value -> array_value .)
    WHILE           reduce using rule 213 (other_value -> array_value .)
    FOR             reduce using rule 213 (other_value -> array_value .)
    NUMBER          reduce using rule 213 (other_value -> array_value .)
    FLOAT           reduce using rule 213 (other_value -> array_value .)
    VARIABLE        reduce using rule 213 (other_value -> array_value .)
    LET             reduce using rule 213 (other_value -> array_value .)
    VAR             reduce using rule 213 (other_value -> array_value .)
    STATIC          reduce using rule 213 (other_value -> array_value .)
    CONST           reduce using rule 213 (other_value -> array_value .)
    OBJECTNAME      reduce using rule 213 (other_value -> array_value .)
    FUNMATH         reduce using rule 213 (other_value -> array_value .)
    $end            reduce using rule 213 (other_value -> array_value .)
    RKEY            reduce using rule 213 (other_value -> array_value .)
    RBRACKET        reduce using rule 213 (other_value -> array_value .)
    COMMA           reduce using rule 213 (other_value -> array_value .)
=======
    (114) assign_object_value -> object_value_form2 EQUAL general_value .

    POINTCOMMA      reduce using rule 114 (assign_object_value -> object_value_form2 EQUAL general_value .)
    $end            reduce using rule 114 (assign_object_value -> object_value_form2 EQUAL general_value .)
    RKEY            reduce using rule 114 (assign_object_value -> object_value_form2 EQUAL general_value .)
>>>>>>> master


state 301

<<<<<<< HEAD
    (215) other_value -> object_value .

    POINTCOMMA      reduce using rule 215 (other_value -> object_value .)
    LPAREN          reduce using rule 215 (other_value -> object_value .)
    NEGATION        reduce using rule 215 (other_value -> object_value .)
    COMMENT         reduce using rule 215 (other_value -> object_value .)
    MULTICOMMENT    reduce using rule 215 (other_value -> object_value .)
    FUNCTION        reduce using rule 215 (other_value -> object_value .)
    PRINT           reduce using rule 215 (other_value -> object_value .)
    INCREMENT       reduce using rule 215 (other_value -> object_value .)
    DECREMENT       reduce using rule 215 (other_value -> object_value .)
    NORMSTRING1     reduce using rule 215 (other_value -> object_value .)
    NORMSTRING2     reduce using rule 215 (other_value -> object_value .)
    MULTISTRING     reduce using rule 215 (other_value -> object_value .)
    ENUM            reduce using rule 215 (other_value -> object_value .)
    IF              reduce using rule 215 (other_value -> object_value .)
    WHILE           reduce using rule 215 (other_value -> object_value .)
    FOR             reduce using rule 215 (other_value -> object_value .)
    NUMBER          reduce using rule 215 (other_value -> object_value .)
    FLOAT           reduce using rule 215 (other_value -> object_value .)
    VARIABLE        reduce using rule 215 (other_value -> object_value .)
    LET             reduce using rule 215 (other_value -> object_value .)
    VAR             reduce using rule 215 (other_value -> object_value .)
    STATIC          reduce using rule 215 (other_value -> object_value .)
    CONST           reduce using rule 215 (other_value -> object_value .)
    OBJECTNAME      reduce using rule 215 (other_value -> object_value .)
    FUNMATH         reduce using rule 215 (other_value -> object_value .)
    $end            reduce using rule 215 (other_value -> object_value .)
    RKEY            reduce using rule 215 (other_value -> object_value .)
    RBRACKET        reduce using rule 215 (other_value -> object_value .)
    COMMA           reduce using rule 215 (other_value -> object_value .)
=======
    (44) funcionif -> IF LPAREN formLog . RPAREN substatement
    (45) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif
    (46) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif funcionelse
    (47) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelse

    RPAREN          shift and go to state 376
>>>>>>> master


state 302

<<<<<<< HEAD
    (220) string_object -> NEW . OBJECTSTRING LPAREN string RPAREN

    OBJECTSTRING    shift and go to state 342
=======
    (206) formLog -> expCond .
    (185) expOpLog -> expCond . oplogico expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    RPAREN          reduce using rule 206 (formLog -> expCond .)
    POINTCOMMA      reduce using rule 206 (formLog -> expCond .)
    AND             shift and go to state 112
    OR              shift and go to state 113
>>>>>>> master


state 303

<<<<<<< HEAD
    (92) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    LPAREN          reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    NEGATION        reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    COMMENT         reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    MULTICOMMENT    reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    FUNCTION        reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    PRINT           reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    INCREMENT       reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    DECREMENT       reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    NORMSTRING1     reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    NORMSTRING2     reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    MULTISTRING     reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    ENUM            reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    IF              reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    WHILE           reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    FOR             reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    NUMBER          reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    FLOAT           reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    VARIABLE        reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    LET             reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    VAR             reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    STATIC          reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    CONST           reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    OBJECTNAME      reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    FUNMATH         reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    RKEY            reduce using rule 92 (declare_array_string -> declare_string LBRACKET RBRACKET .)
=======
    (207) formLog -> expOpLog .

    RPAREN          reduce using rule 207 (formLog -> expOpLog .)
    POINTCOMMA      reduce using rule 207 (formLog -> expOpLog .)
>>>>>>> master


state 304

<<<<<<< HEAD
    (108) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    LPAREN          reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    NEGATION        reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    COMMENT         reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    MULTICOMMENT    reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    FUNCTION        reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    PRINT           reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    INCREMENT       reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    DECREMENT       reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    NORMSTRING1     reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    NORMSTRING2     reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    MULTISTRING     reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    ENUM            reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    IF              reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    WHILE           reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    FOR             reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    NUMBER          reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    FLOAT           reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    VARIABLE        reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    LET             reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    VAR             reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    STATIC          reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    CONST           reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    OBJECTNAME      reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    FUNMATH         reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)
    RKEY            reduce using rule 108 (var_enum -> declare_var_enum EQUAL enum_value .)


state 294
=======
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    EQUALTO         shift and go to state 203
    NOTEQUALTO      shift and go to state 204
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105

state 305

    (53) funcionwhile -> WHILE LPAREN formLog . RPAREN substatement

    RPAREN          shift and go to state 377
>>>>>>> master

    (37) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (38) enums -> . enums_numeric
    (39) enums -> . enums_string
    (40) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (41) enums_numeric -> . enums_numeric_value
    (44) enums_string -> . enums_string COMMA enums_string_value
    (45) enums_string -> . enums_string_value
    (42) enums_numeric_value -> . object_name EQUAL number
    (43) enums_numeric_value -> . object_name
    (46) enums_string_value -> . object_name EQUAL string
    (242) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 65

    enums                          shift and go to state 378
    enums_numeric                  shift and go to state 379
    enums_string                   shift and go to state 380
    enums_numeric_value            shift and go to state 381
    enums_string_value             shift and go to state 382
    object_name                    shift and go to state 383

state 306

<<<<<<< HEAD
    (118) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    LPAREN          reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    NEGATION        reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    COMMENT         reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    MULTICOMMENT    reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    FUNCTION        reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    PRINT           reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    INCREMENT       reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    DECREMENT       reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    NORMSTRING1     reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    NORMSTRING2     reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    MULTISTRING     reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    ENUM            reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    IF              reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    WHILE           reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    FOR             reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    NUMBER          reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    FLOAT           reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    VARIABLE        reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    LET             reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    VAR             reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    STATIC          reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    CONST           reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    OBJECTNAME      reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    FUNMATH         reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
    RKEY            reduce using rule 118 (assign_variable -> variable EQUAL assign_value .)
=======
    (51) funcionfor -> FOR LPAREN prefix . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    VARIABLE        shift and go to state 378
>>>>>>> master


state 307

<<<<<<< HEAD
    (119) assign_variable -> variable EQUAL funciones .
    (212) other_value -> funciones .

  ! reduce/reduce conflict for POINTCOMMA resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for LPAREN resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for NEGATION resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for COMMENT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for MULTICOMMENT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for PRINT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for NORMSTRING1 resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for NORMSTRING2 resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for MULTISTRING resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for ENUM resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for IF resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for FOR resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for NUMBER resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for FLOAT resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for LET resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for VAR resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for STATIC resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for CONST resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for OBJECTNAME resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for FUNMATH resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for $end resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
  ! reduce/reduce conflict for RKEY resolved using rule 119 (assign_variable -> variable EQUAL funciones .)
    POINTCOMMA      reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    LPAREN          reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    NEGATION        reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    COMMENT         reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    MULTICOMMENT    reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    FUNCTION        reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    PRINT           reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    INCREMENT       reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    DECREMENT       reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    NORMSTRING1     reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    NORMSTRING2     reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    MULTISTRING     reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    ENUM            reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    IF              reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    WHILE           reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    FOR             reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    NUMBER          reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    FLOAT           reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    VARIABLE        reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    LET             reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    VAR             reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    STATIC          reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    CONST           reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    OBJECTNAME      reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    FUNMATH         reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    $end            reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    RKEY            reduce using rule 119 (assign_variable -> variable EQUAL funciones .)
    PLUS            reduce using rule 212 (other_value -> funciones .)
    MINUS           reduce using rule 212 (other_value -> funciones .)
    PRODUCT         reduce using rule 212 (other_value -> funciones .)
    DIVIDE          reduce using rule 212 (other_value -> funciones .)
    EQUALTO         reduce using rule 212 (other_value -> funciones .)
    NOTEQUALTO      reduce using rule 212 (other_value -> funciones .)
    GREATER         reduce using rule 212 (other_value -> funciones .)
    LESS            reduce using rule 212 (other_value -> funciones .)
    GREATEREQUAL    reduce using rule 212 (other_value -> funciones .)
    LESSEQUAL       reduce using rule 212 (other_value -> funciones .)
    AND             reduce using rule 212 (other_value -> funciones .)
    OR              reduce using rule 212 (other_value -> funciones .)

  ! POINTCOMMA      [ reduce using rule 212 (other_value -> funciones .) ]
  ! LPAREN          [ reduce using rule 212 (other_value -> funciones .) ]
  ! NEGATION        [ reduce using rule 212 (other_value -> funciones .) ]
  ! COMMENT         [ reduce using rule 212 (other_value -> funciones .) ]
  ! MULTICOMMENT    [ reduce using rule 212 (other_value -> funciones .) ]
  ! FUNCTION        [ reduce using rule 212 (other_value -> funciones .) ]
  ! PRINT           [ reduce using rule 212 (other_value -> funciones .) ]
  ! INCREMENT       [ reduce using rule 212 (other_value -> funciones .) ]
  ! DECREMENT       [ reduce using rule 212 (other_value -> funciones .) ]
  ! NORMSTRING1     [ reduce using rule 212 (other_value -> funciones .) ]
  ! NORMSTRING2     [ reduce using rule 212 (other_value -> funciones .) ]
  ! MULTISTRING     [ reduce using rule 212 (other_value -> funciones .) ]
  ! ENUM            [ reduce using rule 212 (other_value -> funciones .) ]
  ! IF              [ reduce using rule 212 (other_value -> funciones .) ]
  ! WHILE           [ reduce using rule 212 (other_value -> funciones .) ]
  ! FOR             [ reduce using rule 212 (other_value -> funciones .) ]
  ! NUMBER          [ reduce using rule 212 (other_value -> funciones .) ]
  ! FLOAT           [ reduce using rule 212 (other_value -> funciones .) ]
  ! VARIABLE        [ reduce using rule 212 (other_value -> funciones .) ]
  ! LET             [ reduce using rule 212 (other_value -> funciones .) ]
  ! VAR             [ reduce using rule 212 (other_value -> funciones .) ]
  ! STATIC          [ reduce using rule 212 (other_value -> funciones .) ]
  ! CONST           [ reduce using rule 212 (other_value -> funciones .) ]
  ! OBJECTNAME      [ reduce using rule 212 (other_value -> funciones .) ]
  ! FUNMATH         [ reduce using rule 212 (other_value -> funciones .) ]
  ! $end            [ reduce using rule 212 (other_value -> funciones .) ]
  ! RKEY            [ reduce using rule 212 (other_value -> funciones .) ]
=======
    (52) funcionfor -> FOR LPAREN VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    EQUAL           shift and go to state 379
>>>>>>> master


state 308

<<<<<<< HEAD
    (120) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    LPAREN          reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    NEGATION        reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    COMMENT         reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    MULTICOMMENT    reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    FUNCTION        reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    PRINT           reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    INCREMENT       reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    DECREMENT       reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    NORMSTRING1     reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    NORMSTRING2     reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    MULTISTRING     reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    ENUM            reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    IF              reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    WHILE           reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    FOR             reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    NUMBER          reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    FLOAT           reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    VARIABLE        reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    LET             reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    VAR             reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    STATIC          reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    CONST           reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    OBJECTNAME      reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    FUNMATH         reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
    RKEY            reduce using rule 120 (assign_variable -> variable EQUAL list_types .)
=======
    (214) enum_value -> object_name POINT object_name .

    PLUS            reduce using rule 214 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 214 (enum_value -> object_name POINT object_name .)
    PRODUCT         reduce using rule 214 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 214 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 214 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 214 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 214 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 214 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 214 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 214 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 214 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 214 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 214 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 214 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 214 (enum_value -> object_name POINT object_name .)
    RKEY            reduce using rule 214 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 214 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 214 (enum_value -> object_name POINT object_name .)
>>>>>>> master


state 309

<<<<<<< HEAD
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN
    (241) variable -> VARIABLE .

  ! shift/reduce conflict for POINT resolved as shift
    POINT           shift and go to state 147
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 241 (variable -> VARIABLE .)
    LPAREN          reduce using rule 241 (variable -> VARIABLE .)
    NEGATION        reduce using rule 241 (variable -> VARIABLE .)
    COMMENT         reduce using rule 241 (variable -> VARIABLE .)
    MULTICOMMENT    reduce using rule 241 (variable -> VARIABLE .)
    FUNCTION        reduce using rule 241 (variable -> VARIABLE .)
    PRINT           reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING1     reduce using rule 241 (variable -> VARIABLE .)
    NORMSTRING2     reduce using rule 241 (variable -> VARIABLE .)
    MULTISTRING     reduce using rule 241 (variable -> VARIABLE .)
    ENUM            reduce using rule 241 (variable -> VARIABLE .)
    IF              reduce using rule 241 (variable -> VARIABLE .)
    WHILE           reduce using rule 241 (variable -> VARIABLE .)
    FOR             reduce using rule 241 (variable -> VARIABLE .)
    NUMBER          reduce using rule 241 (variable -> VARIABLE .)
    FLOAT           reduce using rule 241 (variable -> VARIABLE .)
    VARIABLE        reduce using rule 241 (variable -> VARIABLE .)
    LET             reduce using rule 241 (variable -> VARIABLE .)
    VAR             reduce using rule 241 (variable -> VARIABLE .)
    STATIC          reduce using rule 241 (variable -> VARIABLE .)
    CONST           reduce using rule 241 (variable -> VARIABLE .)
    OBJECTNAME      reduce using rule 241 (variable -> VARIABLE .)
    FUNMATH         reduce using rule 241 (variable -> VARIABLE .)
    $end            reduce using rule 241 (variable -> VARIABLE .)
    RKEY            reduce using rule 241 (variable -> VARIABLE .)

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
=======
    (73) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 73 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 73 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    RKEY            reduce using rule 73 (declare_array_main_number -> declare_array_number EQUAL list_number .)
>>>>>>> master


state 310

<<<<<<< HEAD
    (223) array_value -> variable LBRACKET expression . RBRACKET
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 384
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107


state 300

    (221) object_value_form1 -> variable POINT variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    LPAREN          reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    NEGATION        reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    COMMENT         reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    MULTICOMMENT    reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    FUNCTION        reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    PRINT           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    NORMSTRING1     reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    NORMSTRING2     reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    MULTISTRING     reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    ENUM            reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    IF              reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    WHILE           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    FOR             reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    NUMBER          reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    FLOAT           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    VARIABLE        reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    LET             reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    VAR             reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    STATIC          reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    CONST           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    OBJECTNAME      reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    FUNMATH         reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    RKEY            reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 221 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 174
=======
    (139) list_number -> LBRACKET . numbers RBRACKET
    (140) numbers -> . numbers COMMA number_value
    (141) numbers -> . number_value
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    numbers                        shift and go to state 340
    number_value                   shift and go to state 344
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 311

    (77) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 77 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 77 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    RKEY            reduce using rule 77 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
>>>>>>> master


state 312

<<<<<<< HEAD
    (222) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    LPAREN          reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    NEGATION        reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    COMMENT         reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    MULTICOMMENT    reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    FUNCTION        reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    PRINT           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    NORMSTRING1     reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    NORMSTRING2     reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    MULTISTRING     reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    ENUM            reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    IF              reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    WHILE           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    FOR             reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    NUMBER          reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    FLOAT           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    VARIABLE        reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    LET             reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    VAR             reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    STATIC          reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    CONST           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    OBJECTNAME      reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    FUNMATH         reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    RKEY            reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 222 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 222 (object_value_form2 -> variable POINT array_value .)


state 302

    (121) assign_array -> array_value EQUAL general_value .

    POINTCOMMA      reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    LPAREN          reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    NEGATION        reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    COMMENT         reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    MULTICOMMENT    reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    FUNCTION        reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    PRINT           reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    INCREMENT       reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    DECREMENT       reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    NORMSTRING1     reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    NORMSTRING2     reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    MULTISTRING     reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    ENUM            reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    IF              reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    WHILE           reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    FOR             reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    NUMBER          reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    FLOAT           reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    VARIABLE        reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    LET             reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    VAR             reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    STATIC          reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    CONST           reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    OBJECTNAME      reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    FUNMATH         reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    $end            reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
    RKEY            reduce using rule 121 (assign_array -> array_value EQUAL general_value .)
=======
    (142) list_boolean -> LBRACKET . booleans RBRACKET
    (143) booleans -> . booleans COMMA boolean_value
    (144) booleans -> . boolean_value
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (104) declare_any -> . prefix VARIABLE
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    FUNMATH         shift and go to state 98
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    booleans                       shift and go to state 341
    boolean_value                  shift and go to state 345
    boolean                        shift and go to state 263
    other_value                    shift and go to state 264
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    expression                     shift and go to state 271
    factor_exprlog                 shift and go to state 32
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    term                           shift and go to state 16
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    declare_any                    shift and go to state 128
    group                          shift and go to state 72
    prefix                         shift and go to state 68

state 313

    (81) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 81 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 81 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    RKEY            reduce using rule 81 (declare_array_main_string -> declare_array_string EQUAL list_string .)
>>>>>>> master


state 314

<<<<<<< HEAD
    (122) assign_object_value -> object_value_form1 EQUAL general_value .

    POINTCOMMA      reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    LPAREN          reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    NEGATION        reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    COMMENT         reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    MULTICOMMENT    reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    FUNCTION        reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    PRINT           reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    INCREMENT       reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    DECREMENT       reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    NORMSTRING1     reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    NORMSTRING2     reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    MULTISTRING     reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    ENUM            reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    IF              reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    WHILE           reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    FOR             reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    NUMBER          reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    FLOAT           reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    VARIABLE        reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    LET             reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    VAR             reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    STATIC          reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    CONST           reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    OBJECTNAME      reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    FUNMATH         reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    $end            reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)
    RKEY            reduce using rule 122 (assign_object_value -> object_value_form1 EQUAL general_value .)


state 304

    (123) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    LPAREN          reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    NEGATION        reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    COMMENT         reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    MULTICOMMENT    reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    FUNCTION        reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    PRINT           reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    INCREMENT       reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    DECREMENT       reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    NORMSTRING1     reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    NORMSTRING2     reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    MULTISTRING     reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    ENUM            reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    IF              reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    WHILE           reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    FOR             reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    NUMBER          reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    FLOAT           reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    VARIABLE        reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    LET             reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    VAR             reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    STATIC          reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    CONST           reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    OBJECTNAME      reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    FUNMATH         reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
    RKEY            reduce using rule 123 (assign_object_value -> object_value_form1 EQUAL list_types .)
=======
    (145) list_string -> LBRACKET . strings RBRACKET
    (146) strings -> . strings COMMA string_value
    (147) strings -> . string_value
    (156) string_value -> . string
    (157) string_value -> . other_value
    (158) string_value -> . string_object
    (159) string_value -> . concatenate
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (160) concatenate -> . string PLUS termS
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    strings                        shift and go to state 342
    string_value                   shift and go to state 346
    string                         shift and go to state 278
    other_value                    shift and go to state 279
    string_object                  shift and go to state 280
    concatenate                    shift and go to state 281
    variable                       shift and go to state 282
    funciones                      shift and go to state 64
    array_value                    shift and go to state 283
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 284
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 315

    (249) mathAbs -> FUNMATH POINT ABS . LPAREN VARIABLE RPAREN
    (250) mathAbs -> FUNMATH POINT ABS . LPAREN number_value RPAREN
    (251) mathAbs -> FUNMATH POINT ABS . LPAREN MINUS number_value RPAREN

    LPAREN          shift and go to state 381
>>>>>>> master


state 316

<<<<<<< HEAD
    (149) list_number -> LBRACKET . numbers RBRACKET
    (152) list_boolean -> LBRACKET . booleans RBRACKET
    (155) list_string -> LBRACKET . strings RBRACKET
    (150) numbers -> . numbers COMMA number_value
    (151) numbers -> . number_value
    (153) booleans -> . booleans COMMA boolean_value
    (154) booleans -> . boolean_value
    (156) strings -> . strings COMMA string_value
    (157) strings -> . string_value
    (158) number_value -> . expression
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (166) string_value -> . string
    (167) string_value -> . other_value
    (168) string_value -> . string_object
    (169) string_value -> . concatenate
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (170) concatenate -> . string PLUS termS
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    VARIABLE        shift and go to state 36
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    numbers                        shift and go to state 347
    booleans                       shift and go to state 348
    strings                        shift and go to state 349
    number_value                   shift and go to state 351
    boolean_value                  shift and go to state 352
    string_value                   shift and go to state 353
    expression                     shift and go to state 385
    boolean                        shift and go to state 269
    other_value                    shift and go to state 364
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    string                         shift and go to state 284
    string_object                  shift and go to state 286
    concatenate                    shift and go to state 287
    term                           shift and go to state 18
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    group                          shift and go to state 76
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (252) mathRound -> FUNMATH POINT ROUND . LPAREN VARIABLE RPAREN
    (253) mathRound -> FUNMATH POINT ROUND . LPAREN number_value RPAREN

    LPAREN          shift and go to state 382

>>>>>>> master

state 317

<<<<<<< HEAD
    (124) assign_object_value -> object_value_form2 EQUAL general_value .

    POINTCOMMA      reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    LPAREN          reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    NEGATION        reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    COMMENT         reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    MULTICOMMENT    reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    FUNCTION        reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    PRINT           reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    INCREMENT       reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    DECREMENT       reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    NORMSTRING1     reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    NORMSTRING2     reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    MULTISTRING     reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    ENUM            reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    IF              reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    WHILE           reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    FOR             reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    NUMBER          reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    FLOAT           reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    VARIABLE        reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    LET             reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    VAR             reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    STATIC          reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    CONST           reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    OBJECTNAME      reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    FUNMATH         reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    $end            reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
    RKEY            reduce using rule 124 (assign_object_value -> object_value_form2 EQUAL general_value .)
=======
    (254) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 383
>>>>>>> master


state 318

<<<<<<< HEAD
    (114) declare_any -> prefix VARIABLE TWOPOINTS . ANY

    ANY             shift and go to state 386
=======
    (200) factor_expr -> LPAREN expression . RPAREN
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 202
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 319

<<<<<<< HEAD
    (51) funcionif -> IF LPAREN formLog . RPAREN substatement
    (52) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif
    (53) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif funcionelse
    (54) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelse

    RPAREN          shift and go to state 387
=======
    (194) group -> variable .
    (213) array_value -> variable . LBRACKET expression RBRACKET
    (211) object_value_form1 -> variable . POINT variable
    (212) object_value_form2 -> variable . POINT array_value
    (201) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 194 (group -> variable .)
    RPAREN          reduce using rule 194 (group -> variable .)
    INCREMENT       reduce using rule 194 (group -> variable .)
    DECREMENT       reduce using rule 194 (group -> variable .)
    LBRACKET        shift and go to state 169
    POINT           shift and go to state 170
    PLUS            reduce using rule 201 (other_value -> variable .)
    MINUS           reduce using rule 201 (other_value -> variable .)
    PRODUCT         reduce using rule 201 (other_value -> variable .)
    DIVIDE          reduce using rule 201 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 201 (other_value -> variable .) ]
>>>>>>> master


state 320

    (161) termS -> termS PLUS . value
    (163) value -> . expression
    (164) value -> . string
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    value                          shift and go to state 384
    expression                     shift and go to state 199
    string                         shift and go to state 196
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

<<<<<<< HEAD
    (216) formLog -> expCond .
    (195) expOpLog -> expCond . oplogico expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    RPAREN          reduce using rule 216 (formLog -> expCond .)
    POINTCOMMA      reduce using rule 216 (formLog -> expCond .)
    AND             shift and go to state 116
    OR              shift and go to state 117

    oplogico                       shift and go to state 118
=======
state 321

    (190) expCond -> LPAREN expression operador . expression RPAREN
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
>>>>>>> master

    expression                     shift and go to state 385
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

<<<<<<< HEAD
    (217) formLog -> expOpLog .

    RPAREN          reduce using rule 217 (formLog -> expOpLog .)
    POINTCOMMA      reduce using rule 217 (formLog -> expOpLog .)
=======
state 322

    (190) expCond -> LPAREN expression operador expression . RPAREN
    (189) expCond -> expression operador expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
>>>>>>> master

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 386
    AND             reduce using rule 189 (expCond -> expression operador expression .)
    OR              reduce using rule 189 (expCond -> expression operador expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103

  ! RPAREN          [ reduce using rule 189 (expCond -> expression operador expression .) ]

<<<<<<< HEAD
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    EQUALTO         shift and go to state 208
    NOTEQUALTO      shift and go to state 209
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109
=======

state 323
>>>>>>> master

    (248) mathAbs -> declare_any . EQUAL mathAbs

<<<<<<< HEAD
    (62) funcionwhile -> WHILE LPAREN formLog . RPAREN substatement

    RPAREN          shift and go to state 388
=======
    EQUAL           shift and go to state 207

>>>>>>> master

state 324

    (248) mathAbs -> declare_any EQUAL mathAbs .

    RPAREN          reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    PLUS            reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    MINUS           reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    PRODUCT         reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    DIVIDE          reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    GREATER         reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    LESS            reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    GREATEREQUAL    reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    LESSEQUAL       reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    EQUALTO         reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    NOTEQUALTO      reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    AND             reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    OR              reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    POINTCOMMA      reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    $end            reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    RKEY            reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    RBRACKET        reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)
    COMMA           reduce using rule 248 (mathAbs -> declare_any EQUAL mathAbs .)

<<<<<<< HEAD
    (58) funcionfor -> FOR LPAREN LET . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> FOR LPAREN LET . VARIABLE IN VARIABLE RPAREN substatement

    VARIABLE        shift and go to state 389
=======

state 325
>>>>>>> master

    (249) mathAbs -> FUNMATH . POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> FUNMATH . POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> FUNMATH . POINT ABS LPAREN MINUS number_value RPAREN

    POINT           shift and go to state 387


state 326

    (177) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RKEY            reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RBRACKET        reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMA           reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RPAREN          reduce using rule 177 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


<<<<<<< HEAD
    (59) funcionfor -> FOR LPAREN VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (61) funcionfor -> FOR LPAREN VARIABLE . IN VARIABLE RPAREN substatement

    EQUAL           shift and go to state 390
    IN              shift and go to state 391


state 315

    (224) enum_value -> object_name POINT object_name .

    PLUS            reduce using rule 224 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 224 (enum_value -> object_name POINT object_name .)
    PRODUCT         reduce using rule 224 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 224 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 224 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 224 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 224 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 224 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 224 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 224 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 224 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 224 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 224 (enum_value -> object_name POINT object_name .)
    LPAREN          reduce using rule 224 (enum_value -> object_name POINT object_name .)
    NEGATION        reduce using rule 224 (enum_value -> object_name POINT object_name .)
    COMMENT         reduce using rule 224 (enum_value -> object_name POINT object_name .)
    MULTICOMMENT    reduce using rule 224 (enum_value -> object_name POINT object_name .)
    FUNCTION        reduce using rule 224 (enum_value -> object_name POINT object_name .)
    PRINT           reduce using rule 224 (enum_value -> object_name POINT object_name .)
    INCREMENT       reduce using rule 224 (enum_value -> object_name POINT object_name .)
    DECREMENT       reduce using rule 224 (enum_value -> object_name POINT object_name .)
    NORMSTRING1     reduce using rule 224 (enum_value -> object_name POINT object_name .)
    NORMSTRING2     reduce using rule 224 (enum_value -> object_name POINT object_name .)
    MULTISTRING     reduce using rule 224 (enum_value -> object_name POINT object_name .)
    ENUM            reduce using rule 224 (enum_value -> object_name POINT object_name .)
    IF              reduce using rule 224 (enum_value -> object_name POINT object_name .)
    WHILE           reduce using rule 224 (enum_value -> object_name POINT object_name .)
    FOR             reduce using rule 224 (enum_value -> object_name POINT object_name .)
    NUMBER          reduce using rule 224 (enum_value -> object_name POINT object_name .)
    FLOAT           reduce using rule 224 (enum_value -> object_name POINT object_name .)
    VARIABLE        reduce using rule 224 (enum_value -> object_name POINT object_name .)
    LET             reduce using rule 224 (enum_value -> object_name POINT object_name .)
    VAR             reduce using rule 224 (enum_value -> object_name POINT object_name .)
    STATIC          reduce using rule 224 (enum_value -> object_name POINT object_name .)
    CONST           reduce using rule 224 (enum_value -> object_name POINT object_name .)
    OBJECTNAME      reduce using rule 224 (enum_value -> object_name POINT object_name .)
    FUNMATH         reduce using rule 224 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 224 (enum_value -> object_name POINT object_name .)
    RKEY            reduce using rule 224 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 224 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 224 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 224 (enum_value -> object_name POINT object_name .)


state 316

    (82) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    LPAREN          reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    NEGATION        reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    COMMENT         reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    MULTICOMMENT    reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    FUNCTION        reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    PRINT           reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    INCREMENT       reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    DECREMENT       reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    NORMSTRING1     reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    NORMSTRING2     reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    MULTISTRING     reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    ENUM            reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    IF              reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    WHILE           reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    FOR             reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    NUMBER          reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    FLOAT           reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    VARIABLE        reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    LET             reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    VAR             reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    STATIC          reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    CONST           reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    OBJECTNAME      reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    FUNMATH         reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    RKEY            reduce using rule 82 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 317

    (149) list_number -> LBRACKET . numbers RBRACKET
    (150) numbers -> . numbers COMMA number_value
    (151) numbers -> . number_value
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    numbers                        shift and go to state 347
    number_value                   shift and go to state 351
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
state 327

    (261) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN . VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN . number_value RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 388
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 389
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 328

    (263) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . VARIABLE RPAREN
    (264) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . string RPAREN
    (270) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . list_types RPAREN
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (136) list_types -> . list_number
    (137) list_types -> . list_boolean
    (138) list_types -> . list_string
    (139) list_number -> . LBRACKET numbers RBRACKET
    (142) list_boolean -> . LBRACKET booleans RBRACKET
    (145) list_string -> . LBRACKET strings RBRACKET

    VARIABLE        shift and go to state 390
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    LBRACKET        shift and go to state 299

    string                         shift and go to state 391
    list_types                     shift and go to state 392
    list_number                    shift and go to state 232
    list_boolean                   shift and go to state 233
    list_string                    shift and go to state 234

state 329

    (265) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN . VARIABLE RPAREN
    (266) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN . string RPAREN
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    VARIABLE        shift and go to state 393
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50

    string                         shift and go to state 394

state 330

    (276) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 395
>>>>>>> master


<<<<<<< HEAD
    (86) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    LPAREN          reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    NEGATION        reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    COMMENT         reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    MULTICOMMENT    reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    FUNCTION        reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    PRINT           reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    INCREMENT       reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    DECREMENT       reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    NORMSTRING1     reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    NORMSTRING2     reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    MULTISTRING     reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    ENUM            reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    IF              reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    WHILE           reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    FOR             reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    NUMBER          reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    FLOAT           reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    VARIABLE        reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    LET             reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    VAR             reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    STATIC          reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    CONST           reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    OBJECTNAME      reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    FUNMATH         reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    RKEY            reduce using rule 86 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)

=======
state 331

    (274) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN . VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN . string RPAREN
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    VARIABLE        shift and go to state 396
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
>>>>>>> master

    string                         shift and go to state 397

<<<<<<< HEAD
    (152) list_boolean -> LBRACKET . booleans RBRACKET
    (153) booleans -> . booleans COMMA boolean_value
    (154) booleans -> . boolean_value
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    FUNMATH         shift and go to state 101
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    booleans                       shift and go to state 348
    boolean_value                  shift and go to state 352
    boolean                        shift and go to state 269
    other_value                    shift and go to state 270
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    expression                     shift and go to state 277
    factor_exprlog                 shift and go to state 34
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    term                           shift and go to state 18
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    declare_any                    shift and go to state 132
    group                          shift and go to state 76
    prefix                         shift and go to state 71
=======
state 332

    (279) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . number_value RPAREN
    (281) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . string RPAREN
    (148) number_value -> . expression
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 398
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 399
    boolean_value                  shift and go to state 400
    string                         shift and go to state 401
    expression                     shift and go to state 375
    boolean                        shift and go to state 263
    other_value                    shift and go to state 264
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    term                           shift and go to state 16
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    group                          shift and go to state 72
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 333

<<<<<<< HEAD
    (90) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    LPAREN          reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    NEGATION        reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    COMMENT         reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    MULTICOMMENT    reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    FUNCTION        reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    PRINT           reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    INCREMENT       reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    DECREMENT       reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    NORMSTRING1     reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    NORMSTRING2     reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    MULTISTRING     reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    ENUM            reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    IF              reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    WHILE           reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    FOR             reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    NUMBER          reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    FLOAT           reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    VARIABLE        reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    LET             reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    VAR             reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    STATIC          reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    CONST           reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    OBJECTNAME      reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    FUNMATH         reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    RKEY            reduce using rule 90 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 321
=======
    (283) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . number_value RPAREN
    (285) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . string RPAREN
    (148) number_value -> . expression
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 402
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 403
    boolean_value                  shift and go to state 404
    string                         shift and go to state 405
    expression                     shift and go to state 375
    boolean                        shift and go to state 263
    other_value                    shift and go to state 264
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    term                           shift and go to state 16
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    group                          shift and go to state 72
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 334

    (56) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 406
>>>>>>> master

    (155) list_string -> LBRACKET . strings RBRACKET
    (156) strings -> . strings COMMA string_value
    (157) strings -> . string_value
    (166) string_value -> . string
    (167) string_value -> . other_value
    (168) string_value -> . string_object
    (169) string_value -> . concatenate
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (170) concatenate -> . string PLUS termS
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    strings                        shift and go to state 349
    string_value                   shift and go to state 353
    string                         shift and go to state 284
    other_value                    shift and go to state 285
    string_object                  shift and go to state 286
    concatenate                    shift and go to state 287
    variable                       shift and go to state 288
    funciones                      shift and go to state 67
    array_value                    shift and go to state 289
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 290
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 335

<<<<<<< HEAD
    (259) mathAbs -> FUNMATH POINT ABS . LPAREN VARIABLE RPAREN
    (260) mathAbs -> FUNMATH POINT ABS . LPAREN number_value RPAREN
    (261) mathAbs -> FUNMATH POINT ABS . LPAREN MINUS number_value RPAREN

    LPAREN          shift and go to state 393
=======
    (210) string_object -> NEW OBJECTSTRING . LPAREN string RPAREN

    LPAREN          shift and go to state 407
>>>>>>> master


state 336

<<<<<<< HEAD
    (262) mathRound -> FUNMATH POINT ROUND . LPAREN VARIABLE RPAREN
    (263) mathRound -> FUNMATH POINT ROUND . LPAREN number_value RPAREN

    LPAREN          shift and go to state 394
=======
    (121) object_definition -> LKEY attributes . RKEY
    (122) attributes -> attributes . COMMA attribute

    RKEY            shift and go to state 408
    COMMA           shift and go to state 409
>>>>>>> master


state 337

<<<<<<< HEAD
    (264) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 395
=======
    (123) attributes -> attribute .

    RKEY            reduce using rule 123 (attributes -> attribute .)
    COMMA           reduce using rule 123 (attributes -> attribute .)
>>>>>>> master


state 338

<<<<<<< HEAD
    (210) factor_expr -> LPAREN expression . RPAREN
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 207
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (124) attribute -> variable . TWOPOINTS general_value
    (125) attribute -> variable . TWOPOINTS list_types

    TWOPOINTS       shift and go to state 410
>>>>>>> master


state 339

<<<<<<< HEAD
    (204) group -> variable .
    (223) array_value -> variable . LBRACKET expression RBRACKET
    (221) object_value_form1 -> variable . POINT variable
    (222) object_value_form2 -> variable . POINT array_value
    (211) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 204 (group -> variable .)
    RPAREN          reduce using rule 204 (group -> variable .)
    INCREMENT       reduce using rule 204 (group -> variable .)
    DECREMENT       reduce using rule 204 (group -> variable .)
    LBRACKET        shift and go to state 174
    POINT           shift and go to state 175
    PLUS            reduce using rule 211 (other_value -> variable .)
    MINUS           reduce using rule 211 (other_value -> variable .)
    PRODUCT         reduce using rule 211 (other_value -> variable .)
    DIVIDE          reduce using rule 211 (other_value -> variable .)
=======
    (118) tuples_list -> LBRACKET tuples_values . RBRACKET
    (119) tuples_values -> tuples_values . COMMA general_value

    RBRACKET        shift and go to state 411
    COMMA           shift and go to state 412
>>>>>>> master

  ! RPAREN          [ reduce using rule 211 (other_value -> variable .) ]

<<<<<<< HEAD

state 327
=======
state 340

    (139) list_number -> LBRACKET numbers . RBRACKET
    (140) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 413
    COMMA           shift and go to state 414
>>>>>>> master

    (171) termS -> termS PLUS . value
    (173) value -> . expression
    (174) value -> . string
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    value                          shift and go to state 396
    expression                     shift and go to state 204
    string                         shift and go to state 201
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 341

<<<<<<< HEAD
    (200) expCond -> LPAREN expression operador . expression RPAREN
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    expression                     shift and go to state 397
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (142) list_boolean -> LBRACKET booleans . RBRACKET
    (143) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 415
    COMMA           shift and go to state 416

>>>>>>> master

state 342

<<<<<<< HEAD
    (200) expCond -> LPAREN expression operador expression . RPAREN
    (199) expCond -> expression operador expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 398
    AND             reduce using rule 199 (expCond -> expression operador expression .)
    OR              reduce using rule 199 (expCond -> expression operador expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

  ! RPAREN          [ reduce using rule 199 (expCond -> expression operador expression .) ]
=======
    (145) list_string -> LBRACKET strings . RBRACKET
    (146) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 417
    COMMA           shift and go to state 418
>>>>>>> master


state 343

<<<<<<< HEAD
    (258) mathAbs -> declare_any . EQUAL mathAbs

    EQUAL           shift and go to state 212
=======
    (120) tuples_values -> general_value .

    RBRACKET        reduce using rule 120 (tuples_values -> general_value .)
    COMMA           reduce using rule 120 (tuples_values -> general_value .)
>>>>>>> master


state 344

    (141) numbers -> number_value .

    RBRACKET        reduce using rule 141 (numbers -> number_value .)
    COMMA           reduce using rule 141 (numbers -> number_value .)


<<<<<<< HEAD
    (258) mathAbs -> declare_any EQUAL mathAbs .

    RPAREN          reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    PLUS            reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    MINUS           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    PRODUCT         reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    DIVIDE          reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    GREATER         reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    LESS            reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    GREATEREQUAL    reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    LESSEQUAL       reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    EQUALTO         reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    NOTEQUALTO      reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    AND             reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    OR              reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    POINTCOMMA      reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    LPAREN          reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    NEGATION        reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    COMMENT         reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    MULTICOMMENT    reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    FUNCTION        reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    PRINT           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    INCREMENT       reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    DECREMENT       reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    NORMSTRING1     reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    NORMSTRING2     reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    MULTISTRING     reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    ENUM            reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    IF              reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    WHILE           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    FOR             reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    NUMBER          reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    FLOAT           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    VARIABLE        reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    LET             reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    VAR             reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    STATIC          reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    CONST           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    OBJECTNAME      reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    FUNMATH         reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    $end            reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    RKEY            reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    RBRACKET        reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)
    COMMA           reduce using rule 258 (mathAbs -> declare_any EQUAL mathAbs .)

=======
state 345

    (144) booleans -> boolean_value .

    RBRACKET        reduce using rule 144 (booleans -> boolean_value .)
    COMMA           reduce using rule 144 (booleans -> boolean_value .)


state 346

    (147) strings -> string_value .

    RBRACKET        reduce using rule 147 (strings -> string_value .)
    COMMA           reduce using rule 147 (strings -> string_value .)


state 347

    (126) general_value -> expression .
    (148) number_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (181) expEq -> expression . EQUALTO expression
    (184) expNotEq -> expression . NOTEQUALTO expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

  ! reduce/reduce conflict for RBRACKET resolved using rule 126 (general_value -> expression .)
  ! reduce/reduce conflict for COMMA resolved using rule 126 (general_value -> expression .)
    RBRACKET        reduce using rule 126 (general_value -> expression .)
    COMMA           reduce using rule 126 (general_value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! RBRACKET        [ reduce using rule 148 (number_value -> expression .) ]
  ! COMMA           [ reduce using rule 148 (number_value -> expression .) ]

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105
>>>>>>> master

state 348

<<<<<<< HEAD
    (259) mathAbs -> FUNMATH . POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> FUNMATH . POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> FUNMATH . POINT ABS LPAREN MINUS number_value RPAREN

    POINT           shift and go to state 399


state 333

    (187) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    LPAREN          reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    NEGATION        reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMENT         reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    MULTICOMMENT    reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    FUNCTION        reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    PRINT           reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    INCREMENT       reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    DECREMENT       reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    NORMSTRING1     reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    NORMSTRING2     reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    MULTISTRING     reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    ENUM            reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    IF              reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    WHILE           reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    FOR             reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    NUMBER          reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    FLOAT           reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    VARIABLE        reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    LET             reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    VAR             reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    STATIC          reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    CONST           reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    OBJECTNAME      reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    FUNMATH         reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RKEY            reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RBRACKET        reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMA           reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RPAREN          reduce using rule 187 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
=======
    (127) general_value -> boolean .
    (149) boolean_value -> boolean .

  ! reduce/reduce conflict for RBRACKET resolved using rule 127 (general_value -> boolean .)
  ! reduce/reduce conflict for COMMA resolved using rule 127 (general_value -> boolean .)
    RBRACKET        reduce using rule 127 (general_value -> boolean .)
    COMMA           reduce using rule 127 (general_value -> boolean .)

  ! RBRACKET        [ reduce using rule 149 (boolean_value -> boolean .) ]
  ! COMMA           [ reduce using rule 149 (boolean_value -> boolean .) ]


state 349
>>>>>>> master

    (128) general_value -> string .
    (156) string_value -> string .
    (160) concatenate -> string . PLUS termS

  ! reduce/reduce conflict for RBRACKET resolved using rule 128 (general_value -> string .)
  ! reduce/reduce conflict for COMMA resolved using rule 128 (general_value -> string .)
    RBRACKET        reduce using rule 128 (general_value -> string .)
    COMMA           reduce using rule 128 (general_value -> string .)
    PLUS            shift and go to state 117

<<<<<<< HEAD
    (271) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN . VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN . number_value RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 400
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 401
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
  ! RBRACKET        [ reduce using rule 156 (string_value -> string .) ]
  ! COMMA           [ reduce using rule 156 (string_value -> string .) ]


state 350
>>>>>>> master

    (129) general_value -> concatenate .
    (159) string_value -> concatenate .

<<<<<<< HEAD
    (273) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . VARIABLE RPAREN
    (274) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . string RPAREN
    (280) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN . list_types RPAREN
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (146) list_types -> . list_number
    (147) list_types -> . list_boolean
    (148) list_types -> . list_string
    (149) list_number -> . LBRACKET numbers RBRACKET
    (152) list_boolean -> . LBRACKET booleans RBRACKET
    (155) list_string -> . LBRACKET strings RBRACKET

    VARIABLE        shift and go to state 402
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    LBRACKET        shift and go to state 305
=======
  ! reduce/reduce conflict for RBRACKET resolved using rule 129 (general_value -> concatenate .)
  ! reduce/reduce conflict for COMMA resolved using rule 129 (general_value -> concatenate .)
    RBRACKET        reduce using rule 129 (general_value -> concatenate .)
    COMMA           reduce using rule 129 (general_value -> concatenate .)

  ! RBRACKET        [ reduce using rule 159 (string_value -> concatenate .) ]
  ! COMMA           [ reduce using rule 159 (string_value -> concatenate .) ]
>>>>>>> master

    string                         shift and go to state 403
    list_types                     shift and go to state 404
    list_number                    shift and go to state 237
    list_boolean                   shift and go to state 238
    list_string                    shift and go to state 239

state 351

<<<<<<< HEAD
    (275) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN . VARIABLE RPAREN
    (276) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN . string RPAREN
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING

    VARIABLE        shift and go to state 405
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    string                         shift and go to state 406
=======
    (130) general_value -> string_object .
    (158) string_value -> string_object .

  ! reduce/reduce conflict for RBRACKET resolved using rule 130 (general_value -> string_object .)
  ! reduce/reduce conflict for COMMA resolved using rule 130 (general_value -> string_object .)
    RBRACKET        reduce using rule 130 (general_value -> string_object .)
    COMMA           reduce using rule 130 (general_value -> string_object .)
>>>>>>> master

  ! RBRACKET        [ reduce using rule 158 (string_value -> string_object .) ]
  ! COMMA           [ reduce using rule 158 (string_value -> string_object .) ]

<<<<<<< HEAD
    (286) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 407
=======

state 352
>>>>>>> master

    (131) general_value -> expCond .
    (151) boolean_value -> expCond .
    (185) expOpLog -> expCond . oplogico expCond
    (179) expEq -> expCond . EQUALTO expCond
    (182) expNotEq -> expCond . NOTEQUALTO expCond
    (239) oplogico -> . AND
    (240) oplogico -> . OR

  ! reduce/reduce conflict for RBRACKET resolved using rule 131 (general_value -> expCond .)
  ! reduce/reduce conflict for COMMA resolved using rule 131 (general_value -> expCond .)
    RBRACKET        reduce using rule 131 (general_value -> expCond .)
    COMMA           reduce using rule 131 (general_value -> expCond .)
    EQUALTO         shift and go to state 115
    NOTEQUALTO      shift and go to state 116
    AND             shift and go to state 112
    OR              shift and go to state 113

  ! RBRACKET        [ reduce using rule 151 (boolean_value -> expCond .) ]
  ! COMMA           [ reduce using rule 151 (boolean_value -> expCond .) ]

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN . VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN . string RPAREN
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING

    VARIABLE        shift and go to state 408
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    string                         shift and go to state 409
=======
    oplogico                       shift and go to state 114

state 353

    (132) general_value -> expOpLog .
    (152) boolean_value -> expOpLog .
>>>>>>> master

  ! reduce/reduce conflict for RBRACKET resolved using rule 132 (general_value -> expOpLog .)
  ! reduce/reduce conflict for COMMA resolved using rule 132 (general_value -> expOpLog .)
    RBRACKET        reduce using rule 132 (general_value -> expOpLog .)
    COMMA           reduce using rule 132 (general_value -> expOpLog .)

<<<<<<< HEAD
    (289) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . number_value RPAREN
    (291) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN . string RPAREN
    (158) number_value -> . expression
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 410
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 411
    boolean_value                  shift and go to state 412
    string                         shift and go to state 413
    expression                     shift and go to state 385
    boolean                        shift and go to state 269
    other_value                    shift and go to state 270
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    term                           shift and go to state 18
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    group                          shift and go to state 76
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
  ! RBRACKET        [ reduce using rule 152 (boolean_value -> expOpLog .) ]
  ! COMMA           [ reduce using rule 152 (boolean_value -> expOpLog .) ]


state 354
>>>>>>> master

    (133) general_value -> expNeg .
    (153) boolean_value -> expNeg .

<<<<<<< HEAD
    (293) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . number_value RPAREN
    (295) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN . string RPAREN
    (158) number_value -> . expression
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 414
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 415
    boolean_value                  shift and go to state 416
    string                         shift and go to state 417
    expression                     shift and go to state 385
    boolean                        shift and go to state 269
    other_value                    shift and go to state 270
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    term                           shift and go to state 18
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    group                          shift and go to state 76
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
  ! reduce/reduce conflict for RBRACKET resolved using rule 133 (general_value -> expNeg .)
  ! reduce/reduce conflict for COMMA resolved using rule 133 (general_value -> expNeg .)
    RBRACKET        reduce using rule 133 (general_value -> expNeg .)
    COMMA           reduce using rule 133 (general_value -> expNeg .)

  ! RBRACKET        [ reduce using rule 153 (boolean_value -> expNeg .) ]
  ! COMMA           [ reduce using rule 153 (boolean_value -> expNeg .) ]

>>>>>>> master

state 355

<<<<<<< HEAD
    (65) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 418
=======
    (134) general_value -> expEq .
    (154) boolean_value -> expEq .

  ! reduce/reduce conflict for RBRACKET resolved using rule 134 (general_value -> expEq .)
  ! reduce/reduce conflict for COMMA resolved using rule 134 (general_value -> expEq .)
    RBRACKET        reduce using rule 134 (general_value -> expEq .)
    COMMA           reduce using rule 134 (general_value -> expEq .)
>>>>>>> master

  ! RBRACKET        [ reduce using rule 154 (boolean_value -> expEq .) ]
  ! COMMA           [ reduce using rule 154 (boolean_value -> expEq .) ]


<<<<<<< HEAD
    (220) string_object -> NEW OBJECTSTRING . LPAREN string RPAREN

    LPAREN          shift and go to state 419
=======
state 356

    (135) general_value -> expNotEq .
    (155) boolean_value -> expNotEq .
>>>>>>> master

  ! reduce/reduce conflict for RBRACKET resolved using rule 135 (general_value -> expNotEq .)
  ! reduce/reduce conflict for COMMA resolved using rule 135 (general_value -> expNotEq .)
    RBRACKET        reduce using rule 135 (general_value -> expNotEq .)
    COMMA           reduce using rule 135 (general_value -> expNotEq .)

  ! RBRACKET        [ reduce using rule 155 (boolean_value -> expNotEq .) ]
  ! COMMA           [ reduce using rule 155 (boolean_value -> expNotEq .) ]


<<<<<<< HEAD
    (131) object_definition -> LKEY attributes . RKEY
    (132) attributes -> attributes . COMMA attribute

    RKEY            shift and go to state 420
    COMMA           shift and go to state 421
=======
state 357
>>>>>>> master

    (150) boolean_value -> other_value .
    (157) string_value -> other_value .
    (199) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 150 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 150 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 150 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 150 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 150 (boolean_value -> other_value .)
    COMMA           reduce using rule 150 (boolean_value -> other_value .)
    PLUS            reduce using rule 199 (term -> other_value .)
    MINUS           reduce using rule 199 (term -> other_value .)
    PRODUCT         reduce using rule 199 (term -> other_value .)
    DIVIDE          reduce using rule 199 (term -> other_value .)
    EQUALTO         reduce using rule 199 (term -> other_value .)
    NOTEQUALTO      reduce using rule 199 (term -> other_value .)
    GREATER         reduce using rule 199 (term -> other_value .)
    LESS            reduce using rule 199 (term -> other_value .)
    GREATEREQUAL    reduce using rule 199 (term -> other_value .)
    LESSEQUAL       reduce using rule 199 (term -> other_value .)
    AND             reduce using rule 199 (term -> other_value .)
    OR              reduce using rule 199 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 157 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 157 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 199 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 199 (term -> other_value .) ]


<<<<<<< HEAD
    (133) attributes -> attribute .

    RKEY            reduce using rule 133 (attributes -> attribute .)
    COMMA           reduce using rule 133 (attributes -> attribute .)

=======
state 358

    (58) declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL . tuples_2_values
    (66) tuples_2_values -> . LBRACKET general_value COMMA general_value RBRACKET

    LBRACKET        shift and go to state 420
>>>>>>> master

    tuples_2_values                shift and go to state 419

<<<<<<< HEAD
    (134) attribute -> variable . TWOPOINTS general_value
    (135) attribute -> variable . TWOPOINTS list_types

    TWOPOINTS       shift and go to state 422

=======
state 359

    (60) declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL . tuples_3_values
    (67) tuples_3_values -> . LBRACKET general_value COMMA general_value COMMA general_value RBRACKET

    LBRACKET        shift and go to state 422
>>>>>>> master

    tuples_3_values                shift and go to state 421

<<<<<<< HEAD
    (128) tuples_list -> LBRACKET tuples_values . RBRACKET
    (129) tuples_values -> tuples_values . COMMA general_value

    RBRACKET        shift and go to state 423
    COMMA           shift and go to state 424
=======
state 360

    (62) declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL . tuples_4_values
    (68) tuples_4_values -> . LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
>>>>>>> master

    LBRACKET        shift and go to state 424

    tuples_4_values                shift and go to state 423

state 361

    (76) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (80) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (84) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 425
    VARBOOLEAN      shift and go to state 426
    VARSTRING       shift and go to state 427


state 362

    (63) tuples_2_variables -> LBRACKET types . COMMA types RBRACKET
    (64) tuples_3_variables -> LBRACKET types . COMMA types COMMA types RBRACKET
    (65) tuples_4_variables -> LBRACKET types . COMMA types COMMA types COMMA types RBRACKET

    COMMA           shift and go to state 428


state 363

    (221) types -> VARNUMBER .

    COMMA           reduce using rule 221 (types -> VARNUMBER .)
    RBRACKET        reduce using rule 221 (types -> VARNUMBER .)

<<<<<<< HEAD
    (149) list_number -> LBRACKET numbers . RBRACKET
    (150) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 425
    COMMA           shift and go to state 426

=======

state 364

    (222) types -> VARSTRING .

    COMMA           reduce using rule 222 (types -> VARSTRING .)
    RBRACKET        reduce using rule 222 (types -> VARSTRING .)


state 365

    (223) types -> VARBOOLEAN .

    COMMA           reduce using rule 223 (types -> VARBOOLEAN .)
    RBRACKET        reduce using rule 223 (types -> VARBOOLEAN .)


state 366

    (20) consoleLog -> PRINT LPAREN VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 20 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 20 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 20 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)


state 367

    (21) consoleLog -> PRINT LPAREN string RPAREN .

    POINTCOMMA      reduce using rule 21 (consoleLog -> PRINT LPAREN string RPAREN .)
    $end            reduce using rule 21 (consoleLog -> PRINT LPAREN string RPAREN .)
    RKEY            reduce using rule 21 (consoleLog -> PRINT LPAREN string RPAREN .)


state 368

    (34) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 429


state 369

    (35) enums -> enums_numeric .
    (37) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 35 (enums -> enums_numeric .)
    COMMA           shift and go to state 430


state 370

    (36) enums -> enums_string .
    (41) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 36 (enums -> enums_string .)
    COMMA           shift and go to state 431


state 371

    (38) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 38 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 38 (enums_numeric -> enums_numeric_value .)


state 372

    (42) enums_string -> enums_string_value .

    COMMA           reduce using rule 42 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 42 (enums_string -> enums_string_value .)


state 373

    (39) enums_numeric_value -> object_name . EQUAL number
    (40) enums_numeric_value -> object_name .
    (43) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 432
    COMMA           reduce using rule 40 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 40 (enums_numeric_value -> object_name .)


state 374

    (213) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    RKEY            reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 213 (array_value -> variable LBRACKET expression RBRACKET .)


state 375

    (148) number_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression
    (189) expCond -> expression . operador expression
    (187) expOpLog -> expression . oplogico expression
    (181) expEq -> expression . EQUALTO expression
    (184) expNotEq -> expression . NOTEQUALTO expression
    (233) operador -> . GREATER
    (234) operador -> . LESS
    (235) operador -> . GREATEREQUAL
    (236) operador -> . LESSEQUAL
    (237) operador -> . EQUALTO
    (238) operador -> . NOTEQUALTO
    (239) oplogico -> . AND
    (240) oplogico -> . OR

    RBRACKET        reduce using rule 148 (number_value -> expression .)
    COMMA           reduce using rule 148 (number_value -> expression .)
    RPAREN          reduce using rule 148 (number_value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    GREATER         shift and go to state 108
    LESS            shift and go to state 109
    GREATEREQUAL    shift and go to state 110
    LESSEQUAL       shift and go to state 111
    AND             shift and go to state 112
    OR              shift and go to state 113

    operador                       shift and go to state 104
    oplogico                       shift and go to state 105

state 376

    (44) funcionif -> IF LPAREN formLog RPAREN . substatement
    (45) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif
    (46) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif funcionelse
    (47) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelse
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 433

state 377

    (53) funcionwhile -> WHILE LPAREN formLog RPAREN . substatement
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 435

state 378

    (51) funcionfor -> FOR LPAREN prefix VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    EQUAL           shift and go to state 436


state 379

    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 437
    term                           shift and go to state 16
    expression                     shift and go to state 380
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 380

<<<<<<< HEAD
    (152) list_boolean -> LBRACKET booleans . RBRACKET
    (153) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 427
    COMMA           shift and go to state 428
=======
    (148) number_value -> expression .
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    RBRACKET        reduce using rule 148 (number_value -> expression .)
    COMMA           reduce using rule 148 (number_value -> expression .)
    RPAREN          reduce using rule 148 (number_value -> expression .)
    POINTCOMMA      reduce using rule 148 (number_value -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103
>>>>>>> master


state 381

<<<<<<< HEAD
    (155) list_string -> LBRACKET strings . RBRACKET
    (156) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 429
    COMMA           shift and go to state 430

=======
    (249) mathAbs -> FUNMATH POINT ABS LPAREN . VARIABLE RPAREN
    (250) mathAbs -> FUNMATH POINT ABS LPAREN . number_value RPAREN
    (251) mathAbs -> FUNMATH POINT ABS LPAREN . MINUS number_value RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 438
    MINUS           shift and go to state 440
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 439
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 382

<<<<<<< HEAD
    (130) tuples_values -> general_value .

    RBRACKET        reduce using rule 130 (tuples_values -> general_value .)
    COMMA           reduce using rule 130 (tuples_values -> general_value .)


state 351

    (151) numbers -> number_value .

    RBRACKET        reduce using rule 151 (numbers -> number_value .)
    COMMA           reduce using rule 151 (numbers -> number_value .)

=======
    (252) mathRound -> FUNMATH POINT ROUND LPAREN . VARIABLE RPAREN
    (253) mathRound -> FUNMATH POINT ROUND LPAREN . number_value RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 441
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 442
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 383

    (254) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA number_value RPAREN
    (256) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA number_value RPAREN
    (257) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA VARIABLE RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 443
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 444
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 384

<<<<<<< HEAD
    (154) booleans -> boolean_value .

    RBRACKET        reduce using rule 154 (booleans -> boolean_value .)
    COMMA           reduce using rule 154 (booleans -> boolean_value .)
=======
    (161) termS -> termS PLUS value .
>>>>>>> master

    PLUS            reduce using rule 161 (termS -> termS PLUS value .)
    POINTCOMMA      reduce using rule 161 (termS -> termS PLUS value .)
    $end            reduce using rule 161 (termS -> termS PLUS value .)
    RKEY            reduce using rule 161 (termS -> termS PLUS value .)
    RBRACKET        reduce using rule 161 (termS -> termS PLUS value .)
    COMMA           reduce using rule 161 (termS -> termS PLUS value .)


<<<<<<< HEAD
    (157) strings -> string_value .

    RBRACKET        reduce using rule 157 (strings -> string_value .)
    COMMA           reduce using rule 157 (strings -> string_value .)


state 354

    (136) general_value -> expression .
    (158) number_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (191) expEq -> expression . EQUALTO expression
    (194) expNotEq -> expression . NOTEQUALTO expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

  ! reduce/reduce conflict for RBRACKET resolved using rule 136 (general_value -> expression .)
  ! reduce/reduce conflict for COMMA resolved using rule 136 (general_value -> expression .)
    RBRACKET        reduce using rule 136 (general_value -> expression .)
    COMMA           reduce using rule 136 (general_value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    EQUALTO         shift and go to state 110
    NOTEQUALTO      shift and go to state 111
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117

  ! RBRACKET        [ reduce using rule 158 (number_value -> expression .) ]
  ! COMMA           [ reduce using rule 158 (number_value -> expression .) ]

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109
=======
state 385

    (190) expCond -> LPAREN expression operador expression . RPAREN
    (165) expression -> expression . PLUS term
    (166) expression -> expression . MINUS term
    (168) expression -> expression . PRODUCT expression
    (169) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 386
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    PRODUCT         shift and go to state 102
    DIVIDE          shift and go to state 103


state 386

    (190) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    RKEY            reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    RBRACKET        reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMA           reduce using rule 190 (expCond -> LPAREN expression operador expression RPAREN .)
>>>>>>> master


<<<<<<< HEAD
    (137) general_value -> boolean .
    (159) boolean_value -> boolean .

  ! reduce/reduce conflict for RBRACKET resolved using rule 137 (general_value -> boolean .)
  ! reduce/reduce conflict for COMMA resolved using rule 137 (general_value -> boolean .)
    RBRACKET        reduce using rule 137 (general_value -> boolean .)
    COMMA           reduce using rule 137 (general_value -> boolean .)

  ! RBRACKET        [ reduce using rule 159 (boolean_value -> boolean .) ]
  ! COMMA           [ reduce using rule 159 (boolean_value -> boolean .) ]
=======
state 387

    (249) mathAbs -> FUNMATH POINT . ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> FUNMATH POINT . ABS LPAREN number_value RPAREN
    (251) mathAbs -> FUNMATH POINT . ABS LPAREN MINUS number_value RPAREN

    ABS             shift and go to state 315


state 388

    (261) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 445
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 389

<<<<<<< HEAD
    (138) general_value -> string .
    (166) string_value -> string .
    (170) concatenate -> string . PLUS termS

  ! reduce/reduce conflict for RBRACKET resolved using rule 138 (general_value -> string .)
  ! reduce/reduce conflict for COMMA resolved using rule 138 (general_value -> string .)
    RBRACKET        reduce using rule 138 (general_value -> string .)
    COMMA           reduce using rule 138 (general_value -> string .)
    PLUS            shift and go to state 121

  ! RBRACKET        [ reduce using rule 166 (string_value -> string .) ]
  ! COMMA           [ reduce using rule 166 (string_value -> string .) ]
=======
    (262) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value . RPAREN

    RPAREN          shift and go to state 446
>>>>>>> master


state 390

<<<<<<< HEAD
    (139) general_value -> concatenate .
    (169) string_value -> concatenate .

  ! reduce/reduce conflict for RBRACKET resolved using rule 139 (general_value -> concatenate .)
  ! reduce/reduce conflict for COMMA resolved using rule 139 (general_value -> concatenate .)
    RBRACKET        reduce using rule 139 (general_value -> concatenate .)
    COMMA           reduce using rule 139 (general_value -> concatenate .)

  ! RBRACKET        [ reduce using rule 169 (string_value -> concatenate .) ]
  ! COMMA           [ reduce using rule 169 (string_value -> concatenate .) ]
=======
    (263) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE . RPAREN
    (270) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 447
>>>>>>> master


state 391

<<<<<<< HEAD
    (140) general_value -> string_object .
    (168) string_value -> string_object .

  ! reduce/reduce conflict for RBRACKET resolved using rule 140 (general_value -> string_object .)
  ! reduce/reduce conflict for COMMA resolved using rule 140 (general_value -> string_object .)
    RBRACKET        reduce using rule 140 (general_value -> string_object .)
    COMMA           reduce using rule 140 (general_value -> string_object .)

  ! RBRACKET        [ reduce using rule 168 (string_value -> string_object .) ]
  ! COMMA           [ reduce using rule 168 (string_value -> string_object .) ]
=======
    (264) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string . RPAREN

    RPAREN          shift and go to state 448
>>>>>>> master


state 392

<<<<<<< HEAD
    (141) general_value -> expCond .
    (161) boolean_value -> expCond .
    (195) expOpLog -> expCond . oplogico expCond
    (189) expEq -> expCond . EQUALTO expCond
    (192) expNotEq -> expCond . NOTEQUALTO expCond
    (249) oplogico -> . AND
    (250) oplogico -> . OR

  ! reduce/reduce conflict for RBRACKET resolved using rule 141 (general_value -> expCond .)
  ! reduce/reduce conflict for COMMA resolved using rule 141 (general_value -> expCond .)
    RBRACKET        reduce using rule 141 (general_value -> expCond .)
    COMMA           reduce using rule 141 (general_value -> expCond .)
    EQUALTO         shift and go to state 119
    NOTEQUALTO      shift and go to state 120
    AND             shift and go to state 116
    OR              shift and go to state 117

  ! RBRACKET        [ reduce using rule 161 (boolean_value -> expCond .) ]
  ! COMMA           [ reduce using rule 161 (boolean_value -> expCond .) ]
=======
    (271) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types . RPAREN

    RPAREN          shift and go to state 449
>>>>>>> master

    oplogico                       shift and go to state 118

state 393

<<<<<<< HEAD
    (142) general_value -> expOpLog .
    (162) boolean_value -> expOpLog .

  ! reduce/reduce conflict for RBRACKET resolved using rule 142 (general_value -> expOpLog .)
  ! reduce/reduce conflict for COMMA resolved using rule 142 (general_value -> expOpLog .)
    RBRACKET        reduce using rule 142 (general_value -> expOpLog .)
    COMMA           reduce using rule 142 (general_value -> expOpLog .)

  ! RBRACKET        [ reduce using rule 162 (boolean_value -> expOpLog .) ]
  ! COMMA           [ reduce using rule 162 (boolean_value -> expOpLog .) ]
=======
    (265) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 450
>>>>>>> master


state 394

<<<<<<< HEAD
    (143) general_value -> expNeg .
    (163) boolean_value -> expNeg .

  ! reduce/reduce conflict for RBRACKET resolved using rule 143 (general_value -> expNeg .)
  ! reduce/reduce conflict for COMMA resolved using rule 143 (general_value -> expNeg .)
    RBRACKET        reduce using rule 143 (general_value -> expNeg .)
    COMMA           reduce using rule 143 (general_value -> expNeg .)

  ! RBRACKET        [ reduce using rule 163 (boolean_value -> expNeg .) ]
  ! COMMA           [ reduce using rule 163 (boolean_value -> expNeg .) ]
=======
    (266) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string . RPAREN

    RPAREN          shift and go to state 451
>>>>>>> master


state 395

<<<<<<< HEAD
    (144) general_value -> expEq .
    (164) boolean_value -> expEq .

  ! reduce/reduce conflict for RBRACKET resolved using rule 144 (general_value -> expEq .)
  ! reduce/reduce conflict for COMMA resolved using rule 144 (general_value -> expEq .)
    RBRACKET        reduce using rule 144 (general_value -> expEq .)
    COMMA           reduce using rule 144 (general_value -> expEq .)

  ! RBRACKET        [ reduce using rule 164 (boolean_value -> expEq .) ]
  ! COMMA           [ reduce using rule 164 (boolean_value -> expEq .) ]
=======
    (276) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 452
>>>>>>> master


state 396

<<<<<<< HEAD
    (145) general_value -> expNotEq .
    (165) boolean_value -> expNotEq .

  ! reduce/reduce conflict for RBRACKET resolved using rule 145 (general_value -> expNotEq .)
  ! reduce/reduce conflict for COMMA resolved using rule 145 (general_value -> expNotEq .)
    RBRACKET        reduce using rule 145 (general_value -> expNotEq .)
    COMMA           reduce using rule 145 (general_value -> expNotEq .)
=======
    (274) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 453
>>>>>>> master

  ! RBRACKET        [ reduce using rule 165 (boolean_value -> expNotEq .) ]
  ! COMMA           [ reduce using rule 165 (boolean_value -> expNotEq .) ]

<<<<<<< HEAD

state 364

    (160) boolean_value -> other_value .
    (167) string_value -> other_value .
    (209) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 160 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 160 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 160 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 160 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 160 (boolean_value -> other_value .)
    COMMA           reduce using rule 160 (boolean_value -> other_value .)
    PLUS            reduce using rule 209 (term -> other_value .)
    MINUS           reduce using rule 209 (term -> other_value .)
    PRODUCT         reduce using rule 209 (term -> other_value .)
    DIVIDE          reduce using rule 209 (term -> other_value .)
    EQUALTO         reduce using rule 209 (term -> other_value .)
    NOTEQUALTO      reduce using rule 209 (term -> other_value .)
    GREATER         reduce using rule 209 (term -> other_value .)
    LESS            reduce using rule 209 (term -> other_value .)
    GREATEREQUAL    reduce using rule 209 (term -> other_value .)
    LESSEQUAL       reduce using rule 209 (term -> other_value .)
    AND             reduce using rule 209 (term -> other_value .)
    OR              reduce using rule 209 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 167 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 167 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 209 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 209 (term -> other_value .) ]
=======
state 397

    (275) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string . RPAREN

    RPAREN          shift and go to state 454
>>>>>>> master


state 398

<<<<<<< HEAD
    (67) declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL . tuples_2_values
    (75) tuples_2_values -> . LBRACKET general_value COMMA general_value RBRACKET

    LBRACKET        shift and go to state 432
=======
    (279) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 455
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master

    tuples_2_values                shift and go to state 431

state 399

<<<<<<< HEAD
    (69) declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL . tuples_3_values
    (76) tuples_3_values -> . LBRACKET general_value COMMA general_value COMMA general_value RBRACKET

    LBRACKET        shift and go to state 434
=======
    (280) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value . RPAREN

    RPAREN          shift and go to state 456
>>>>>>> master

    tuples_3_values                shift and go to state 433

state 400

<<<<<<< HEAD
    (71) declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL . tuples_4_values
    (77) tuples_4_values -> . LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET

    LBRACKET        shift and go to state 436
=======
    (281) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value . RPAREN

    RPAREN          shift and go to state 457
>>>>>>> master

    tuples_4_values                shift and go to state 435

state 401

<<<<<<< HEAD
    (85) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (89) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (93) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 437
    VARBOOLEAN      shift and go to state 438
    VARSTRING       shift and go to state 439
=======
    (282) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string . RPAREN

    RPAREN          shift and go to state 458
>>>>>>> master


state 402

<<<<<<< HEAD
    (72) tuples_2_variables -> LBRACKET types . COMMA types RBRACKET
    (73) tuples_3_variables -> LBRACKET types . COMMA types COMMA types RBRACKET
    (74) tuples_4_variables -> LBRACKET types . COMMA types COMMA types COMMA types RBRACKET

    COMMA           shift and go to state 440
=======
    (283) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 459
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 231 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 231 (variable -> VARIABLE .)
    GREATER         reduce using rule 231 (variable -> VARIABLE .)
    LESS            reduce using rule 231 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 231 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 231 (variable -> VARIABLE .)
    AND             reduce using rule 231 (variable -> VARIABLE .)
    OR              reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 403

<<<<<<< HEAD
    (231) types -> VARNUMBER .

    COMMA           reduce using rule 231 (types -> VARNUMBER .)
    RBRACKET        reduce using rule 231 (types -> VARNUMBER .)
=======
    (284) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value . RPAREN

    RPAREN          shift and go to state 460
>>>>>>> master


state 404

<<<<<<< HEAD
    (232) types -> VARSTRING .

    COMMA           reduce using rule 232 (types -> VARSTRING .)
    RBRACKET        reduce using rule 232 (types -> VARSTRING .)
=======
    (285) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value . RPAREN

    RPAREN          shift and go to state 461
>>>>>>> master


state 405

    (286) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string . RPAREN

    RPAREN          shift and go to state 462

<<<<<<< HEAD
    (233) types -> VARBOOLEAN .

    COMMA           reduce using rule 233 (types -> VARBOOLEAN .)
    RBRACKET        reduce using rule 233 (types -> VARBOOLEAN .)
=======

state 406

    (56) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 463


state 407

    (210) string_object -> NEW OBJECTSTRING LPAREN . string RPAREN
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50

    string                         shift and go to state 464

state 408

    (121) object_definition -> LKEY attributes RKEY .

    POINTCOMMA      reduce using rule 121 (object_definition -> LKEY attributes RKEY .)
    $end            reduce using rule 121 (object_definition -> LKEY attributes RKEY .)
    RKEY            reduce using rule 121 (object_definition -> LKEY attributes RKEY .)


state 409

    (122) attributes -> attributes COMMA . attribute
    (124) attribute -> . variable TWOPOINTS general_value
    (125) attribute -> . variable TWOPOINTS list_types
    (231) variable -> . VARIABLE

    VARIABLE        shift and go to state 158

    attribute                      shift and go to state 465
    variable                       shift and go to state 338

state 410
>>>>>>> master

    (124) attribute -> variable TWOPOINTS . general_value
    (125) attribute -> variable TWOPOINTS . list_types
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (136) list_types -> . list_number
    (137) list_types -> . list_boolean
    (138) list_types -> . list_string
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (139) list_number -> . LBRACKET numbers RBRACKET
    (142) list_boolean -> . LBRACKET booleans RBRACKET
    (145) list_string -> . LBRACKET strings RBRACKET
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    LBRACKET        shift and go to state 299
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    variable                       shift and go to state 141
    general_value                  shift and go to state 466
    list_types                     shift and go to state 467
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    list_number                    shift and go to state 232
    list_boolean                   shift and go to state 233
    list_string                    shift and go to state 234
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 411

    (118) tuples_list -> LBRACKET tuples_values RBRACKET .

    POINTCOMMA      reduce using rule 118 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    $end            reduce using rule 118 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    RKEY            reduce using rule 118 (tuples_list -> LBRACKET tuples_values RBRACKET .)


state 412

    (119) tuples_values -> tuples_values COMMA . general_value
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 468
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 413

<<<<<<< HEAD
    (49) funcParametres -> VARIABLE .
    (50) funcParametres -> VARIABLE . COMMA funcParametres

    RPAREN          reduce using rule 49 (funcParametres -> VARIABLE .)
    COMMA           shift and go to state 441
=======
    (139) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 139 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 139 (list_number -> LBRACKET numbers RBRACKET .)
    RKEY            reduce using rule 139 (list_number -> LBRACKET numbers RBRACKET .)
    RPAREN          reduce using rule 139 (list_number -> LBRACKET numbers RBRACKET .)
    COMMA           reduce using rule 139 (list_number -> LBRACKET numbers RBRACKET .)
>>>>>>> master


state 414

<<<<<<< HEAD
    (47) funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 442
=======
    (140) numbers -> numbers COMMA . number_value
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 469
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 415

<<<<<<< HEAD
    (48) funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres . RPAREN substatement

    RPAREN          shift and go to state 444
=======
    (142) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 142 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 142 (list_boolean -> LBRACKET booleans RBRACKET .)
    RKEY            reduce using rule 142 (list_boolean -> LBRACKET booleans RBRACKET .)
    RPAREN          reduce using rule 142 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMA           reduce using rule 142 (list_boolean -> LBRACKET booleans RBRACKET .)
>>>>>>> master


state 416

<<<<<<< HEAD
    (23) consoleLog -> PRINT LPAREN VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 23 (consoleLog -> PRINT LPAREN VARIABLE RPAREN .)


state 377

    (24) consoleLog -> PRINT LPAREN string RPAREN .

    POINTCOMMA      reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    LPAREN          reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    NEGATION        reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    COMMENT         reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    FUNCTION        reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    PRINT           reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    INCREMENT       reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    DECREMENT       reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    ENUM            reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    IF              reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    WHILE           reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    FOR             reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    NUMBER          reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    FLOAT           reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    VARIABLE        reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    LET             reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    VAR             reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    STATIC          reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    CONST           reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    FUNMATH         reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    $end            reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
    RKEY            reduce using rule 24 (consoleLog -> PRINT LPAREN string RPAREN .)
=======
    (143) booleans -> booleans COMMA . boolean_value
    (149) boolean_value -> . boolean
    (150) boolean_value -> . other_value
    (151) boolean_value -> . expCond
    (152) boolean_value -> . expOpLog
    (153) boolean_value -> . expNeg
    (154) boolean_value -> . expEq
    (155) boolean_value -> . expNotEq
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (104) declare_any -> . prefix VARIABLE
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    FUNMATH         shift and go to state 98
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    boolean_value                  shift and go to state 470
    boolean                        shift and go to state 263
    other_value                    shift and go to state 264
    expCond                        shift and go to state 265
    expOpLog                       shift and go to state 266
    expNeg                         shift and go to state 267
    expEq                          shift and go to state 268
    expNotEq                       shift and go to state 269
    variable                       shift and go to state 270
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    expression                     shift and go to state 271
    factor_exprlog                 shift and go to state 32
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    term                           shift and go to state 16
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    declare_any                    shift and go to state 128
    group                          shift and go to state 72
    prefix                         shift and go to state 68

state 417

    (145) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 145 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 145 (list_string -> LBRACKET strings RBRACKET .)
    RKEY            reduce using rule 145 (list_string -> LBRACKET strings RBRACKET .)
    RPAREN          reduce using rule 145 (list_string -> LBRACKET strings RBRACKET .)
    COMMA           reduce using rule 145 (list_string -> LBRACKET strings RBRACKET .)


state 418

    (146) strings -> strings COMMA . string_value
    (156) string_value -> . string
    (157) string_value -> . other_value
    (158) string_value -> . string_object
    (159) string_value -> . concatenate
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (160) concatenate -> . string PLUS termS
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    string_value                   shift and go to state 471
    string                         shift and go to state 278
    other_value                    shift and go to state 279
    string_object                  shift and go to state 280
    concatenate                    shift and go to state 281
    variable                       shift and go to state 282
    funciones                      shift and go to state 64
    array_value                    shift and go to state 283
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 284
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 419

    (58) declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .
>>>>>>> master

    POINTCOMMA      reduce using rule 58 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    $end            reduce using rule 58 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    RKEY            reduce using rule 58 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)


<<<<<<< HEAD
    (37) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 445

=======
state 420

    (66) tuples_2_values -> LBRACKET . general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 472
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 421

<<<<<<< HEAD
    (38) enums -> enums_numeric .
    (40) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 38 (enums -> enums_numeric .)
    COMMA           shift and go to state 446
=======
    (60) declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .

    POINTCOMMA      reduce using rule 60 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    $end            reduce using rule 60 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    RKEY            reduce using rule 60 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
>>>>>>> master


state 422

<<<<<<< HEAD
    (39) enums -> enums_string .
    (44) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 39 (enums -> enums_string .)
    COMMA           shift and go to state 447

=======
    (67) tuples_3_values -> LBRACKET . general_value COMMA general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 473
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 423

<<<<<<< HEAD
    (41) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 41 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 41 (enums_numeric -> enums_numeric_value .)
=======
    (62) declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .

    POINTCOMMA      reduce using rule 62 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    $end            reduce using rule 62 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    RKEY            reduce using rule 62 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
>>>>>>> master


state 424

<<<<<<< HEAD
    (45) enums_string -> enums_string_value .

    COMMA           reduce using rule 45 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 45 (enums_string -> enums_string_value .)


state 383

    (42) enums_numeric_value -> object_name . EQUAL number
    (43) enums_numeric_value -> object_name .
    (46) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 448
    COMMA           reduce using rule 43 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 43 (enums_numeric_value -> object_name .)


state 384

    (223) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    NEGATION        reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMENT         reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    MULTICOMMENT    reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    FUNCTION        reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    NORMSTRING1     reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    NORMSTRING2     reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    MULTISTRING     reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    ENUM            reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    IF              reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    FOR             reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    NUMBER          reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    FLOAT           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    VARIABLE        reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    LET             reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    VAR             reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    STATIC          reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    CONST           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    OBJECTNAME      reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    FUNMATH         reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    RKEY            reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 223 (array_value -> variable LBRACKET expression RBRACKET .)
=======
    (68) tuples_4_values -> LBRACKET . general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 474
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 425

    (76) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 475
>>>>>>> master


state 426

<<<<<<< HEAD
    (158) number_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression
    (199) expCond -> expression . operador expression
    (197) expOpLog -> expression . oplogico expression
    (191) expEq -> expression . EQUALTO expression
    (194) expNotEq -> expression . NOTEQUALTO expression
    (243) operador -> . GREATER
    (244) operador -> . LESS
    (245) operador -> . GREATEREQUAL
    (246) operador -> . LESSEQUAL
    (247) operador -> . EQUALTO
    (248) operador -> . NOTEQUALTO
    (249) oplogico -> . AND
    (250) oplogico -> . OR

    RBRACKET        reduce using rule 158 (number_value -> expression .)
    COMMA           reduce using rule 158 (number_value -> expression .)
    RPAREN          reduce using rule 158 (number_value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
    EQUALTO         shift and go to state 110
    NOTEQUALTO      shift and go to state 111
    GREATER         shift and go to state 112
    LESS            shift and go to state 113
    GREATEREQUAL    shift and go to state 114
    LESSEQUAL       shift and go to state 115
    AND             shift and go to state 116
    OR              shift and go to state 117

    operador                       shift and go to state 108
    oplogico                       shift and go to state 109
=======
    (80) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 476

>>>>>>> master

state 427

<<<<<<< HEAD
    (114) declare_any -> prefix VARIABLE TWOPOINTS ANY .

    EQUAL           reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    TWOPOINTS       reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    VARIABLE        reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    LET             reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    VAR             reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    STATIC          reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    CONST           reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    POINTCOMMA      reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    LPAREN          reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    NEGATION        reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    COMMENT         reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    MULTICOMMENT    reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    FUNCTION        reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    PRINT           reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    INCREMENT       reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    DECREMENT       reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    NORMSTRING1     reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    NORMSTRING2     reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    MULTISTRING     reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    ENUM            reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    IF              reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    WHILE           reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    FOR             reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    NUMBER          reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    FLOAT           reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    OBJECTNAME      reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    FUNMATH         reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    $end            reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
    RKEY            reduce using rule 114 (declare_any -> prefix VARIABLE TWOPOINTS ANY .)
=======
    (84) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 477
>>>>>>> master


state 428

<<<<<<< HEAD
    (51) funcionif -> IF LPAREN formLog RPAREN . substatement
    (52) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif
    (53) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif funcionelse
    (54) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelse
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 449
=======
    (63) tuples_2_variables -> LBRACKET types COMMA . types RBRACKET
    (64) tuples_3_variables -> LBRACKET types COMMA . types COMMA types RBRACKET
    (65) tuples_4_variables -> LBRACKET types COMMA . types COMMA types COMMA types RBRACKET
    (221) types -> . VARNUMBER
    (222) types -> . VARSTRING
    (223) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 363
    VARSTRING       shift and go to state 364
    VARBOOLEAN      shift and go to state 365

    types                          shift and go to state 478
>>>>>>> master

state 429

<<<<<<< HEAD
    (62) funcionwhile -> WHILE LPAREN formLog RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443
=======
    (34) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 34 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 34 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    RKEY            reduce using rule 34 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
>>>>>>> master

    substatement                   shift and go to state 450

state 430

<<<<<<< HEAD
    (58) funcionfor -> FOR LPAREN LET VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> FOR LPAREN LET VARIABLE . IN VARIABLE RPAREN substatement

    EQUAL           shift and go to state 451
    IN              shift and go to state 452

=======
    (37) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (39) enums_numeric_value -> . object_name EQUAL number
    (40) enums_numeric_value -> . object_name
    (232) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 62

    enums_numeric_value            shift and go to state 479
    object_name                    shift and go to state 480
>>>>>>> master

state 431

<<<<<<< HEAD
    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 453
    term                           shift and go to state 18
    expression                     shift and go to state 392
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (41) enums_string -> enums_string COMMA . enums_string_value
    (43) enums_string_value -> . object_name EQUAL string
    (232) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 62

    enums_string_value             shift and go to state 481
    object_name                    shift and go to state 482
>>>>>>> master

state 432

<<<<<<< HEAD
    (61) funcionfor -> FOR LPAREN VARIABLE IN . VARIABLE RPAREN substatement

    VARIABLE        shift and go to state 454

=======
    (39) enums_numeric_value -> object_name EQUAL . number
    (43) enums_string_value -> object_name EQUAL . string
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50

    number                         shift and go to state 483
    string                         shift and go to state 484
>>>>>>> master

state 433

<<<<<<< HEAD
    (158) number_value -> expression .
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    RBRACKET        reduce using rule 158 (number_value -> expression .)
    COMMA           reduce using rule 158 (number_value -> expression .)
    RPAREN          reduce using rule 158 (number_value -> expression .)
    POINTCOMMA      reduce using rule 158 (number_value -> expression .)
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107

=======
    (44) funcionif -> IF LPAREN formLog RPAREN substatement .
    (45) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif
    (46) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif funcionelse
    (47) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelse
    (48) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (49) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif
    (50) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 44 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 44 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 44 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 487
    ELSE            shift and go to state 488

    funcionelif                    shift and go to state 485
    funcionelse                    shift and go to state 486
>>>>>>> master

state 434

<<<<<<< HEAD
    (259) mathAbs -> FUNMATH POINT ABS LPAREN . VARIABLE RPAREN
    (260) mathAbs -> FUNMATH POINT ABS LPAREN . number_value RPAREN
    (261) mathAbs -> FUNMATH POINT ABS LPAREN . MINUS number_value RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 455
    MINUS           shift and go to state 457
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 456
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (54) substatement -> LKEY . statement RKEY
    (55) substatement -> LKEY . RKEY
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (14) statement_value -> . comments
    (15) statement_value -> . consoleLog
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (160) concatenate -> . string PLUS termS
    (24) declare -> . var_boolean
    (25) declare -> . var_number
    (26) declare -> . var_string
    (27) declare -> . var_enum
    (28) declare -> . var_null
    (29) declare -> . var_undefined
    (30) declare -> . declare_array
    (31) declare -> . declare_enum
    (32) declare -> . declare_tuples
    (33) declare -> . declare_generic
    (105) assign -> . assign_variable
    (106) assign -> . assign_array
    (107) assign -> . assign_object_value
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (56) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (16) statement_control -> . funcionif
    (17) statement_control -> . funcionwhile
    (18) statement_control -> . funcionfor
    (22) comments -> . COMMENT
    (23) comments -> . MULTICOMMENT
    (19) consoleLog -> . PRINT LPAREN RPAREN
    (20) consoleLog -> . PRINT LPAREN VARIABLE RPAREN
    (21) consoleLog -> . PRINT LPAREN string RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (93) var_boolean -> . declare_boolean EQUAL boolean_value
    (94) var_boolean -> . declare_boolean
    (88) var_number -> . declare_number EQUAL number_value
    (89) var_number -> . declare_number EQUAL funcionmath
    (90) var_number -> . declare_number
    (91) var_number -> . declare_number EQUAL expression
    (96) var_string -> . declare_string EQUAL string_value
    (97) var_string -> . declare_string
    (99) var_enum -> . declare_var_enum EQUAL enum_value
    (100) var_enum -> . declare_var_enum
    (86) var_null -> . declare_any EQUAL NULL
    (87) var_undefined -> . declare_any EQUAL UNDEFINED
    (69) declare_array -> . declare_array_main_number
    (70) declare_array -> . declare_array_main_boolean
    (71) declare_array -> . declare_array_main_string
    (72) declare_array -> . declare_generic_array
    (34) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (57) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables
    (58) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (59) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables
    (60) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (61) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables
    (62) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (102) declare_generic -> . declare_any EQUAL assign_value
    (103) declare_generic -> . declare_any
    (108) assign_variable -> . variable EQUAL assign_value
    (109) assign_variable -> . variable EQUAL funciones
    (110) assign_variable -> . variable EQUAL list_types
    (111) assign_array -> . array_value EQUAL general_value
    (112) assign_object_value -> . object_value_form1 EQUAL general_value
    (113) assign_object_value -> . object_value_form1 EQUAL list_types
    (114) assign_object_value -> . object_value_form2 EQUAL general_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (104) declare_any -> . prefix VARIABLE
    (44) funcionif -> . IF LPAREN formLog RPAREN substatement
    (45) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (46) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (47) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (53) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (51) funcionfor -> . FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (52) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (95) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (92) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (98) declare_string -> . declare_any TWOPOINTS VARSTRING
    (101) declare_var_enum -> . declare_any TWOPOINTS object_name
    (73) declare_array_main_number -> . declare_array_number EQUAL list_number
    (74) declare_array_main_number -> . declare_array_number
    (77) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (78) declare_array_main_boolean -> . declare_array_boolean
    (81) declare_array_main_string -> . declare_array_string EQUAL list_string
    (82) declare_array_main_string -> . declare_array_string
    (85) declare_generic_array -> . declare_any EQUAL list_types
    (231) variable -> . VARIABLE
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (75) declare_array_number -> . declare_number LBRACKET RBRACKET
    (76) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (79) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (80) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (83) declare_array_string -> . declare_string LBRACKET RBRACKET
    (84) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    RKEY            shift and go to state 490
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    COMMENT         shift and go to state 39
    MULTICOMMENT    shift and go to state 40
    PRINT           shift and go to state 41
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    ENUM            shift and go to state 61
    IF              shift and go to state 69
    WHILE           shift and go to state 70
    FOR             shift and go to state 71
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98

    statement                      shift and go to state 489
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    comments                       shift and go to state 14
    consoleLog                     shift and go to state 15
    term                           shift and go to state 16
    string                         shift and go to state 17
    var_boolean                    shift and go to state 18
    var_number                     shift and go to state 19
    var_string                     shift and go to state 20
    var_enum                       shift and go to state 21
    var_null                       shift and go to state 22
    var_undefined                  shift and go to state 23
    declare_array                  shift and go to state 24
    declare_enum                   shift and go to state 25
    declare_tuples                 shift and go to state 26
    declare_generic                shift and go to state 27
    assign_variable                shift and go to state 28
    assign_array                   shift and go to state 29
    assign_object_value            shift and go to state 30
    factor_exprlog                 shift and go to state 32
    declare_any                    shift and go to state 35
    funcionif                      shift and go to state 36
    funcionwhile                   shift and go to state 37
    funcionfor                     shift and go to state 38
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    declare_boolean                shift and go to state 51
    declare_number                 shift and go to state 52
    funcionmath                    shift and go to state 53
    declare_string                 shift and go to state 54
    declare_var_enum               shift and go to state 55
    enum_value                     shift and go to state 56
    declare_array_main_number      shift and go to state 57
    declare_array_main_boolean     shift and go to state 58
    declare_array_main_string      shift and go to state 59
    declare_generic_array          shift and go to state 60
    variable                       shift and go to state 63
    funciones                      shift and go to state 64
    array_value                    shift and go to state 65
    object_value_form1             shift and go to state 66
    object_value_form2             shift and go to state 67
    prefix                         shift and go to state 68
    group                          shift and go to state 72
    object_value                   shift and go to state 75
    object_name                    shift and go to state 76
    declare_array_number           shift and go to state 77
    declare_array_boolean          shift and go to state 78
    declare_array_string           shift and go to state 79
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
>>>>>>> master

state 435

<<<<<<< HEAD
    (262) mathRound -> FUNMATH POINT ROUND LPAREN . VARIABLE RPAREN
    (263) mathRound -> FUNMATH POINT ROUND LPAREN . number_value RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 458
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 459
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (53) funcionwhile -> WHILE LPAREN formLog RPAREN substatement .

    POINTCOMMA      reduce using rule 53 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 53 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 53 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)

>>>>>>> master

state 436

<<<<<<< HEAD
    (264) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA number_value RPAREN
    (266) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA number_value RPAREN
    (267) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA VARIABLE RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 460
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 461
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    prefix                         shift and go to state 68
    number_value                   shift and go to state 491
    term                           shift and go to state 16
    expression                     shift and go to state 380
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
>>>>>>> master

state 437

<<<<<<< HEAD
    (171) termS -> termS PLUS value .

    PLUS            reduce using rule 171 (termS -> termS PLUS value .)
    POINTCOMMA      reduce using rule 171 (termS -> termS PLUS value .)
    LPAREN          reduce using rule 171 (termS -> termS PLUS value .)
    NEGATION        reduce using rule 171 (termS -> termS PLUS value .)
    COMMENT         reduce using rule 171 (termS -> termS PLUS value .)
    MULTICOMMENT    reduce using rule 171 (termS -> termS PLUS value .)
    FUNCTION        reduce using rule 171 (termS -> termS PLUS value .)
    PRINT           reduce using rule 171 (termS -> termS PLUS value .)
    INCREMENT       reduce using rule 171 (termS -> termS PLUS value .)
    DECREMENT       reduce using rule 171 (termS -> termS PLUS value .)
    NORMSTRING1     reduce using rule 171 (termS -> termS PLUS value .)
    NORMSTRING2     reduce using rule 171 (termS -> termS PLUS value .)
    MULTISTRING     reduce using rule 171 (termS -> termS PLUS value .)
    ENUM            reduce using rule 171 (termS -> termS PLUS value .)
    IF              reduce using rule 171 (termS -> termS PLUS value .)
    WHILE           reduce using rule 171 (termS -> termS PLUS value .)
    FOR             reduce using rule 171 (termS -> termS PLUS value .)
    NUMBER          reduce using rule 171 (termS -> termS PLUS value .)
    FLOAT           reduce using rule 171 (termS -> termS PLUS value .)
    VARIABLE        reduce using rule 171 (termS -> termS PLUS value .)
    LET             reduce using rule 171 (termS -> termS PLUS value .)
    VAR             reduce using rule 171 (termS -> termS PLUS value .)
    STATIC          reduce using rule 171 (termS -> termS PLUS value .)
    CONST           reduce using rule 171 (termS -> termS PLUS value .)
    OBJECTNAME      reduce using rule 171 (termS -> termS PLUS value .)
    FUNMATH         reduce using rule 171 (termS -> termS PLUS value .)
    $end            reduce using rule 171 (termS -> termS PLUS value .)
    RKEY            reduce using rule 171 (termS -> termS PLUS value .)
    RBRACKET        reduce using rule 171 (termS -> termS PLUS value .)
    COMMA           reduce using rule 171 (termS -> termS PLUS value .)
=======
    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 492
>>>>>>> master


state 438

<<<<<<< HEAD
    (200) expCond -> LPAREN expression operador expression . RPAREN
    (175) expression -> expression . PLUS term
    (176) expression -> expression . MINUS term
    (178) expression -> expression . PRODUCT expression
    (179) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 398
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    PRODUCT         shift and go to state 106
    DIVIDE          shift and go to state 107
=======
    (249) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 493
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 439

<<<<<<< HEAD
    (200) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    LPAREN          reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    NEGATION        reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMENT         reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    MULTICOMMENT    reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    FUNCTION        reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    PRINT           reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    INCREMENT       reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    DECREMENT       reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    NORMSTRING1     reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    NORMSTRING2     reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    MULTISTRING     reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    ENUM            reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    IF              reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    WHILE           reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    FOR             reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    NUMBER          reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    FLOAT           reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    VARIABLE        reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    LET             reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    VAR             reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    STATIC          reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    CONST           reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    OBJECTNAME      reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    FUNMATH         reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    RKEY            reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    RBRACKET        reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMA           reduce using rule 200 (expCond -> LPAREN expression operador expression RPAREN .)
=======
    (250) mathAbs -> FUNMATH POINT ABS LPAREN number_value . RPAREN

    RPAREN          shift and go to state 494
>>>>>>> master


state 440

<<<<<<< HEAD
    (259) mathAbs -> FUNMATH POINT . ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> FUNMATH POINT . ABS LPAREN number_value RPAREN
    (261) mathAbs -> FUNMATH POINT . ABS LPAREN MINUS number_value RPAREN

    ABS             shift and go to state 322

=======
    (251) mathAbs -> FUNMATH POINT ABS LPAREN MINUS . number_value RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 495
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 441

<<<<<<< HEAD
    (271) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 462
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]
=======
    (252) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 496
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 442

<<<<<<< HEAD
    (272) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value . RPAREN

    RPAREN          shift and go to state 463
=======
    (253) mathRound -> FUNMATH POINT ROUND LPAREN number_value . RPAREN

    RPAREN          shift and go to state 497
>>>>>>> master


state 443

<<<<<<< HEAD
    (273) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE . RPAREN
    (280) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 464
=======
    (254) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA VARIABLE RPAREN
    (256) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA number_value RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    COMMA           shift and go to state 498
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 444

<<<<<<< HEAD
    (274) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string . RPAREN

    RPAREN          shift and go to state 465
=======
    (255) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA number_value RPAREN
    (257) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 499
>>>>>>> master


state 445

<<<<<<< HEAD
    (281) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types . RPAREN

    RPAREN          shift and go to state 466
=======
    (261) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 261 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)

>>>>>>> master

state 446

    (262) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .

    PLUS            reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    MINUS           reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    GREATER         reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LESS            reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    AND             reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    OR              reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    $end            reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RKEY            reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    COMMA           reduce using rule 262 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)

<<<<<<< HEAD
    (275) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 467
=======
>>>>>>> master

state 447

    (263) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .
    (270) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .

  ! reduce/reduce conflict for PLUS resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for PRODUCT resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for EQUALTO resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NOTEQUALTO resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for GREATER resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LESS resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for AND resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for OR resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for POINTCOMMA resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RKEY resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 263 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)

  ! PLUS            [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! MINUS           [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! PRODUCT         [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! DIVIDE          [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! EQUALTO         [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NOTEQUALTO      [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! GREATER         [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LESS            [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! GREATEREQUAL    [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LESSEQUAL       [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! AND             [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! OR              [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! POINTCOMMA      [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! $end            [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RPAREN          [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RKEY            [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RBRACKET        [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! COMMA           [ reduce using rule 270 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]

<<<<<<< HEAD
    (276) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string . RPAREN

    RPAREN          shift and go to state 468
=======
>>>>>>> master

state 448

    (264) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .

    PLUS            reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    MINUS           reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    PRODUCT         reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    DIVIDE          reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    EQUALTO         reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    GREATER         reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LESS            reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    AND             reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    OR              reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    $end            reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RPAREN          reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RKEY            reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RBRACKET        reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    COMMA           reduce using rule 264 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)

<<<<<<< HEAD
    (286) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 469
=======
>>>>>>> master

state 449

    (271) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .

    PLUS            reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    MINUS           reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    PRODUCT         reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    DIVIDE          reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    EQUALTO         reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NOTEQUALTO      reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    GREATER         reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LESS            reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    GREATEREQUAL    reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LESSEQUAL       reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    AND             reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    OR              reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    POINTCOMMA      reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    $end            reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RPAREN          reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RKEY            reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RBRACKET        reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    COMMA           reduce using rule 271 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 470
=======
>>>>>>> master

state 450

    (265) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 265 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)

<<<<<<< HEAD
    (285) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string . RPAREN

    RPAREN          shift and go to state 471
=======
>>>>>>> master

state 451

    (266) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .

    PLUS            reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    MINUS           reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    PRODUCT         reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    DIVIDE          reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    EQUALTO         reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    GREATER         reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LESS            reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    AND             reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    OR              reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    $end            reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RPAREN          reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RKEY            reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RBRACKET        reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    COMMA           reduce using rule 266 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)

<<<<<<< HEAD
    (289) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 472
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]
=======
>>>>>>> master

state 452

    (276) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 276 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)

<<<<<<< HEAD
    (290) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value . RPAREN

    RPAREN          shift and go to state 473
=======
>>>>>>> master

state 453

    (274) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 274 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)

<<<<<<< HEAD
    (291) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value . RPAREN

    RPAREN          shift and go to state 474
=======
>>>>>>> master

state 454

    (275) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .

    PLUS            reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    MINUS           reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    PRODUCT         reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    DIVIDE          reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    EQUALTO         reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    GREATER         reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LESS            reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    AND             reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    OR              reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    $end            reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RPAREN          reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RKEY            reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RBRACKET        reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    COMMA           reduce using rule 275 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)

<<<<<<< HEAD
    (292) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string . RPAREN

    RPAREN          shift and go to state 475
=======
>>>>>>> master

state 455

    (279) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 279 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)

<<<<<<< HEAD
    (293) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 476
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 241 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 241 (variable -> VARIABLE .)
    GREATER         reduce using rule 241 (variable -> VARIABLE .)
    LESS            reduce using rule 241 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 241 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 241 (variable -> VARIABLE .)
    AND             reduce using rule 241 (variable -> VARIABLE .)
    OR              reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]
=======
>>>>>>> master

state 456

    (280) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .

    PLUS            reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    MINUS           reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    GREATER         reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LESS            reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    AND             reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    OR              reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    $end            reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RKEY            reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    COMMA           reduce using rule 280 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)

<<<<<<< HEAD
    (294) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value . RPAREN

    RPAREN          shift and go to state 477
=======
>>>>>>> master

state 457

    (281) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .

    PLUS            reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    MINUS           reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    PRODUCT         reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    DIVIDE          reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    EQUALTO         reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NOTEQUALTO      reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    GREATER         reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LESS            reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    GREATEREQUAL    reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LESSEQUAL       reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    AND             reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    OR              reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    POINTCOMMA      reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    $end            reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RPAREN          reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RKEY            reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RBRACKET        reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    COMMA           reduce using rule 281 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)

<<<<<<< HEAD
    (295) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value . RPAREN

    RPAREN          shift and go to state 478
=======
>>>>>>> master

state 458

    (282) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .

    PLUS            reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    MINUS           reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    PRODUCT         reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    DIVIDE          reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    EQUALTO         reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    GREATER         reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LESS            reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    AND             reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    OR              reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    $end            reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RPAREN          reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RKEY            reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RBRACKET        reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    COMMA           reduce using rule 282 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)

<<<<<<< HEAD
    (296) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string . RPAREN

    RPAREN          shift and go to state 479
=======
>>>>>>> master

state 459

    (283) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 283 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)

<<<<<<< HEAD
    (65) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 480
=======
>>>>>>> master

state 460

    (284) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .

    PLUS            reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    MINUS           reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    GREATER         reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LESS            reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    AND             reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    OR              reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    $end            reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RKEY            reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    COMMA           reduce using rule 284 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)

<<<<<<< HEAD
    (220) string_object -> NEW OBJECTSTRING LPAREN . string RPAREN
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    string                         shift and go to state 481
=======

state 461
>>>>>>> master

    (285) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .

    PLUS            reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    MINUS           reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    PRODUCT         reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    DIVIDE          reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    EQUALTO         reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NOTEQUALTO      reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    GREATER         reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LESS            reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    GREATEREQUAL    reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LESSEQUAL       reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    AND             reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    OR              reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    POINTCOMMA      reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    $end            reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RPAREN          reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RKEY            reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RBRACKET        reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    COMMA           reduce using rule 285 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)

<<<<<<< HEAD
    (131) object_definition -> LKEY attributes RKEY .

    POINTCOMMA      reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    LPAREN          reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    NEGATION        reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    COMMENT         reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    MULTICOMMENT    reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    FUNCTION        reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    PRINT           reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    INCREMENT       reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    DECREMENT       reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    NORMSTRING1     reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    NORMSTRING2     reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    MULTISTRING     reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    ENUM            reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    IF              reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    WHILE           reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    FOR             reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    NUMBER          reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    FLOAT           reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    VARIABLE        reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    LET             reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    VAR             reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    STATIC          reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    CONST           reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    OBJECTNAME      reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    FUNMATH         reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    $end            reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
    RKEY            reduce using rule 131 (object_definition -> LKEY attributes RKEY .)
=======
>>>>>>> master

state 462

    (286) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .

    PLUS            reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    MINUS           reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    PRODUCT         reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    DIVIDE          reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    EQUALTO         reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    GREATER         reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LESS            reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    AND             reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    OR              reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    $end            reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RPAREN          reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RKEY            reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RBRACKET        reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    COMMA           reduce using rule 286 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)

<<<<<<< HEAD
    (132) attributes -> attributes COMMA . attribute
    (134) attribute -> . variable TWOPOINTS general_value
    (135) attribute -> . variable TWOPOINTS list_types
    (241) variable -> . VARIABLE

    VARIABLE        shift and go to state 163

    attribute                      shift and go to state 482
    variable                       shift and go to state 345

state 422
=======

state 463

    (56) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .

    POINTCOMMA      reduce using rule 56 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 56 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    RKEY            reduce using rule 56 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
>>>>>>> master

    (134) attribute -> variable TWOPOINTS . general_value
    (135) attribute -> variable TWOPOINTS . list_types
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (146) list_types -> . list_number
    (147) list_types -> . list_boolean
    (148) list_types -> . list_string
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (149) list_number -> . LBRACKET numbers RBRACKET
    (152) list_boolean -> . LBRACKET booleans RBRACKET
    (155) list_string -> . LBRACKET strings RBRACKET
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    LBRACKET        shift and go to state 305
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    variable                       shift and go to state 145
    general_value                  shift and go to state 483
    list_types                     shift and go to state 484
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    list_number                    shift and go to state 237
    list_boolean                   shift and go to state 238
    list_string                    shift and go to state 239
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 464

<<<<<<< HEAD
    (128) tuples_list -> LBRACKET tuples_values RBRACKET .

    POINTCOMMA      reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    LPAREN          reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    NEGATION        reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    COMMENT         reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    MULTICOMMENT    reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    FUNCTION        reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    PRINT           reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    INCREMENT       reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    DECREMENT       reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    NORMSTRING1     reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    NORMSTRING2     reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    MULTISTRING     reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    ENUM            reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    IF              reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    WHILE           reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    FOR             reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    NUMBER          reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    FLOAT           reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    VARIABLE        reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    LET             reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    VAR             reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    STATIC          reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    CONST           reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    OBJECTNAME      reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    FUNMATH         reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    $end            reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
    RKEY            reduce using rule 128 (tuples_list -> LBRACKET tuples_values RBRACKET .)
=======
    (210) string_object -> NEW OBJECTSTRING LPAREN string . RPAREN

    RPAREN          shift and go to state 500
>>>>>>> master


state 465

<<<<<<< HEAD
    (129) tuples_values -> tuples_values COMMA . general_value
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 485
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (122) attributes -> attributes COMMA attribute .

    RKEY            reduce using rule 122 (attributes -> attributes COMMA attribute .)
    COMMA           reduce using rule 122 (attributes -> attributes COMMA attribute .)

>>>>>>> master

state 466

<<<<<<< HEAD
    (149) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    LPAREN          reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    NEGATION        reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    COMMENT         reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    MULTICOMMENT    reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    FUNCTION        reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    PRINT           reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    INCREMENT       reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    DECREMENT       reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    NORMSTRING1     reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    NORMSTRING2     reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    MULTISTRING     reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    ENUM            reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    IF              reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    WHILE           reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    FOR             reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    NUMBER          reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    FLOAT           reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    VARIABLE        reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    LET             reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    VAR             reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    STATIC          reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    CONST           reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    OBJECTNAME      reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    FUNMATH         reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    RKEY            reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    RPAREN          reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
    COMMA           reduce using rule 149 (list_number -> LBRACKET numbers RBRACKET .)
=======
    (124) attribute -> variable TWOPOINTS general_value .

    RKEY            reduce using rule 124 (attribute -> variable TWOPOINTS general_value .)
    COMMA           reduce using rule 124 (attribute -> variable TWOPOINTS general_value .)
>>>>>>> master


state 467

<<<<<<< HEAD
    (150) numbers -> numbers COMMA . number_value
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 486
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (125) attribute -> variable TWOPOINTS list_types .

    RKEY            reduce using rule 125 (attribute -> variable TWOPOINTS list_types .)
    COMMA           reduce using rule 125 (attribute -> variable TWOPOINTS list_types .)

>>>>>>> master

state 468

<<<<<<< HEAD
    (152) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    LPAREN          reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    NEGATION        reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMENT         reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    MULTICOMMENT    reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    FUNCTION        reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    PRINT           reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    INCREMENT       reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    DECREMENT       reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    NORMSTRING1     reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    NORMSTRING2     reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    MULTISTRING     reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    ENUM            reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    IF              reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    WHILE           reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    FOR             reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    NUMBER          reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    FLOAT           reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    VARIABLE        reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    LET             reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    VAR             reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    STATIC          reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    CONST           reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    OBJECTNAME      reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    FUNMATH         reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    RKEY            reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    RPAREN          reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMA           reduce using rule 152 (list_boolean -> LBRACKET booleans RBRACKET .)
=======
    (119) tuples_values -> tuples_values COMMA general_value .

    RBRACKET        reduce using rule 119 (tuples_values -> tuples_values COMMA general_value .)
    COMMA           reduce using rule 119 (tuples_values -> tuples_values COMMA general_value .)
>>>>>>> master


state 469

<<<<<<< HEAD
    (153) booleans -> booleans COMMA . boolean_value
    (159) boolean_value -> . boolean
    (160) boolean_value -> . other_value
    (161) boolean_value -> . expCond
    (162) boolean_value -> . expOpLog
    (163) boolean_value -> . expNeg
    (164) boolean_value -> . expEq
    (165) boolean_value -> . expNotEq
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    FUNMATH         shift and go to state 101
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    boolean_value                  shift and go to state 487
    boolean                        shift and go to state 269
    other_value                    shift and go to state 270
    expCond                        shift and go to state 271
    expOpLog                       shift and go to state 272
    expNeg                         shift and go to state 273
    expEq                          shift and go to state 274
    expNotEq                       shift and go to state 275
    variable                       shift and go to state 276
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    expression                     shift and go to state 277
    factor_exprlog                 shift and go to state 34
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    term                           shift and go to state 18
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    declare_any                    shift and go to state 132
    group                          shift and go to state 76
    prefix                         shift and go to state 71
=======
    (140) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 140 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 140 (numbers -> numbers COMMA number_value .)

>>>>>>> master

state 470

<<<<<<< HEAD
    (155) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    LPAREN          reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    NEGATION        reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    COMMENT         reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    MULTICOMMENT    reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    FUNCTION        reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    PRINT           reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    INCREMENT       reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    DECREMENT       reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    NORMSTRING1     reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    NORMSTRING2     reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    MULTISTRING     reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    ENUM            reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    IF              reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    WHILE           reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    FOR             reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    NUMBER          reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    FLOAT           reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    VARIABLE        reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    LET             reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    VAR             reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    STATIC          reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    CONST           reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    OBJECTNAME      reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    FUNMATH         reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    RKEY            reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    RPAREN          reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
    COMMA           reduce using rule 155 (list_string -> LBRACKET strings RBRACKET .)
=======
    (143) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 143 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 143 (booleans -> booleans COMMA boolean_value .)
>>>>>>> master


state 471

<<<<<<< HEAD
    (156) strings -> strings COMMA . string_value
    (166) string_value -> . string
    (167) string_value -> . other_value
    (168) string_value -> . string_object
    (169) string_value -> . concatenate
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (170) concatenate -> . string PLUS termS
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    string_value                   shift and go to state 488
    string                         shift and go to state 284
    other_value                    shift and go to state 285
    string_object                  shift and go to state 286
    concatenate                    shift and go to state 287
    variable                       shift and go to state 288
    funciones                      shift and go to state 67
    array_value                    shift and go to state 289
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 290
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (146) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 146 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 146 (strings -> strings COMMA string_value .)

>>>>>>> master

state 472

<<<<<<< HEAD
    (67) declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .

    POINTCOMMA      reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    LPAREN          reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    NEGATION        reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    COMMENT         reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    MULTICOMMENT    reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    FUNCTION        reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    PRINT           reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    INCREMENT       reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    DECREMENT       reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    NORMSTRING1     reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    NORMSTRING2     reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    MULTISTRING     reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    ENUM            reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    IF              reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    WHILE           reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    FOR             reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    NUMBER          reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    FLOAT           reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    VARIABLE        reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    LET             reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    VAR             reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    STATIC          reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    CONST           reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    OBJECTNAME      reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    FUNMATH         reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    $end            reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
    RKEY            reduce using rule 67 (declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values .)
=======
    (66) tuples_2_values -> LBRACKET general_value . COMMA general_value RBRACKET

    COMMA           shift and go to state 501
>>>>>>> master


state 473

<<<<<<< HEAD
    (75) tuples_2_values -> LBRACKET . general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 489
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (67) tuples_3_values -> LBRACKET general_value . COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 502

>>>>>>> master

state 474

<<<<<<< HEAD
    (69) declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .

    POINTCOMMA      reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    LPAREN          reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    NEGATION        reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    COMMENT         reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    MULTICOMMENT    reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    FUNCTION        reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    PRINT           reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    INCREMENT       reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    DECREMENT       reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    NORMSTRING1     reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    NORMSTRING2     reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    MULTISTRING     reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    ENUM            reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    IF              reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    WHILE           reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    FOR             reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    NUMBER          reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    FLOAT           reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    VARIABLE        reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    LET             reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    VAR             reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    STATIC          reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    CONST           reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    OBJECTNAME      reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    FUNMATH         reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    $end            reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
    RKEY            reduce using rule 69 (declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values .)
=======
    (68) tuples_4_values -> LBRACKET general_value . COMMA general_value COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 503
>>>>>>> master


state 475

<<<<<<< HEAD
    (76) tuples_3_values -> LBRACKET . general_value COMMA general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 490
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (76) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 76 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 76 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 76 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    RKEY            reduce using rule 76 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)

>>>>>>> master

state 476

<<<<<<< HEAD
    (71) declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .

    POINTCOMMA      reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    LPAREN          reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    NEGATION        reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    COMMENT         reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    MULTICOMMENT    reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    FUNCTION        reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    PRINT           reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    INCREMENT       reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    DECREMENT       reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    NORMSTRING1     reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    NORMSTRING2     reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    MULTISTRING     reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    ENUM            reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    IF              reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    WHILE           reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    FOR             reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    NUMBER          reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    FLOAT           reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    VARIABLE        reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    LET             reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    VAR             reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    STATIC          reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    CONST           reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    OBJECTNAME      reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    FUNMATH         reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    $end            reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
    RKEY            reduce using rule 71 (declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values .)
=======
    (80) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 80 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 80 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 80 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    RKEY            reduce using rule 80 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
>>>>>>> master


state 477

<<<<<<< HEAD
    (77) tuples_4_values -> LBRACKET . general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 491
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71
=======
    (84) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 84 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 84 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 84 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    RKEY            reduce using rule 84 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)

>>>>>>> master

state 478

<<<<<<< HEAD
    (85) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 492
=======
    (63) tuples_2_variables -> LBRACKET types COMMA types . RBRACKET
    (64) tuples_3_variables -> LBRACKET types COMMA types . COMMA types RBRACKET
    (65) tuples_4_variables -> LBRACKET types COMMA types . COMMA types COMMA types RBRACKET

    RBRACKET        shift and go to state 505
    COMMA           shift and go to state 504
>>>>>>> master


state 479

<<<<<<< HEAD
    (89) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 493
=======
    (37) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 37 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 37 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
>>>>>>> master


state 480

<<<<<<< HEAD
    (93) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 494
=======
    (39) enums_numeric_value -> object_name . EQUAL number
    (40) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 506
    COMMA           reduce using rule 40 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 40 (enums_numeric_value -> object_name .)
>>>>>>> master


state 481

<<<<<<< HEAD
    (72) tuples_2_variables -> LBRACKET types COMMA . types RBRACKET
    (73) tuples_3_variables -> LBRACKET types COMMA . types COMMA types RBRACKET
    (74) tuples_4_variables -> LBRACKET types COMMA . types COMMA types COMMA types RBRACKET
    (231) types -> . VARNUMBER
    (232) types -> . VARSTRING
    (233) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 370
    VARSTRING       shift and go to state 371
    VARBOOLEAN      shift and go to state 372
=======
    (41) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 41 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 41 (enums_string -> enums_string COMMA enums_string_value .)
>>>>>>> master

    types                          shift and go to state 495

state 482

<<<<<<< HEAD
    (50) funcParametres -> VARIABLE COMMA . funcParametres
    (49) funcParametres -> . VARIABLE
    (50) funcParametres -> . VARIABLE COMMA funcParametres

    VARIABLE        shift and go to state 373
=======
    (43) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 507
>>>>>>> master

    funcParametres                 shift and go to state 496

state 483

<<<<<<< HEAD
    (47) funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .

    POINTCOMMA      reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    LPAREN          reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    NEGATION        reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    COMMENT         reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    MULTICOMMENT    reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    FUNCTION        reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    PRINT           reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    INCREMENT       reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    DECREMENT       reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    NORMSTRING1     reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    NORMSTRING2     reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    MULTISTRING     reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    ENUM            reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    IF              reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    WHILE           reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    FOR             reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    NUMBER          reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    FLOAT           reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    VARIABLE        reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    LET             reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    VAR             reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    STATIC          reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    CONST           reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    OBJECTNAME      reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    FUNMATH         reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    $end            reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
    RKEY            reduce using rule 47 (funtionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement .)
=======
    (39) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 39 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 39 (enums_numeric_value -> object_name EQUAL number .)
>>>>>>> master


state 484

<<<<<<< HEAD
    (63) substatement -> LKEY . statement RKEY
    (64) substatement -> LKEY . RKEY
    (1) statement -> . atomicstatement
    (2) statement -> . atomicstatement statement
    (3) atomicstatement -> . statement_value
    (4) atomicstatement -> . statement_value POINTCOMMA
    (5) statement_value -> . expression
    (6) statement_value -> . concatenate
    (7) statement_value -> . declare
    (8) statement_value -> . assign
    (9) statement_value -> . expCond
    (10) statement_value -> . expOpLog
    (11) statement_value -> . expNeg
    (12) statement_value -> . expEq
    (13) statement_value -> . expNotEq
    (14) statement_value -> . exp_set
    (15) statement_value -> . statement_control
    (16) statement_value -> . comments
    (17) statement_value -> . funtionStatement
    (18) statement_value -> . consoleLog
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (170) concatenate -> . string PLUS termS
    (27) declare -> . var_boolean
    (28) declare -> . var_number
    (29) declare -> . var_string
    (30) declare -> . var_enum
    (31) declare -> . var_null
    (32) declare -> . var_undefined
    (33) declare -> . declare_array
    (34) declare -> . declare_enum
    (35) declare -> . declare_tuples
    (36) declare -> . declare_generic
    (115) assign -> . assign_variable
    (116) assign -> . assign_array
    (117) assign -> . assign_object_value
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (65) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (19) statement_control -> . funcionif
    (20) statement_control -> . funcionwhile
    (21) statement_control -> . funcionfor
    (25) comments -> . COMMENT
    (26) comments -> . MULTICOMMENT
    (47) funtionStatement -> . FUNCTION VARIABLE LPAREN RPAREN substatement
    (48) funtionStatement -> . FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement
    (22) consoleLog -> . PRINT LPAREN RPAREN
    (23) consoleLog -> . PRINT LPAREN VARIABLE RPAREN
    (24) consoleLog -> . PRINT LPAREN string RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (102) var_boolean -> . declare_boolean EQUAL boolean_value
    (103) var_boolean -> . declare_boolean
    (97) var_number -> . declare_number EQUAL number_value
    (98) var_number -> . declare_number EQUAL funcionmath
    (99) var_number -> . declare_number
    (100) var_number -> . declare_number EQUAL expression
    (105) var_string -> . declare_string EQUAL string_value
    (106) var_string -> . declare_string
    (108) var_enum -> . declare_var_enum EQUAL enum_value
    (109) var_enum -> . declare_var_enum
    (95) var_null -> . declare_any EQUAL NULL
    (96) var_undefined -> . declare_any EQUAL UNDEFINED
    (78) declare_array -> . declare_array_main_number
    (79) declare_array -> . declare_array_main_boolean
    (80) declare_array -> . declare_array_main_string
    (81) declare_array -> . declare_generic_array
    (37) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (66) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables
    (67) declare_tuples -> . declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
    (68) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables
    (69) declare_tuples -> . declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
    (70) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables
    (71) declare_tuples -> . declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
    (111) declare_generic -> . declare_any EQUAL assign_value
    (112) declare_generic -> . declare_any
    (118) assign_variable -> . variable EQUAL assign_value
    (119) assign_variable -> . variable EQUAL funciones
    (120) assign_variable -> . variable EQUAL list_types
    (121) assign_array -> . array_value EQUAL general_value
    (122) assign_object_value -> . object_value_form1 EQUAL general_value
    (123) assign_object_value -> . object_value_form1 EQUAL list_types
    (124) assign_object_value -> . object_value_form2 EQUAL general_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (51) funcionif -> . IF LPAREN formLog RPAREN substatement
    (52) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (53) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (54) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (62) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (58) funcionfor -> . FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (59) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (60) funcionfor -> . FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
    (61) funcionfor -> . FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (104) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (101) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (107) declare_string -> . declare_any TWOPOINTS VARSTRING
    (110) declare_var_enum -> . declare_any TWOPOINTS object_name
    (82) declare_array_main_number -> . declare_array_number EQUAL list_number
    (83) declare_array_main_number -> . declare_array_number
    (86) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (87) declare_array_main_boolean -> . declare_array_boolean
    (90) declare_array_main_string -> . declare_array_string EQUAL list_string
    (91) declare_array_main_string -> . declare_array_string
    (94) declare_generic_array -> . declare_any EQUAL list_types
    (241) variable -> . VARIABLE
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (84) declare_array_number -> . declare_number LBRACKET RBRACKET
    (85) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (88) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (89) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (92) declare_array_string -> . declare_string LBRACKET RBRACKET
    (93) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

    RKEY            shift and go to state 498
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    COMMENT         shift and go to state 41
    MULTICOMMENT    shift and go to state 42
    FUNCTION        shift and go to state 43
    PRINT           shift and go to state 44
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    ENUM            shift and go to state 64
    IF              shift and go to state 72
    WHILE           shift and go to state 73
    FOR             shift and go to state 74
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101

    statement                      shift and go to state 497
    atomicstatement                shift and go to state 2
    statement_value                shift and go to state 3
    expression                     shift and go to state 4
    concatenate                    shift and go to state 5
    declare                        shift and go to state 6
    assign                         shift and go to state 7
    expCond                        shift and go to state 8
    expOpLog                       shift and go to state 9
    expNeg                         shift and go to state 10
    expEq                          shift and go to state 11
    expNotEq                       shift and go to state 12
    exp_set                        shift and go to state 13
    statement_control              shift and go to state 14
    comments                       shift and go to state 15
    funtionStatement               shift and go to state 16
    consoleLog                     shift and go to state 17
    term                           shift and go to state 18
    string                         shift and go to state 19
    var_boolean                    shift and go to state 20
    var_number                     shift and go to state 21
    var_string                     shift and go to state 22
    var_enum                       shift and go to state 23
    var_null                       shift and go to state 24
    var_undefined                  shift and go to state 25
    declare_array                  shift and go to state 26
    declare_enum                   shift and go to state 27
    declare_tuples                 shift and go to state 28
    declare_generic                shift and go to state 29
    assign_variable                shift and go to state 30
    assign_array                   shift and go to state 31
    assign_object_value            shift and go to state 32
    factor_exprlog                 shift and go to state 34
    declare_any                    shift and go to state 37
    funcionif                      shift and go to state 38
    funcionwhile                   shift and go to state 39
    funcionfor                     shift and go to state 40
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    declare_boolean                shift and go to state 54
    declare_number                 shift and go to state 55
    funcionmath                    shift and go to state 56
    declare_string                 shift and go to state 57
    declare_var_enum               shift and go to state 58
    enum_value                     shift and go to state 59
    declare_array_main_number      shift and go to state 60
    declare_array_main_boolean     shift and go to state 61
    declare_array_main_string      shift and go to state 62
    declare_generic_array          shift and go to state 63
    variable                       shift and go to state 66
    funciones                      shift and go to state 67
    array_value                    shift and go to state 68
    object_value_form1             shift and go to state 69
    object_value_form2             shift and go to state 70
    prefix                         shift and go to state 71
    group                          shift and go to state 76
    object_value                   shift and go to state 79
    object_name                    shift and go to state 80
    declare_array_number           shift and go to state 81
    declare_array_boolean          shift and go to state 82
    declare_array_string           shift and go to state 83
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
=======
    (43) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 43 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 43 (enums_string_value -> object_name EQUAL string .)

>>>>>>> master

state 485

<<<<<<< HEAD
    (48) funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 499
=======
    (45) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .
    (46) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif . funcionelse
    (50) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 45 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 45 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 45 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    ELSE            shift and go to state 488

    funcionelse                    shift and go to state 508
>>>>>>> master

state 486

<<<<<<< HEAD
    (37) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    LPAREN          reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    NEGATION        reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    COMMENT         reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    MULTICOMMENT    reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    FUNCTION        reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    PRINT           reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    INCREMENT       reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    DECREMENT       reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    NORMSTRING1     reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    NORMSTRING2     reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    MULTISTRING     reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    ENUM            reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    IF              reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    WHILE           reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    FOR             reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    NUMBER          reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    FLOAT           reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    VARIABLE        reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    LET             reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    VAR             reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    STATIC          reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    CONST           reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    OBJECTNAME      reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    FUNMATH         reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    RKEY            reduce using rule 37 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
=======
    (47) funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .

    POINTCOMMA      reduce using rule 47 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    $end            reduce using rule 47 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    RKEY            reduce using rule 47 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
>>>>>>> master


state 487

    (48) funcionelif -> ELIF . LPAREN formLog RPAREN substatement
    (49) funcionelif -> ELIF . LPAREN formLog RPAREN substatement funcionelif

    LPAREN          shift and go to state 509


state 488

    (50) funcionelse -> ELSE . substatement
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 510

state 489

    (54) substatement -> LKEY statement . RKEY

    RKEY            shift and go to state 511


state 490

    (55) substatement -> LKEY RKEY .

    ELIF            reduce using rule 55 (substatement -> LKEY RKEY .)
    ELSE            reduce using rule 55 (substatement -> LKEY RKEY .)
    POINTCOMMA      reduce using rule 55 (substatement -> LKEY RKEY .)
    $end            reduce using rule 55 (substatement -> LKEY RKEY .)
    RKEY            reduce using rule 55 (substatement -> LKEY RKEY .)


state 491

    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 512


state 492

    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA term RPAREN substatement
    (206) formLog -> . expCond
    (207) formLog -> . expOpLog
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

<<<<<<< HEAD
    (40) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (42) enums_numeric_value -> . object_name EQUAL number
    (43) enums_numeric_value -> . object_name
    (242) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 65

    enums_numeric_value            shift and go to state 500
    object_name                    shift and go to state 501

state 447

    (44) enums_string -> enums_string COMMA . enums_string_value
    (46) enums_string_value -> . object_name EQUAL string
    (242) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 65

    enums_string_value             shift and go to state 502
    object_name                    shift and go to state 503

state 448

    (42) enums_numeric_value -> object_name EQUAL . number
    (46) enums_string_value -> object_name EQUAL . string
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    number                         shift and go to state 504
    string                         shift and go to state 505

state 449

    (51) funcionif -> IF LPAREN formLog RPAREN substatement .
    (52) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif
    (53) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif funcionelse
    (54) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelse
    (55) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (56) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif
    (57) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    LPAREN          reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    NEGATION        reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    COMMENT         reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    MULTICOMMENT    reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    FUNCTION        reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    PRINT           reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    INCREMENT       reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    DECREMENT       reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    NORMSTRING1     reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    NORMSTRING2     reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    MULTISTRING     reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    ENUM            reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    IF              reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    WHILE           reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    FOR             reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    NUMBER          reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    FLOAT           reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    VARIABLE        reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    LET             reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    VAR             reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    STATIC          reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    CONST           reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    OBJECTNAME      reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    FUNMATH         reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 51 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 508
    ELSE            shift and go to state 509

    funcionelif                    shift and go to state 506
    funcionelse                    shift and go to state 507

state 450

    (62) funcionwhile -> WHILE LPAREN formLog RPAREN substatement .

    POINTCOMMA      reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    LPAREN          reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    NEGATION        reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    COMMENT         reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    MULTICOMMENT    reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    FUNCTION        reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    PRINT           reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    INCREMENT       reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    DECREMENT       reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    NORMSTRING1     reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    NORMSTRING2     reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    MULTISTRING     reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    ENUM            reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    IF              reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    WHILE           reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    FOR             reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    NUMBER          reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    FLOAT           reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    VARIABLE        reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    LET             reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    VAR             reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    STATIC          reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    CONST           reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    OBJECTNAME      reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    FUNMATH         reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 62 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)


state 451

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 510
    term                           shift and go to state 18
    expression                     shift and go to state 392
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 452

    (60) funcionfor -> FOR LPAREN LET VARIABLE IN . VARIABLE RPAREN substatement

    VARIABLE        shift and go to state 511


state 453

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 512


state 454

    (61) funcionfor -> FOR LPAREN VARIABLE IN VARIABLE . RPAREN substatement

    RPAREN          shift and go to state 513


state 455

    (259) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 514
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]


state 456

    (260) mathAbs -> FUNMATH POINT ABS LPAREN number_value . RPAREN

    RPAREN          shift and go to state 515


state 457

    (261) mathAbs -> FUNMATH POINT ABS LPAREN MINUS . number_value RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 516
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 458

    (262) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 517
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]


state 459

    (263) mathRound -> FUNMATH POINT ROUND LPAREN number_value . RPAREN

    RPAREN          shift and go to state 518


state 460

    (264) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA VARIABLE RPAREN
    (266) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA number_value RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    COMMA           shift and go to state 519
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! COMMA           [ reduce using rule 241 (variable -> VARIABLE .) ]


state 461

    (265) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA number_value RPAREN
    (267) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 520


state 462

    (271) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 271 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN .)


state 463

    (272) stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .

    PLUS            reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    MINUS           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    GREATER         reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LESS            reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    AND             reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    OR              reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LPAREN          reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NEGATION        reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    COMMENT         reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    MULTICOMMENT    reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    FUNCTION        reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    PRINT           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    INCREMENT       reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    DECREMENT       reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NORMSTRING1     reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NORMSTRING2     reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    MULTISTRING     reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    ENUM            reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    IF              reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    WHILE           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    FOR             reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    NUMBER          reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    FLOAT           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    VARIABLE        reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    LET             reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    VAR             reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    STATIC          reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    CONST           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    OBJECTNAME      reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    FUNMATH         reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    $end            reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RKEY            reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)
    COMMA           reduce using rule 272 (stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN .)

=======
    formLog                        shift and go to state 513
    term                           shift and go to state 16
    expCond                        shift and go to state 302
    expOpLog                       shift and go to state 303
    expression                     shift and go to state 304
    factor_exprlog                 shift and go to state 215
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 493

    (249) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 249 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)


state 494

    (250) mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .

    PLUS            reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    MINUS           reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    GREATER         reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LESS            reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    AND             reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    OR              reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    $end            reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RKEY            reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    COMMA           reduce using rule 250 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)


state 495

    (251) mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value . RPAREN

    RPAREN          shift and go to state 514


state 496

    (252) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 252 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)


state 497

    (253) mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .

    PLUS            reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    MINUS           reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    GREATER         reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LESS            reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    AND             reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    OR              reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    $end            reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RKEY            reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    COMMA           reduce using rule 253 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)


state 498

    (254) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . VARIABLE RPAREN
    (256) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . number_value RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 515
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 516
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 499

    (255) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . number_value RPAREN
    (257) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . VARIABLE RPAREN
    (148) number_value -> . expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    VARIABLE        shift and go to state 518
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    number_value                   shift and go to state 517
    expression                     shift and go to state 380
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 500

    (210) string_object -> NEW OBJECTSTRING LPAREN string RPAREN .

    POINTCOMMA      reduce using rule 210 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    $end            reduce using rule 210 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    RKEY            reduce using rule 210 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    RBRACKET        reduce using rule 210 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    COMMA           reduce using rule 210 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)


state 501

    (66) tuples_2_values -> LBRACKET general_value COMMA . general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 519
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 502

    (67) tuples_3_values -> LBRACKET general_value COMMA . general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 520
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 503

    (68) tuples_4_values -> LBRACKET general_value COMMA . general_value COMMA general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 521
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 504

    (64) tuples_3_variables -> LBRACKET types COMMA types COMMA . types RBRACKET
    (65) tuples_4_variables -> LBRACKET types COMMA types COMMA . types COMMA types RBRACKET
    (221) types -> . VARNUMBER
    (222) types -> . VARSTRING
    (223) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 363
    VARSTRING       shift and go to state 364
    VARBOOLEAN      shift and go to state 365

    types                          shift and go to state 522

state 505

    (63) tuples_2_variables -> LBRACKET types COMMA types RBRACKET .

    EQUAL           reduce using rule 63 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 63 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    $end            reduce using rule 63 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    RKEY            reduce using rule 63 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)


state 506

    (39) enums_numeric_value -> object_name EQUAL . number
    (224) number -> . NUMBER
    (225) number -> . FLOAT

    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74

    number                         shift and go to state 483

state 507

    (43) enums_string_value -> object_name EQUAL . string
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50

    string                         shift and go to state 484

state 508

    (46) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .

    POINTCOMMA      reduce using rule 46 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    $end            reduce using rule 46 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    RKEY            reduce using rule 46 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)


state 509

    (48) funcionelif -> ELIF LPAREN . formLog RPAREN substatement
    (49) funcionelif -> ELIF LPAREN . formLog RPAREN substatement funcionelif
    (206) formLog -> . expCond
    (207) formLog -> . expOpLog
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
>>>>>>> master

    formLog                        shift and go to state 523
    expCond                        shift and go to state 302
    expOpLog                       shift and go to state 303
    expression                     shift and go to state 304
    factor_exprlog                 shift and go to state 215
    term                           shift and go to state 16
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 510

    (50) funcionelse -> ELSE substatement .

    POINTCOMMA      reduce using rule 50 (funcionelse -> ELSE substatement .)
    $end            reduce using rule 50 (funcionelse -> ELSE substatement .)
    RKEY            reduce using rule 50 (funcionelse -> ELSE substatement .)


state 511

    (54) substatement -> LKEY statement RKEY .

    ELIF            reduce using rule 54 (substatement -> LKEY statement RKEY .)
    ELSE            reduce using rule 54 (substatement -> LKEY statement RKEY .)
    POINTCOMMA      reduce using rule 54 (substatement -> LKEY statement RKEY .)
    $end            reduce using rule 54 (substatement -> LKEY statement RKEY .)
    RKEY            reduce using rule 54 (substatement -> LKEY statement RKEY .)


state 512

    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA term RPAREN substatement
    (206) formLog -> . expCond
    (207) formLog -> . expOpLog
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    LPAREN          shift and go to state 31
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

<<<<<<< HEAD
    (273) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .
    (280) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .

  ! reduce/reduce conflict for PLUS resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for PRODUCT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for EQUALTO resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NOTEQUALTO resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for GREATER resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LESS resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for GREATEREQUAL resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LESSEQUAL resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for AND resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for OR resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for POINTCOMMA resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NEGATION resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for COMMENT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for MULTICOMMENT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for PRINT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NORMSTRING1 resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NORMSTRING2 resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for MULTISTRING resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for ENUM resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for IF resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for WHILE resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for FOR resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for NUMBER resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for FLOAT resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for LET resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for VAR resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for STATIC resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for CONST resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for OBJECTNAME resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for FUNMATH resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RKEY resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    PLUS            reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 273 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .)

  ! PLUS            [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! MINUS           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! PRODUCT         [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! DIVIDE          [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! EQUALTO         [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NOTEQUALTO      [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! GREATER         [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LESS            [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! GREATEREQUAL    [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LESSEQUAL       [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! AND             [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! OR              [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! POINTCOMMA      [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LPAREN          [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NEGATION        [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! COMMENT         [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! MULTICOMMENT    [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! FUNCTION        [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! PRINT           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! INCREMENT       [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! DECREMENT       [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NORMSTRING1     [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NORMSTRING2     [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! MULTISTRING     [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! ENUM            [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! IF              [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! WHILE           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! FOR             [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! NUMBER          [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! FLOAT           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! VARIABLE        [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! LET             [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! VAR             [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! STATIC          [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! CONST           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! OBJECTNAME      [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! FUNMATH         [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! $end            [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RKEY            [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RPAREN          [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! RBRACKET        [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
  ! COMMA           [ reduce using rule 280 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN .) ]
=======
    prefix                         shift and go to state 68
    formLog                        shift and go to state 524
    term                           shift and go to state 16
    expCond                        shift and go to state 302
    expOpLog                       shift and go to state 303
    expression                     shift and go to state 304
    factor_exprlog                 shift and go to state 215
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128

state 513

    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 525


state 514

    (251) mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .

    PLUS            reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    MINUS           reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    PRODUCT         reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    DIVIDE          reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    EQUALTO         reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NOTEQUALTO      reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    GREATER         reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LESS            reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    GREATEREQUAL    reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LESSEQUAL       reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    AND             reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    OR              reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    POINTCOMMA      reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    $end            reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RPAREN          reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RKEY            reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RBRACKET        reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    COMMA           reduce using rule 251 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)


state 515

    (254) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 526
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]
>>>>>>> master


state 516

<<<<<<< HEAD
    (274) stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .

    PLUS            reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    MINUS           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    PRODUCT         reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    DIVIDE          reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    EQUALTO         reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    GREATER         reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LESS            reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    AND             reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    OR              reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LPAREN          reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NEGATION        reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    COMMENT         reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    FUNCTION        reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    PRINT           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    INCREMENT       reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    DECREMENT       reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    ENUM            reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    IF              reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    WHILE           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    FOR             reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    NUMBER          reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    FLOAT           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    VARIABLE        reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    LET             reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    VAR             reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    STATIC          reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    CONST           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    FUNMATH         reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    $end            reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RKEY            reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RPAREN          reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    RBRACKET        reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
    COMMA           reduce using rule 274 (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN .)
=======
    (256) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value . RPAREN

    RPAREN          shift and go to state 527
>>>>>>> master


state 517

<<<<<<< HEAD
    (281) arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .

    PLUS            reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    MINUS           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    PRODUCT         reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    DIVIDE          reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    EQUALTO         reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NOTEQUALTO      reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    GREATER         reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LESS            reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    GREATEREQUAL    reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LESSEQUAL       reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    AND             reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    OR              reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    POINTCOMMA      reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LPAREN          reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NEGATION        reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    COMMENT         reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    MULTICOMMENT    reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    FUNCTION        reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    PRINT           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    INCREMENT       reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    DECREMENT       reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NORMSTRING1     reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NORMSTRING2     reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    MULTISTRING     reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    ENUM            reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    IF              reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    WHILE           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    FOR             reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    NUMBER          reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    FLOAT           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    VARIABLE        reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    LET             reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    VAR             reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    STATIC          reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    CONST           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    OBJECTNAME      reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    FUNMATH         reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    $end            reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RKEY            reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RPAREN          reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    RBRACKET        reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
    COMMA           reduce using rule 281 (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN .)
=======
    (255) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value . RPAREN

    RPAREN          shift and go to state 528
>>>>>>> master


state 518

<<<<<<< HEAD
    (275) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 275 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN .)


state 468

    (276) stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .

    PLUS            reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    MINUS           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    PRODUCT         reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    DIVIDE          reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    EQUALTO         reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    GREATER         reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LESS            reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    AND             reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    OR              reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LPAREN          reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NEGATION        reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    COMMENT         reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    FUNCTION        reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    PRINT           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    INCREMENT       reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    DECREMENT       reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    ENUM            reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    IF              reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    WHILE           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    FOR             reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    NUMBER          reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    FLOAT           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    VARIABLE        reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    LET             reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    VAR             reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    STATIC          reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    CONST           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    FUNMATH         reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    $end            reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RKEY            reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RPAREN          reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    RBRACKET        reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)
    COMMA           reduce using rule 276 (stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN .)


state 469

    (286) arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 286 (arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN .)
=======
    (257) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE . RPAREN
    (231) variable -> VARIABLE .
    (261) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (274) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 529
    LBRACKET        reduce using rule 231 (variable -> VARIABLE .)
    PLUS            reduce using rule 231 (variable -> VARIABLE .)
    MINUS           reduce using rule 231 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 231 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 231 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 231 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 231 (variable -> VARIABLE .)
    POINT           shift and go to state 143

  ! POINT           [ reduce using rule 231 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 231 (variable -> VARIABLE .) ]


state 519

    (66) tuples_2_values -> LBRACKET general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 530


state 520

    (67) tuples_3_values -> LBRACKET general_value COMMA general_value . COMMA general_value RBRACKET

    COMMA           shift and go to state 531


state 521

    (68) tuples_4_values -> LBRACKET general_value COMMA general_value . COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 532


state 522

    (64) tuples_3_variables -> LBRACKET types COMMA types COMMA types . RBRACKET
    (65) tuples_4_variables -> LBRACKET types COMMA types COMMA types . COMMA types RBRACKET

    RBRACKET        shift and go to state 534
    COMMA           shift and go to state 533


state 523

    (48) funcionelif -> ELIF LPAREN formLog . RPAREN substatement
    (49) funcionelif -> ELIF LPAREN formLog . RPAREN substatement funcionelif

    RPAREN          shift and go to state 535


state 524

    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 536


state 525

    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . term RPAREN substatement
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83
>>>>>>> master

    term                           shift and go to state 537
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 526

    (254) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .

    PLUS            reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PRODUCT         reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    EQUALTO         reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    GREATER         reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LESS            reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    AND             reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RBRACKET        reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COMMA           reduce using rule 254 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 527

    (256) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .

    PLUS            reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    MINUS           reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    PRODUCT         reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    DIVIDE          reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    EQUALTO         reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NOTEQUALTO      reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    GREATER         reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LESS            reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    GREATEREQUAL    reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LESSEQUAL       reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    AND             reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    OR              reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    POINTCOMMA      reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    $end            reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RPAREN          reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RKEY            reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RBRACKET        reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    COMMA           reduce using rule 256 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)


state 528

    (255) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .

    PLUS            reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    MINUS           reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    PRODUCT         reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    DIVIDE          reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    EQUALTO         reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NOTEQUALTO      reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    GREATER         reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LESS            reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    GREATEREQUAL    reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LESSEQUAL       reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    AND             reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    OR              reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    POINTCOMMA      reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    $end            reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RPAREN          reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RKEY            reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RBRACKET        reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    COMMA           reduce using rule 255 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)


state 529

    (257) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .

    PLUS            reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    PRODUCT         reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    EQUALTO         reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    GREATER         reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LESS            reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    AND             reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    OR              reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    $end            reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RBRACKET        reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    COMMA           reduce using rule 257 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)


state 530

    (66) tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 66 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 66 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 66 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)


state 531

    (67) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA . general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 538
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 532

    (68) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA . general_value COMMA general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

<<<<<<< HEAD
    (284) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 284 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN .)

=======
    general_value                  shift and go to state 539
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68

state 533

    (65) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA . types RBRACKET
    (221) types -> . VARNUMBER
    (222) types -> . VARSTRING
    (223) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 363
    VARSTRING       shift and go to state 364
    VARBOOLEAN      shift and go to state 365

    types                          shift and go to state 540

state 534

    (64) tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .

    EQUAL           reduce using rule 64 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 64 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    $end            reduce using rule 64 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    RKEY            reduce using rule 64 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)


state 535

    (48) funcionelif -> ELIF LPAREN formLog RPAREN . substatement
    (49) funcionelif -> ELIF LPAREN formLog RPAREN . substatement funcionelif
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 541

state 536

    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . term RPAREN substatement
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    LPAREN          shift and go to state 184
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    prefix                         shift and go to state 68
    term                           shift and go to state 542
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
>>>>>>> master

state 537

<<<<<<< HEAD
    (285) arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .

    PLUS            reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    MINUS           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    PRODUCT         reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    DIVIDE          reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    EQUALTO         reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    GREATER         reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LESS            reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    AND             reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    OR              reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LPAREN          reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NEGATION        reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    COMMENT         reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    FUNCTION        reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    PRINT           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    INCREMENT       reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    DECREMENT       reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    ENUM            reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    IF              reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    WHILE           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    FOR             reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    NUMBER          reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    FLOAT           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    VARIABLE        reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    LET             reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    VAR             reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    STATIC          reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    CONST           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    FUNMATH         reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    $end            reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RKEY            reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RPAREN          reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    RBRACKET        reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
    COMMA           reduce using rule 285 (arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN .)
=======
    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term . RPAREN substatement
>>>>>>> master

    RPAREN          shift and go to state 543


<<<<<<< HEAD
    (289) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 289 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN .)
=======
state 538
>>>>>>> master

    (67) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 544

<<<<<<< HEAD
    (290) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .

    PLUS            reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    MINUS           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    GREATER         reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LESS            reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    AND             reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    OR              reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LPAREN          reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NEGATION        reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    COMMENT         reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    MULTICOMMENT    reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    FUNCTION        reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    PRINT           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    INCREMENT       reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    DECREMENT       reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NORMSTRING1     reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NORMSTRING2     reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    MULTISTRING     reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    ENUM            reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    IF              reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    WHILE           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    FOR             reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    NUMBER          reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    FLOAT           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    VARIABLE        reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    LET             reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    VAR             reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    STATIC          reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    CONST           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    OBJECTNAME      reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    FUNMATH         reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    $end            reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RKEY            reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
    COMMA           reduce using rule 290 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN .)
=======
>>>>>>> master

state 539

    (68) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value . COMMA general_value RBRACKET

<<<<<<< HEAD
    (291) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .

    PLUS            reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    MINUS           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    PRODUCT         reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    DIVIDE          reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    EQUALTO         reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NOTEQUALTO      reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    GREATER         reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LESS            reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    GREATEREQUAL    reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LESSEQUAL       reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    AND             reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    OR              reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    POINTCOMMA      reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LPAREN          reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NEGATION        reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    COMMENT         reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    MULTICOMMENT    reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    FUNCTION        reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    PRINT           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    INCREMENT       reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    DECREMENT       reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NORMSTRING1     reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NORMSTRING2     reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    MULTISTRING     reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    ENUM            reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    IF              reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    WHILE           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    FOR             reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    NUMBER          reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    FLOAT           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    VARIABLE        reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    LET             reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    VAR             reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    STATIC          reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    CONST           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    OBJECTNAME      reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    FUNMATH         reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    $end            reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RKEY            reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RPAREN          reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    RBRACKET        reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
    COMMA           reduce using rule 291 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN .)
=======
    COMMA           shift and go to state 545
>>>>>>> master


state 540

<<<<<<< HEAD
    (292) conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .

    PLUS            reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    MINUS           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    PRODUCT         reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    DIVIDE          reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    EQUALTO         reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    GREATER         reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LESS            reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    AND             reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    OR              reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LPAREN          reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NEGATION        reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    COMMENT         reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    FUNCTION        reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    PRINT           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    INCREMENT       reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    DECREMENT       reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    ENUM            reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    IF              reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    WHILE           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    FOR             reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    NUMBER          reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    FLOAT           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    VARIABLE        reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    LET             reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    VAR             reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    STATIC          reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    CONST           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    FUNMATH         reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    $end            reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RKEY            reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RPAREN          reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    RBRACKET        reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
    COMMA           reduce using rule 292 (conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN .)
=======
    (65) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types . RBRACKET

    RBRACKET        shift and go to state 546
>>>>>>> master


state 541

<<<<<<< HEAD
    (293) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 293 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN .)


state 477

    (294) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .

    PLUS            reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    MINUS           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    GREATER         reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LESS            reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    AND             reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    OR              reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LPAREN          reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NEGATION        reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    COMMENT         reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    MULTICOMMENT    reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    FUNCTION        reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    PRINT           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    INCREMENT       reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    DECREMENT       reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NORMSTRING1     reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NORMSTRING2     reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    MULTISTRING     reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    ENUM            reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    IF              reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    WHILE           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    FOR             reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    NUMBER          reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    FLOAT           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    VARIABLE        reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    LET             reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    VAR             reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    STATIC          reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    CONST           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    OBJECTNAME      reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    FUNMATH         reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    $end            reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RKEY            reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
    COMMA           reduce using rule 294 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN .)
=======
    (48) funcionelif -> ELIF LPAREN formLog RPAREN substatement .
    (49) funcionelif -> ELIF LPAREN formLog RPAREN substatement . funcionelif
    (48) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (49) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif

    ELSE            reduce using rule 48 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    POINTCOMMA      reduce using rule 48 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 48 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 48 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 487

    funcionelif                    shift and go to state 547

state 542

    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term . RPAREN substatement

    RPAREN          shift and go to state 548


state 543

    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN . substatement
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 549

state 544

    (67) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 67 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 67 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 67 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)


state 545

    (68) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA . general_value RBRACKET
    (126) general_value -> . expression
    (127) general_value -> . boolean
    (128) general_value -> . string
    (129) general_value -> . concatenate
    (130) general_value -> . string_object
    (131) general_value -> . expCond
    (132) general_value -> . expOpLog
    (133) general_value -> . expNeg
    (134) general_value -> . expEq
    (135) general_value -> . expNotEq
    (165) expression -> . expression PLUS term
    (166) expression -> . expression MINUS term
    (167) expression -> . term
    (168) expression -> . expression PRODUCT expression
    (169) expression -> . expression DIVIDE expression
    (229) boolean -> . TRUE
    (230) boolean -> . FALSE
    (226) string -> . NORMSTRING1
    (227) string -> . NORMSTRING2
    (228) string -> . MULTISTRING
    (160) concatenate -> . string PLUS termS
    (210) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (189) expCond -> . expression operador expression
    (190) expCond -> . LPAREN expression operador expression RPAREN
    (185) expOpLog -> . expCond oplogico expCond
    (186) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (187) expOpLog -> . expression oplogico expression
    (174) expNeg -> . NEGATION expOpLog
    (175) expNeg -> . NEGATION factor_exprlog
    (176) expNeg -> . NEGATION boolean
    (177) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (178) expNeg -> . NEGATION VARIABLE
    (179) expEq -> . expCond EQUALTO expCond
    (180) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (181) expEq -> . expression EQUALTO expression
    (182) expNotEq -> . expCond NOTEQUALTO expCond
    (183) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (184) expNotEq -> . expression NOTEQUALTO expression
    (170) term -> . term1 INCREMENT
    (171) term -> . INCREMENT term1
    (172) term -> . term1 DECREMENT
    (173) term -> . DECREMENT term1
    (197) term -> . number
    (198) term -> . factor_expr
    (199) term -> . other_value
    (188) factor_exprlog -> . LPAREN expCond RPAREN
    (191) term1 -> . LPAREN group RPAREN
    (192) term1 -> . group
    (224) number -> . NUMBER
    (225) number -> . FLOAT
    (200) factor_expr -> . LPAREN expression RPAREN
    (201) other_value -> . variable
    (202) other_value -> . funciones
    (203) other_value -> . array_value
    (204) other_value -> . enum_value
    (205) other_value -> . object_value
    (193) group -> . number
    (194) group -> . variable
    (195) group -> . array_value
    (196) group -> . object_value
    (231) variable -> . VARIABLE
    (241) funciones -> . funcionmath
    (242) funciones -> . funcionString
    (243) funciones -> . funcionArray
    (244) funciones -> . funcionConjunto
    (213) array_value -> . variable LBRACKET expression RBRACKET
    (214) enum_value -> . object_name POINT object_name
    (208) object_value -> . object_value_form1
    (209) object_value -> . object_value_form2
    (245) funcionmath -> . mathAbs
    (246) funcionmath -> . mathRound
    (247) funcionmath -> . mathPow
    (258) funcionString -> . stringCharAt
    (259) funcionString -> . stringConcat
    (260) funcionString -> . stringSplit
    (267) funcionArray -> . arrayFilter
    (268) funcionArray -> . arrayConcat
    (269) funcionArray -> . arrayJoin
    (277) funcionConjunto -> . conjuntoAdd
    (278) funcionConjunto -> . conjuntoHas
    (232) object_name -> . OBJECTNAME
    (211) object_value_form1 -> . variable POINT variable
    (212) object_value_form2 -> . variable POINT array_value
    (248) mathAbs -> . declare_any EQUAL mathAbs
    (249) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (250) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (251) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (252) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (253) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (254) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (255) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (256) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (257) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (261) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (262) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (263) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (264) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (265) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (266) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (276) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (270) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (271) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (272) arrayJoin -> . declare_any arrayJoin
    (273) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (274) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (275) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (279) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (280) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (281) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (282) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (283) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (284) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (285) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (286) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (104) declare_any -> . prefix VARIABLE
    (215) prefix -> . LET
    (216) prefix -> . VAR
    (217) prefix -> . STATIC
    (218) prefix -> . CONST

    TRUE            shift and go to state 139
    FALSE           shift and go to state 140
    NORMSTRING1     shift and go to state 48
    NORMSTRING2     shift and go to state 49
    MULTISTRING     shift and go to state 50
    NEW             shift and go to state 285
    LPAREN          shift and go to state 31
    NEGATION        shift and go to state 33
    INCREMENT       shift and go to state 43
    DECREMENT       shift and go to state 44
    NUMBER          shift and go to state 73
    FLOAT           shift and go to state 74
    VARIABLE        shift and go to state 34
    OBJECTNAME      shift and go to state 62
    FUNMATH         shift and go to state 98
    LET             shift and go to state 80
    VAR             shift and go to state 81
    STATIC          shift and go to state 82
    CONST           shift and go to state 83

    general_value                  shift and go to state 550
    expression                     shift and go to state 235
    boolean                        shift and go to state 236
    string                         shift and go to state 237
    concatenate                    shift and go to state 238
    string_object                  shift and go to state 239
    expCond                        shift and go to state 240
    expOpLog                       shift and go to state 241
    expNeg                         shift and go to state 242
    expEq                          shift and go to state 243
    expNotEq                       shift and go to state 244
    term                           shift and go to state 16
    factor_exprlog                 shift and go to state 32
    term1                          shift and go to state 42
    number                         shift and go to state 45
    factor_expr                    shift and go to state 46
    other_value                    shift and go to state 47
    group                          shift and go to state 72
    variable                       shift and go to state 141
    funciones                      shift and go to state 64
    array_value                    shift and go to state 142
    enum_value                     shift and go to state 56
    object_value                   shift and go to state 75
    funcionmath                    shift and go to state 53
    funcionString                  shift and go to state 84
    funcionArray                   shift and go to state 85
    funcionConjunto                shift and go to state 86
    object_name                    shift and go to state 76
    object_value_form1             shift and go to state 126
    object_value_form2             shift and go to state 127
    mathAbs                        shift and go to state 87
    mathRound                      shift and go to state 88
    mathPow                        shift and go to state 89
    stringCharAt                   shift and go to state 90
    stringConcat                   shift and go to state 91
    stringSplit                    shift and go to state 92
    arrayFilter                    shift and go to state 93
    arrayConcat                    shift and go to state 94
    arrayJoin                      shift and go to state 95
    conjuntoAdd                    shift and go to state 96
    conjuntoHas                    shift and go to state 97
    declare_any                    shift and go to state 128
    prefix                         shift and go to state 68
>>>>>>> master

state 546

<<<<<<< HEAD
state 478

    (295) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .

    PLUS            reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    MINUS           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    PRODUCT         reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    DIVIDE          reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    EQUALTO         reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NOTEQUALTO      reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    GREATER         reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LESS            reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    GREATEREQUAL    reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LESSEQUAL       reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    AND             reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    OR              reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    POINTCOMMA      reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LPAREN          reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NEGATION        reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    COMMENT         reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    MULTICOMMENT    reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    FUNCTION        reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    PRINT           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    INCREMENT       reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    DECREMENT       reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NORMSTRING1     reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NORMSTRING2     reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    MULTISTRING     reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    ENUM            reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    IF              reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    WHILE           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    FOR             reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    NUMBER          reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    FLOAT           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    VARIABLE        reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    LET             reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    VAR             reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    STATIC          reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    CONST           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    OBJECTNAME      reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    FUNMATH         reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    $end            reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RKEY            reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RPAREN          reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    RBRACKET        reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)
    COMMA           reduce using rule 295 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN .)

=======
    (65) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .

    EQUAL           reduce using rule 65 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 65 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    $end            reduce using rule 65 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    RKEY            reduce using rule 65 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)

>>>>>>> master

state 547

<<<<<<< HEAD
    (296) conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .

    PLUS            reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    MINUS           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    PRODUCT         reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    DIVIDE          reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    EQUALTO         reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NOTEQUALTO      reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    GREATER         reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LESS            reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    GREATEREQUAL    reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LESSEQUAL       reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    AND             reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    OR              reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    POINTCOMMA      reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LPAREN          reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NEGATION        reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    COMMENT         reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    FUNCTION        reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    PRINT           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    INCREMENT       reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    DECREMENT       reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    ENUM            reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    IF              reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    WHILE           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    FOR             reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    NUMBER          reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    FLOAT           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    VARIABLE        reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    LET             reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    VAR             reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    STATIC          reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    CONST           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    FUNMATH         reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    $end            reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RKEY            reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RPAREN          reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    RBRACKET        reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
    COMMA           reduce using rule 296 (conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN .)
=======
    (49) funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .

    ELSE            reduce using rule 49 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    POINTCOMMA      reduce using rule 49 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 49 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 49 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
>>>>>>> master


state 548

<<<<<<< HEAD
    (65) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .

    POINTCOMMA      reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    LPAREN          reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    NEGATION        reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    COMMENT         reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    MULTICOMMENT    reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    FUNCTION        reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    PRINT           reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    INCREMENT       reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    DECREMENT       reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    NORMSTRING1     reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    NORMSTRING2     reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    MULTISTRING     reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    ENUM            reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    IF              reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    WHILE           reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    FOR             reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    NUMBER          reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    FLOAT           reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    VARIABLE        reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    LET             reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    VAR             reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    STATIC          reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    CONST           reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    OBJECTNAME      reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    FUNMATH         reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    RKEY            reduce using rule 65 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)

=======
    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN . substatement
    (54) substatement -> . LKEY statement RKEY
    (55) substatement -> . LKEY RKEY

    LKEY            shift and go to state 434

    substatement                   shift and go to state 551
>>>>>>> master

state 549

<<<<<<< HEAD
    (220) string_object -> NEW OBJECTSTRING LPAREN string . RPAREN

    RPAREN          shift and go to state 521
=======
    (52) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .

    POINTCOMMA      reduce using rule 52 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    $end            reduce using rule 52 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    RKEY            reduce using rule 52 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
>>>>>>> master


state 550

<<<<<<< HEAD
    (132) attributes -> attributes COMMA attribute .

    RKEY            reduce using rule 132 (attributes -> attributes COMMA attribute .)
    COMMA           reduce using rule 132 (attributes -> attributes COMMA attribute .)
=======
    (68) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 552
>>>>>>> master


state 551

<<<<<<< HEAD
    (134) attribute -> variable TWOPOINTS general_value .

    RKEY            reduce using rule 134 (attribute -> variable TWOPOINTS general_value .)
    COMMA           reduce using rule 134 (attribute -> variable TWOPOINTS general_value .)
=======
    (51) funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .

    POINTCOMMA      reduce using rule 51 (funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    $end            reduce using rule 51 (funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    RKEY            reduce using rule 51 (funcionfor -> FOR LPAREN prefix VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
>>>>>>> master


state 552

<<<<<<< HEAD
    (135) attribute -> variable TWOPOINTS list_types .

    RKEY            reduce using rule 135 (attribute -> variable TWOPOINTS list_types .)
    COMMA           reduce using rule 135 (attribute -> variable TWOPOINTS list_types .)


state 485

    (129) tuples_values -> tuples_values COMMA general_value .

    RBRACKET        reduce using rule 129 (tuples_values -> tuples_values COMMA general_value .)
    COMMA           reduce using rule 129 (tuples_values -> tuples_values COMMA general_value .)


state 486

    (150) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 150 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 150 (numbers -> numbers COMMA number_value .)


state 487

    (153) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 153 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 153 (booleans -> booleans COMMA boolean_value .)


state 488

    (156) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 156 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 156 (strings -> strings COMMA string_value .)


state 489

    (75) tuples_2_values -> LBRACKET general_value . COMMA general_value RBRACKET

    COMMA           shift and go to state 522


state 490

    (76) tuples_3_values -> LBRACKET general_value . COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 523


state 491

    (77) tuples_4_values -> LBRACKET general_value . COMMA general_value COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 524


state 492

    (85) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    LPAREN          reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    NEGATION        reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    COMMENT         reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    MULTICOMMENT    reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    FUNCTION        reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    PRINT           reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    INCREMENT       reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    DECREMENT       reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    NORMSTRING1     reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    NORMSTRING2     reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    MULTISTRING     reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    ENUM            reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    IF              reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    WHILE           reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    FOR             reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    NUMBER          reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    FLOAT           reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    VARIABLE        reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    LET             reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    VAR             reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    STATIC          reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    CONST           reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    OBJECTNAME      reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    FUNMATH         reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    RKEY            reduce using rule 85 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 493

    (89) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    LPAREN          reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    NEGATION        reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    COMMENT         reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    MULTICOMMENT    reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    FUNCTION        reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    PRINT           reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    INCREMENT       reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    DECREMENT       reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    NORMSTRING1     reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    NORMSTRING2     reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    MULTISTRING     reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    ENUM            reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    IF              reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    WHILE           reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    FOR             reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    NUMBER          reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    FLOAT           reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    VARIABLE        reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    LET             reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    VAR             reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    STATIC          reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    CONST           reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    OBJECTNAME      reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    FUNMATH         reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    RKEY            reduce using rule 89 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 494

    (93) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    LPAREN          reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    NEGATION        reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    COMMENT         reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    MULTICOMMENT    reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    FUNCTION        reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    PRINT           reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    INCREMENT       reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    DECREMENT       reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    NORMSTRING1     reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    NORMSTRING2     reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    MULTISTRING     reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    ENUM            reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    IF              reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    WHILE           reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    FOR             reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    NUMBER          reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    FLOAT           reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    VARIABLE        reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    LET             reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    VAR             reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    STATIC          reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    CONST           reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    OBJECTNAME      reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    FUNMATH         reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    RKEY            reduce using rule 93 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 495

    (72) tuples_2_variables -> LBRACKET types COMMA types . RBRACKET
    (73) tuples_3_variables -> LBRACKET types COMMA types . COMMA types RBRACKET
    (74) tuples_4_variables -> LBRACKET types COMMA types . COMMA types COMMA types RBRACKET

    RBRACKET        shift and go to state 526
    COMMA           shift and go to state 525


state 496

    (50) funcParametres -> VARIABLE COMMA funcParametres .

    RPAREN          reduce using rule 50 (funcParametres -> VARIABLE COMMA funcParametres .)


state 497

    (63) substatement -> LKEY statement . RKEY

    RKEY            shift and go to state 527


state 498

    (64) substatement -> LKEY RKEY .

    POINTCOMMA      reduce using rule 64 (substatement -> LKEY RKEY .)
    LPAREN          reduce using rule 64 (substatement -> LKEY RKEY .)
    NEGATION        reduce using rule 64 (substatement -> LKEY RKEY .)
    COMMENT         reduce using rule 64 (substatement -> LKEY RKEY .)
    MULTICOMMENT    reduce using rule 64 (substatement -> LKEY RKEY .)
    FUNCTION        reduce using rule 64 (substatement -> LKEY RKEY .)
    PRINT           reduce using rule 64 (substatement -> LKEY RKEY .)
    INCREMENT       reduce using rule 64 (substatement -> LKEY RKEY .)
    DECREMENT       reduce using rule 64 (substatement -> LKEY RKEY .)
    NORMSTRING1     reduce using rule 64 (substatement -> LKEY RKEY .)
    NORMSTRING2     reduce using rule 64 (substatement -> LKEY RKEY .)
    MULTISTRING     reduce using rule 64 (substatement -> LKEY RKEY .)
    ENUM            reduce using rule 64 (substatement -> LKEY RKEY .)
    IF              reduce using rule 64 (substatement -> LKEY RKEY .)
    WHILE           reduce using rule 64 (substatement -> LKEY RKEY .)
    FOR             reduce using rule 64 (substatement -> LKEY RKEY .)
    NUMBER          reduce using rule 64 (substatement -> LKEY RKEY .)
    FLOAT           reduce using rule 64 (substatement -> LKEY RKEY .)
    VARIABLE        reduce using rule 64 (substatement -> LKEY RKEY .)
    LET             reduce using rule 64 (substatement -> LKEY RKEY .)
    VAR             reduce using rule 64 (substatement -> LKEY RKEY .)
    STATIC          reduce using rule 64 (substatement -> LKEY RKEY .)
    CONST           reduce using rule 64 (substatement -> LKEY RKEY .)
    OBJECTNAME      reduce using rule 64 (substatement -> LKEY RKEY .)
    FUNMATH         reduce using rule 64 (substatement -> LKEY RKEY .)
    $end            reduce using rule 64 (substatement -> LKEY RKEY .)
    RKEY            reduce using rule 64 (substatement -> LKEY RKEY .)
    ELIF            reduce using rule 64 (substatement -> LKEY RKEY .)
    ELSE            reduce using rule 64 (substatement -> LKEY RKEY .)


state 499

    (48) funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .

    POINTCOMMA      reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    LPAREN          reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    NEGATION        reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    COMMENT         reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    MULTICOMMENT    reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    FUNCTION        reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    PRINT           reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    INCREMENT       reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    DECREMENT       reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    NORMSTRING1     reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    NORMSTRING2     reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    MULTISTRING     reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    ENUM            reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    IF              reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    WHILE           reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    FOR             reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    NUMBER          reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    FLOAT           reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    VARIABLE        reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    LET             reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    VAR             reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    STATIC          reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    CONST           reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    OBJECTNAME      reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    FUNMATH         reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    $end            reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)
    RKEY            reduce using rule 48 (funtionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement .)


state 500

    (40) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 40 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 40 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 501

    (42) enums_numeric_value -> object_name . EQUAL number
    (43) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 528
    COMMA           reduce using rule 43 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 43 (enums_numeric_value -> object_name .)


state 502

    (44) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 44 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 44 (enums_string -> enums_string COMMA enums_string_value .)


state 503

    (46) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 529


state 504

    (42) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 42 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 42 (enums_numeric_value -> object_name EQUAL number .)


state 505

    (46) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 46 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 46 (enums_string_value -> object_name EQUAL string .)


state 506

    (52) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .
    (53) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif . funcionelse
    (57) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    LPAREN          reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    NEGATION        reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    COMMENT         reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    MULTICOMMENT    reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    FUNCTION        reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    PRINT           reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    INCREMENT       reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    DECREMENT       reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    NORMSTRING1     reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    NORMSTRING2     reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    MULTISTRING     reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    ENUM            reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    IF              reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    WHILE           reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    FOR             reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    NUMBER          reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    FLOAT           reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    VARIABLE        reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    LET             reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    VAR             reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    STATIC          reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    CONST           reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    OBJECTNAME      reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    FUNMATH         reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 52 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    ELSE            shift and go to state 509

    funcionelse                    shift and go to state 530

state 507

    (54) funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .

    POINTCOMMA      reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    LPAREN          reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    NEGATION        reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    COMMENT         reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    MULTICOMMENT    reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    FUNCTION        reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    PRINT           reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    INCREMENT       reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    DECREMENT       reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    NORMSTRING1     reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    NORMSTRING2     reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    MULTISTRING     reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    ENUM            reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    IF              reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    WHILE           reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    FOR             reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    NUMBER          reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    FLOAT           reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    VARIABLE        reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    LET             reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    VAR             reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    STATIC          reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    CONST           reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    OBJECTNAME      reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    FUNMATH         reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    $end            reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    RKEY            reduce using rule 54 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)


state 508

    (55) funcionelif -> ELIF . LPAREN formLog RPAREN substatement
    (56) funcionelif -> ELIF . LPAREN formLog RPAREN substatement funcionelif

    LPAREN          shift and go to state 531


state 509

    (57) funcionelse -> ELSE . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 532

state 510

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 533


state 511

    (60) funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE . RPAREN substatement

    RPAREN          shift and go to state 534


state 512

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA term RPAREN substatement
    (216) formLog -> . expCond
    (217) formLog -> . expOpLog
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    formLog                        shift and go to state 535
    term                           shift and go to state 18
    expCond                        shift and go to state 309
    expOpLog                       shift and go to state 310
    expression                     shift and go to state 311
    factor_exprlog                 shift and go to state 220
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 513

    (61) funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 536

state 514

    (259) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 259 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)


state 515

    (260) mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .

    PLUS            reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    MINUS           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    GREATER         reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LESS            reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    AND             reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    OR              reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LPAREN          reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NEGATION        reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    COMMENT         reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    MULTICOMMENT    reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    FUNCTION        reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    PRINT           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    INCREMENT       reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    DECREMENT       reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NORMSTRING1     reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NORMSTRING2     reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    MULTISTRING     reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    ENUM            reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    IF              reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    WHILE           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    FOR             reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    NUMBER          reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    FLOAT           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    VARIABLE        reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    LET             reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    VAR             reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    STATIC          reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    CONST           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    OBJECTNAME      reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    FUNMATH         reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    $end            reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RKEY            reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    COMMA           reduce using rule 260 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)


state 516

    (261) mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value . RPAREN

    RPAREN          shift and go to state 537


state 517

    (262) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .

    PLUS            reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    MINUS           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    PRODUCT         reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    DIVIDE          reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    EQUALTO         reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    GREATER         reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LESS            reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LPAREN          reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NEGATION        reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    COMMENT         reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    FUNCTION        reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    PRINT           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    INCREMENT       reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    DECREMENT       reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    ENUM            reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    IF              reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    WHILE           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    FOR             reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    NUMBER          reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    FLOAT           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    VARIABLE        reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    LET             reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    VAR             reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    STATIC          reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    CONST           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    FUNMATH         reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RBRACKET        reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    COMMA           reduce using rule 262 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)


state 518

    (263) mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .

    PLUS            reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    MINUS           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    PRODUCT         reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    DIVIDE          reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    EQUALTO         reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NOTEQUALTO      reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    GREATER         reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LESS            reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    GREATEREQUAL    reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LESSEQUAL       reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    AND             reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    OR              reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    POINTCOMMA      reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LPAREN          reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NEGATION        reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    COMMENT         reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    MULTICOMMENT    reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    FUNCTION        reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    PRINT           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    INCREMENT       reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    DECREMENT       reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NORMSTRING1     reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NORMSTRING2     reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    MULTISTRING     reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    ENUM            reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    IF              reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    WHILE           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    FOR             reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    NUMBER          reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    FLOAT           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    VARIABLE        reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    LET             reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    VAR             reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    STATIC          reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    CONST           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    OBJECTNAME      reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    FUNMATH         reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    $end            reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RKEY            reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RPAREN          reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RBRACKET        reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    COMMA           reduce using rule 263 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)


state 519

    (264) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . VARIABLE RPAREN
    (266) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . number_value RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 538
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 539
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 520

    (265) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . number_value RPAREN
    (267) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . VARIABLE RPAREN
    (158) number_value -> . expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    VARIABLE        shift and go to state 541
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    number_value                   shift and go to state 540
    expression                     shift and go to state 392
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 521

    (220) string_object -> NEW OBJECTSTRING LPAREN string RPAREN .

    POINTCOMMA      reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    LPAREN          reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    NEGATION        reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    COMMENT         reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    MULTICOMMENT    reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    FUNCTION        reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    PRINT           reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    INCREMENT       reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    DECREMENT       reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    NORMSTRING1     reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    NORMSTRING2     reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    MULTISTRING     reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    ENUM            reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    IF              reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    WHILE           reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    FOR             reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    NUMBER          reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    FLOAT           reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    VARIABLE        reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    LET             reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    VAR             reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    STATIC          reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    CONST           reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    OBJECTNAME      reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    FUNMATH         reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    $end            reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    RKEY            reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    RBRACKET        reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)
    COMMA           reduce using rule 220 (string_object -> NEW OBJECTSTRING LPAREN string RPAREN .)


state 522

    (75) tuples_2_values -> LBRACKET general_value COMMA . general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 542
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 523

    (76) tuples_3_values -> LBRACKET general_value COMMA . general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 543
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 524

    (77) tuples_4_values -> LBRACKET general_value COMMA . general_value COMMA general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 544
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 525

    (73) tuples_3_variables -> LBRACKET types COMMA types COMMA . types RBRACKET
    (74) tuples_4_variables -> LBRACKET types COMMA types COMMA . types COMMA types RBRACKET
    (231) types -> . VARNUMBER
    (232) types -> . VARSTRING
    (233) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 370
    VARSTRING       shift and go to state 371
    VARBOOLEAN      shift and go to state 372

    types                          shift and go to state 545

state 526

    (72) tuples_2_variables -> LBRACKET types COMMA types RBRACKET .

    EQUAL           reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    LPAREN          reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    NEGATION        reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    COMMENT         reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    MULTICOMMENT    reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    FUNCTION        reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    PRINT           reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    INCREMENT       reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    DECREMENT       reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    NORMSTRING1     reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    NORMSTRING2     reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    MULTISTRING     reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    ENUM            reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    IF              reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    WHILE           reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    FOR             reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    NUMBER          reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    FLOAT           reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    VARIABLE        reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    LET             reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    VAR             reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    STATIC          reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    CONST           reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    OBJECTNAME      reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    FUNMATH         reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    $end            reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)
    RKEY            reduce using rule 72 (tuples_2_variables -> LBRACKET types COMMA types RBRACKET .)


state 527

    (63) substatement -> LKEY statement RKEY .

    POINTCOMMA      reduce using rule 63 (substatement -> LKEY statement RKEY .)
    LPAREN          reduce using rule 63 (substatement -> LKEY statement RKEY .)
    NEGATION        reduce using rule 63 (substatement -> LKEY statement RKEY .)
    COMMENT         reduce using rule 63 (substatement -> LKEY statement RKEY .)
    MULTICOMMENT    reduce using rule 63 (substatement -> LKEY statement RKEY .)
    FUNCTION        reduce using rule 63 (substatement -> LKEY statement RKEY .)
    PRINT           reduce using rule 63 (substatement -> LKEY statement RKEY .)
    INCREMENT       reduce using rule 63 (substatement -> LKEY statement RKEY .)
    DECREMENT       reduce using rule 63 (substatement -> LKEY statement RKEY .)
    NORMSTRING1     reduce using rule 63 (substatement -> LKEY statement RKEY .)
    NORMSTRING2     reduce using rule 63 (substatement -> LKEY statement RKEY .)
    MULTISTRING     reduce using rule 63 (substatement -> LKEY statement RKEY .)
    ENUM            reduce using rule 63 (substatement -> LKEY statement RKEY .)
    IF              reduce using rule 63 (substatement -> LKEY statement RKEY .)
    WHILE           reduce using rule 63 (substatement -> LKEY statement RKEY .)
    FOR             reduce using rule 63 (substatement -> LKEY statement RKEY .)
    NUMBER          reduce using rule 63 (substatement -> LKEY statement RKEY .)
    FLOAT           reduce using rule 63 (substatement -> LKEY statement RKEY .)
    VARIABLE        reduce using rule 63 (substatement -> LKEY statement RKEY .)
    LET             reduce using rule 63 (substatement -> LKEY statement RKEY .)
    VAR             reduce using rule 63 (substatement -> LKEY statement RKEY .)
    STATIC          reduce using rule 63 (substatement -> LKEY statement RKEY .)
    CONST           reduce using rule 63 (substatement -> LKEY statement RKEY .)
    OBJECTNAME      reduce using rule 63 (substatement -> LKEY statement RKEY .)
    FUNMATH         reduce using rule 63 (substatement -> LKEY statement RKEY .)
    $end            reduce using rule 63 (substatement -> LKEY statement RKEY .)
    RKEY            reduce using rule 63 (substatement -> LKEY statement RKEY .)
    ELIF            reduce using rule 63 (substatement -> LKEY statement RKEY .)
    ELSE            reduce using rule 63 (substatement -> LKEY statement RKEY .)


state 528

    (42) enums_numeric_value -> object_name EQUAL . number
    (234) number -> . NUMBER
    (235) number -> . FLOAT

    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78

    number                         shift and go to state 504

state 529

    (46) enums_string_value -> object_name EQUAL . string
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53

    string                         shift and go to state 505

state 530

    (53) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .

    POINTCOMMA      reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    LPAREN          reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    NEGATION        reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    COMMENT         reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    MULTICOMMENT    reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    FUNCTION        reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    PRINT           reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    INCREMENT       reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    DECREMENT       reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    NORMSTRING1     reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    NORMSTRING2     reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    MULTISTRING     reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    ENUM            reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    IF              reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    WHILE           reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    FOR             reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    NUMBER          reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    FLOAT           reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    VARIABLE        reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    LET             reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    VAR             reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    STATIC          reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    CONST           reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    OBJECTNAME      reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    FUNMATH         reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    $end            reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    RKEY            reduce using rule 53 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)


state 531

    (55) funcionelif -> ELIF LPAREN . formLog RPAREN substatement
    (56) funcionelif -> ELIF LPAREN . formLog RPAREN substatement funcionelif
    (216) formLog -> . expCond
    (217) formLog -> . expOpLog
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    formLog                        shift and go to state 546
    expCond                        shift and go to state 309
    expOpLog                       shift and go to state 310
    expression                     shift and go to state 311
    factor_exprlog                 shift and go to state 220
    term                           shift and go to state 18
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 532

    (57) funcionelse -> ELSE substatement .

    POINTCOMMA      reduce using rule 57 (funcionelse -> ELSE substatement .)
    LPAREN          reduce using rule 57 (funcionelse -> ELSE substatement .)
    NEGATION        reduce using rule 57 (funcionelse -> ELSE substatement .)
    COMMENT         reduce using rule 57 (funcionelse -> ELSE substatement .)
    MULTICOMMENT    reduce using rule 57 (funcionelse -> ELSE substatement .)
    FUNCTION        reduce using rule 57 (funcionelse -> ELSE substatement .)
    PRINT           reduce using rule 57 (funcionelse -> ELSE substatement .)
    INCREMENT       reduce using rule 57 (funcionelse -> ELSE substatement .)
    DECREMENT       reduce using rule 57 (funcionelse -> ELSE substatement .)
    NORMSTRING1     reduce using rule 57 (funcionelse -> ELSE substatement .)
    NORMSTRING2     reduce using rule 57 (funcionelse -> ELSE substatement .)
    MULTISTRING     reduce using rule 57 (funcionelse -> ELSE substatement .)
    ENUM            reduce using rule 57 (funcionelse -> ELSE substatement .)
    IF              reduce using rule 57 (funcionelse -> ELSE substatement .)
    WHILE           reduce using rule 57 (funcionelse -> ELSE substatement .)
    FOR             reduce using rule 57 (funcionelse -> ELSE substatement .)
    NUMBER          reduce using rule 57 (funcionelse -> ELSE substatement .)
    FLOAT           reduce using rule 57 (funcionelse -> ELSE substatement .)
    VARIABLE        reduce using rule 57 (funcionelse -> ELSE substatement .)
    LET             reduce using rule 57 (funcionelse -> ELSE substatement .)
    VAR             reduce using rule 57 (funcionelse -> ELSE substatement .)
    STATIC          reduce using rule 57 (funcionelse -> ELSE substatement .)
    CONST           reduce using rule 57 (funcionelse -> ELSE substatement .)
    OBJECTNAME      reduce using rule 57 (funcionelse -> ELSE substatement .)
    FUNMATH         reduce using rule 57 (funcionelse -> ELSE substatement .)
    $end            reduce using rule 57 (funcionelse -> ELSE substatement .)
    RKEY            reduce using rule 57 (funcionelse -> ELSE substatement .)


state 533

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA term RPAREN substatement
    (216) formLog -> . expCond
    (217) formLog -> . expOpLog
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    LPAREN          shift and go to state 33
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    formLog                        shift and go to state 547
    term                           shift and go to state 18
    expCond                        shift and go to state 309
    expOpLog                       shift and go to state 310
    expression                     shift and go to state 311
    factor_exprlog                 shift and go to state 220
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 534

    (60) funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 548

state 535

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 549


state 536

    (61) funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .

    POINTCOMMA      reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    LPAREN          reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    NEGATION        reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    COMMENT         reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    MULTICOMMENT    reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    FUNCTION        reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    PRINT           reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    INCREMENT       reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    DECREMENT       reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    NORMSTRING1     reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    NORMSTRING2     reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    MULTISTRING     reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    ENUM            reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    IF              reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    WHILE           reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    FOR             reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    NUMBER          reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    FLOAT           reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    VARIABLE        reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    LET             reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    VAR             reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    STATIC          reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    CONST           reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    OBJECTNAME      reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    FUNMATH         reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    $end            reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)
    RKEY            reduce using rule 61 (funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement .)


state 537

    (261) mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .

    PLUS            reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    MINUS           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    PRODUCT         reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    DIVIDE          reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    EQUALTO         reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NOTEQUALTO      reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    GREATER         reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LESS            reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    GREATEREQUAL    reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LESSEQUAL       reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    AND             reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    OR              reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    POINTCOMMA      reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LPAREN          reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NEGATION        reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    COMMENT         reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    MULTICOMMENT    reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    FUNCTION        reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    PRINT           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    INCREMENT       reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    DECREMENT       reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NORMSTRING1     reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NORMSTRING2     reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    MULTISTRING     reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    ENUM            reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    IF              reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    WHILE           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    FOR             reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    NUMBER          reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    FLOAT           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    VARIABLE        reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    LET             reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    VAR             reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    STATIC          reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    CONST           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    OBJECTNAME      reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    FUNMATH         reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    $end            reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RKEY            reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RPAREN          reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    RBRACKET        reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)
    COMMA           reduce using rule 261 (mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN .)


state 538

    (264) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 550
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]


state 539

    (266) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value . RPAREN

    RPAREN          shift and go to state 551


state 540

    (265) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value . RPAREN

    RPAREN          shift and go to state 552


state 541

    (267) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE . RPAREN
    (241) variable -> VARIABLE .
    (271) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> VARIABLE . POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> VARIABLE . POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> VARIABLE . POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> VARIABLE . POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (284) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> VARIABLE . POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> VARIABLE . POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> VARIABLE . POINT FUNCTIONHAS LPAREN string RPAREN

  ! shift/reduce conflict for RPAREN resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
    RPAREN          shift and go to state 553
    LBRACKET        reduce using rule 241 (variable -> VARIABLE .)
    PLUS            reduce using rule 241 (variable -> VARIABLE .)
    MINUS           reduce using rule 241 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 241 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 241 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 241 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 241 (variable -> VARIABLE .)
    POINT           shift and go to state 147

  ! POINT           [ reduce using rule 241 (variable -> VARIABLE .) ]
  ! RPAREN          [ reduce using rule 241 (variable -> VARIABLE .) ]


state 542

    (75) tuples_2_values -> LBRACKET general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 554


state 543

    (76) tuples_3_values -> LBRACKET general_value COMMA general_value . COMMA general_value RBRACKET

    COMMA           shift and go to state 555


state 544

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value . COMMA general_value COMMA general_value RBRACKET

    COMMA           shift and go to state 556


state 545

    (73) tuples_3_variables -> LBRACKET types COMMA types COMMA types . RBRACKET
    (74) tuples_4_variables -> LBRACKET types COMMA types COMMA types . COMMA types RBRACKET

    RBRACKET        shift and go to state 558
    COMMA           shift and go to state 557


state 546

    (55) funcionelif -> ELIF LPAREN formLog . RPAREN substatement
    (56) funcionelif -> ELIF LPAREN formLog . RPAREN substatement funcionelif

    RPAREN          shift and go to state 559


state 547

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA term RPAREN substatement

    POINTCOMMA      shift and go to state 560


state 548

    (60) funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .

    POINTCOMMA      reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    LPAREN          reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    NEGATION        reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    COMMENT         reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    MULTICOMMENT    reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    FUNCTION        reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    PRINT           reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    INCREMENT       reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    DECREMENT       reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    NORMSTRING1     reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    NORMSTRING2     reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    MULTISTRING     reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    ENUM            reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    IF              reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    WHILE           reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    FOR             reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    NUMBER          reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    FLOAT           reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    VARIABLE        reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    LET             reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    VAR             reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    STATIC          reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    CONST           reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    OBJECTNAME      reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    FUNMATH         reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    $end            reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)
    RKEY            reduce using rule 60 (funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement .)


state 549

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . term RPAREN substatement
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    term                           shift and go to state 561
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 550

    (264) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .

    PLUS            reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PRODUCT         reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    EQUALTO         reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    GREATER         reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LESS            reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    AND             reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OR              reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LPAREN          reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NEGATION        reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COMMENT         reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    FUNCTION        reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    PRINT           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    INCREMENT       reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    DECREMENT       reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    ENUM            reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    IF              reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    WHILE           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    FOR             reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    NUMBER          reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    FLOAT           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    VARIABLE        reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    LET             reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    VAR             reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    STATIC          reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    CONST           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    FUNMATH         reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RBRACKET        reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    COMMA           reduce using rule 264 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 551

    (266) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .

    PLUS            reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    MINUS           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    PRODUCT         reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    DIVIDE          reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    EQUALTO         reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NOTEQUALTO      reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    GREATER         reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LESS            reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    GREATEREQUAL    reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LESSEQUAL       reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    AND             reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    OR              reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    POINTCOMMA      reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LPAREN          reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NEGATION        reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    COMMENT         reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    MULTICOMMENT    reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    FUNCTION        reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    PRINT           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    INCREMENT       reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    DECREMENT       reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NORMSTRING1     reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NORMSTRING2     reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    MULTISTRING     reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    ENUM            reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    IF              reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    WHILE           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    FOR             reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    NUMBER          reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    FLOAT           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    VARIABLE        reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    LET             reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    VAR             reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    STATIC          reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    CONST           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    OBJECTNAME      reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    FUNMATH         reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    $end            reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RKEY            reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RPAREN          reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RBRACKET        reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    COMMA           reduce using rule 266 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)


state 552

    (265) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .

    PLUS            reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    MINUS           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    PRODUCT         reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    DIVIDE          reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    EQUALTO         reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NOTEQUALTO      reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    GREATER         reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LESS            reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    GREATEREQUAL    reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LESSEQUAL       reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    AND             reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    OR              reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    POINTCOMMA      reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LPAREN          reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NEGATION        reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    COMMENT         reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    MULTICOMMENT    reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    FUNCTION        reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    PRINT           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    INCREMENT       reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    DECREMENT       reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NORMSTRING1     reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NORMSTRING2     reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    MULTISTRING     reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    ENUM            reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    IF              reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    WHILE           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    FOR             reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    NUMBER          reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    FLOAT           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    VARIABLE        reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    LET             reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    VAR             reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    STATIC          reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    CONST           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    OBJECTNAME      reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    FUNMATH         reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    $end            reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RKEY            reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RPAREN          reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RBRACKET        reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    COMMA           reduce using rule 265 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)


state 553

    (267) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .

    PLUS            reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    MINUS           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    PRODUCT         reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    DIVIDE          reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    EQUALTO         reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NOTEQUALTO      reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    GREATER         reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LESS            reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    GREATEREQUAL    reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LESSEQUAL       reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    AND             reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    OR              reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    POINTCOMMA      reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LPAREN          reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NEGATION        reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    COMMENT         reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    MULTICOMMENT    reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    FUNCTION        reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    PRINT           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    INCREMENT       reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    DECREMENT       reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NORMSTRING1     reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NORMSTRING2     reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    MULTISTRING     reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    ENUM            reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    IF              reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    WHILE           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    FOR             reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    NUMBER          reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    FLOAT           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    VARIABLE        reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    LET             reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    VAR             reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    STATIC          reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    CONST           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    OBJECTNAME      reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    FUNMATH         reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    $end            reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RBRACKET        reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    COMMA           reduce using rule 267 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)


state 554

    (75) tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    LPAREN          reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    NEGATION        reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    COMMENT         reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    MULTICOMMENT    reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    FUNCTION        reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    PRINT           reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    INCREMENT       reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    DECREMENT       reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    NORMSTRING1     reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    NORMSTRING2     reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    MULTISTRING     reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    ENUM            reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    IF              reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    WHILE           reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    FOR             reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    NUMBER          reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    FLOAT           reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    VARIABLE        reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    LET             reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    VAR             reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    STATIC          reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    CONST           reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    OBJECTNAME      reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    FUNMATH         reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 75 (tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET .)


state 555

    (76) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA . general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 562
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 556

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA . general_value COMMA general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 563
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 557

    (74) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA . types RBRACKET
    (231) types -> . VARNUMBER
    (232) types -> . VARSTRING
    (233) types -> . VARBOOLEAN

    VARNUMBER       shift and go to state 370
    VARSTRING       shift and go to state 371
    VARBOOLEAN      shift and go to state 372

    types                          shift and go to state 564

state 558

    (73) tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .

    EQUAL           reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    LPAREN          reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    NEGATION        reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    COMMENT         reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    MULTICOMMENT    reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    FUNCTION        reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    PRINT           reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    INCREMENT       reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    DECREMENT       reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    NORMSTRING1     reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    NORMSTRING2     reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    MULTISTRING     reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    ENUM            reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    IF              reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    WHILE           reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    FOR             reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    NUMBER          reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    FLOAT           reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    VARIABLE        reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    LET             reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    VAR             reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    STATIC          reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    CONST           reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    OBJECTNAME      reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    FUNMATH         reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    $end            reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)
    RKEY            reduce using rule 73 (tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET .)


state 559

    (55) funcionelif -> ELIF LPAREN formLog RPAREN . substatement
    (56) funcionelif -> ELIF LPAREN formLog RPAREN . substatement funcionelif
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 565

state 560

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . term RPAREN substatement
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    LPAREN          shift and go to state 189
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    term                           shift and go to state 566
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 561

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term . RPAREN substatement

    RPAREN          shift and go to state 567


state 562

    (76) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 568


state 563

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value . COMMA general_value RBRACKET

    COMMA           shift and go to state 569


state 564

    (74) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types . RBRACKET

    RBRACKET        shift and go to state 570


state 565

    (55) funcionelif -> ELIF LPAREN formLog RPAREN substatement .
    (56) funcionelif -> ELIF LPAREN formLog RPAREN substatement . funcionelif
    (55) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (56) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif

    ELSE            reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    POINTCOMMA      reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    LPAREN          reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    NEGATION        reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    COMMENT         reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    MULTICOMMENT    reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    FUNCTION        reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    PRINT           reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    INCREMENT       reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    DECREMENT       reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    NORMSTRING1     reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    NORMSTRING2     reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    MULTISTRING     reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    ENUM            reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    IF              reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    WHILE           reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    FOR             reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    NUMBER          reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    FLOAT           reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    VARIABLE        reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    LET             reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    VAR             reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    STATIC          reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    CONST           reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    OBJECTNAME      reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    FUNMATH         reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 55 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 508

    funcionelif                    shift and go to state 571

state 566

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term . RPAREN substatement

    RPAREN          shift and go to state 572


state 567

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 573

state 568

    (76) tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    LPAREN          reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    NEGATION        reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    COMMENT         reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    MULTICOMMENT    reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    FUNCTION        reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    PRINT           reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    INCREMENT       reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    DECREMENT       reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    NORMSTRING1     reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    NORMSTRING2     reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    MULTISTRING     reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    ENUM            reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    IF              reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    WHILE           reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    FOR             reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    NUMBER          reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    FLOAT           reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    VARIABLE        reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    LET             reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    VAR             reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    STATIC          reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    CONST           reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    OBJECTNAME      reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    FUNMATH         reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 76 (tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET .)


state 569

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA . general_value RBRACKET
    (136) general_value -> . expression
    (137) general_value -> . boolean
    (138) general_value -> . string
    (139) general_value -> . concatenate
    (140) general_value -> . string_object
    (141) general_value -> . expCond
    (142) general_value -> . expOpLog
    (143) general_value -> . expNeg
    (144) general_value -> . expEq
    (145) general_value -> . expNotEq
    (175) expression -> . expression PLUS term
    (176) expression -> . expression MINUS term
    (177) expression -> . term
    (178) expression -> . expression PRODUCT expression
    (179) expression -> . expression DIVIDE expression
    (239) boolean -> . TRUE
    (240) boolean -> . FALSE
    (236) string -> . NORMSTRING1
    (237) string -> . NORMSTRING2
    (238) string -> . MULTISTRING
    (170) concatenate -> . string PLUS termS
    (220) string_object -> . NEW OBJECTSTRING LPAREN string RPAREN
    (199) expCond -> . expression operador expression
    (200) expCond -> . LPAREN expression operador expression RPAREN
    (195) expOpLog -> . expCond oplogico expCond
    (196) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (197) expOpLog -> . expression oplogico expression
    (184) expNeg -> . NEGATION expOpLog
    (185) expNeg -> . NEGATION factor_exprlog
    (186) expNeg -> . NEGATION boolean
    (187) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (188) expNeg -> . NEGATION VARIABLE
    (189) expEq -> . expCond EQUALTO expCond
    (190) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (191) expEq -> . expression EQUALTO expression
    (192) expNotEq -> . expCond NOTEQUALTO expCond
    (193) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (194) expNotEq -> . expression NOTEQUALTO expression
    (180) term -> . term1 INCREMENT
    (181) term -> . INCREMENT term1
    (182) term -> . term1 DECREMENT
    (183) term -> . DECREMENT term1
    (207) term -> . number
    (208) term -> . factor_expr
    (209) term -> . other_value
    (198) factor_exprlog -> . LPAREN expCond RPAREN
    (201) term1 -> . LPAREN group RPAREN
    (202) term1 -> . group
    (234) number -> . NUMBER
    (235) number -> . FLOAT
    (210) factor_expr -> . LPAREN expression RPAREN
    (211) other_value -> . variable
    (212) other_value -> . funciones
    (213) other_value -> . array_value
    (214) other_value -> . enum_value
    (215) other_value -> . object_value
    (203) group -> . number
    (204) group -> . variable
    (205) group -> . array_value
    (206) group -> . object_value
    (241) variable -> . VARIABLE
    (251) funciones -> . funcionmath
    (252) funciones -> . funcionString
    (253) funciones -> . funcionArray
    (254) funciones -> . funcionConjunto
    (223) array_value -> . variable LBRACKET expression RBRACKET
    (224) enum_value -> . object_name POINT object_name
    (218) object_value -> . object_value_form1
    (219) object_value -> . object_value_form2
    (255) funcionmath -> . mathAbs
    (256) funcionmath -> . mathRound
    (257) funcionmath -> . mathPow
    (268) funcionString -> . stringCharAt
    (269) funcionString -> . stringConcat
    (270) funcionString -> . stringSplit
    (277) funcionArray -> . arrayFilter
    (278) funcionArray -> . arrayConcat
    (279) funcionArray -> . arrayJoin
    (287) funcionConjunto -> . conjuntoAdd
    (288) funcionConjunto -> . conjuntoHas
    (242) object_name -> . OBJECTNAME
    (221) object_value_form1 -> . variable POINT variable
    (222) object_value_form2 -> . variable POINT array_value
    (258) mathAbs -> . declare_any EQUAL mathAbs
    (259) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (260) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (261) mathAbs -> . FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
    (262) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (263) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (264) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (265) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (266) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (267) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (271) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
    (272) stringCharAt -> . VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
    (273) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (274) stringConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
    (275) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
    (276) stringSplit -> . VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
    (286) arrayFilter -> . VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
    (280) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
    (281) arrayConcat -> . VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
    (282) arrayJoin -> . declare_any arrayJoin
    (283) arrayJoin -> . declare_any arrayJoin POINTCOMMA
    (284) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
    (285) arrayJoin -> . VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
    (289) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
    (290) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
    (291) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
    (292) conjuntoAdd -> . VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
    (293) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
    (294) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
    (295) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
    (296) conjuntoHas -> . VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN
    (113) declare_any -> . prefix VARIABLE
    (114) declare_any -> . prefix VARIABLE TWOPOINTS ANY
    (225) prefix -> . LET
    (226) prefix -> . VAR
    (227) prefix -> . STATIC
    (228) prefix -> . CONST

    TRUE            shift and go to state 143
    FALSE           shift and go to state 144
    NORMSTRING1     shift and go to state 51
    NORMSTRING2     shift and go to state 52
    MULTISTRING     shift and go to state 53
    NEW             shift and go to state 291
    LPAREN          shift and go to state 33
    NEGATION        shift and go to state 35
    INCREMENT       shift and go to state 46
    DECREMENT       shift and go to state 47
    NUMBER          shift and go to state 77
    FLOAT           shift and go to state 78
    VARIABLE        shift and go to state 36
    OBJECTNAME      shift and go to state 65
    FUNMATH         shift and go to state 101
    LET             shift and go to state 75
    VAR             shift and go to state 84
    STATIC          shift and go to state 85
    CONST           shift and go to state 86

    general_value                  shift and go to state 574
    expression                     shift and go to state 240
    boolean                        shift and go to state 241
    string                         shift and go to state 242
    concatenate                    shift and go to state 243
    string_object                  shift and go to state 244
    expCond                        shift and go to state 245
    expOpLog                       shift and go to state 246
    expNeg                         shift and go to state 247
    expEq                          shift and go to state 248
    expNotEq                       shift and go to state 249
    term                           shift and go to state 18
    factor_exprlog                 shift and go to state 34
    term1                          shift and go to state 45
    number                         shift and go to state 48
    factor_expr                    shift and go to state 49
    other_value                    shift and go to state 50
    group                          shift and go to state 76
    variable                       shift and go to state 145
    funciones                      shift and go to state 67
    array_value                    shift and go to state 146
    enum_value                     shift and go to state 59
    object_value                   shift and go to state 79
    funcionmath                    shift and go to state 56
    funcionString                  shift and go to state 87
    funcionArray                   shift and go to state 88
    funcionConjunto                shift and go to state 89
    object_name                    shift and go to state 80
    object_value_form1             shift and go to state 130
    object_value_form2             shift and go to state 131
    mathAbs                        shift and go to state 90
    mathRound                      shift and go to state 91
    mathPow                        shift and go to state 92
    stringCharAt                   shift and go to state 93
    stringConcat                   shift and go to state 94
    stringSplit                    shift and go to state 95
    arrayFilter                    shift and go to state 96
    arrayConcat                    shift and go to state 97
    arrayJoin                      shift and go to state 98
    conjuntoAdd                    shift and go to state 99
    conjuntoHas                    shift and go to state 100
    declare_any                    shift and go to state 132
    prefix                         shift and go to state 71

state 570

    (74) tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .

    EQUAL           reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    POINTCOMMA      reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    LPAREN          reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    NEGATION        reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    COMMENT         reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    MULTICOMMENT    reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    FUNCTION        reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    PRINT           reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    INCREMENT       reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    DECREMENT       reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    NORMSTRING1     reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    NORMSTRING2     reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    MULTISTRING     reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    ENUM            reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    IF              reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    WHILE           reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    FOR             reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    NUMBER          reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    FLOAT           reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    VARIABLE        reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    LET             reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    VAR             reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    STATIC          reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    CONST           reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    OBJECTNAME      reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    FUNMATH         reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    $end            reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)
    RKEY            reduce using rule 74 (tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET .)


state 571

    (56) funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .

    ELSE            reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    POINTCOMMA      reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    LPAREN          reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    NEGATION        reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    COMMENT         reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    MULTICOMMENT    reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    FUNCTION        reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    PRINT           reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    INCREMENT       reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    DECREMENT       reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    NORMSTRING1     reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    NORMSTRING2     reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    MULTISTRING     reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    ENUM            reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    IF              reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    WHILE           reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    FOR             reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    NUMBER          reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    FLOAT           reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    VARIABLE        reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    LET             reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    VAR             reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    STATIC          reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    CONST           reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    OBJECTNAME      reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    FUNMATH         reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 56 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)


state 572

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN . substatement
    (63) substatement -> . LKEY statement RKEY
    (64) substatement -> . LKEY RKEY

    LKEY            shift and go to state 443

    substatement                   shift and go to state 575

state 573

    (59) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .

    POINTCOMMA      reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    LPAREN          reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NEGATION        reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    COMMENT         reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    MULTICOMMENT    reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FUNCTION        reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    PRINT           reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    INCREMENT       reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    DECREMENT       reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NORMSTRING1     reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NORMSTRING2     reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    MULTISTRING     reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    ENUM            reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    IF              reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    WHILE           reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FOR             reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NUMBER          reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FLOAT           reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    VARIABLE        reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    LET             reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    VAR             reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    STATIC          reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    CONST           reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    OBJECTNAME      reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FUNMATH         reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    $end            reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    RKEY            reduce using rule 59 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)


state 574

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value . RBRACKET

    RBRACKET        shift and go to state 576


state 575

    (58) funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .

    POINTCOMMA      reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    LPAREN          reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NEGATION        reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    COMMENT         reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    MULTICOMMENT    reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FUNCTION        reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    PRINT           reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    INCREMENT       reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    DECREMENT       reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NORMSTRING1     reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NORMSTRING2     reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    MULTISTRING     reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    ENUM            reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    IF              reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    WHILE           reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FOR             reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    NUMBER          reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FLOAT           reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    VARIABLE        reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    LET             reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    VAR             reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    STATIC          reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    CONST           reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    OBJECTNAME      reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    FUNMATH         reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    $end            reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)
    RKEY            reduce using rule 58 (funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement .)


state 576

    (77) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    LPAREN          reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    NEGATION        reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    COMMENT         reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    MULTICOMMENT    reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    FUNCTION        reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    PRINT           reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    INCREMENT       reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    DECREMENT       reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    NORMSTRING1     reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    NORMSTRING2     reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    MULTISTRING     reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    ENUM            reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    IF              reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    WHILE           reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    FOR             reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    NUMBER          reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    FLOAT           reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    VARIABLE        reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    LET             reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    VAR             reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    STATIC          reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    CONST           reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    OBJECTNAME      reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    FUNMATH         reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 77 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
=======
    (68) tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .

    POINTCOMMA      reduce using rule 68 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    $end            reduce using rule 68 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
    RKEY            reduce using rule 68 (tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET .)
>>>>>>> master

WARNING: 
WARNING: Conflicts:
WARNING: 
<<<<<<< HEAD
WARNING: shift/reduce conflict for POINT in state 36 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 37 resolved as shift
WARNING: shift/reduce conflict for LET in state 37 resolved as shift
WARNING: shift/reduce conflict for VAR in state 37 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 37 resolved as shift
WARNING: shift/reduce conflict for CONST in state 37 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 110 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 110 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 110 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 110 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 110 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 110 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 110 resolved as shift
WARNING: shift/reduce conflict for FUNMATH in state 110 resolved as shift
WARNING: shift/reduce conflict for LET in state 110 resolved as shift
WARNING: shift/reduce conflict for VAR in state 110 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 110 resolved as shift
WARNING: shift/reduce conflict for CONST in state 110 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 111 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 111 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 111 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 111 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 111 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 111 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 111 resolved as shift
WARNING: shift/reduce conflict for FUNMATH in state 111 resolved as shift
WARNING: shift/reduce conflict for LET in state 111 resolved as shift
WARNING: shift/reduce conflict for VAR in state 111 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 111 resolved as shift
WARNING: shift/reduce conflict for CONST in state 111 resolved as shift
WARNING: shift/reduce conflict for POINT in state 140 resolved as shift
WARNING: shift/reduce conflict for POINTCOMMA in state 151 resolved as shift
WARNING: shift/reduce conflict for TWOPOINTS in state 179 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 191 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 191 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 191 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 191 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 192 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 192 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 192 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 192 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 204 resolved as shift
WARNING: shift/reduce conflict for POINT in state 298 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 329 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 400 resolved as shift
WARNING: shift/reduce conflict for POINT in state 400 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 410 resolved as shift
WARNING: shift/reduce conflict for POINT in state 410 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 414 resolved as shift
WARNING: shift/reduce conflict for POINT in state 414 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 455 resolved as shift
WARNING: shift/reduce conflict for POINT in state 455 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 458 resolved as shift
WARNING: shift/reduce conflict for POINT in state 458 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 460 resolved as shift
WARNING: shift/reduce conflict for POINT in state 460 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 538 resolved as shift
WARNING: shift/reduce conflict for POINT in state 538 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 541 resolved as shift
WARNING: shift/reduce conflict for POINT in state 541 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 48
WARNING: reduce/reduce conflict in state 66 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 66
WARNING: reduce/reduce conflict in state 68 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 68
WARNING: reduce/reduce conflict in state 79 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 79
WARNING: reduce/reduce conflict in state 126 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 126
WARNING: reduce/reduce conflict in state 127 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 127
WARNING: reduce/reduce conflict in state 128 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 128
WARNING: reduce/reduce conflict in state 129 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 129
WARNING: reduce/reduce conflict in state 140 resolved using rule (expNeg -> NEGATION VARIABLE)
WARNING: rejected rule (variable -> VARIABLE) in state 140
WARNING: reduce/reduce conflict in state 145 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 145
WARNING: reduce/reduce conflict in state 146 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 146
WARNING: reduce/reduce conflict in state 233 resolved using rule (funcionmath -> mathAbs)
WARNING: rejected rule (mathAbs -> declare_any EQUAL mathAbs) in state 233
WARNING: reduce/reduce conflict in state 270 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 270
WARNING: reduce/reduce conflict in state 276 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 276
WARNING: reduce/reduce conflict in state 280 resolved using rule (var_number -> declare_number EQUAL funcionmath)
WARNING: rejected rule (funciones -> funcionmath) in state 280
WARNING: reduce/reduce conflict in state 281 resolved using rule (var_number -> declare_number EQUAL expression)
WARNING: rejected rule (number_value -> expression) in state 281
WARNING: reduce/reduce conflict in state 296 resolved using rule (assign_variable -> variable EQUAL funciones)
WARNING: rejected rule (other_value -> funciones) in state 296
WARNING: reduce/reduce conflict in state 326 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 326
WARNING: reduce/reduce conflict in state 354 resolved using rule (general_value -> expression)
WARNING: rejected rule (number_value -> expression) in state 354
WARNING: reduce/reduce conflict in state 355 resolved using rule (general_value -> boolean)
WARNING: rejected rule (boolean_value -> boolean) in state 355
WARNING: reduce/reduce conflict in state 356 resolved using rule (general_value -> string)
WARNING: rejected rule (string_value -> string) in state 356
WARNING: reduce/reduce conflict in state 357 resolved using rule (general_value -> concatenate)
WARNING: rejected rule (string_value -> concatenate) in state 357
WARNING: reduce/reduce conflict in state 358 resolved using rule (general_value -> string_object)
WARNING: rejected rule (string_value -> string_object) in state 358
WARNING: reduce/reduce conflict in state 359 resolved using rule (general_value -> expCond)
WARNING: rejected rule (boolean_value -> expCond) in state 359
WARNING: reduce/reduce conflict in state 360 resolved using rule (general_value -> expOpLog)
WARNING: rejected rule (boolean_value -> expOpLog) in state 360
WARNING: reduce/reduce conflict in state 361 resolved using rule (general_value -> expNeg)
WARNING: rejected rule (boolean_value -> expNeg) in state 361
WARNING: reduce/reduce conflict in state 362 resolved using rule (general_value -> expEq)
WARNING: rejected rule (boolean_value -> expEq) in state 362
WARNING: reduce/reduce conflict in state 363 resolved using rule (general_value -> expNotEq)
WARNING: rejected rule (boolean_value -> expNotEq) in state 363
WARNING: reduce/reduce conflict in state 364 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 364
WARNING: reduce/reduce conflict in state 364 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 364
WARNING: reduce/reduce conflict in state 464 resolved using rule (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN)
WARNING: rejected rule (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN) in state 464
=======
WARNING: shift/reduce conflict for POINT in state 34 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 106 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 106 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 106 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 106 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 106 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 106 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 106 resolved as shift
WARNING: shift/reduce conflict for FUNMATH in state 106 resolved as shift
WARNING: shift/reduce conflict for LET in state 106 resolved as shift
WARNING: shift/reduce conflict for VAR in state 106 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 106 resolved as shift
WARNING: shift/reduce conflict for CONST in state 106 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 107 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 107 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 107 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 107 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 107 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 107 resolved as shift
WARNING: shift/reduce conflict for FUNMATH in state 107 resolved as shift
WARNING: shift/reduce conflict for LET in state 107 resolved as shift
WARNING: shift/reduce conflict for VAR in state 107 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 107 resolved as shift
WARNING: shift/reduce conflict for CONST in state 107 resolved as shift
WARNING: shift/reduce conflict for POINT in state 136 resolved as shift
WARNING: shift/reduce conflict for POINTCOMMA in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 186 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 186 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 187 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 187 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 187 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 187 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 199 resolved as shift
WARNING: shift/reduce conflict for POINT in state 292 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 322 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 388 resolved as shift
WARNING: shift/reduce conflict for POINT in state 388 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 398 resolved as shift
WARNING: shift/reduce conflict for POINT in state 398 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 402 resolved as shift
WARNING: shift/reduce conflict for POINT in state 402 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 438 resolved as shift
WARNING: shift/reduce conflict for POINT in state 438 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 441 resolved as shift
WARNING: shift/reduce conflict for POINT in state 441 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 443 resolved as shift
WARNING: shift/reduce conflict for POINT in state 443 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 515 resolved as shift
WARNING: shift/reduce conflict for POINT in state 515 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 518 resolved as shift
WARNING: shift/reduce conflict for POINT in state 518 resolved as shift
WARNING: reduce/reduce conflict in state 122 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 122
WARNING: reduce/reduce conflict in state 123 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 123
WARNING: reduce/reduce conflict in state 124 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 124
WARNING: reduce/reduce conflict in state 125 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 125
WARNING: reduce/reduce conflict in state 228 resolved using rule (funcionmath -> mathAbs)
WARNING: rejected rule (mathAbs -> declare_any EQUAL mathAbs) in state 228
WARNING: reduce/reduce conflict in state 264 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 264
WARNING: reduce/reduce conflict in state 274 resolved using rule (var_number -> declare_number EQUAL funcionmath)
WARNING: rejected rule (funciones -> funcionmath) in state 274
WARNING: reduce/reduce conflict in state 275 resolved using rule (var_number -> declare_number EQUAL expression)
WARNING: rejected rule (number_value -> expression) in state 275
WARNING: reduce/reduce conflict in state 290 resolved using rule (assign_variable -> variable EQUAL funciones)
WARNING: rejected rule (other_value -> funciones) in state 290
WARNING: reduce/reduce conflict in state 319 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 319
WARNING: reduce/reduce conflict in state 347 resolved using rule (general_value -> expression)
WARNING: rejected rule (number_value -> expression) in state 347
WARNING: reduce/reduce conflict in state 348 resolved using rule (general_value -> boolean)
WARNING: rejected rule (boolean_value -> boolean) in state 348
WARNING: reduce/reduce conflict in state 349 resolved using rule (general_value -> string)
WARNING: rejected rule (string_value -> string) in state 349
WARNING: reduce/reduce conflict in state 350 resolved using rule (general_value -> concatenate)
WARNING: rejected rule (string_value -> concatenate) in state 350
WARNING: reduce/reduce conflict in state 351 resolved using rule (general_value -> string_object)
WARNING: rejected rule (string_value -> string_object) in state 351
WARNING: reduce/reduce conflict in state 352 resolved using rule (general_value -> expCond)
WARNING: rejected rule (boolean_value -> expCond) in state 352
WARNING: reduce/reduce conflict in state 353 resolved using rule (general_value -> expOpLog)
WARNING: rejected rule (boolean_value -> expOpLog) in state 353
WARNING: reduce/reduce conflict in state 354 resolved using rule (general_value -> expNeg)
WARNING: rejected rule (boolean_value -> expNeg) in state 354
WARNING: reduce/reduce conflict in state 355 resolved using rule (general_value -> expEq)
WARNING: rejected rule (boolean_value -> expEq) in state 355
WARNING: reduce/reduce conflict in state 356 resolved using rule (general_value -> expNotEq)
WARNING: rejected rule (boolean_value -> expNotEq) in state 356
WARNING: reduce/reduce conflict in state 357 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 357
WARNING: reduce/reduce conflict in state 357 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 357
WARNING: reduce/reduce conflict in state 447 resolved using rule (stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN)
WARNING: rejected rule (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN) in state 447
>>>>>>> master
WARNING: Rule (arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN) is never reduced

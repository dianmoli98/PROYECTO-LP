Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ANY
    COMMENT
    DOLLAR
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    FUNMATH
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    MULTICOMMENT
    POW
    PRINT
    RCOMILLA
    ROUND
    SPECIAL
    TYPEOF
    VAROBJECT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    statement_value -> exp_set
Rule 13    statement_value -> statement_control
Rule 14    statement_control -> funcionif
Rule 15    statement_control -> funcionwhile
Rule 16    statement_control -> funcionfor
Rule 17    declare -> var_boolean
Rule 18    declare -> var_number
Rule 19    declare -> var_string
Rule 20    declare -> var_enum
Rule 21    declare -> var_null
Rule 22    declare -> var_undefined
Rule 23    declare -> declare_array
Rule 24    declare -> declare_enum
Rule 25    declare -> declare_generic
Rule 26    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 27    enums -> enums_numeric
Rule 28    enums -> enums_string
Rule 29    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 30    enums_numeric -> enums_numeric_value
Rule 31    enums_numeric_value -> object_name EQUAL number
Rule 32    enums_numeric_value -> object_name
Rule 33    enums_string -> enums_string COMMA enums_string_value
Rule 34    enums_string -> enums_string_value
Rule 35    enums_string_value -> object_name EQUAL string
Rule 36    funcionif -> IF LPAREN formLog RPAREN substatement
Rule 37    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif
Rule 38    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse
Rule 39    funcionif -> IF LPAREN formLog RPAREN substatement funcionelse
Rule 40    funcionelif -> ELIF LPAREN formLog RPAREN substatement
Rule 41    funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif
Rule 42    funcionelse -> ELSE substatement
Rule 43    funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
Rule 44    funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
Rule 45    funcionwhile -> WHILE LPAREN formLog RPAREN substatement
Rule 46    substatement -> LKEY statement RKEY
Rule 47    substatement -> LKEY RKEY
Rule 48    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 49    declare_array -> declare_array_main_number
Rule 50    declare_array -> declare_array_main_boolean
Rule 51    declare_array -> declare_array_main_string
Rule 52    declare_array -> declare_generic_array
Rule 53    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 54    declare_array_main_number -> declare_array_number
Rule 55    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 56    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 57    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 58    declare_array_main_boolean -> declare_array_boolean
Rule 59    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 60    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 61    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 62    declare_array_main_string -> declare_array_string
Rule 63    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 64    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 65    declare_generic_array -> declare_any EQUAL list_types
Rule 66    var_null -> declare_any EQUAL NULL
Rule 67    var_undefined -> declare_any EQUAL UNDEFINED
Rule 68    var_number -> declare_number EQUAL number_value
Rule 69    var_number -> declare_number
Rule 70    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 71    var_boolean -> declare_boolean EQUAL boolean_value
Rule 72    var_boolean -> declare_boolean
Rule 73    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 74    var_string -> declare_string EQUAL string_value
Rule 75    var_string -> declare_string
Rule 76    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 77    var_enum -> declare_var_enum EQUAL enum_value
Rule 78    var_enum -> declare_var_enum
Rule 79    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 80    declare_generic -> declare_any EQUAL assign_value
Rule 81    declare_generic -> declare_any
Rule 82    declare_any -> prefix VARIABLE
Rule 83    assign -> assign_variable
Rule 84    assign -> assign_array
Rule 85    assign -> assign_object_value
Rule 86    assign_variable -> variable EQUAL assign_value
Rule 87    assign_variable -> variable EQUAL list_types
Rule 88    assign_array -> array_value EQUAL general_value
Rule 89    assign_object_value -> object_value_form1 EQUAL general_value
Rule 90    assign_object_value -> object_value_form1 EQUAL list_types
Rule 91    assign_object_value -> object_value_form2 EQUAL general_value
Rule 92    assign_value -> general_value
Rule 93    assign_value -> object_definition
Rule 94    object_definition -> LKEY attributes RKEY
Rule 95    attributes -> attributes COMMA attribute
Rule 96    attributes -> attribute
Rule 97    attribute -> variable TWOPOINTS general_value
Rule 98    attribute -> variable TWOPOINTS list_types
Rule 99    general_value -> expression
Rule 100   general_value -> boolean
Rule 101   general_value -> string
Rule 102   general_value -> expCond
Rule 103   general_value -> expOpLog
Rule 104   general_value -> expNeg
Rule 105   general_value -> expEq
Rule 106   general_value -> expNotEq
Rule 107   list_types -> list_number
Rule 108   list_types -> list_boolean
Rule 109   list_types -> list_string
Rule 110   list_number -> LBRACKET numbers RBRACKET
Rule 111   numbers -> numbers COMMA number_value
Rule 112   numbers -> number_value
Rule 113   list_boolean -> LBRACKET booleans RBRACKET
Rule 114   booleans -> booleans COMMA boolean_value
Rule 115   booleans -> boolean_value
Rule 116   list_string -> LBRACKET strings RBRACKET
Rule 117   strings -> strings COMMA string_value
Rule 118   strings -> string_value
Rule 119   number_value -> expression
Rule 120   boolean_value -> boolean
Rule 121   boolean_value -> other_value
Rule 122   boolean_value -> expCond
Rule 123   boolean_value -> expOpLog
Rule 124   boolean_value -> expNeg
Rule 125   boolean_value -> expEq
Rule 126   boolean_value -> expNotEq
Rule 127   string_value -> string
Rule 128   string_value -> other_value
Rule 129   concatenate -> termS
Rule 130   termS -> string PLUS chain
Rule 131   chain -> termS PLUS value
Rule 132   chain -> value
Rule 133   value -> expression
Rule 134   value -> string
Rule 135   expression -> expression PLUS term
Rule 136   expression -> expression MINUS term
Rule 137   expression -> term
Rule 138   term -> term PRODUCT term
Rule 139   term -> term DIVIDE term
Rule 140   term -> term1 INCREMENT
Rule 141   term -> INCREMENT term1
Rule 142   term -> term1 DECREMENT
Rule 143   term -> DECREMENT term1
Rule 144   expNeg -> NEGATION expOpLog
Rule 145   expNeg -> NEGATION factor_exprlog
Rule 146   expNeg -> NEGATION boolean
Rule 147   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 148   expEq -> expCond EQUALTO expCond
Rule 149   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 150   expEq -> expression EQUALTO expression
Rule 151   expNotEq -> expCond NOTEQUALTO expCond
Rule 152   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 153   expNotEq -> expression NOTEQUALTO expression
Rule 154   expOpLog -> expCond oplogico expCond
Rule 155   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 156   expOpLog -> expression oplogico expression
Rule 157   factor_exprlog -> LPAREN expCond RPAREN
Rule 158   expCond -> expression operador expression
Rule 159   expCond -> LPAREN expression operador expression RPAREN
Rule 160   term1 -> LPAREN group RPAREN
Rule 161   term1 -> group
Rule 162   group -> number
Rule 163   group -> variable
Rule 164   group -> array_value
Rule 165   group -> object_value
Rule 166   term -> number
Rule 167   term -> factor_expr
Rule 168   term -> other_value
Rule 169   factor_expr -> LPAREN expression RPAREN
Rule 170   other_value -> variable
Rule 171   other_value -> array_value
Rule 172   other_value -> enum_value
Rule 173   other_value -> object_value
Rule 174   formLog -> expCond
Rule 175   formLog -> expOpLog
Rule 176   object_value -> object_value_form1
Rule 177   object_value -> object_value_form2
Rule 178   object_value_form1 -> variable POINT variable
Rule 179   object_value_form2 -> variable POINT array_value
Rule 180   array_value -> variable LBRACKET expression RBRACKET
Rule 181   enum_value -> object_name POINT object_name
Rule 182   prefix -> LET
Rule 183   prefix -> VAR
Rule 184   prefix -> STATIC
Rule 185   prefix -> CONST
Rule 186   typedate -> VARNUMBER
Rule 187   typedate -> VARSTRING
Rule 188   typedate -> VARBOOLEAN
Rule 189   typedate -> ENUM
Rule 190   number -> NUMBER
Rule 191   number -> FLOAT
Rule 192   string -> NORMSTRING1
Rule 193   string -> NORMSTRING2
Rule 194   string -> MULTISTRING
Rule 195   boolean -> TRUE
Rule 196   boolean -> FALSE
Rule 197   variable -> VARIABLE
Rule 198   object_name -> OBJECTNAME
Rule 199   operador -> GREATER
Rule 200   operador -> LESS
Rule 201   operador -> GREATEREQUAL
Rule 202   operador -> LESSEQUAL
Rule 203   operador -> EQUALTO
Rule 204   operador -> NOTEQUALTO
Rule 205   oplogico -> AND
Rule 206   oplogico -> OR

Terminals, with rules where they appear

ABS                  : 
AND                  : 205
ANY                  : 
ARRAY                : 56 60 64
COMMA                : 29 33 95 111 114 117
COMMENT              : 
CONST                : 185
DECREMENT            : 142 143
DIVIDE               : 139
DOLLAR               : 
ELIF                 : 40 41
ELSE                 : 42
ENUM                 : 26 189
EQUAL                : 31 35 43 44 48 53 57 61 65 66 67 68 71 74 77 80 86 87 88 89 90 91
EQUALTO              : 148 149 150 203
FALSE                : 196
FLOAT                : 191
FOR                  : 43 44
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 
GREATER              : 56 60 64 199
GREATEREQUAL         : 201
IF                   : 36 37 38 39
IN                   : 
INCREMENT            : 140 141
INSTANCEOF           : 
LBRACKET             : 55 59 63 110 113 116 180
LCOMILLA             : 
LESS                 : 56 60 64 200
LESSEQUAL            : 202
LET                  : 182
LKEY                 : 26 46 47 94
LPAREN               : 36 37 38 39 40 41 43 44 45 48 147 157 159 160 169
MINUS                : 136
MOD                  : 
MULTICOMMENT         : 
MULTISTRING          : 194
NEGATION             : 144 145 146 147
NEW                  : 48
NORMSTRING1          : 192
NORMSTRING2          : 193
NOTEQUALTO           : 151 152 153 204
NULL                 : 66
NUMBER               : 190
OBJECTNAME           : 26 198
OR                   : 206
PLUS                 : 130 131 135
POINT                : 178 179 181
POINTCOMMA           : 2 43 43 44 44
POW                  : 
PRINT                : 
PRODUCT              : 138
RBRACKET             : 55 59 63 110 113 116 180
RCOMILLA             : 
RKEY                 : 26 46 47 94
ROUND                : 
RPAREN               : 36 37 38 39 40 41 43 44 45 48 147 157 159 160 169
SET                  : 48
SPECIAL              : 
STATIC               : 184
TRUE                 : 195
TWOPOINTS            : 56 60 64 70 73 76 79 97 98
TYPEOF               : 
UNDEFINED            : 67
VAR                  : 183
VARBOOLEAN           : 60 73 188
VARIABLE             : 43 44 44 82 197
VARNUMBER            : 56 70 186
VAROBJECT            : 
VARSTRING            : 64 76 187
WHILE                : 45
error                : 

Nonterminals, with rules where they appear

array_value          : 88 164 171 179
assign               : 6
assign_array         : 84
assign_object_value  : 85
assign_value         : 80 86
assign_variable      : 83
attribute            : 95 96
attributes           : 94 95
boolean              : 100 120 146
boolean_value        : 71 114 115
booleans             : 113 114
chain                : 130
concatenate          : 4
declare              : 5
declare_any          : 43 48 56 60 64 65 66 67 70 73 76 79 80 81
declare_array        : 23
declare_array_boolean : 57 58
declare_array_main_boolean : 50
declare_array_main_number : 49
declare_array_main_string : 51
declare_array_number : 53 54
declare_array_string : 61 62
declare_boolean      : 59 71 72
declare_enum         : 24
declare_generic      : 25
declare_generic_array : 52
declare_number       : 55 68 69
declare_string       : 63 74 75
declare_var_enum     : 77 78
enum_value           : 77 172
enums                : 26
enums_numeric        : 27 29
enums_numeric_value  : 29 30
enums_string         : 28 33
enums_string_value   : 33 34
expCond              : 7 102 122 148 148 151 151 154 154 157 174
expEq                : 10 105 125
expNeg               : 9 104 124
expNotEq             : 11 106 126
expOpLog             : 8 103 123 144 147 175
exp_set              : 12
expression           : 3 99 119 133 135 136 150 150 153 153 156 156 158 158 159 159 169 180
factor_expr          : 167
factor_exprlog       : 145 149 149 152 152 155 155
formLog              : 36 37 38 39 40 41 43 44 45
funcionelif          : 37 38 41
funcionelse          : 38 39
funcionfor           : 16
funcionif            : 14
funcionwhile         : 15
general_value        : 88 89 91 92 97
group                : 160 161
list_boolean         : 57 108
list_number          : 53 107
list_string          : 61 109
list_types           : 65 87 90 98
number               : 31 162 166
number_value         : 43 44 68 111 112
numbers              : 110 111
object_definition    : 93
object_name          : 31 32 35 79 181 181
object_value         : 165 173
object_value_form1   : 89 90 176
object_value_form2   : 91 177
operador             : 43 44 158 159
oplogico             : 154 155 156
other_value          : 121 128 168
prefix               : 82
statement            : 46 0
statement_control    : 13
statement_value      : 1 2
string               : 35 101 127 130 134
string_value         : 74 117 118
strings              : 116 117
substatement         : 36 37 38 39 40 41 42 43 44 45
term                 : 135 136 137 138 138 139 139
term1                : 140 141 142 143
termS                : 129 131
typedate             : 
value                : 131 132
var_boolean          : 17
var_enum             : 20
var_null             : 21
var_number           : 18
var_string           : 19
var_undefined        : 22
variable             : 86 87 97 98 163 170 178 178 179 180

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (129) concatenate -> . termS
    (17) declare -> . var_boolean
    (18) declare -> . var_number
    (19) declare -> . var_string
    (20) declare -> . var_enum
    (21) declare -> . var_null
    (22) declare -> . var_undefined
    (23) declare -> . declare_array
    (24) declare -> . declare_enum
    (25) declare -> . declare_generic
    (83) assign -> . assign_variable
    (84) assign -> . assign_array
    (85) assign -> . assign_object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (48) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (14) statement_control -> . funcionif
    (15) statement_control -> . funcionwhile
    (16) statement_control -> . funcionfor
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (130) termS -> . string PLUS chain
    (71) var_boolean -> . declare_boolean EQUAL boolean_value
    (72) var_boolean -> . declare_boolean
    (68) var_number -> . declare_number EQUAL number_value
    (69) var_number -> . declare_number
    (74) var_string -> . declare_string EQUAL string_value
    (75) var_string -> . declare_string
    (77) var_enum -> . declare_var_enum EQUAL enum_value
    (78) var_enum -> . declare_var_enum
    (66) var_null -> . declare_any EQUAL NULL
    (67) var_undefined -> . declare_any EQUAL UNDEFINED
    (49) declare_array -> . declare_array_main_number
    (50) declare_array -> . declare_array_main_boolean
    (51) declare_array -> . declare_array_main_string
    (52) declare_array -> . declare_generic_array
    (26) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (80) declare_generic -> . declare_any EQUAL assign_value
    (81) declare_generic -> . declare_any
    (86) assign_variable -> . variable EQUAL assign_value
    (87) assign_variable -> . variable EQUAL list_types
    (88) assign_array -> . array_value EQUAL general_value
    (89) assign_object_value -> . object_value_form1 EQUAL general_value
    (90) assign_object_value -> . object_value_form1 EQUAL list_types
    (91) assign_object_value -> . object_value_form2 EQUAL general_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (82) declare_any -> . prefix VARIABLE
    (36) funcionif -> . IF LPAREN formLog RPAREN substatement
    (37) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (38) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (39) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (45) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (43) funcionfor -> . FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (44) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (73) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (70) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (76) declare_string -> . declare_any TWOPOINTS VARSTRING
    (79) declare_var_enum -> . declare_any TWOPOINTS object_name
    (53) declare_array_main_number -> . declare_array_number EQUAL list_number
    (54) declare_array_main_number -> . declare_array_number
    (57) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (58) declare_array_main_boolean -> . declare_array_boolean
    (61) declare_array_main_string -> . declare_array_string EQUAL list_string
    (62) declare_array_main_string -> . declare_array_string
    (65) declare_generic_array -> . declare_any EQUAL list_types
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (182) prefix -> . LET
    (183) prefix -> . VAR
    (184) prefix -> . STATIC
    (185) prefix -> . CONST
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (55) declare_array_number -> . declare_number LBRACKET RBRACKET
    (56) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (59) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (60) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (63) declare_array_string -> . declare_string LBRACKET RBRACKET
    (64) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (198) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    ENUM            shift and go to state 51
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    VARIABLE        shift and go to state 58
    LET             shift and go to state 73
    VAR             shift and go to state 74
    STATIC          shift and go to state 75
    CONST           shift and go to state 76
    OBJECTNAME      shift and go to state 52

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    term                           shift and go to state 14
    termS                          shift and go to state 15
    var_boolean                    shift and go to state 16
    var_number                     shift and go to state 17
    var_string                     shift and go to state 18
    var_enum                       shift and go to state 19
    var_null                       shift and go to state 20
    var_undefined                  shift and go to state 21
    declare_array                  shift and go to state 22
    declare_enum                   shift and go to state 23
    declare_generic                shift and go to state 24
    assign_variable                shift and go to state 25
    assign_array                   shift and go to state 26
    assign_object_value            shift and go to state 27
    factor_exprlog                 shift and go to state 29
    declare_any                    shift and go to state 31
    funcionif                      shift and go to state 32
    funcionwhile                   shift and go to state 33
    funcionfor                     shift and go to state 34
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    string                         shift and go to state 41
    declare_boolean                shift and go to state 42
    declare_number                 shift and go to state 43
    declare_string                 shift and go to state 44
    declare_var_enum               shift and go to state 45
    enum_value                     shift and go to state 46
    declare_array_main_number      shift and go to state 47
    declare_array_main_boolean     shift and go to state 48
    declare_array_main_string      shift and go to state 49
    declare_generic_array          shift and go to state 50
    variable                       shift and go to state 53
    array_value                    shift and go to state 54
    object_value_form1             shift and go to state 55
    object_value_form2             shift and go to state 56
    prefix                         shift and go to state 57
    group                          shift and go to state 62
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    declare_array_number           shift and go to state 70
    declare_array_boolean          shift and go to state 71
    declare_array_string           shift and go to state 72

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    RKEY            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 77


state 3

    (3) statement_value -> expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (158) expCond -> expression . operador expression
    (156) expOpLog -> expression . oplogico expression
    (150) expEq -> expression . EQUALTO expression
    (153) expNotEq -> expression . NOTEQUALTO expression
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    RKEY            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    EQUALTO         shift and go to state 82
    NOTEQUALTO      shift and go to state 83
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 80
    oplogico                       shift and go to state 81

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)
    RKEY            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)
    RKEY            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)
    RKEY            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (154) expOpLog -> expCond . oplogico expCond
    (148) expEq -> expCond . EQUALTO expCond
    (151) expNotEq -> expCond . NOTEQUALTO expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    RKEY            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 91
    NOTEQUALTO      shift and go to state 92
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)
    RKEY            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)
    RKEY            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)
    RKEY            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)
    RKEY            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (12) statement_value -> exp_set .

    POINTCOMMA      reduce using rule 12 (statement_value -> exp_set .)
    $end            reduce using rule 12 (statement_value -> exp_set .)
    RKEY            reduce using rule 12 (statement_value -> exp_set .)


state 13

    (13) statement_value -> statement_control .

    POINTCOMMA      reduce using rule 13 (statement_value -> statement_control .)
    $end            reduce using rule 13 (statement_value -> statement_control .)
    RKEY            reduce using rule 13 (statement_value -> statement_control .)


state 14

    (137) expression -> term .
    (138) term -> term . PRODUCT term
    (139) term -> term . DIVIDE term

    PLUS            reduce using rule 137 (expression -> term .)
    MINUS           reduce using rule 137 (expression -> term .)
    EQUALTO         reduce using rule 137 (expression -> term .)
    NOTEQUALTO      reduce using rule 137 (expression -> term .)
    GREATER         reduce using rule 137 (expression -> term .)
    LESS            reduce using rule 137 (expression -> term .)
    GREATEREQUAL    reduce using rule 137 (expression -> term .)
    LESSEQUAL       reduce using rule 137 (expression -> term .)
    AND             reduce using rule 137 (expression -> term .)
    OR              reduce using rule 137 (expression -> term .)
    POINTCOMMA      reduce using rule 137 (expression -> term .)
    $end            reduce using rule 137 (expression -> term .)
    RPAREN          reduce using rule 137 (expression -> term .)
    RKEY            reduce using rule 137 (expression -> term .)
    RBRACKET        reduce using rule 137 (expression -> term .)
    COMMA           reduce using rule 137 (expression -> term .)
    PRODUCT         shift and go to state 93
    DIVIDE          shift and go to state 94


state 15

    (129) concatenate -> termS .

    POINTCOMMA      reduce using rule 129 (concatenate -> termS .)
    $end            reduce using rule 129 (concatenate -> termS .)
    RKEY            reduce using rule 129 (concatenate -> termS .)


state 16

    (17) declare -> var_boolean .

    POINTCOMMA      reduce using rule 17 (declare -> var_boolean .)
    $end            reduce using rule 17 (declare -> var_boolean .)
    RKEY            reduce using rule 17 (declare -> var_boolean .)


state 17

    (18) declare -> var_number .

    POINTCOMMA      reduce using rule 18 (declare -> var_number .)
    $end            reduce using rule 18 (declare -> var_number .)
    RKEY            reduce using rule 18 (declare -> var_number .)


state 18

    (19) declare -> var_string .

    POINTCOMMA      reduce using rule 19 (declare -> var_string .)
    $end            reduce using rule 19 (declare -> var_string .)
    RKEY            reduce using rule 19 (declare -> var_string .)


state 19

    (20) declare -> var_enum .

    POINTCOMMA      reduce using rule 20 (declare -> var_enum .)
    $end            reduce using rule 20 (declare -> var_enum .)
    RKEY            reduce using rule 20 (declare -> var_enum .)


state 20

    (21) declare -> var_null .

    POINTCOMMA      reduce using rule 21 (declare -> var_null .)
    $end            reduce using rule 21 (declare -> var_null .)
    RKEY            reduce using rule 21 (declare -> var_null .)


state 21

    (22) declare -> var_undefined .

    POINTCOMMA      reduce using rule 22 (declare -> var_undefined .)
    $end            reduce using rule 22 (declare -> var_undefined .)
    RKEY            reduce using rule 22 (declare -> var_undefined .)


state 22

    (23) declare -> declare_array .

    POINTCOMMA      reduce using rule 23 (declare -> declare_array .)
    $end            reduce using rule 23 (declare -> declare_array .)
    RKEY            reduce using rule 23 (declare -> declare_array .)


state 23

    (24) declare -> declare_enum .

    POINTCOMMA      reduce using rule 24 (declare -> declare_enum .)
    $end            reduce using rule 24 (declare -> declare_enum .)
    RKEY            reduce using rule 24 (declare -> declare_enum .)


state 24

    (25) declare -> declare_generic .

    POINTCOMMA      reduce using rule 25 (declare -> declare_generic .)
    $end            reduce using rule 25 (declare -> declare_generic .)
    RKEY            reduce using rule 25 (declare -> declare_generic .)


state 25

    (83) assign -> assign_variable .

    POINTCOMMA      reduce using rule 83 (assign -> assign_variable .)
    $end            reduce using rule 83 (assign -> assign_variable .)
    RKEY            reduce using rule 83 (assign -> assign_variable .)


state 26

    (84) assign -> assign_array .

    POINTCOMMA      reduce using rule 84 (assign -> assign_array .)
    $end            reduce using rule 84 (assign -> assign_array .)
    RKEY            reduce using rule 84 (assign -> assign_array .)


state 27

    (85) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 85 (assign -> assign_object_value .)
    $end            reduce using rule 85 (assign -> assign_object_value .)
    RKEY            reduce using rule 85 (assign -> assign_object_value .)


state 28

    (159) expCond -> LPAREN . expression operador expression RPAREN
    (157) factor_exprlog -> LPAREN . expCond RPAREN
    (160) term1 -> LPAREN . group RPAREN
    (169) factor_expr -> LPAREN . expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (181) enum_value -> . object_name POINT object_name
    (198) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 95
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 96
    expCond                        shift and go to state 97
    group                          shift and go to state 98
    term                           shift and go to state 14
    number                         shift and go to state 99
    variable                       shift and go to state 100
    array_value                    shift and go to state 101
    object_value                   shift and go to state 102
    term1                          shift and go to state 35
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    enum_value                     shift and go to state 46
    object_name                    shift and go to state 69

state 29

    (155) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (149) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (152) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    EQUALTO         shift and go to state 106
    NOTEQUALTO      shift and go to state 107
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 105

state 30

    (144) expNeg -> NEGATION . expOpLog
    (145) expNeg -> NEGATION . factor_exprlog
    (146) expNeg -> NEGATION . boolean
    (147) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 111
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expOpLog                       shift and go to state 108
    factor_exprlog                 shift and go to state 109
    boolean                        shift and go to state 110
    expCond                        shift and go to state 112
    expression                     shift and go to state 113
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 31

    (48) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN
    (66) var_null -> declare_any . EQUAL NULL
    (67) var_undefined -> declare_any . EQUAL UNDEFINED
    (80) declare_generic -> declare_any . EQUAL assign_value
    (81) declare_generic -> declare_any .
    (73) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (70) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (76) declare_string -> declare_any . TWOPOINTS VARSTRING
    (79) declare_var_enum -> declare_any . TWOPOINTS object_name
    (65) declare_generic_array -> declare_any . EQUAL list_types
    (56) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (60) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (64) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 118
    POINTCOMMA      reduce using rule 81 (declare_generic -> declare_any .)
    $end            reduce using rule 81 (declare_generic -> declare_any .)
    RKEY            reduce using rule 81 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 119


state 32

    (14) statement_control -> funcionif .

    POINTCOMMA      reduce using rule 14 (statement_control -> funcionif .)
    $end            reduce using rule 14 (statement_control -> funcionif .)
    RKEY            reduce using rule 14 (statement_control -> funcionif .)


state 33

    (15) statement_control -> funcionwhile .

    POINTCOMMA      reduce using rule 15 (statement_control -> funcionwhile .)
    $end            reduce using rule 15 (statement_control -> funcionwhile .)
    RKEY            reduce using rule 15 (statement_control -> funcionwhile .)


state 34

    (16) statement_control -> funcionfor .

    POINTCOMMA      reduce using rule 16 (statement_control -> funcionfor .)
    $end            reduce using rule 16 (statement_control -> funcionfor .)
    RKEY            reduce using rule 16 (statement_control -> funcionfor .)


state 35

    (140) term -> term1 . INCREMENT
    (142) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 120
    DECREMENT       shift and go to state 121


state 36

    (141) term -> INCREMENT . term1
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 123
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58

    term1                          shift and go to state 122
    group                          shift and go to state 62
    number                         shift and go to state 124
    variable                       shift and go to state 125
    array_value                    shift and go to state 126
    object_value                   shift and go to state 127
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 37

    (143) term -> DECREMENT . term1
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 123
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58

    term1                          shift and go to state 128
    group                          shift and go to state 62
    number                         shift and go to state 124
    variable                       shift and go to state 125
    array_value                    shift and go to state 126
    object_value                   shift and go to state 127
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 38

    (166) term -> number .
    (162) group -> number .

    PRODUCT         reduce using rule 166 (term -> number .)
    DIVIDE          reduce using rule 166 (term -> number .)
    PLUS            reduce using rule 166 (term -> number .)
    MINUS           reduce using rule 166 (term -> number .)
    EQUALTO         reduce using rule 166 (term -> number .)
    NOTEQUALTO      reduce using rule 166 (term -> number .)
    GREATER         reduce using rule 166 (term -> number .)
    LESS            reduce using rule 166 (term -> number .)
    GREATEREQUAL    reduce using rule 166 (term -> number .)
    LESSEQUAL       reduce using rule 166 (term -> number .)
    AND             reduce using rule 166 (term -> number .)
    OR              reduce using rule 166 (term -> number .)
    POINTCOMMA      reduce using rule 166 (term -> number .)
    $end            reduce using rule 166 (term -> number .)
    RPAREN          reduce using rule 166 (term -> number .)
    RKEY            reduce using rule 166 (term -> number .)
    RBRACKET        reduce using rule 166 (term -> number .)
    COMMA           reduce using rule 166 (term -> number .)
    INCREMENT       reduce using rule 162 (group -> number .)
    DECREMENT       reduce using rule 162 (group -> number .)


state 39

    (167) term -> factor_expr .

    PRODUCT         reduce using rule 167 (term -> factor_expr .)
    DIVIDE          reduce using rule 167 (term -> factor_expr .)
    PLUS            reduce using rule 167 (term -> factor_expr .)
    MINUS           reduce using rule 167 (term -> factor_expr .)
    EQUALTO         reduce using rule 167 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 167 (term -> factor_expr .)
    GREATER         reduce using rule 167 (term -> factor_expr .)
    LESS            reduce using rule 167 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 167 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 167 (term -> factor_expr .)
    AND             reduce using rule 167 (term -> factor_expr .)
    OR              reduce using rule 167 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 167 (term -> factor_expr .)
    $end            reduce using rule 167 (term -> factor_expr .)
    RPAREN          reduce using rule 167 (term -> factor_expr .)
    RKEY            reduce using rule 167 (term -> factor_expr .)
    RBRACKET        reduce using rule 167 (term -> factor_expr .)
    COMMA           reduce using rule 167 (term -> factor_expr .)


state 40

    (168) term -> other_value .

    PRODUCT         reduce using rule 168 (term -> other_value .)
    DIVIDE          reduce using rule 168 (term -> other_value .)
    PLUS            reduce using rule 168 (term -> other_value .)
    MINUS           reduce using rule 168 (term -> other_value .)
    EQUALTO         reduce using rule 168 (term -> other_value .)
    NOTEQUALTO      reduce using rule 168 (term -> other_value .)
    GREATER         reduce using rule 168 (term -> other_value .)
    LESS            reduce using rule 168 (term -> other_value .)
    GREATEREQUAL    reduce using rule 168 (term -> other_value .)
    LESSEQUAL       reduce using rule 168 (term -> other_value .)
    AND             reduce using rule 168 (term -> other_value .)
    OR              reduce using rule 168 (term -> other_value .)
    POINTCOMMA      reduce using rule 168 (term -> other_value .)
    $end            reduce using rule 168 (term -> other_value .)
    RPAREN          reduce using rule 168 (term -> other_value .)
    RKEY            reduce using rule 168 (term -> other_value .)
    RBRACKET        reduce using rule 168 (term -> other_value .)
    COMMA           reduce using rule 168 (term -> other_value .)


state 41

    (130) termS -> string . PLUS chain

    PLUS            shift and go to state 129


state 42

    (71) var_boolean -> declare_boolean . EQUAL boolean_value
    (72) var_boolean -> declare_boolean .
    (59) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 130
    POINTCOMMA      reduce using rule 72 (var_boolean -> declare_boolean .)
    $end            reduce using rule 72 (var_boolean -> declare_boolean .)
    RKEY            reduce using rule 72 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 131


state 43

    (68) var_number -> declare_number . EQUAL number_value
    (69) var_number -> declare_number .
    (55) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 132
    POINTCOMMA      reduce using rule 69 (var_number -> declare_number .)
    $end            reduce using rule 69 (var_number -> declare_number .)
    RKEY            reduce using rule 69 (var_number -> declare_number .)
    LBRACKET        shift and go to state 133


state 44

    (74) var_string -> declare_string . EQUAL string_value
    (75) var_string -> declare_string .
    (63) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 134
    POINTCOMMA      reduce using rule 75 (var_string -> declare_string .)
    $end            reduce using rule 75 (var_string -> declare_string .)
    RKEY            reduce using rule 75 (var_string -> declare_string .)
    LBRACKET        shift and go to state 135


state 45

    (77) var_enum -> declare_var_enum . EQUAL enum_value
    (78) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 136
    POINTCOMMA      reduce using rule 78 (var_enum -> declare_var_enum .)
    $end            reduce using rule 78 (var_enum -> declare_var_enum .)
    RKEY            reduce using rule 78 (var_enum -> declare_var_enum .)


state 46

    (172) other_value -> enum_value .

    PRODUCT         reduce using rule 172 (other_value -> enum_value .)
    DIVIDE          reduce using rule 172 (other_value -> enum_value .)
    PLUS            reduce using rule 172 (other_value -> enum_value .)
    MINUS           reduce using rule 172 (other_value -> enum_value .)
    EQUALTO         reduce using rule 172 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 172 (other_value -> enum_value .)
    GREATER         reduce using rule 172 (other_value -> enum_value .)
    LESS            reduce using rule 172 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 172 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 172 (other_value -> enum_value .)
    AND             reduce using rule 172 (other_value -> enum_value .)
    OR              reduce using rule 172 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 172 (other_value -> enum_value .)
    $end            reduce using rule 172 (other_value -> enum_value .)
    RPAREN          reduce using rule 172 (other_value -> enum_value .)
    RKEY            reduce using rule 172 (other_value -> enum_value .)
    RBRACKET        reduce using rule 172 (other_value -> enum_value .)
    COMMA           reduce using rule 172 (other_value -> enum_value .)


state 47

    (49) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 49 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 49 (declare_array -> declare_array_main_number .)
    RKEY            reduce using rule 49 (declare_array -> declare_array_main_number .)


state 48

    (50) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 50 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 50 (declare_array -> declare_array_main_boolean .)
    RKEY            reduce using rule 50 (declare_array -> declare_array_main_boolean .)


state 49

    (51) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 51 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 51 (declare_array -> declare_array_main_string .)
    RKEY            reduce using rule 51 (declare_array -> declare_array_main_string .)


state 50

    (52) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 52 (declare_array -> declare_generic_array .)
    $end            reduce using rule 52 (declare_array -> declare_generic_array .)
    RKEY            reduce using rule 52 (declare_array -> declare_generic_array .)


state 51

    (26) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 137


state 52

    (198) object_name -> OBJECTNAME .

    POINT           reduce using rule 198 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 198 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 198 (object_name -> OBJECTNAME .)
    $end            reduce using rule 198 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 198 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 198 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 198 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 198 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 198 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 198 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 198 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 198 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 198 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 198 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 198 (object_name -> OBJECTNAME .)
    AND             reduce using rule 198 (object_name -> OBJECTNAME .)
    OR              reduce using rule 198 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 198 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 198 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 198 (object_name -> OBJECTNAME .)


state 53

    (86) assign_variable -> variable . EQUAL assign_value
    (87) assign_variable -> variable . EQUAL list_types
    (170) other_value -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value
    (163) group -> variable .

    EQUAL           shift and go to state 138
    PRODUCT         reduce using rule 170 (other_value -> variable .)
    DIVIDE          reduce using rule 170 (other_value -> variable .)
    PLUS            reduce using rule 170 (other_value -> variable .)
    MINUS           reduce using rule 170 (other_value -> variable .)
    EQUALTO         reduce using rule 170 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 170 (other_value -> variable .)
    GREATER         reduce using rule 170 (other_value -> variable .)
    LESS            reduce using rule 170 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 170 (other_value -> variable .)
    LESSEQUAL       reduce using rule 170 (other_value -> variable .)
    AND             reduce using rule 170 (other_value -> variable .)
    OR              reduce using rule 170 (other_value -> variable .)
    POINTCOMMA      reduce using rule 170 (other_value -> variable .)
    $end            reduce using rule 170 (other_value -> variable .)
    RKEY            reduce using rule 170 (other_value -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140
    INCREMENT       reduce using rule 163 (group -> variable .)
    DECREMENT       reduce using rule 163 (group -> variable .)


state 54

    (88) assign_array -> array_value . EQUAL general_value
    (171) other_value -> array_value .
    (164) group -> array_value .

    EQUAL           shift and go to state 141
    PRODUCT         reduce using rule 171 (other_value -> array_value .)
    DIVIDE          reduce using rule 171 (other_value -> array_value .)
    PLUS            reduce using rule 171 (other_value -> array_value .)
    MINUS           reduce using rule 171 (other_value -> array_value .)
    EQUALTO         reduce using rule 171 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 171 (other_value -> array_value .)
    GREATER         reduce using rule 171 (other_value -> array_value .)
    LESS            reduce using rule 171 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 171 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 171 (other_value -> array_value .)
    AND             reduce using rule 171 (other_value -> array_value .)
    OR              reduce using rule 171 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 171 (other_value -> array_value .)
    $end            reduce using rule 171 (other_value -> array_value .)
    RKEY            reduce using rule 171 (other_value -> array_value .)
    INCREMENT       reduce using rule 164 (group -> array_value .)
    DECREMENT       reduce using rule 164 (group -> array_value .)


state 55

    (89) assign_object_value -> object_value_form1 . EQUAL general_value
    (90) assign_object_value -> object_value_form1 . EQUAL list_types
    (176) object_value -> object_value_form1 .

    EQUAL           shift and go to state 142
    PRODUCT         reduce using rule 176 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 176 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 176 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 176 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 176 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 176 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 176 (object_value -> object_value_form1 .)
    LESS            reduce using rule 176 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 176 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 176 (object_value -> object_value_form1 .)
    AND             reduce using rule 176 (object_value -> object_value_form1 .)
    OR              reduce using rule 176 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 176 (object_value -> object_value_form1 .)
    $end            reduce using rule 176 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 176 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 176 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 176 (object_value -> object_value_form1 .)


state 56

    (91) assign_object_value -> object_value_form2 . EQUAL general_value
    (177) object_value -> object_value_form2 .

    EQUAL           shift and go to state 143
    PRODUCT         reduce using rule 177 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 177 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 177 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 177 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 177 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 177 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 177 (object_value -> object_value_form2 .)
    LESS            reduce using rule 177 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 177 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 177 (object_value -> object_value_form2 .)
    AND             reduce using rule 177 (object_value -> object_value_form2 .)
    OR              reduce using rule 177 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 177 (object_value -> object_value_form2 .)
    $end            reduce using rule 177 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 177 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 177 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 177 (object_value -> object_value_form2 .)


state 57

    (82) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 144


state 58

    (197) variable -> VARIABLE .

    EQUAL           reduce using rule 197 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 197 (variable -> VARIABLE .)
    POINT           reduce using rule 197 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 197 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 197 (variable -> VARIABLE .)
    PLUS            reduce using rule 197 (variable -> VARIABLE .)
    MINUS           reduce using rule 197 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 197 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 197 (variable -> VARIABLE .)
    GREATER         reduce using rule 197 (variable -> VARIABLE .)
    LESS            reduce using rule 197 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 197 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 197 (variable -> VARIABLE .)
    AND             reduce using rule 197 (variable -> VARIABLE .)
    OR              reduce using rule 197 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 197 (variable -> VARIABLE .)
    $end            reduce using rule 197 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 197 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 197 (variable -> VARIABLE .)
    RPAREN          reduce using rule 197 (variable -> VARIABLE .)
    RKEY            reduce using rule 197 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 197 (variable -> VARIABLE .)
    COMMA           reduce using rule 197 (variable -> VARIABLE .)
    TWOPOINTS       reduce using rule 197 (variable -> VARIABLE .)


state 59

    (36) funcionif -> IF . LPAREN formLog RPAREN substatement
    (37) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif
    (38) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif funcionelse
    (39) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelse

    LPAREN          shift and go to state 145


state 60

    (45) funcionwhile -> WHILE . LPAREN formLog RPAREN substatement

    LPAREN          shift and go to state 146


state 61

    (43) funcionfor -> FOR . LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (44) funcionfor -> FOR . LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    LPAREN          shift and go to state 147


state 62

    (161) term1 -> group .

    INCREMENT       reduce using rule 161 (term1 -> group .)
    DECREMENT       reduce using rule 161 (term1 -> group .)
    PRODUCT         reduce using rule 161 (term1 -> group .)
    DIVIDE          reduce using rule 161 (term1 -> group .)
    PLUS            reduce using rule 161 (term1 -> group .)
    MINUS           reduce using rule 161 (term1 -> group .)
    EQUALTO         reduce using rule 161 (term1 -> group .)
    NOTEQUALTO      reduce using rule 161 (term1 -> group .)
    GREATER         reduce using rule 161 (term1 -> group .)
    LESS            reduce using rule 161 (term1 -> group .)
    GREATEREQUAL    reduce using rule 161 (term1 -> group .)
    LESSEQUAL       reduce using rule 161 (term1 -> group .)
    AND             reduce using rule 161 (term1 -> group .)
    OR              reduce using rule 161 (term1 -> group .)
    POINTCOMMA      reduce using rule 161 (term1 -> group .)
    $end            reduce using rule 161 (term1 -> group .)
    RPAREN          reduce using rule 161 (term1 -> group .)
    RKEY            reduce using rule 161 (term1 -> group .)
    RBRACKET        reduce using rule 161 (term1 -> group .)
    COMMA           reduce using rule 161 (term1 -> group .)


state 63

    (190) number -> NUMBER .

    PRODUCT         reduce using rule 190 (number -> NUMBER .)
    DIVIDE          reduce using rule 190 (number -> NUMBER .)
    PLUS            reduce using rule 190 (number -> NUMBER .)
    MINUS           reduce using rule 190 (number -> NUMBER .)
    EQUALTO         reduce using rule 190 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 190 (number -> NUMBER .)
    GREATER         reduce using rule 190 (number -> NUMBER .)
    LESS            reduce using rule 190 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 190 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 190 (number -> NUMBER .)
    AND             reduce using rule 190 (number -> NUMBER .)
    OR              reduce using rule 190 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 190 (number -> NUMBER .)
    $end            reduce using rule 190 (number -> NUMBER .)
    INCREMENT       reduce using rule 190 (number -> NUMBER .)
    DECREMENT       reduce using rule 190 (number -> NUMBER .)
    RPAREN          reduce using rule 190 (number -> NUMBER .)
    RKEY            reduce using rule 190 (number -> NUMBER .)
    RBRACKET        reduce using rule 190 (number -> NUMBER .)
    COMMA           reduce using rule 190 (number -> NUMBER .)


state 64

    (191) number -> FLOAT .

    PRODUCT         reduce using rule 191 (number -> FLOAT .)
    DIVIDE          reduce using rule 191 (number -> FLOAT .)
    PLUS            reduce using rule 191 (number -> FLOAT .)
    MINUS           reduce using rule 191 (number -> FLOAT .)
    EQUALTO         reduce using rule 191 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 191 (number -> FLOAT .)
    GREATER         reduce using rule 191 (number -> FLOAT .)
    LESS            reduce using rule 191 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 191 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 191 (number -> FLOAT .)
    AND             reduce using rule 191 (number -> FLOAT .)
    OR              reduce using rule 191 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 191 (number -> FLOAT .)
    $end            reduce using rule 191 (number -> FLOAT .)
    INCREMENT       reduce using rule 191 (number -> FLOAT .)
    DECREMENT       reduce using rule 191 (number -> FLOAT .)
    RPAREN          reduce using rule 191 (number -> FLOAT .)
    RKEY            reduce using rule 191 (number -> FLOAT .)
    RBRACKET        reduce using rule 191 (number -> FLOAT .)
    COMMA           reduce using rule 191 (number -> FLOAT .)


state 65

    (173) other_value -> object_value .
    (165) group -> object_value .

    PRODUCT         reduce using rule 173 (other_value -> object_value .)
    DIVIDE          reduce using rule 173 (other_value -> object_value .)
    PLUS            reduce using rule 173 (other_value -> object_value .)
    MINUS           reduce using rule 173 (other_value -> object_value .)
    EQUALTO         reduce using rule 173 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 173 (other_value -> object_value .)
    GREATER         reduce using rule 173 (other_value -> object_value .)
    LESS            reduce using rule 173 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 173 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 173 (other_value -> object_value .)
    AND             reduce using rule 173 (other_value -> object_value .)
    OR              reduce using rule 173 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 173 (other_value -> object_value .)
    $end            reduce using rule 173 (other_value -> object_value .)
    RPAREN          reduce using rule 173 (other_value -> object_value .)
    RKEY            reduce using rule 173 (other_value -> object_value .)
    RBRACKET        reduce using rule 173 (other_value -> object_value .)
    COMMA           reduce using rule 173 (other_value -> object_value .)
    INCREMENT       reduce using rule 165 (group -> object_value .)
    DECREMENT       reduce using rule 165 (group -> object_value .)


state 66

    (192) string -> NORMSTRING1 .

    PLUS            reduce using rule 192 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 192 (string -> NORMSTRING1 .)
    $end            reduce using rule 192 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 192 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 192 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 192 (string -> NORMSTRING1 .)


state 67

    (193) string -> NORMSTRING2 .

    PLUS            reduce using rule 193 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 193 (string -> NORMSTRING2 .)
    $end            reduce using rule 193 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 193 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 193 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 193 (string -> NORMSTRING2 .)


state 68

    (194) string -> MULTISTRING .

    PLUS            reduce using rule 194 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 194 (string -> MULTISTRING .)
    $end            reduce using rule 194 (string -> MULTISTRING .)
    RKEY            reduce using rule 194 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 194 (string -> MULTISTRING .)
    COMMA           reduce using rule 194 (string -> MULTISTRING .)


state 69

    (181) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 148


state 70

    (53) declare_array_main_number -> declare_array_number . EQUAL list_number
    (54) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 149
    POINTCOMMA      reduce using rule 54 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 54 (declare_array_main_number -> declare_array_number .)
    RKEY            reduce using rule 54 (declare_array_main_number -> declare_array_number .)


state 71

    (57) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (58) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 150
    POINTCOMMA      reduce using rule 58 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 58 (declare_array_main_boolean -> declare_array_boolean .)
    RKEY            reduce using rule 58 (declare_array_main_boolean -> declare_array_boolean .)


state 72

    (61) declare_array_main_string -> declare_array_string . EQUAL list_string
    (62) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 151
    POINTCOMMA      reduce using rule 62 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 62 (declare_array_main_string -> declare_array_string .)
    RKEY            reduce using rule 62 (declare_array_main_string -> declare_array_string .)


state 73

    (182) prefix -> LET .

    VARIABLE        reduce using rule 182 (prefix -> LET .)


state 74

    (183) prefix -> VAR .

    VARIABLE        reduce using rule 183 (prefix -> VAR .)


state 75

    (184) prefix -> STATIC .

    VARIABLE        reduce using rule 184 (prefix -> STATIC .)


state 76

    (185) prefix -> CONST .

    VARIABLE        reduce using rule 185 (prefix -> CONST .)


state 77

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)
    RKEY            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 78

    (135) expression -> expression PLUS . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    term                           shift and go to state 152
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 79

    (136) expression -> expression MINUS . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    term                           shift and go to state 154
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 80

    (158) expCond -> expression operador . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 155
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 81

    (156) expOpLog -> expression oplogico . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 156
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 82

    (150) expEq -> expression EQUALTO . expression
    (203) operador -> EQUALTO .
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

  ! INCREMENT       [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 203 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 203 (operador -> EQUALTO .) ]

    expression                     shift and go to state 157
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 83

    (153) expNotEq -> expression NOTEQUALTO . expression
    (204) operador -> NOTEQUALTO .
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

  ! INCREMENT       [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 204 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 204 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 158
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 84

    (199) operador -> GREATER .

    INCREMENT       reduce using rule 199 (operador -> GREATER .)
    DECREMENT       reduce using rule 199 (operador -> GREATER .)
    LPAREN          reduce using rule 199 (operador -> GREATER .)
    NUMBER          reduce using rule 199 (operador -> GREATER .)
    FLOAT           reduce using rule 199 (operador -> GREATER .)
    VARIABLE        reduce using rule 199 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 199 (operador -> GREATER .)
    RPAREN          reduce using rule 199 (operador -> GREATER .)


state 85

    (200) operador -> LESS .

    INCREMENT       reduce using rule 200 (operador -> LESS .)
    DECREMENT       reduce using rule 200 (operador -> LESS .)
    LPAREN          reduce using rule 200 (operador -> LESS .)
    NUMBER          reduce using rule 200 (operador -> LESS .)
    FLOAT           reduce using rule 200 (operador -> LESS .)
    VARIABLE        reduce using rule 200 (operador -> LESS .)
    OBJECTNAME      reduce using rule 200 (operador -> LESS .)
    RPAREN          reduce using rule 200 (operador -> LESS .)


state 86

    (201) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 201 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 201 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 201 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 201 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 201 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 201 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 201 (operador -> GREATEREQUAL .)
    RPAREN          reduce using rule 201 (operador -> GREATEREQUAL .)


state 87

    (202) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 202 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 202 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 202 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 202 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 202 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 202 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 202 (operador -> LESSEQUAL .)
    RPAREN          reduce using rule 202 (operador -> LESSEQUAL .)


state 88

    (205) oplogico -> AND .

    INCREMENT       reduce using rule 205 (oplogico -> AND .)
    DECREMENT       reduce using rule 205 (oplogico -> AND .)
    LPAREN          reduce using rule 205 (oplogico -> AND .)
    NUMBER          reduce using rule 205 (oplogico -> AND .)
    FLOAT           reduce using rule 205 (oplogico -> AND .)
    VARIABLE        reduce using rule 205 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 205 (oplogico -> AND .)


state 89

    (206) oplogico -> OR .

    INCREMENT       reduce using rule 206 (oplogico -> OR .)
    DECREMENT       reduce using rule 206 (oplogico -> OR .)
    LPAREN          reduce using rule 206 (oplogico -> OR .)
    NUMBER          reduce using rule 206 (oplogico -> OR .)
    FLOAT           reduce using rule 206 (oplogico -> OR .)
    VARIABLE        reduce using rule 206 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 206 (oplogico -> OR .)


state 90

    (154) expOpLog -> expCond oplogico . expCond
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 95
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expCond                        shift and go to state 159
    expression                     shift and go to state 160
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 91

    (148) expEq -> expCond EQUALTO . expCond
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 95
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expCond                        shift and go to state 161
    expression                     shift and go to state 160
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 92

    (151) expNotEq -> expCond NOTEQUALTO . expCond
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 95
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expCond                        shift and go to state 162
    expression                     shift and go to state 160
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 93

    (138) term -> term PRODUCT . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    term                           shift and go to state 163
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 94

    (139) term -> term DIVIDE . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    term                           shift and go to state 164
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 95

    (159) expCond -> LPAREN . expression operador expression RPAREN
    (160) term1 -> LPAREN . group RPAREN
    (169) factor_expr -> LPAREN . expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (181) enum_value -> . object_name POINT object_name
    (198) object_name -> . OBJECTNAME

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    LPAREN          shift and go to state 153
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 165
    group                          shift and go to state 98
    term                           shift and go to state 14
    number                         shift and go to state 99
    variable                       shift and go to state 100
    array_value                    shift and go to state 101
    object_value                   shift and go to state 102
    term1                          shift and go to state 35
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    enum_value                     shift and go to state 46
    object_name                    shift and go to state 69

state 96

    (159) expCond -> LPAREN expression . operador expression RPAREN
    (169) factor_expr -> LPAREN expression . RPAREN
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (158) expCond -> expression . operador expression
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 167
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    operador                       shift and go to state 166

state 97

    (157) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 170


state 98

    (160) term1 -> LPAREN group . RPAREN
    (161) term1 -> group .

    RPAREN          shift and go to state 171
    INCREMENT       reduce using rule 161 (term1 -> group .)
    DECREMENT       reduce using rule 161 (term1 -> group .)


state 99

    (162) group -> number .
    (166) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 162 (group -> number .)
    RPAREN          reduce using rule 162 (group -> number .)
    INCREMENT       reduce using rule 162 (group -> number .)
    DECREMENT       reduce using rule 162 (group -> number .)
    PRODUCT         reduce using rule 166 (term -> number .)
    DIVIDE          reduce using rule 166 (term -> number .)
    PLUS            reduce using rule 166 (term -> number .)
    MINUS           reduce using rule 166 (term -> number .)
    GREATER         reduce using rule 166 (term -> number .)
    LESS            reduce using rule 166 (term -> number .)
    GREATEREQUAL    reduce using rule 166 (term -> number .)
    LESSEQUAL       reduce using rule 166 (term -> number .)
    EQUALTO         reduce using rule 166 (term -> number .)
    NOTEQUALTO      reduce using rule 166 (term -> number .)
    AND             reduce using rule 166 (term -> number .)
    OR              reduce using rule 166 (term -> number .)

  ! RPAREN          [ reduce using rule 166 (term -> number .) ]


state 100

    (163) group -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (170) other_value -> variable .
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for RPAREN resolved using rule 163 (group -> variable .)
    RPAREN          reduce using rule 163 (group -> variable .)
    INCREMENT       reduce using rule 163 (group -> variable .)
    DECREMENT       reduce using rule 163 (group -> variable .)
    LBRACKET        shift and go to state 139
    PRODUCT         reduce using rule 170 (other_value -> variable .)
    DIVIDE          reduce using rule 170 (other_value -> variable .)
    PLUS            reduce using rule 170 (other_value -> variable .)
    MINUS           reduce using rule 170 (other_value -> variable .)
    GREATER         reduce using rule 170 (other_value -> variable .)
    LESS            reduce using rule 170 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 170 (other_value -> variable .)
    LESSEQUAL       reduce using rule 170 (other_value -> variable .)
    EQUALTO         reduce using rule 170 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 170 (other_value -> variable .)
    AND             reduce using rule 170 (other_value -> variable .)
    OR              reduce using rule 170 (other_value -> variable .)
    POINT           shift and go to state 140

  ! RPAREN          [ reduce using rule 170 (other_value -> variable .) ]


state 101

    (164) group -> array_value .
    (171) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 164 (group -> array_value .)
    RPAREN          reduce using rule 164 (group -> array_value .)
    INCREMENT       reduce using rule 164 (group -> array_value .)
    DECREMENT       reduce using rule 164 (group -> array_value .)
    PRODUCT         reduce using rule 171 (other_value -> array_value .)
    DIVIDE          reduce using rule 171 (other_value -> array_value .)
    PLUS            reduce using rule 171 (other_value -> array_value .)
    MINUS           reduce using rule 171 (other_value -> array_value .)
    GREATER         reduce using rule 171 (other_value -> array_value .)
    LESS            reduce using rule 171 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 171 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 171 (other_value -> array_value .)
    EQUALTO         reduce using rule 171 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 171 (other_value -> array_value .)
    AND             reduce using rule 171 (other_value -> array_value .)
    OR              reduce using rule 171 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 171 (other_value -> array_value .) ]


state 102

    (165) group -> object_value .
    (173) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 165 (group -> object_value .)
    RPAREN          reduce using rule 165 (group -> object_value .)
    INCREMENT       reduce using rule 165 (group -> object_value .)
    DECREMENT       reduce using rule 165 (group -> object_value .)
    PRODUCT         reduce using rule 173 (other_value -> object_value .)
    DIVIDE          reduce using rule 173 (other_value -> object_value .)
    PLUS            reduce using rule 173 (other_value -> object_value .)
    MINUS           reduce using rule 173 (other_value -> object_value .)
    GREATER         reduce using rule 173 (other_value -> object_value .)
    LESS            reduce using rule 173 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 173 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 173 (other_value -> object_value .)
    EQUALTO         reduce using rule 173 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 173 (other_value -> object_value .)
    AND             reduce using rule 173 (other_value -> object_value .)
    OR              reduce using rule 173 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 173 (other_value -> object_value .) ]


state 103

    (176) object_value -> object_value_form1 .

    RPAREN          reduce using rule 176 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 176 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 176 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 176 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 176 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 176 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 176 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 176 (object_value -> object_value_form1 .)
    LESS            reduce using rule 176 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 176 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 176 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 176 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 176 (object_value -> object_value_form1 .)
    AND             reduce using rule 176 (object_value -> object_value_form1 .)
    OR              reduce using rule 176 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 176 (object_value -> object_value_form1 .)
    $end            reduce using rule 176 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 176 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 176 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 176 (object_value -> object_value_form1 .)


state 104

    (177) object_value -> object_value_form2 .

    RPAREN          reduce using rule 177 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 177 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 177 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 177 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 177 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 177 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 177 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 177 (object_value -> object_value_form2 .)
    LESS            reduce using rule 177 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 177 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 177 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 177 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 177 (object_value -> object_value_form2 .)
    AND             reduce using rule 177 (object_value -> object_value_form2 .)
    OR              reduce using rule 177 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 177 (object_value -> object_value_form2 .)
    $end            reduce using rule 177 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 177 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 177 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 177 (object_value -> object_value_form2 .)


state 105

    (155) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (157) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 173

    factor_exprlog                 shift and go to state 172

state 106

    (149) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (157) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 173

    factor_exprlog                 shift and go to state 174

state 107

    (152) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (157) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 173

    factor_exprlog                 shift and go to state 175

state 108

    (144) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 144 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 144 (expNeg -> NEGATION expOpLog .)
    RKEY            reduce using rule 144 (expNeg -> NEGATION expOpLog .)
    RBRACKET        reduce using rule 144 (expNeg -> NEGATION expOpLog .)
    COMMA           reduce using rule 144 (expNeg -> NEGATION expOpLog .)


state 109

    (145) expNeg -> NEGATION factor_exprlog .
    (155) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 145 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 145 (expNeg -> NEGATION factor_exprlog .)
    RKEY            reduce using rule 145 (expNeg -> NEGATION factor_exprlog .)
    RBRACKET        reduce using rule 145 (expNeg -> NEGATION factor_exprlog .)
    COMMA           reduce using rule 145 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 105

state 110

    (146) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 146 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 146 (expNeg -> NEGATION boolean .)
    RKEY            reduce using rule 146 (expNeg -> NEGATION boolean .)
    RBRACKET        reduce using rule 146 (expNeg -> NEGATION boolean .)
    COMMA           reduce using rule 146 (expNeg -> NEGATION boolean .)


state 111

    (147) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (157) factor_exprlog -> LPAREN . expCond RPAREN
    (159) expCond -> LPAREN . expression operador expression RPAREN
    (160) term1 -> LPAREN . group RPAREN
    (169) factor_expr -> LPAREN . expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (181) enum_value -> . object_name POINT object_name
    (198) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expOpLog                       shift and go to state 176
    expCond                        shift and go to state 177
    expression                     shift and go to state 178
    group                          shift and go to state 98
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    number                         shift and go to state 99
    variable                       shift and go to state 100
    array_value                    shift and go to state 101
    object_value                   shift and go to state 102
    term1                          shift and go to state 35
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    enum_value                     shift and go to state 46
    object_name                    shift and go to state 69

state 112

    (154) expOpLog -> expCond . oplogico expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 113

    (156) expOpLog -> expression . oplogico expression
    (158) expCond -> expression . operador expression
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (205) oplogico -> . AND
    (206) oplogico -> . OR
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    AND             shift and go to state 88
    OR              shift and go to state 89
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    oplogico                       shift and go to state 81
    operador                       shift and go to state 80

state 114

    (195) boolean -> TRUE .

    POINTCOMMA      reduce using rule 195 (boolean -> TRUE .)
    $end            reduce using rule 195 (boolean -> TRUE .)
    RKEY            reduce using rule 195 (boolean -> TRUE .)
    RBRACKET        reduce using rule 195 (boolean -> TRUE .)
    COMMA           reduce using rule 195 (boolean -> TRUE .)


state 115

    (196) boolean -> FALSE .

    POINTCOMMA      reduce using rule 196 (boolean -> FALSE .)
    $end            reduce using rule 196 (boolean -> FALSE .)
    RKEY            reduce using rule 196 (boolean -> FALSE .)
    RBRACKET        reduce using rule 196 (boolean -> FALSE .)
    COMMA           reduce using rule 196 (boolean -> FALSE .)


state 116

    (170) other_value -> variable .
    (163) group -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 170 (other_value -> variable .)
    DIVIDE          reduce using rule 170 (other_value -> variable .)
    PLUS            reduce using rule 170 (other_value -> variable .)
    MINUS           reduce using rule 170 (other_value -> variable .)
    AND             reduce using rule 170 (other_value -> variable .)
    OR              reduce using rule 170 (other_value -> variable .)
    GREATER         reduce using rule 170 (other_value -> variable .)
    LESS            reduce using rule 170 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 170 (other_value -> variable .)
    LESSEQUAL       reduce using rule 170 (other_value -> variable .)
    EQUALTO         reduce using rule 170 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 170 (other_value -> variable .)
    POINTCOMMA      reduce using rule 170 (other_value -> variable .)
    $end            reduce using rule 170 (other_value -> variable .)
    RPAREN          reduce using rule 170 (other_value -> variable .)
    RKEY            reduce using rule 170 (other_value -> variable .)
    RBRACKET        reduce using rule 170 (other_value -> variable .)
    COMMA           reduce using rule 170 (other_value -> variable .)
    INCREMENT       reduce using rule 163 (group -> variable .)
    DECREMENT       reduce using rule 163 (group -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140


state 117

    (171) other_value -> array_value .
    (164) group -> array_value .

    PRODUCT         reduce using rule 171 (other_value -> array_value .)
    DIVIDE          reduce using rule 171 (other_value -> array_value .)
    PLUS            reduce using rule 171 (other_value -> array_value .)
    MINUS           reduce using rule 171 (other_value -> array_value .)
    AND             reduce using rule 171 (other_value -> array_value .)
    OR              reduce using rule 171 (other_value -> array_value .)
    GREATER         reduce using rule 171 (other_value -> array_value .)
    LESS            reduce using rule 171 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 171 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 171 (other_value -> array_value .)
    EQUALTO         reduce using rule 171 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 171 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 171 (other_value -> array_value .)
    $end            reduce using rule 171 (other_value -> array_value .)
    RPAREN          reduce using rule 171 (other_value -> array_value .)
    RKEY            reduce using rule 171 (other_value -> array_value .)
    RBRACKET        reduce using rule 171 (other_value -> array_value .)
    COMMA           reduce using rule 171 (other_value -> array_value .)
    INCREMENT       reduce using rule 164 (group -> array_value .)
    DECREMENT       reduce using rule 164 (group -> array_value .)


state 118

    (48) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN
    (66) var_null -> declare_any EQUAL . NULL
    (67) var_undefined -> declare_any EQUAL . UNDEFINED
    (80) declare_generic -> declare_any EQUAL . assign_value
    (65) declare_generic_array -> declare_any EQUAL . list_types
    (92) assign_value -> . general_value
    (93) assign_value -> . object_definition
    (107) list_types -> . list_number
    (108) list_types -> . list_boolean
    (109) list_types -> . list_string
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (94) object_definition -> . LKEY attributes RKEY
    (110) list_number -> . LBRACKET numbers RBRACKET
    (113) list_boolean -> . LBRACKET booleans RBRACKET
    (116) list_string -> . LBRACKET strings RBRACKET
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NEW             shift and go to state 180
    NULL            shift and go to state 181
    UNDEFINED       shift and go to state 182
    LKEY            shift and go to state 198
    LBRACKET        shift and go to state 199
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    assign_value                   shift and go to state 183
    list_types                     shift and go to state 184
    general_value                  shift and go to state 185
    object_definition              shift and go to state 186
    list_number                    shift and go to state 187
    list_boolean                   shift and go to state 188
    list_string                    shift and go to state 189
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 119

    (73) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (70) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (76) declare_string -> declare_any TWOPOINTS . VARSTRING
    (79) declare_var_enum -> declare_any TWOPOINTS . object_name
    (56) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (60) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (64) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (198) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 200
    VARNUMBER       shift and go to state 201
    VARSTRING       shift and go to state 202
    ARRAY           shift and go to state 204
    OBJECTNAME      shift and go to state 52

    object_name                    shift and go to state 203

state 120

    (140) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 140 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 140 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 140 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 140 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 140 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 140 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 140 (term -> term1 INCREMENT .)
    LESS            reduce using rule 140 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 140 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 140 (term -> term1 INCREMENT .)
    AND             reduce using rule 140 (term -> term1 INCREMENT .)
    OR              reduce using rule 140 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 140 (term -> term1 INCREMENT .)
    $end            reduce using rule 140 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 140 (term -> term1 INCREMENT .)
    RKEY            reduce using rule 140 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 140 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 140 (term -> term1 INCREMENT .)


state 121

    (142) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 142 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 142 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 142 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 142 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 142 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 142 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 142 (term -> term1 DECREMENT .)
    LESS            reduce using rule 142 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 142 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 142 (term -> term1 DECREMENT .)
    AND             reduce using rule 142 (term -> term1 DECREMENT .)
    OR              reduce using rule 142 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 142 (term -> term1 DECREMENT .)
    $end            reduce using rule 142 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 142 (term -> term1 DECREMENT .)
    RKEY            reduce using rule 142 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 142 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 142 (term -> term1 DECREMENT .)


state 122

    (141) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 141 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 141 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 141 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 141 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 141 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 141 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 141 (term -> INCREMENT term1 .)
    LESS            reduce using rule 141 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 141 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 141 (term -> INCREMENT term1 .)
    AND             reduce using rule 141 (term -> INCREMENT term1 .)
    OR              reduce using rule 141 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 141 (term -> INCREMENT term1 .)
    $end            reduce using rule 141 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 141 (term -> INCREMENT term1 .)
    RKEY            reduce using rule 141 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 141 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 141 (term -> INCREMENT term1 .)


state 123

    (160) term1 -> LPAREN . group RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58

    group                          shift and go to state 205
    number                         shift and go to state 124
    variable                       shift and go to state 125
    array_value                    shift and go to state 126
    object_value                   shift and go to state 127
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 124

    (162) group -> number .

    PRODUCT         reduce using rule 162 (group -> number .)
    DIVIDE          reduce using rule 162 (group -> number .)
    PLUS            reduce using rule 162 (group -> number .)
    MINUS           reduce using rule 162 (group -> number .)
    EQUALTO         reduce using rule 162 (group -> number .)
    NOTEQUALTO      reduce using rule 162 (group -> number .)
    GREATER         reduce using rule 162 (group -> number .)
    LESS            reduce using rule 162 (group -> number .)
    GREATEREQUAL    reduce using rule 162 (group -> number .)
    LESSEQUAL       reduce using rule 162 (group -> number .)
    AND             reduce using rule 162 (group -> number .)
    OR              reduce using rule 162 (group -> number .)
    POINTCOMMA      reduce using rule 162 (group -> number .)
    $end            reduce using rule 162 (group -> number .)
    RPAREN          reduce using rule 162 (group -> number .)
    RKEY            reduce using rule 162 (group -> number .)
    RBRACKET        reduce using rule 162 (group -> number .)
    COMMA           reduce using rule 162 (group -> number .)


state 125

    (163) group -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 163 (group -> variable .)
    DIVIDE          reduce using rule 163 (group -> variable .)
    PLUS            reduce using rule 163 (group -> variable .)
    MINUS           reduce using rule 163 (group -> variable .)
    EQUALTO         reduce using rule 163 (group -> variable .)
    NOTEQUALTO      reduce using rule 163 (group -> variable .)
    GREATER         reduce using rule 163 (group -> variable .)
    LESS            reduce using rule 163 (group -> variable .)
    GREATEREQUAL    reduce using rule 163 (group -> variable .)
    LESSEQUAL       reduce using rule 163 (group -> variable .)
    AND             reduce using rule 163 (group -> variable .)
    OR              reduce using rule 163 (group -> variable .)
    POINTCOMMA      reduce using rule 163 (group -> variable .)
    $end            reduce using rule 163 (group -> variable .)
    RPAREN          reduce using rule 163 (group -> variable .)
    RKEY            reduce using rule 163 (group -> variable .)
    RBRACKET        reduce using rule 163 (group -> variable .)
    COMMA           reduce using rule 163 (group -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140


state 126

    (164) group -> array_value .

    PRODUCT         reduce using rule 164 (group -> array_value .)
    DIVIDE          reduce using rule 164 (group -> array_value .)
    PLUS            reduce using rule 164 (group -> array_value .)
    MINUS           reduce using rule 164 (group -> array_value .)
    EQUALTO         reduce using rule 164 (group -> array_value .)
    NOTEQUALTO      reduce using rule 164 (group -> array_value .)
    GREATER         reduce using rule 164 (group -> array_value .)
    LESS            reduce using rule 164 (group -> array_value .)
    GREATEREQUAL    reduce using rule 164 (group -> array_value .)
    LESSEQUAL       reduce using rule 164 (group -> array_value .)
    AND             reduce using rule 164 (group -> array_value .)
    OR              reduce using rule 164 (group -> array_value .)
    POINTCOMMA      reduce using rule 164 (group -> array_value .)
    $end            reduce using rule 164 (group -> array_value .)
    RPAREN          reduce using rule 164 (group -> array_value .)
    RKEY            reduce using rule 164 (group -> array_value .)
    RBRACKET        reduce using rule 164 (group -> array_value .)
    COMMA           reduce using rule 164 (group -> array_value .)


state 127

    (165) group -> object_value .

    PRODUCT         reduce using rule 165 (group -> object_value .)
    DIVIDE          reduce using rule 165 (group -> object_value .)
    PLUS            reduce using rule 165 (group -> object_value .)
    MINUS           reduce using rule 165 (group -> object_value .)
    EQUALTO         reduce using rule 165 (group -> object_value .)
    NOTEQUALTO      reduce using rule 165 (group -> object_value .)
    GREATER         reduce using rule 165 (group -> object_value .)
    LESS            reduce using rule 165 (group -> object_value .)
    GREATEREQUAL    reduce using rule 165 (group -> object_value .)
    LESSEQUAL       reduce using rule 165 (group -> object_value .)
    AND             reduce using rule 165 (group -> object_value .)
    OR              reduce using rule 165 (group -> object_value .)
    POINTCOMMA      reduce using rule 165 (group -> object_value .)
    $end            reduce using rule 165 (group -> object_value .)
    RPAREN          reduce using rule 165 (group -> object_value .)
    RKEY            reduce using rule 165 (group -> object_value .)
    RBRACKET        reduce using rule 165 (group -> object_value .)
    COMMA           reduce using rule 165 (group -> object_value .)


state 128

    (143) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 143 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 143 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 143 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 143 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 143 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 143 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 143 (term -> DECREMENT term1 .)
    LESS            reduce using rule 143 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 143 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 143 (term -> DECREMENT term1 .)
    AND             reduce using rule 143 (term -> DECREMENT term1 .)
    OR              reduce using rule 143 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 143 (term -> DECREMENT term1 .)
    $end            reduce using rule 143 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 143 (term -> DECREMENT term1 .)
    RKEY            reduce using rule 143 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 143 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 143 (term -> DECREMENT term1 .)


state 129

    (130) termS -> string PLUS . chain
    (131) chain -> . termS PLUS value
    (132) chain -> . value
    (130) termS -> . string PLUS chain
    (133) value -> . expression
    (134) value -> . string
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    string                         shift and go to state 206
    chain                          shift and go to state 207
    termS                          shift and go to state 208
    value                          shift and go to state 209
    expression                     shift and go to state 210
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 130

    (71) var_boolean -> declare_boolean EQUAL . boolean_value
    (120) boolean_value -> . boolean
    (121) boolean_value -> . other_value
    (122) boolean_value -> . expCond
    (123) boolean_value -> . expOpLog
    (124) boolean_value -> . expNeg
    (125) boolean_value -> . expEq
    (126) boolean_value -> . expNotEq
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64

    boolean_value                  shift and go to state 211
    boolean                        shift and go to state 212
    other_value                    shift and go to state 213
    expCond                        shift and go to state 214
    expOpLog                       shift and go to state 215
    expNeg                         shift and go to state 216
    expEq                          shift and go to state 217
    expNotEq                       shift and go to state 218
    variable                       shift and go to state 219
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    expression                     shift and go to state 220
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    group                          shift and go to state 62

state 131

    (59) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 221


state 132

    (68) var_number -> declare_number EQUAL . number_value
    (119) number_value -> . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    number_value                   shift and go to state 222
    expression                     shift and go to state 223
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 133

    (55) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 224


state 134

    (74) var_string -> declare_string EQUAL . string_value
    (127) string_value -> . string
    (128) string_value -> . other_value
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    string_value                   shift and go to state 225
    string                         shift and go to state 226
    other_value                    shift and go to state 227
    variable                       shift and go to state 228
    array_value                    shift and go to state 229
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 230
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 135

    (63) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 231


state 136

    (77) var_enum -> declare_var_enum EQUAL . enum_value
    (181) enum_value -> . object_name POINT object_name
    (198) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 52

    enum_value                     shift and go to state 232
    object_name                    shift and go to state 69

state 137

    (26) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 233


state 138

    (86) assign_variable -> variable EQUAL . assign_value
    (87) assign_variable -> variable EQUAL . list_types
    (92) assign_value -> . general_value
    (93) assign_value -> . object_definition
    (107) list_types -> . list_number
    (108) list_types -> . list_boolean
    (109) list_types -> . list_string
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (94) object_definition -> . LKEY attributes RKEY
    (110) list_number -> . LBRACKET numbers RBRACKET
    (113) list_boolean -> . LBRACKET booleans RBRACKET
    (116) list_string -> . LBRACKET strings RBRACKET
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LKEY            shift and go to state 198
    LBRACKET        shift and go to state 199
    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    variable                       shift and go to state 116
    assign_value                   shift and go to state 234
    list_types                     shift and go to state 235
    general_value                  shift and go to state 185
    object_definition              shift and go to state 186
    list_number                    shift and go to state 187
    list_boolean                   shift and go to state 188
    list_string                    shift and go to state 189
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 139

    (180) array_value -> variable LBRACKET . expression RBRACKET
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    variable                       shift and go to state 116
    expression                     shift and go to state 236
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 140

    (178) object_value_form1 -> variable POINT . variable
    (179) object_value_form2 -> variable POINT . array_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 58

    variable                       shift and go to state 237
    array_value                    shift and go to state 238

state 141

    (88) assign_array -> array_value EQUAL . general_value
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    array_value                    shift and go to state 117
    general_value                  shift and go to state 239
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 142

    (89) assign_object_value -> object_value_form1 EQUAL . general_value
    (90) assign_object_value -> object_value_form1 EQUAL . list_types
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (107) list_types -> . list_number
    (108) list_types -> . list_boolean
    (109) list_types -> . list_string
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (110) list_number -> . LBRACKET numbers RBRACKET
    (113) list_boolean -> . LBRACKET booleans RBRACKET
    (116) list_string -> . LBRACKET strings RBRACKET
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    LBRACKET        shift and go to state 199
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    object_value_form1             shift and go to state 103
    general_value                  shift and go to state 240
    list_types                     shift and go to state 241
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    list_number                    shift and go to state 187
    list_boolean                   shift and go to state 188
    list_string                    shift and go to state 189
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form2             shift and go to state 104

state 143

    (91) assign_object_value -> object_value_form2 EQUAL . general_value
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    object_value_form2             shift and go to state 104
    general_value                  shift and go to state 242
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103

state 144

    (82) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 82 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 82 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 82 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 82 (declare_any -> prefix VARIABLE .)
    RKEY            reduce using rule 82 (declare_any -> prefix VARIABLE .)


state 145

    (36) funcionif -> IF LPAREN . formLog RPAREN substatement
    (37) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif
    (38) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif funcionelse
    (39) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelse
    (174) formLog -> . expCond
    (175) formLog -> . expOpLog
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    formLog                        shift and go to state 243
    expCond                        shift and go to state 244
    expOpLog                       shift and go to state 245
    expression                     shift and go to state 246
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 146

    (45) funcionwhile -> WHILE LPAREN . formLog RPAREN substatement
    (174) formLog -> . expCond
    (175) formLog -> . expOpLog
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    formLog                        shift and go to state 247
    expCond                        shift and go to state 244
    expOpLog                       shift and go to state 245
    expression                     shift and go to state 246
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 147

    (43) funcionfor -> FOR LPAREN . declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (44) funcionfor -> FOR LPAREN . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (82) declare_any -> . prefix VARIABLE
    (182) prefix -> . LET
    (183) prefix -> . VAR
    (184) prefix -> . STATIC
    (185) prefix -> . CONST

    VARIABLE        shift and go to state 249
    LET             shift and go to state 73
    VAR             shift and go to state 74
    STATIC          shift and go to state 75
    CONST           shift and go to state 76

    declare_any                    shift and go to state 248
    prefix                         shift and go to state 57

state 148

    (181) enum_value -> object_name POINT . object_name
    (198) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 52

    object_name                    shift and go to state 250

state 149

    (53) declare_array_main_number -> declare_array_number EQUAL . list_number
    (110) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 252

    list_number                    shift and go to state 251

state 150

    (57) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (113) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 254

    list_boolean                   shift and go to state 253

state 151

    (61) declare_array_main_string -> declare_array_string EQUAL . list_string
    (116) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 256

    list_string                    shift and go to state 255

state 152

    (135) expression -> expression PLUS term .
    (138) term -> term . PRODUCT term
    (139) term -> term . DIVIDE term

    PLUS            reduce using rule 135 (expression -> expression PLUS term .)
    MINUS           reduce using rule 135 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 135 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 135 (expression -> expression PLUS term .)
    GREATER         reduce using rule 135 (expression -> expression PLUS term .)
    LESS            reduce using rule 135 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 135 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 135 (expression -> expression PLUS term .)
    AND             reduce using rule 135 (expression -> expression PLUS term .)
    OR              reduce using rule 135 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 135 (expression -> expression PLUS term .)
    $end            reduce using rule 135 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 135 (expression -> expression PLUS term .)
    RKEY            reduce using rule 135 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 135 (expression -> expression PLUS term .)
    COMMA           reduce using rule 135 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 93
    DIVIDE          shift and go to state 94


state 153

    (160) term1 -> LPAREN . group RPAREN
    (169) factor_expr -> LPAREN . expression RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (181) enum_value -> . object_name POINT object_name
    (198) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    OBJECTNAME      shift and go to state 52

    group                          shift and go to state 98
    expression                     shift and go to state 257
    number                         shift and go to state 99
    variable                       shift and go to state 258
    array_value                    shift and go to state 101
    object_value                   shift and go to state 102
    term                           shift and go to state 14
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    term1                          shift and go to state 35
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    enum_value                     shift and go to state 46
    object_name                    shift and go to state 69

state 154

    (136) expression -> expression MINUS term .
    (138) term -> term . PRODUCT term
    (139) term -> term . DIVIDE term

    PLUS            reduce using rule 136 (expression -> expression MINUS term .)
    MINUS           reduce using rule 136 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 136 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 136 (expression -> expression MINUS term .)
    GREATER         reduce using rule 136 (expression -> expression MINUS term .)
    LESS            reduce using rule 136 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 136 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 136 (expression -> expression MINUS term .)
    AND             reduce using rule 136 (expression -> expression MINUS term .)
    OR              reduce using rule 136 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 136 (expression -> expression MINUS term .)
    $end            reduce using rule 136 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 136 (expression -> expression MINUS term .)
    RKEY            reduce using rule 136 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 136 (expression -> expression MINUS term .)
    COMMA           reduce using rule 136 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 93
    DIVIDE          shift and go to state 94


state 155

    (158) expCond -> expression operador expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    EQUALTO         reduce using rule 158 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 158 (expCond -> expression operador expression .)
    AND             reduce using rule 158 (expCond -> expression operador expression .)
    OR              reduce using rule 158 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 158 (expCond -> expression operador expression .)
    $end            reduce using rule 158 (expCond -> expression operador expression .)
    RKEY            reduce using rule 158 (expCond -> expression operador expression .)
    RBRACKET        reduce using rule 158 (expCond -> expression operador expression .)
    COMMA           reduce using rule 158 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 158 (expCond -> expression operador expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 156

    (156) expOpLog -> expression oplogico expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 156 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 156 (expOpLog -> expression oplogico expression .)
    RKEY            reduce using rule 156 (expOpLog -> expression oplogico expression .)
    RBRACKET        reduce using rule 156 (expOpLog -> expression oplogico expression .)
    COMMA           reduce using rule 156 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 156 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 157

    (150) expEq -> expression EQUALTO expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 150 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 150 (expEq -> expression EQUALTO expression .)
    RKEY            reduce using rule 150 (expEq -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 150 (expEq -> expression EQUALTO expression .)
    COMMA           reduce using rule 150 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 158

    (153) expNotEq -> expression NOTEQUALTO expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 153 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 153 (expNotEq -> expression NOTEQUALTO expression .)
    RKEY            reduce using rule 153 (expNotEq -> expression NOTEQUALTO expression .)
    RBRACKET        reduce using rule 153 (expNotEq -> expression NOTEQUALTO expression .)
    COMMA           reduce using rule 153 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 159

    (154) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 154 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 154 (expOpLog -> expCond oplogico expCond .)
    RKEY            reduce using rule 154 (expOpLog -> expCond oplogico expCond .)
    RBRACKET        reduce using rule 154 (expOpLog -> expCond oplogico expCond .)
    COMMA           reduce using rule 154 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 154 (expOpLog -> expCond oplogico expCond .)


state 160

    (158) expCond -> expression . operador expression
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    operador                       shift and go to state 80

state 161

    (148) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 148 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 148 (expEq -> expCond EQUALTO expCond .)
    RKEY            reduce using rule 148 (expEq -> expCond EQUALTO expCond .)
    RBRACKET        reduce using rule 148 (expEq -> expCond EQUALTO expCond .)
    COMMA           reduce using rule 148 (expEq -> expCond EQUALTO expCond .)


state 162

    (151) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 151 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 151 (expNotEq -> expCond NOTEQUALTO expCond .)
    RKEY            reduce using rule 151 (expNotEq -> expCond NOTEQUALTO expCond .)
    RBRACKET        reduce using rule 151 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMA           reduce using rule 151 (expNotEq -> expCond NOTEQUALTO expCond .)


state 163

    (138) term -> term PRODUCT term .
    (138) term -> term . PRODUCT term
    (139) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 138 (term -> term PRODUCT term .)
    MINUS           reduce using rule 138 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 138 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 138 (term -> term PRODUCT term .)
    GREATER         reduce using rule 138 (term -> term PRODUCT term .)
    LESS            reduce using rule 138 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 138 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 138 (term -> term PRODUCT term .)
    AND             reduce using rule 138 (term -> term PRODUCT term .)
    OR              reduce using rule 138 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 138 (term -> term PRODUCT term .)
    $end            reduce using rule 138 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 138 (term -> term PRODUCT term .)
    RKEY            reduce using rule 138 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 138 (term -> term PRODUCT term .)
    COMMA           reduce using rule 138 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 93
    DIVIDE          shift and go to state 94

  ! PRODUCT         [ reduce using rule 138 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 138 (term -> term PRODUCT term .) ]


state 164

    (139) term -> term DIVIDE term .
    (138) term -> term . PRODUCT term
    (139) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 139 (term -> term DIVIDE term .)
    MINUS           reduce using rule 139 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 139 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 139 (term -> term DIVIDE term .)
    GREATER         reduce using rule 139 (term -> term DIVIDE term .)
    LESS            reduce using rule 139 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 139 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 139 (term -> term DIVIDE term .)
    AND             reduce using rule 139 (term -> term DIVIDE term .)
    OR              reduce using rule 139 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 139 (term -> term DIVIDE term .)
    $end            reduce using rule 139 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 139 (term -> term DIVIDE term .)
    RKEY            reduce using rule 139 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 139 (term -> term DIVIDE term .)
    COMMA           reduce using rule 139 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 93
    DIVIDE          shift and go to state 94

  ! PRODUCT         [ reduce using rule 139 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 139 (term -> term DIVIDE term .) ]


state 165

    (159) expCond -> LPAREN expression . operador expression RPAREN
    (169) factor_expr -> LPAREN expression . RPAREN
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 167
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    operador                       shift and go to state 259

state 166

    (159) expCond -> LPAREN expression operador . expression RPAREN
    (158) expCond -> expression operador . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 260
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 167

    (169) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    RKEY            reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 169 (factor_expr -> LPAREN expression RPAREN .)


state 168

    (203) operador -> EQUALTO .

    INCREMENT       reduce using rule 203 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 203 (operador -> EQUALTO .)
    LPAREN          reduce using rule 203 (operador -> EQUALTO .)
    NUMBER          reduce using rule 203 (operador -> EQUALTO .)
    FLOAT           reduce using rule 203 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 203 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 203 (operador -> EQUALTO .)
    RPAREN          reduce using rule 203 (operador -> EQUALTO .)


state 169

    (204) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 204 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 204 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 204 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 204 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 204 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 204 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 204 (operador -> NOTEQUALTO .)
    RPAREN          reduce using rule 204 (operador -> NOTEQUALTO .)


state 170

    (157) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    RKEY            reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    RBRACKET        reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMA           reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 157 (factor_exprlog -> LPAREN expCond RPAREN .)


state 171

    (160) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    RKEY            reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 160 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 160 (term1 -> LPAREN group RPAREN .)


state 172

    (155) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RKEY            reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RBRACKET        reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMA           reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 155 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 173

    (157) factor_exprlog -> LPAREN . expCond RPAREN
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 95
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expCond                        shift and go to state 97
    expression                     shift and go to state 160
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 174

    (149) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 149 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 149 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RKEY            reduce using rule 149 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 149 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMA           reduce using rule 149 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 175

    (152) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 152 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 152 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RKEY            reduce using rule 152 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 152 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMA           reduce using rule 152 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 176

    (147) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 261


state 177

    (157) factor_exprlog -> LPAREN expCond . RPAREN
    (154) expOpLog -> expCond . oplogico expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    RPAREN          shift and go to state 170
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 178

    (159) expCond -> LPAREN expression . operador expression RPAREN
    (169) factor_expr -> LPAREN expression . RPAREN
    (156) expOpLog -> expression . oplogico expression
    (158) expCond -> expression . operador expression
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    RPAREN          shift and go to state 167
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 166
    oplogico                       shift and go to state 81

state 179

    (155) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 105

state 180

    (48) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN

    SET             shift and go to state 262


state 181

    (66) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 66 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 66 (var_null -> declare_any EQUAL NULL .)
    RKEY            reduce using rule 66 (var_null -> declare_any EQUAL NULL .)


state 182

    (67) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 67 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 67 (var_undefined -> declare_any EQUAL UNDEFINED .)
    RKEY            reduce using rule 67 (var_undefined -> declare_any EQUAL UNDEFINED .)


state 183

    (80) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 80 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 80 (declare_generic -> declare_any EQUAL assign_value .)
    RKEY            reduce using rule 80 (declare_generic -> declare_any EQUAL assign_value .)


state 184

    (65) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 65 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 65 (declare_generic_array -> declare_any EQUAL list_types .)
    RKEY            reduce using rule 65 (declare_generic_array -> declare_any EQUAL list_types .)


state 185

    (92) assign_value -> general_value .

    POINTCOMMA      reduce using rule 92 (assign_value -> general_value .)
    $end            reduce using rule 92 (assign_value -> general_value .)
    RKEY            reduce using rule 92 (assign_value -> general_value .)


state 186

    (93) assign_value -> object_definition .

    POINTCOMMA      reduce using rule 93 (assign_value -> object_definition .)
    $end            reduce using rule 93 (assign_value -> object_definition .)
    RKEY            reduce using rule 93 (assign_value -> object_definition .)


state 187

    (107) list_types -> list_number .

    POINTCOMMA      reduce using rule 107 (list_types -> list_number .)
    $end            reduce using rule 107 (list_types -> list_number .)
    RKEY            reduce using rule 107 (list_types -> list_number .)
    COMMA           reduce using rule 107 (list_types -> list_number .)


state 188

    (108) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 108 (list_types -> list_boolean .)
    $end            reduce using rule 108 (list_types -> list_boolean .)
    RKEY            reduce using rule 108 (list_types -> list_boolean .)
    COMMA           reduce using rule 108 (list_types -> list_boolean .)


state 189

    (109) list_types -> list_string .

    POINTCOMMA      reduce using rule 109 (list_types -> list_string .)
    $end            reduce using rule 109 (list_types -> list_string .)
    RKEY            reduce using rule 109 (list_types -> list_string .)
    COMMA           reduce using rule 109 (list_types -> list_string .)


state 190

    (99) general_value -> expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (158) expCond -> expression . operador expression
    (156) expOpLog -> expression . oplogico expression
    (150) expEq -> expression . EQUALTO expression
    (153) expNotEq -> expression . NOTEQUALTO expression
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 99 (general_value -> expression .)
    $end            reduce using rule 99 (general_value -> expression .)
    RKEY            reduce using rule 99 (general_value -> expression .)
    COMMA           reduce using rule 99 (general_value -> expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    EQUALTO         shift and go to state 82
    NOTEQUALTO      shift and go to state 83
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 80
    oplogico                       shift and go to state 81

state 191

    (100) general_value -> boolean .

    POINTCOMMA      reduce using rule 100 (general_value -> boolean .)
    $end            reduce using rule 100 (general_value -> boolean .)
    RKEY            reduce using rule 100 (general_value -> boolean .)
    COMMA           reduce using rule 100 (general_value -> boolean .)


state 192

    (101) general_value -> string .

    POINTCOMMA      reduce using rule 101 (general_value -> string .)
    $end            reduce using rule 101 (general_value -> string .)
    RKEY            reduce using rule 101 (general_value -> string .)
    COMMA           reduce using rule 101 (general_value -> string .)


state 193

    (102) general_value -> expCond .
    (154) expOpLog -> expCond . oplogico expCond
    (148) expEq -> expCond . EQUALTO expCond
    (151) expNotEq -> expCond . NOTEQUALTO expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 102 (general_value -> expCond .)
    $end            reduce using rule 102 (general_value -> expCond .)
    RKEY            reduce using rule 102 (general_value -> expCond .)
    COMMA           reduce using rule 102 (general_value -> expCond .)
    EQUALTO         shift and go to state 91
    NOTEQUALTO      shift and go to state 92
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 194

    (103) general_value -> expOpLog .

    POINTCOMMA      reduce using rule 103 (general_value -> expOpLog .)
    $end            reduce using rule 103 (general_value -> expOpLog .)
    RKEY            reduce using rule 103 (general_value -> expOpLog .)
    COMMA           reduce using rule 103 (general_value -> expOpLog .)


state 195

    (104) general_value -> expNeg .

    POINTCOMMA      reduce using rule 104 (general_value -> expNeg .)
    $end            reduce using rule 104 (general_value -> expNeg .)
    RKEY            reduce using rule 104 (general_value -> expNeg .)
    COMMA           reduce using rule 104 (general_value -> expNeg .)


state 196

    (105) general_value -> expEq .

    POINTCOMMA      reduce using rule 105 (general_value -> expEq .)
    $end            reduce using rule 105 (general_value -> expEq .)
    RKEY            reduce using rule 105 (general_value -> expEq .)
    COMMA           reduce using rule 105 (general_value -> expEq .)


state 197

    (106) general_value -> expNotEq .

    POINTCOMMA      reduce using rule 106 (general_value -> expNotEq .)
    $end            reduce using rule 106 (general_value -> expNotEq .)
    RKEY            reduce using rule 106 (general_value -> expNotEq .)
    COMMA           reduce using rule 106 (general_value -> expNotEq .)


state 198

    (94) object_definition -> LKEY . attributes RKEY
    (95) attributes -> . attributes COMMA attribute
    (96) attributes -> . attribute
    (97) attribute -> . variable TWOPOINTS general_value
    (98) attribute -> . variable TWOPOINTS list_types
    (197) variable -> . VARIABLE

    VARIABLE        shift and go to state 58

    attributes                     shift and go to state 263
    attribute                      shift and go to state 264
    variable                       shift and go to state 265

state 199

    (110) list_number -> LBRACKET . numbers RBRACKET
    (113) list_boolean -> LBRACKET . booleans RBRACKET
    (116) list_string -> LBRACKET . strings RBRACKET
    (111) numbers -> . numbers COMMA number_value
    (112) numbers -> . number_value
    (114) booleans -> . booleans COMMA boolean_value
    (115) booleans -> . boolean_value
    (117) strings -> . strings COMMA string_value
    (118) strings -> . string_value
    (119) number_value -> . expression
    (120) boolean_value -> . boolean
    (121) boolean_value -> . other_value
    (122) boolean_value -> . expCond
    (123) boolean_value -> . expOpLog
    (124) boolean_value -> . expNeg
    (125) boolean_value -> . expEq
    (126) boolean_value -> . expNotEq
    (127) string_value -> . string
    (128) string_value -> . other_value
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    VARIABLE        shift and go to state 58
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    OBJECTNAME      shift and go to state 52

    numbers                        shift and go to state 266
    booleans                       shift and go to state 267
    strings                        shift and go to state 268
    number_value                   shift and go to state 269
    boolean_value                  shift and go to state 270
    string_value                   shift and go to state 271
    expression                     shift and go to state 272
    boolean                        shift and go to state 212
    other_value                    shift and go to state 273
    expCond                        shift and go to state 214
    expOpLog                       shift and go to state 215
    expNeg                         shift and go to state 216
    expEq                          shift and go to state 217
    expNotEq                       shift and go to state 218
    string                         shift and go to state 226
    term                           shift and go to state 14
    variable                       shift and go to state 219
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    group                          shift and go to state 62

state 200

    (73) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 73 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 73 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 73 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 73 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    RKEY            reduce using rule 73 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 201

    (70) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 70 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 70 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 70 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 70 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    RKEY            reduce using rule 70 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 202

    (76) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 76 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 76 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 76 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 76 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    RKEY            reduce using rule 76 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 203

    (79) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 79 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 79 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 79 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    RKEY            reduce using rule 79 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 204

    (56) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (60) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (64) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 274


state 205

    (160) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 171


state 206

    (130) termS -> string . PLUS chain
    (134) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 129
    POINTCOMMA      reduce using rule 134 (value -> string .)
    $end            reduce using rule 134 (value -> string .)
    RKEY            reduce using rule 134 (value -> string .)

  ! PLUS            [ reduce using rule 134 (value -> string .) ]


state 207

    (130) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 130 (termS -> string PLUS chain .)
    $end            reduce using rule 130 (termS -> string PLUS chain .)
    PLUS            reduce using rule 130 (termS -> string PLUS chain .)
    RKEY            reduce using rule 130 (termS -> string PLUS chain .)


state 208

    (131) chain -> termS . PLUS value

    PLUS            shift and go to state 275


state 209

    (132) chain -> value .

    POINTCOMMA      reduce using rule 132 (chain -> value .)
    $end            reduce using rule 132 (chain -> value .)
    PLUS            reduce using rule 132 (chain -> value .)
    RKEY            reduce using rule 132 (chain -> value .)


state 210

    (133) value -> expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 133 (value -> expression .)
    $end            reduce using rule 133 (value -> expression .)
    RKEY            reduce using rule 133 (value -> expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79

  ! PLUS            [ reduce using rule 133 (value -> expression .) ]


state 211

    (71) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 71 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 71 (var_boolean -> declare_boolean EQUAL boolean_value .)
    RKEY            reduce using rule 71 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 212

    (120) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 120 (boolean_value -> boolean .)
    $end            reduce using rule 120 (boolean_value -> boolean .)
    RKEY            reduce using rule 120 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 120 (boolean_value -> boolean .)
    COMMA           reduce using rule 120 (boolean_value -> boolean .)


state 213

    (121) boolean_value -> other_value .
    (168) term -> other_value .

    POINTCOMMA      reduce using rule 121 (boolean_value -> other_value .)
    $end            reduce using rule 121 (boolean_value -> other_value .)
    RKEY            reduce using rule 121 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 121 (boolean_value -> other_value .)
    COMMA           reduce using rule 121 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 168 (term -> other_value .)
    DIVIDE          reduce using rule 168 (term -> other_value .)
    EQUALTO         reduce using rule 168 (term -> other_value .)
    NOTEQUALTO      reduce using rule 168 (term -> other_value .)
    PLUS            reduce using rule 168 (term -> other_value .)
    MINUS           reduce using rule 168 (term -> other_value .)
    GREATER         reduce using rule 168 (term -> other_value .)
    LESS            reduce using rule 168 (term -> other_value .)
    GREATEREQUAL    reduce using rule 168 (term -> other_value .)
    LESSEQUAL       reduce using rule 168 (term -> other_value .)
    AND             reduce using rule 168 (term -> other_value .)
    OR              reduce using rule 168 (term -> other_value .)


state 214

    (122) boolean_value -> expCond .
    (154) expOpLog -> expCond . oplogico expCond
    (148) expEq -> expCond . EQUALTO expCond
    (151) expNotEq -> expCond . NOTEQUALTO expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    POINTCOMMA      reduce using rule 122 (boolean_value -> expCond .)
    $end            reduce using rule 122 (boolean_value -> expCond .)
    RKEY            reduce using rule 122 (boolean_value -> expCond .)
    RBRACKET        reduce using rule 122 (boolean_value -> expCond .)
    COMMA           reduce using rule 122 (boolean_value -> expCond .)
    EQUALTO         shift and go to state 91
    NOTEQUALTO      shift and go to state 92
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 215

    (123) boolean_value -> expOpLog .

    POINTCOMMA      reduce using rule 123 (boolean_value -> expOpLog .)
    $end            reduce using rule 123 (boolean_value -> expOpLog .)
    RKEY            reduce using rule 123 (boolean_value -> expOpLog .)
    RBRACKET        reduce using rule 123 (boolean_value -> expOpLog .)
    COMMA           reduce using rule 123 (boolean_value -> expOpLog .)


state 216

    (124) boolean_value -> expNeg .

    POINTCOMMA      reduce using rule 124 (boolean_value -> expNeg .)
    $end            reduce using rule 124 (boolean_value -> expNeg .)
    RKEY            reduce using rule 124 (boolean_value -> expNeg .)
    RBRACKET        reduce using rule 124 (boolean_value -> expNeg .)
    COMMA           reduce using rule 124 (boolean_value -> expNeg .)


state 217

    (125) boolean_value -> expEq .

    POINTCOMMA      reduce using rule 125 (boolean_value -> expEq .)
    $end            reduce using rule 125 (boolean_value -> expEq .)
    RKEY            reduce using rule 125 (boolean_value -> expEq .)
    RBRACKET        reduce using rule 125 (boolean_value -> expEq .)
    COMMA           reduce using rule 125 (boolean_value -> expEq .)


state 218

    (126) boolean_value -> expNotEq .

    POINTCOMMA      reduce using rule 126 (boolean_value -> expNotEq .)
    $end            reduce using rule 126 (boolean_value -> expNotEq .)
    RKEY            reduce using rule 126 (boolean_value -> expNotEq .)
    RBRACKET        reduce using rule 126 (boolean_value -> expNotEq .)
    COMMA           reduce using rule 126 (boolean_value -> expNotEq .)


state 219

    (170) other_value -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value
    (163) group -> variable .

    POINTCOMMA      reduce using rule 170 (other_value -> variable .)
    $end            reduce using rule 170 (other_value -> variable .)
    RKEY            reduce using rule 170 (other_value -> variable .)
    PRODUCT         reduce using rule 170 (other_value -> variable .)
    DIVIDE          reduce using rule 170 (other_value -> variable .)
    EQUALTO         reduce using rule 170 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 170 (other_value -> variable .)
    PLUS            reduce using rule 170 (other_value -> variable .)
    MINUS           reduce using rule 170 (other_value -> variable .)
    GREATER         reduce using rule 170 (other_value -> variable .)
    LESS            reduce using rule 170 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 170 (other_value -> variable .)
    LESSEQUAL       reduce using rule 170 (other_value -> variable .)
    AND             reduce using rule 170 (other_value -> variable .)
    OR              reduce using rule 170 (other_value -> variable .)
    RBRACKET        reduce using rule 170 (other_value -> variable .)
    COMMA           reduce using rule 170 (other_value -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140
    INCREMENT       reduce using rule 163 (group -> variable .)
    DECREMENT       reduce using rule 163 (group -> variable .)


state 220

    (158) expCond -> expression . operador expression
    (156) expOpLog -> expression . oplogico expression
    (150) expEq -> expression . EQUALTO expression
    (153) expNotEq -> expression . NOTEQUALTO expression
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    EQUALTO         shift and go to state 82
    NOTEQUALTO      shift and go to state 83
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 80
    oplogico                       shift and go to state 81

state 221

    (59) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 59 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 59 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 59 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    RKEY            reduce using rule 59 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 222

    (68) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 68 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 68 (var_number -> declare_number EQUAL number_value .)
    RKEY            reduce using rule 68 (var_number -> declare_number EQUAL number_value .)


state 223

    (119) number_value -> expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 119 (number_value -> expression .)
    $end            reduce using rule 119 (number_value -> expression .)
    RKEY            reduce using rule 119 (number_value -> expression .)
    RBRACKET        reduce using rule 119 (number_value -> expression .)
    COMMA           reduce using rule 119 (number_value -> expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 224

    (55) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 55 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 55 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 55 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    RKEY            reduce using rule 55 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 225

    (74) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 74 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 74 (var_string -> declare_string EQUAL string_value .)
    RKEY            reduce using rule 74 (var_string -> declare_string EQUAL string_value .)


state 226

    (127) string_value -> string .

    POINTCOMMA      reduce using rule 127 (string_value -> string .)
    $end            reduce using rule 127 (string_value -> string .)
    RKEY            reduce using rule 127 (string_value -> string .)
    RBRACKET        reduce using rule 127 (string_value -> string .)
    COMMA           reduce using rule 127 (string_value -> string .)


state 227

    (128) string_value -> other_value .

    POINTCOMMA      reduce using rule 128 (string_value -> other_value .)
    $end            reduce using rule 128 (string_value -> other_value .)
    RKEY            reduce using rule 128 (string_value -> other_value .)
    RBRACKET        reduce using rule 128 (string_value -> other_value .)
    COMMA           reduce using rule 128 (string_value -> other_value .)


state 228

    (170) other_value -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 170 (other_value -> variable .)
    $end            reduce using rule 170 (other_value -> variable .)
    RKEY            reduce using rule 170 (other_value -> variable .)
    RBRACKET        reduce using rule 170 (other_value -> variable .)
    COMMA           reduce using rule 170 (other_value -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140


state 229

    (171) other_value -> array_value .

    POINTCOMMA      reduce using rule 171 (other_value -> array_value .)
    $end            reduce using rule 171 (other_value -> array_value .)
    RKEY            reduce using rule 171 (other_value -> array_value .)
    RBRACKET        reduce using rule 171 (other_value -> array_value .)
    COMMA           reduce using rule 171 (other_value -> array_value .)


state 230

    (173) other_value -> object_value .

    POINTCOMMA      reduce using rule 173 (other_value -> object_value .)
    $end            reduce using rule 173 (other_value -> object_value .)
    RKEY            reduce using rule 173 (other_value -> object_value .)
    RBRACKET        reduce using rule 173 (other_value -> object_value .)
    COMMA           reduce using rule 173 (other_value -> object_value .)


state 231

    (63) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 63 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 63 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 63 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    RKEY            reduce using rule 63 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 232

    (77) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 77 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 77 (var_enum -> declare_var_enum EQUAL enum_value .)
    RKEY            reduce using rule 77 (var_enum -> declare_var_enum EQUAL enum_value .)


state 233

    (26) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (27) enums -> . enums_numeric
    (28) enums -> . enums_string
    (29) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (30) enums_numeric -> . enums_numeric_value
    (33) enums_string -> . enums_string COMMA enums_string_value
    (34) enums_string -> . enums_string_value
    (31) enums_numeric_value -> . object_name EQUAL number
    (32) enums_numeric_value -> . object_name
    (35) enums_string_value -> . object_name EQUAL string
    (198) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 52

    enums                          shift and go to state 276
    enums_numeric                  shift and go to state 277
    enums_string                   shift and go to state 278
    enums_numeric_value            shift and go to state 279
    enums_string_value             shift and go to state 280
    object_name                    shift and go to state 281

state 234

    (86) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 86 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 86 (assign_variable -> variable EQUAL assign_value .)
    RKEY            reduce using rule 86 (assign_variable -> variable EQUAL assign_value .)


state 235

    (87) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 87 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 87 (assign_variable -> variable EQUAL list_types .)
    RKEY            reduce using rule 87 (assign_variable -> variable EQUAL list_types .)


state 236

    (180) array_value -> variable LBRACKET expression . RBRACKET
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    RBRACKET        shift and go to state 282
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 237

    (178) object_value_form1 -> variable POINT variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    RKEY            reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 178 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 139


state 238

    (179) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    RKEY            reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 179 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 179 (object_value_form2 -> variable POINT array_value .)


state 239

    (88) assign_array -> array_value EQUAL general_value .

    POINTCOMMA      reduce using rule 88 (assign_array -> array_value EQUAL general_value .)
    $end            reduce using rule 88 (assign_array -> array_value EQUAL general_value .)
    RKEY            reduce using rule 88 (assign_array -> array_value EQUAL general_value .)


state 240

    (89) assign_object_value -> object_value_form1 EQUAL general_value .

    POINTCOMMA      reduce using rule 89 (assign_object_value -> object_value_form1 EQUAL general_value .)
    $end            reduce using rule 89 (assign_object_value -> object_value_form1 EQUAL general_value .)
    RKEY            reduce using rule 89 (assign_object_value -> object_value_form1 EQUAL general_value .)


state 241

    (90) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 90 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 90 (assign_object_value -> object_value_form1 EQUAL list_types .)
    RKEY            reduce using rule 90 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 242

    (91) assign_object_value -> object_value_form2 EQUAL general_value .

    POINTCOMMA      reduce using rule 91 (assign_object_value -> object_value_form2 EQUAL general_value .)
    $end            reduce using rule 91 (assign_object_value -> object_value_form2 EQUAL general_value .)
    RKEY            reduce using rule 91 (assign_object_value -> object_value_form2 EQUAL general_value .)


state 243

    (36) funcionif -> IF LPAREN formLog . RPAREN substatement
    (37) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif
    (38) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif funcionelse
    (39) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelse

    RPAREN          shift and go to state 283


state 244

    (174) formLog -> expCond .
    (154) expOpLog -> expCond . oplogico expCond
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    RPAREN          reduce using rule 174 (formLog -> expCond .)
    POINTCOMMA      reduce using rule 174 (formLog -> expCond .)
    AND             shift and go to state 88
    OR              shift and go to state 89

    oplogico                       shift and go to state 90

state 245

    (175) formLog -> expOpLog .

    RPAREN          reduce using rule 175 (formLog -> expOpLog .)
    POINTCOMMA      reduce using rule 175 (formLog -> expOpLog .)


state 246

    (158) expCond -> expression . operador expression
    (156) expOpLog -> expression . oplogico expression
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 80
    oplogico                       shift and go to state 81

state 247

    (45) funcionwhile -> WHILE LPAREN formLog . RPAREN substatement

    RPAREN          shift and go to state 284


state 248

    (43) funcionfor -> FOR LPAREN declare_any . EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    EQUAL           shift and go to state 285


state 249

    (44) funcionfor -> FOR LPAREN VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    EQUAL           shift and go to state 286


state 250

    (181) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 181 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 181 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 181 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 181 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 181 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 181 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 181 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 181 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 181 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 181 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 181 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 181 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 181 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 181 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 181 (enum_value -> object_name POINT object_name .)
    RKEY            reduce using rule 181 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 181 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 181 (enum_value -> object_name POINT object_name .)


state 251

    (53) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 53 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 53 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    RKEY            reduce using rule 53 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 252

    (110) list_number -> LBRACKET . numbers RBRACKET
    (111) numbers -> . numbers COMMA number_value
    (112) numbers -> . number_value
    (119) number_value -> . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    numbers                        shift and go to state 266
    number_value                   shift and go to state 269
    expression                     shift and go to state 223
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 253

    (57) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 57 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 57 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    RKEY            reduce using rule 57 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 254

    (113) list_boolean -> LBRACKET . booleans RBRACKET
    (114) booleans -> . booleans COMMA boolean_value
    (115) booleans -> . boolean_value
    (120) boolean_value -> . boolean
    (121) boolean_value -> . other_value
    (122) boolean_value -> . expCond
    (123) boolean_value -> . expOpLog
    (124) boolean_value -> . expNeg
    (125) boolean_value -> . expEq
    (126) boolean_value -> . expNotEq
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64

    booleans                       shift and go to state 267
    boolean_value                  shift and go to state 270
    boolean                        shift and go to state 212
    other_value                    shift and go to state 213
    expCond                        shift and go to state 214
    expOpLog                       shift and go to state 215
    expNeg                         shift and go to state 216
    expEq                          shift and go to state 217
    expNotEq                       shift and go to state 218
    variable                       shift and go to state 219
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    expression                     shift and go to state 220
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    group                          shift and go to state 62

state 255

    (61) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 61 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 61 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    RKEY            reduce using rule 61 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 256

    (116) list_string -> LBRACKET . strings RBRACKET
    (117) strings -> . strings COMMA string_value
    (118) strings -> . string_value
    (127) string_value -> . string
    (128) string_value -> . other_value
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    strings                        shift and go to state 268
    string_value                   shift and go to state 271
    string                         shift and go to state 226
    other_value                    shift and go to state 227
    variable                       shift and go to state 228
    array_value                    shift and go to state 229
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 230
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 257

    (169) factor_expr -> LPAREN expression . RPAREN
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    RPAREN          shift and go to state 167
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 258

    (163) group -> variable .
    (180) array_value -> variable . LBRACKET expression RBRACKET
    (178) object_value_form1 -> variable . POINT variable
    (179) object_value_form2 -> variable . POINT array_value
    (170) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 163 (group -> variable .)
    RPAREN          reduce using rule 163 (group -> variable .)
    INCREMENT       reduce using rule 163 (group -> variable .)
    DECREMENT       reduce using rule 163 (group -> variable .)
    LBRACKET        shift and go to state 139
    POINT           shift and go to state 140
    PRODUCT         reduce using rule 170 (other_value -> variable .)
    DIVIDE          reduce using rule 170 (other_value -> variable .)
    PLUS            reduce using rule 170 (other_value -> variable .)
    MINUS           reduce using rule 170 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 170 (other_value -> variable .) ]


state 259

    (159) expCond -> LPAREN expression operador . expression RPAREN
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    expression                     shift and go to state 287
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 260

    (159) expCond -> LPAREN expression operador expression . RPAREN
    (158) expCond -> expression operador expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 288
    AND             reduce using rule 158 (expCond -> expression operador expression .)
    OR              reduce using rule 158 (expCond -> expression operador expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79

  ! RPAREN          [ reduce using rule 158 (expCond -> expression operador expression .) ]


state 261

    (147) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 147 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 147 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RKEY            reduce using rule 147 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RBRACKET        reduce using rule 147 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMA           reduce using rule 147 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 262

    (48) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 289


state 263

    (94) object_definition -> LKEY attributes . RKEY
    (95) attributes -> attributes . COMMA attribute

    RKEY            shift and go to state 290
    COMMA           shift and go to state 291


state 264

    (96) attributes -> attribute .

    RKEY            reduce using rule 96 (attributes -> attribute .)
    COMMA           reduce using rule 96 (attributes -> attribute .)


state 265

    (97) attribute -> variable . TWOPOINTS general_value
    (98) attribute -> variable . TWOPOINTS list_types

    TWOPOINTS       shift and go to state 292


state 266

    (110) list_number -> LBRACKET numbers . RBRACKET
    (111) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 293
    COMMA           shift and go to state 294


state 267

    (113) list_boolean -> LBRACKET booleans . RBRACKET
    (114) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 295
    COMMA           shift and go to state 296


state 268

    (116) list_string -> LBRACKET strings . RBRACKET
    (117) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 297
    COMMA           shift and go to state 298


state 269

    (112) numbers -> number_value .

    RBRACKET        reduce using rule 112 (numbers -> number_value .)
    COMMA           reduce using rule 112 (numbers -> number_value .)


state 270

    (115) booleans -> boolean_value .

    RBRACKET        reduce using rule 115 (booleans -> boolean_value .)
    COMMA           reduce using rule 115 (booleans -> boolean_value .)


state 271

    (118) strings -> string_value .

    RBRACKET        reduce using rule 118 (strings -> string_value .)
    COMMA           reduce using rule 118 (strings -> string_value .)


state 272

    (119) number_value -> expression .
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term
    (158) expCond -> expression . operador expression
    (156) expOpLog -> expression . oplogico expression
    (150) expEq -> expression . EQUALTO expression
    (153) expNotEq -> expression . NOTEQUALTO expression
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO
    (205) oplogico -> . AND
    (206) oplogico -> . OR

    RBRACKET        reduce using rule 119 (number_value -> expression .)
    COMMA           reduce using rule 119 (number_value -> expression .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79
    EQUALTO         shift and go to state 82
    NOTEQUALTO      shift and go to state 83
    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    AND             shift and go to state 88
    OR              shift and go to state 89

    operador                       shift and go to state 80
    oplogico                       shift and go to state 81

state 273

    (121) boolean_value -> other_value .
    (128) string_value -> other_value .
    (168) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 121 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 121 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 121 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 121 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 121 (boolean_value -> other_value .)
    COMMA           reduce using rule 121 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 168 (term -> other_value .)
    DIVIDE          reduce using rule 168 (term -> other_value .)
    PLUS            reduce using rule 168 (term -> other_value .)
    MINUS           reduce using rule 168 (term -> other_value .)
    EQUALTO         reduce using rule 168 (term -> other_value .)
    NOTEQUALTO      reduce using rule 168 (term -> other_value .)
    GREATER         reduce using rule 168 (term -> other_value .)
    LESS            reduce using rule 168 (term -> other_value .)
    GREATEREQUAL    reduce using rule 168 (term -> other_value .)
    LESSEQUAL       reduce using rule 168 (term -> other_value .)
    AND             reduce using rule 168 (term -> other_value .)
    OR              reduce using rule 168 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 128 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 128 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 168 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 168 (term -> other_value .) ]


state 274

    (56) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (60) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (64) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 299
    VARBOOLEAN      shift and go to state 300
    VARSTRING       shift and go to state 301


state 275

    (131) chain -> termS PLUS . value
    (133) value -> . expression
    (134) value -> . string
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    value                          shift and go to state 302
    expression                     shift and go to state 210
    string                         shift and go to state 303
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 276

    (26) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 304


state 277

    (27) enums -> enums_numeric .
    (29) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 27 (enums -> enums_numeric .)
    COMMA           shift and go to state 305


state 278

    (28) enums -> enums_string .
    (33) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 28 (enums -> enums_string .)
    COMMA           shift and go to state 306


state 279

    (30) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 30 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 30 (enums_numeric -> enums_numeric_value .)


state 280

    (34) enums_string -> enums_string_value .

    COMMA           reduce using rule 34 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 34 (enums_string -> enums_string_value .)


state 281

    (31) enums_numeric_value -> object_name . EQUAL number
    (32) enums_numeric_value -> object_name .
    (35) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 307
    COMMA           reduce using rule 32 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 32 (enums_numeric_value -> object_name .)


state 282

    (180) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    RKEY            reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 180 (array_value -> variable LBRACKET expression RBRACKET .)


state 283

    (36) funcionif -> IF LPAREN formLog RPAREN . substatement
    (37) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif
    (38) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif funcionelse
    (39) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelse
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 308

state 284

    (45) funcionwhile -> WHILE LPAREN formLog RPAREN . substatement
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 310

state 285

    (43) funcionfor -> FOR LPAREN declare_any EQUAL . number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (119) number_value -> . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    number_value                   shift and go to state 311
    expression                     shift and go to state 223
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 286

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (119) number_value -> . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    number_value                   shift and go to state 312
    expression                     shift and go to state 223
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 287

    (159) expCond -> LPAREN expression operador expression . RPAREN
    (135) expression -> expression . PLUS term
    (136) expression -> expression . MINUS term

    RPAREN          shift and go to state 288
    PLUS            shift and go to state 78
    MINUS           shift and go to state 79


state 288

    (159) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    RKEY            reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    RBRACKET        reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMA           reduce using rule 159 (expCond -> LPAREN expression operador expression RPAREN .)


state 289

    (48) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 313


state 290

    (94) object_definition -> LKEY attributes RKEY .

    POINTCOMMA      reduce using rule 94 (object_definition -> LKEY attributes RKEY .)
    $end            reduce using rule 94 (object_definition -> LKEY attributes RKEY .)
    RKEY            reduce using rule 94 (object_definition -> LKEY attributes RKEY .)


state 291

    (95) attributes -> attributes COMMA . attribute
    (97) attribute -> . variable TWOPOINTS general_value
    (98) attribute -> . variable TWOPOINTS list_types
    (197) variable -> . VARIABLE

    VARIABLE        shift and go to state 58

    attribute                      shift and go to state 314
    variable                       shift and go to state 265

state 292

    (97) attribute -> variable TWOPOINTS . general_value
    (98) attribute -> variable TWOPOINTS . list_types
    (99) general_value -> . expression
    (100) general_value -> . boolean
    (101) general_value -> . string
    (102) general_value -> . expCond
    (103) general_value -> . expOpLog
    (104) general_value -> . expNeg
    (105) general_value -> . expEq
    (106) general_value -> . expNotEq
    (107) list_types -> . list_number
    (108) list_types -> . list_boolean
    (109) list_types -> . list_string
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (110) list_number -> . LBRACKET numbers RBRACKET
    (113) list_boolean -> . LBRACKET booleans RBRACKET
    (116) list_string -> . LBRACKET strings RBRACKET
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    LBRACKET        shift and go to state 199
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    variable                       shift and go to state 116
    general_value                  shift and go to state 315
    list_types                     shift and go to state 316
    expression                     shift and go to state 190
    boolean                        shift and go to state 191
    string                         shift and go to state 192
    expCond                        shift and go to state 193
    expOpLog                       shift and go to state 194
    expNeg                         shift and go to state 195
    expEq                          shift and go to state 196
    expNotEq                       shift and go to state 197
    list_number                    shift and go to state 187
    list_boolean                   shift and go to state 188
    list_string                    shift and go to state 189
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 293

    (110) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 110 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 110 (list_number -> LBRACKET numbers RBRACKET .)
    RKEY            reduce using rule 110 (list_number -> LBRACKET numbers RBRACKET .)
    COMMA           reduce using rule 110 (list_number -> LBRACKET numbers RBRACKET .)


state 294

    (111) numbers -> numbers COMMA . number_value
    (119) number_value -> . expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    LPAREN          shift and go to state 153
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    number_value                   shift and go to state 317
    expression                     shift and go to state 223
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 295

    (113) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 113 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 113 (list_boolean -> LBRACKET booleans RBRACKET .)
    RKEY            reduce using rule 113 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMA           reduce using rule 113 (list_boolean -> LBRACKET booleans RBRACKET .)


state 296

    (114) booleans -> booleans COMMA . boolean_value
    (120) boolean_value -> . boolean
    (121) boolean_value -> . other_value
    (122) boolean_value -> . expCond
    (123) boolean_value -> . expOpLog
    (124) boolean_value -> . expNeg
    (125) boolean_value -> . expEq
    (126) boolean_value -> . expNotEq
    (195) boolean -> . TRUE
    (196) boolean -> . FALSE
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value

    TRUE            shift and go to state 114
    FALSE           shift and go to state 115
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64

    boolean_value                  shift and go to state 318
    boolean                        shift and go to state 212
    other_value                    shift and go to state 213
    expCond                        shift and go to state 214
    expOpLog                       shift and go to state 215
    expNeg                         shift and go to state 216
    expEq                          shift and go to state 217
    expNotEq                       shift and go to state 218
    variable                       shift and go to state 219
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    expression                     shift and go to state 220
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    group                          shift and go to state 62

state 297

    (116) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 116 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 116 (list_string -> LBRACKET strings RBRACKET .)
    RKEY            reduce using rule 116 (list_string -> LBRACKET strings RBRACKET .)
    COMMA           reduce using rule 116 (list_string -> LBRACKET strings RBRACKET .)


state 298

    (117) strings -> strings COMMA . string_value
    (127) string_value -> . string
    (128) string_value -> . other_value
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    string_value                   shift and go to state 319
    string                         shift and go to state 226
    other_value                    shift and go to state 227
    variable                       shift and go to state 228
    array_value                    shift and go to state 229
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 230
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 299

    (56) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 320


state 300

    (60) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 321


state 301

    (64) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 322


state 302

    (131) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 131 (chain -> termS PLUS value .)
    $end            reduce using rule 131 (chain -> termS PLUS value .)
    PLUS            reduce using rule 131 (chain -> termS PLUS value .)
    RKEY            reduce using rule 131 (chain -> termS PLUS value .)


state 303

    (134) value -> string .

    POINTCOMMA      reduce using rule 134 (value -> string .)
    $end            reduce using rule 134 (value -> string .)
    PLUS            reduce using rule 134 (value -> string .)
    RKEY            reduce using rule 134 (value -> string .)


state 304

    (26) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 26 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 26 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    RKEY            reduce using rule 26 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 305

    (29) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (31) enums_numeric_value -> . object_name EQUAL number
    (32) enums_numeric_value -> . object_name
    (198) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 52

    enums_numeric_value            shift and go to state 323
    object_name                    shift and go to state 324

state 306

    (33) enums_string -> enums_string COMMA . enums_string_value
    (35) enums_string_value -> . object_name EQUAL string
    (198) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 52

    enums_string_value             shift and go to state 325
    object_name                    shift and go to state 326

state 307

    (31) enums_numeric_value -> object_name EQUAL . number
    (35) enums_string_value -> object_name EQUAL . string
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING

    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68

    number                         shift and go to state 327
    string                         shift and go to state 328

state 308

    (36) funcionif -> IF LPAREN formLog RPAREN substatement .
    (37) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif
    (38) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif funcionelse
    (39) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelse
    (40) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (41) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif
    (42) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 36 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 36 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 36 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 331
    ELSE            shift and go to state 332

    funcionelif                    shift and go to state 329
    funcionelse                    shift and go to state 330

state 309

    (46) substatement -> LKEY . statement RKEY
    (47) substatement -> LKEY . RKEY
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (129) concatenate -> . termS
    (17) declare -> . var_boolean
    (18) declare -> . var_number
    (19) declare -> . var_string
    (20) declare -> . var_enum
    (21) declare -> . var_null
    (22) declare -> . var_undefined
    (23) declare -> . declare_array
    (24) declare -> . declare_enum
    (25) declare -> . declare_generic
    (83) assign -> . assign_variable
    (84) assign -> . assign_array
    (85) assign -> . assign_object_value
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (144) expNeg -> . NEGATION expOpLog
    (145) expNeg -> . NEGATION factor_exprlog
    (146) expNeg -> . NEGATION boolean
    (147) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (148) expEq -> . expCond EQUALTO expCond
    (149) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (150) expEq -> . expression EQUALTO expression
    (151) expNotEq -> . expCond NOTEQUALTO expCond
    (152) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (153) expNotEq -> . expression NOTEQUALTO expression
    (48) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (14) statement_control -> . funcionif
    (15) statement_control -> . funcionwhile
    (16) statement_control -> . funcionfor
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (130) termS -> . string PLUS chain
    (71) var_boolean -> . declare_boolean EQUAL boolean_value
    (72) var_boolean -> . declare_boolean
    (68) var_number -> . declare_number EQUAL number_value
    (69) var_number -> . declare_number
    (74) var_string -> . declare_string EQUAL string_value
    (75) var_string -> . declare_string
    (77) var_enum -> . declare_var_enum EQUAL enum_value
    (78) var_enum -> . declare_var_enum
    (66) var_null -> . declare_any EQUAL NULL
    (67) var_undefined -> . declare_any EQUAL UNDEFINED
    (49) declare_array -> . declare_array_main_number
    (50) declare_array -> . declare_array_main_boolean
    (51) declare_array -> . declare_array_main_string
    (52) declare_array -> . declare_generic_array
    (26) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (80) declare_generic -> . declare_any EQUAL assign_value
    (81) declare_generic -> . declare_any
    (86) assign_variable -> . variable EQUAL assign_value
    (87) assign_variable -> . variable EQUAL list_types
    (88) assign_array -> . array_value EQUAL general_value
    (89) assign_object_value -> . object_value_form1 EQUAL general_value
    (90) assign_object_value -> . object_value_form1 EQUAL list_types
    (91) assign_object_value -> . object_value_form2 EQUAL general_value
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (82) declare_any -> . prefix VARIABLE
    (36) funcionif -> . IF LPAREN formLog RPAREN substatement
    (37) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (38) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (39) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (45) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (43) funcionfor -> . FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (44) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING
    (73) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (70) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (76) declare_string -> . declare_any TWOPOINTS VARSTRING
    (79) declare_var_enum -> . declare_any TWOPOINTS object_name
    (53) declare_array_main_number -> . declare_array_number EQUAL list_number
    (54) declare_array_main_number -> . declare_array_number
    (57) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (58) declare_array_main_boolean -> . declare_array_boolean
    (61) declare_array_main_string -> . declare_array_string EQUAL list_string
    (62) declare_array_main_string -> . declare_array_string
    (65) declare_generic_array -> . declare_any EQUAL list_types
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value
    (182) prefix -> . LET
    (183) prefix -> . VAR
    (184) prefix -> . STATIC
    (185) prefix -> . CONST
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (55) declare_array_number -> . declare_number LBRACKET RBRACKET
    (56) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (59) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (60) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (63) declare_array_string -> . declare_string LBRACKET RBRACKET
    (64) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (198) object_name -> . OBJECTNAME

    RKEY            shift and go to state 334
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    ENUM            shift and go to state 51
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    FOR             shift and go to state 61
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68
    VARIABLE        shift and go to state 58
    LET             shift and go to state 73
    VAR             shift and go to state 74
    STATIC          shift and go to state 75
    CONST           shift and go to state 76
    OBJECTNAME      shift and go to state 52

    statement                      shift and go to state 333
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    term                           shift and go to state 14
    termS                          shift and go to state 15
    var_boolean                    shift and go to state 16
    var_number                     shift and go to state 17
    var_string                     shift and go to state 18
    var_enum                       shift and go to state 19
    var_null                       shift and go to state 20
    var_undefined                  shift and go to state 21
    declare_array                  shift and go to state 22
    declare_enum                   shift and go to state 23
    declare_generic                shift and go to state 24
    assign_variable                shift and go to state 25
    assign_array                   shift and go to state 26
    assign_object_value            shift and go to state 27
    factor_exprlog                 shift and go to state 29
    declare_any                    shift and go to state 31
    funcionif                      shift and go to state 32
    funcionwhile                   shift and go to state 33
    funcionfor                     shift and go to state 34
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    string                         shift and go to state 41
    declare_boolean                shift and go to state 42
    declare_number                 shift and go to state 43
    declare_string                 shift and go to state 44
    declare_var_enum               shift and go to state 45
    enum_value                     shift and go to state 46
    declare_array_main_number      shift and go to state 47
    declare_array_main_boolean     shift and go to state 48
    declare_array_main_string      shift and go to state 49
    declare_generic_array          shift and go to state 50
    variable                       shift and go to state 53
    array_value                    shift and go to state 54
    object_value_form1             shift and go to state 55
    object_value_form2             shift and go to state 56
    prefix                         shift and go to state 57
    group                          shift and go to state 62
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    declare_array_number           shift and go to state 70
    declare_array_boolean          shift and go to state 71
    declare_array_string           shift and go to state 72

state 310

    (45) funcionwhile -> WHILE LPAREN formLog RPAREN substatement .

    POINTCOMMA      reduce using rule 45 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 45 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 45 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)


state 311

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value . POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 335


state 312

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 336


state 313

    (48) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .

    POINTCOMMA      reduce using rule 48 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 48 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    RKEY            reduce using rule 48 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)


state 314

    (95) attributes -> attributes COMMA attribute .

    RKEY            reduce using rule 95 (attributes -> attributes COMMA attribute .)
    COMMA           reduce using rule 95 (attributes -> attributes COMMA attribute .)


state 315

    (97) attribute -> variable TWOPOINTS general_value .

    RKEY            reduce using rule 97 (attribute -> variable TWOPOINTS general_value .)
    COMMA           reduce using rule 97 (attribute -> variable TWOPOINTS general_value .)


state 316

    (98) attribute -> variable TWOPOINTS list_types .

    RKEY            reduce using rule 98 (attribute -> variable TWOPOINTS list_types .)
    COMMA           reduce using rule 98 (attribute -> variable TWOPOINTS list_types .)


state 317

    (111) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 111 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 111 (numbers -> numbers COMMA number_value .)


state 318

    (114) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 114 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 114 (booleans -> booleans COMMA boolean_value .)


state 319

    (117) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 117 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 117 (strings -> strings COMMA string_value .)


state 320

    (56) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 56 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 56 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 56 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    RKEY            reduce using rule 56 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 321

    (60) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 60 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 60 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 60 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    RKEY            reduce using rule 60 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 322

    (64) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 64 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 64 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 64 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    RKEY            reduce using rule 64 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 323

    (29) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 29 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 29 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 324

    (31) enums_numeric_value -> object_name . EQUAL number
    (32) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 337
    COMMA           reduce using rule 32 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 32 (enums_numeric_value -> object_name .)


state 325

    (33) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 33 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 33 (enums_string -> enums_string COMMA enums_string_value .)


state 326

    (35) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 338


state 327

    (31) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 31 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 31 (enums_numeric_value -> object_name EQUAL number .)


state 328

    (35) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 35 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 35 (enums_string_value -> object_name EQUAL string .)


state 329

    (37) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .
    (38) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif . funcionelse
    (42) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 37 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 37 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 37 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    ELSE            shift and go to state 332

    funcionelse                    shift and go to state 339

state 330

    (39) funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .

    POINTCOMMA      reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    $end            reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    RKEY            reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)


state 331

    (40) funcionelif -> ELIF . LPAREN formLog RPAREN substatement
    (41) funcionelif -> ELIF . LPAREN formLog RPAREN substatement funcionelif

    LPAREN          shift and go to state 340


state 332

    (42) funcionelse -> ELSE . substatement
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 341

state 333

    (46) substatement -> LKEY statement . RKEY

    RKEY            shift and go to state 342


state 334

    (47) substatement -> LKEY RKEY .

    ELIF            reduce using rule 47 (substatement -> LKEY RKEY .)
    ELSE            reduce using rule 47 (substatement -> LKEY RKEY .)
    POINTCOMMA      reduce using rule 47 (substatement -> LKEY RKEY .)
    $end            reduce using rule 47 (substatement -> LKEY RKEY .)
    RKEY            reduce using rule 47 (substatement -> LKEY RKEY .)


state 335

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA . formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (174) formLog -> . expCond
    (175) formLog -> . expOpLog
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    formLog                        shift and go to state 343
    expCond                        shift and go to state 244
    expOpLog                       shift and go to state 245
    expression                     shift and go to state 246
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 336

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (174) formLog -> . expCond
    (175) formLog -> . expOpLog
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    formLog                        shift and go to state 344
    expCond                        shift and go to state 244
    expOpLog                       shift and go to state 245
    expression                     shift and go to state 246
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 337

    (31) enums_numeric_value -> object_name EQUAL . number
    (190) number -> . NUMBER
    (191) number -> . FLOAT

    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64

    number                         shift and go to state 327

state 338

    (35) enums_string_value -> object_name EQUAL . string
    (192) string -> . NORMSTRING1
    (193) string -> . NORMSTRING2
    (194) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 66
    NORMSTRING2     shift and go to state 67
    MULTISTRING     shift and go to state 68

    string                         shift and go to state 328

state 339

    (38) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .

    POINTCOMMA      reduce using rule 38 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    $end            reduce using rule 38 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    RKEY            reduce using rule 38 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)


state 340

    (40) funcionelif -> ELIF LPAREN . formLog RPAREN substatement
    (41) funcionelif -> ELIF LPAREN . formLog RPAREN substatement funcionelif
    (174) formLog -> . expCond
    (175) formLog -> . expOpLog
    (158) expCond -> . expression operador expression
    (159) expCond -> . LPAREN expression operador expression RPAREN
    (154) expOpLog -> . expCond oplogico expCond
    (155) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (156) expOpLog -> . expression oplogico expression
    (135) expression -> . expression PLUS term
    (136) expression -> . expression MINUS term
    (137) expression -> . term
    (157) factor_exprlog -> . LPAREN expCond RPAREN
    (138) term -> . term PRODUCT term
    (139) term -> . term DIVIDE term
    (140) term -> . term1 INCREMENT
    (141) term -> . INCREMENT term1
    (142) term -> . term1 DECREMENT
    (143) term -> . DECREMENT term1
    (166) term -> . number
    (167) term -> . factor_expr
    (168) term -> . other_value
    (160) term1 -> . LPAREN group RPAREN
    (161) term1 -> . group
    (190) number -> . NUMBER
    (191) number -> . FLOAT
    (169) factor_expr -> . LPAREN expression RPAREN
    (170) other_value -> . variable
    (171) other_value -> . array_value
    (172) other_value -> . enum_value
    (173) other_value -> . object_value
    (162) group -> . number
    (163) group -> . variable
    (164) group -> . array_value
    (165) group -> . object_value
    (197) variable -> . VARIABLE
    (180) array_value -> . variable LBRACKET expression RBRACKET
    (181) enum_value -> . object_name POINT object_name
    (176) object_value -> . object_value_form1
    (177) object_value -> . object_value_form2
    (198) object_name -> . OBJECTNAME
    (178) object_value_form1 -> . variable POINT variable
    (179) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 36
    DECREMENT       shift and go to state 37
    NUMBER          shift and go to state 63
    FLOAT           shift and go to state 64
    VARIABLE        shift and go to state 58
    OBJECTNAME      shift and go to state 52

    formLog                        shift and go to state 345
    expCond                        shift and go to state 244
    expOpLog                       shift and go to state 245
    expression                     shift and go to state 246
    factor_exprlog                 shift and go to state 179
    term                           shift and go to state 14
    term1                          shift and go to state 35
    number                         shift and go to state 38
    factor_expr                    shift and go to state 39
    other_value                    shift and go to state 40
    group                          shift and go to state 62
    variable                       shift and go to state 116
    array_value                    shift and go to state 117
    enum_value                     shift and go to state 46
    object_value                   shift and go to state 65
    object_name                    shift and go to state 69
    object_value_form1             shift and go to state 103
    object_value_form2             shift and go to state 104

state 341

    (42) funcionelse -> ELSE substatement .

    POINTCOMMA      reduce using rule 42 (funcionelse -> ELSE substatement .)
    $end            reduce using rule 42 (funcionelse -> ELSE substatement .)
    RKEY            reduce using rule 42 (funcionelse -> ELSE substatement .)


state 342

    (46) substatement -> LKEY statement RKEY .

    ELIF            reduce using rule 46 (substatement -> LKEY statement RKEY .)
    ELSE            reduce using rule 46 (substatement -> LKEY statement RKEY .)
    POINTCOMMA      reduce using rule 46 (substatement -> LKEY statement RKEY .)
    $end            reduce using rule 46 (substatement -> LKEY statement RKEY .)
    RKEY            reduce using rule 46 (substatement -> LKEY statement RKEY .)


state 343

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog . POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 346


state 344

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 347


state 345

    (40) funcionelif -> ELIF LPAREN formLog . RPAREN substatement
    (41) funcionelif -> ELIF LPAREN formLog . RPAREN substatement funcionelif

    RPAREN          shift and go to state 348


state 346

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA . VARIABLE operador RPAREN substatement

    VARIABLE        shift and go to state 349


state 347

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . VARIABLE operador RPAREN substatement

    VARIABLE        shift and go to state 350


state 348

    (40) funcionelif -> ELIF LPAREN formLog RPAREN . substatement
    (41) funcionelif -> ELIF LPAREN formLog RPAREN . substatement funcionelif
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 351

state 349

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE . operador RPAREN substatement
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    operador                       shift and go to state 352

state 350

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE . operador RPAREN substatement
    (199) operador -> . GREATER
    (200) operador -> . LESS
    (201) operador -> . GREATEREQUAL
    (202) operador -> . LESSEQUAL
    (203) operador -> . EQUALTO
    (204) operador -> . NOTEQUALTO

    GREATER         shift and go to state 84
    LESS            shift and go to state 85
    GREATEREQUAL    shift and go to state 86
    LESSEQUAL       shift and go to state 87
    EQUALTO         shift and go to state 168
    NOTEQUALTO      shift and go to state 169

    operador                       shift and go to state 353

state 351

    (40) funcionelif -> ELIF LPAREN formLog RPAREN substatement .
    (41) funcionelif -> ELIF LPAREN formLog RPAREN substatement . funcionelif
    (40) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (41) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif

    ELSE            reduce using rule 40 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    POINTCOMMA      reduce using rule 40 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 40 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 40 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 331

    funcionelif                    shift and go to state 354

state 352

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador . RPAREN substatement

    RPAREN          shift and go to state 355


state 353

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador . RPAREN substatement

    RPAREN          shift and go to state 356


state 354

    (41) funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .

    ELSE            reduce using rule 41 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    POINTCOMMA      reduce using rule 41 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 41 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 41 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)


state 355

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN . substatement
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 357

state 356

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN . substatement
    (46) substatement -> . LKEY statement RKEY
    (47) substatement -> . LKEY RKEY

    LKEY            shift and go to state 309

    substatement                   shift and go to state 358

state 357

    (43) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .

    POINTCOMMA      reduce using rule 43 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    $end            reduce using rule 43 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    RKEY            reduce using rule 43 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)


state 358

    (44) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .

    POINTCOMMA      reduce using rule 44 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    $end            reduce using rule 44 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    RKEY            reduce using rule 44 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 82 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 82 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 82 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 82 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 82 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 82 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 83 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 83 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 83 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 83 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 83 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 83 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 163 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 163 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 164 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 164 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 206 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 210 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 260 resolved as shift
WARNING: reduce/reduce conflict in state 99 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 99
WARNING: reduce/reduce conflict in state 100 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 100
WARNING: reduce/reduce conflict in state 101 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 101
WARNING: reduce/reduce conflict in state 102 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 102
WARNING: reduce/reduce conflict in state 258 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 258
WARNING: reduce/reduce conflict in state 273 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 273
WARNING: reduce/reduce conflict in state 273 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 273

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    DOLLAR
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    PRINT
    RCOMILLA
    SPECIAL
    TYPEOF
    VAROBJECT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    statement_value -> exp_set
Rule 13    statement_value -> statement_control
Rule 14    statement_value -> comments
Rule 15    statement_control -> funcionif
Rule 16    statement_control -> funcionwhile
Rule 17    statement_control -> funcionfor
Rule 18    comments -> COMMENT
Rule 19    comments -> MULTICOMMENT
Rule 20    declare -> var_boolean
Rule 21    declare -> var_number
Rule 22    declare -> var_string
Rule 23    declare -> var_enum
Rule 24    declare -> var_null
Rule 25    declare -> var_undefined
Rule 26    declare -> declare_array
Rule 27    declare -> declare_enum
Rule 28    declare -> declare_generic
Rule 29    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 30    enums -> enums_numeric
Rule 31    enums -> enums_string
Rule 32    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 33    enums_numeric -> enums_numeric_value
Rule 34    enums_numeric_value -> object_name EQUAL number
Rule 35    enums_numeric_value -> object_name
Rule 36    enums_string -> enums_string COMMA enums_string_value
Rule 37    enums_string -> enums_string_value
Rule 38    enums_string_value -> object_name EQUAL string
Rule 39    funcionif -> IF LPAREN formLog RPAREN substatement
Rule 40    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif
Rule 41    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse
Rule 42    funcionif -> IF LPAREN formLog RPAREN substatement funcionelse
Rule 43    funcionelif -> ELIF LPAREN formLog RPAREN substatement
Rule 44    funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif
Rule 45    funcionelse -> ELSE substatement
Rule 46    funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
Rule 47    funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
Rule 48    funcionwhile -> WHILE LPAREN formLog RPAREN substatement
Rule 49    substatement -> LKEY statement RKEY
Rule 50    substatement -> LKEY RKEY
Rule 51    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 52    declare_array -> declare_array_main_number
Rule 53    declare_array -> declare_array_main_boolean
Rule 54    declare_array -> declare_array_main_string
Rule 55    declare_array -> declare_generic_array
Rule 56    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 57    declare_array_main_number -> declare_array_number
Rule 58    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 59    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 60    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 61    declare_array_main_boolean -> declare_array_boolean
Rule 62    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 63    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 64    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 65    declare_array_main_string -> declare_array_string
Rule 66    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 67    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 68    declare_generic_array -> declare_any EQUAL list_types
Rule 69    var_null -> declare_any EQUAL NULL
Rule 70    var_undefined -> declare_any EQUAL UNDEFINED
Rule 71    var_number -> declare_number EQUAL number_value
Rule 72    var_number -> declare_number EQUAL funcionmath
Rule 73    var_number -> declare_number
Rule 74    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 75    var_boolean -> declare_boolean EQUAL boolean_value
Rule 76    var_boolean -> declare_boolean
Rule 77    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 78    var_string -> declare_string EQUAL string_value
Rule 79    var_string -> declare_string
Rule 80    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 81    var_enum -> declare_var_enum EQUAL enum_value
Rule 82    var_enum -> declare_var_enum
Rule 83    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 84    declare_generic -> declare_any EQUAL assign_value
Rule 85    declare_generic -> declare_any
Rule 86    declare_any -> prefix VARIABLE
Rule 87    assign -> assign_variable
Rule 88    assign -> assign_array
Rule 89    assign -> assign_object_value
Rule 90    assign_variable -> variable EQUAL assign_value
Rule 91    assign_variable -> variable EQUAL list_types
Rule 92    assign_array -> array_value EQUAL general_value
Rule 93    assign_object_value -> object_value_form1 EQUAL general_value
Rule 94    assign_object_value -> object_value_form1 EQUAL list_types
Rule 95    assign_object_value -> object_value_form2 EQUAL general_value
Rule 96    assign_value -> general_value
Rule 97    assign_value -> object_definition
Rule 98    object_definition -> LKEY attributes RKEY
Rule 99    attributes -> attributes COMMA attribute
Rule 100   attributes -> attribute
Rule 101   attribute -> variable TWOPOINTS general_value
Rule 102   attribute -> variable TWOPOINTS list_types
Rule 103   general_value -> expression
Rule 104   general_value -> boolean
Rule 105   general_value -> string
Rule 106   general_value -> expCond
Rule 107   general_value -> expOpLog
Rule 108   general_value -> expNeg
Rule 109   general_value -> expEq
Rule 110   general_value -> expNotEq
Rule 111   list_types -> list_number
Rule 112   list_types -> list_boolean
Rule 113   list_types -> list_string
Rule 114   list_number -> LBRACKET numbers RBRACKET
Rule 115   numbers -> numbers COMMA number_value
Rule 116   numbers -> number_value
Rule 117   list_boolean -> LBRACKET booleans RBRACKET
Rule 118   booleans -> booleans COMMA boolean_value
Rule 119   booleans -> boolean_value
Rule 120   list_string -> LBRACKET strings RBRACKET
Rule 121   strings -> strings COMMA string_value
Rule 122   strings -> string_value
Rule 123   number_value -> expression
Rule 124   boolean_value -> boolean
Rule 125   boolean_value -> other_value
Rule 126   boolean_value -> expCond
Rule 127   boolean_value -> expOpLog
Rule 128   boolean_value -> expNeg
Rule 129   boolean_value -> expEq
Rule 130   boolean_value -> expNotEq
Rule 131   string_value -> string
Rule 132   string_value -> other_value
Rule 133   concatenate -> termS
Rule 134   termS -> string PLUS chain
Rule 135   chain -> termS PLUS value
Rule 136   chain -> value
Rule 137   value -> expression
Rule 138   value -> string
Rule 139   expression -> expression PLUS term
Rule 140   expression -> expression MINUS term
Rule 141   expression -> term
Rule 142   term -> term PRODUCT term
Rule 143   term -> term DIVIDE term
Rule 144   term -> term1 INCREMENT
Rule 145   term -> INCREMENT term1
Rule 146   term -> term1 DECREMENT
Rule 147   term -> DECREMENT term1
Rule 148   expNeg -> NEGATION expOpLog
Rule 149   expNeg -> NEGATION factor_exprlog
Rule 150   expNeg -> NEGATION boolean
Rule 151   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 152   expEq -> expCond EQUALTO expCond
Rule 153   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 154   expEq -> expression EQUALTO expression
Rule 155   expNotEq -> expCond NOTEQUALTO expCond
Rule 156   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 157   expNotEq -> expression NOTEQUALTO expression
Rule 158   expOpLog -> expCond oplogico expCond
Rule 159   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 160   expOpLog -> expression oplogico expression
Rule 161   factor_exprlog -> LPAREN expCond RPAREN
Rule 162   expCond -> expression operador expression
Rule 163   expCond -> LPAREN expression operador expression RPAREN
Rule 164   term1 -> LPAREN group RPAREN
Rule 165   term1 -> group
Rule 166   group -> number
Rule 167   group -> variable
Rule 168   group -> array_value
Rule 169   group -> object_value
Rule 170   term -> number
Rule 171   term -> factor_expr
Rule 172   term -> other_value
Rule 173   factor_expr -> LPAREN expression RPAREN
Rule 174   other_value -> variable
Rule 175   other_value -> array_value
Rule 176   other_value -> enum_value
Rule 177   other_value -> object_value
Rule 178   formLog -> expCond
Rule 179   formLog -> expOpLog
Rule 180   object_value -> object_value_form1
Rule 181   object_value -> object_value_form2
Rule 182   object_value_form1 -> variable POINT variable
Rule 183   object_value_form2 -> variable POINT array_value
Rule 184   array_value -> variable LBRACKET expression RBRACKET
Rule 185   enum_value -> object_name POINT object_name
Rule 186   prefix -> LET
Rule 187   prefix -> VAR
Rule 188   prefix -> STATIC
Rule 189   prefix -> CONST
Rule 190   typedate -> VARNUMBER
Rule 191   typedate -> VARSTRING
Rule 192   typedate -> VARBOOLEAN
Rule 193   typedate -> ENUM
Rule 194   number -> NUMBER
Rule 195   number -> FLOAT
Rule 196   string -> NORMSTRING1
Rule 197   string -> NORMSTRING2
Rule 198   string -> MULTISTRING
Rule 199   boolean -> TRUE
Rule 200   boolean -> FALSE
Rule 201   variable -> VARIABLE
Rule 202   object_name -> OBJECTNAME
Rule 203   operador -> GREATER
Rule 204   operador -> LESS
Rule 205   operador -> GREATEREQUAL
Rule 206   operador -> LESSEQUAL
Rule 207   operador -> EQUALTO
Rule 208   operador -> NOTEQUALTO
Rule 209   oplogico -> AND
Rule 210   oplogico -> OR
Rule 211   funcionmath -> mathAbs
Rule 212   funcionmath -> mathRound
Rule 213   funcionmath -> mathPow
Rule 214   mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN
Rule 215   mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN
Rule 216   mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
Rule 217   mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN
Rule 218   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 219   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
Rule 220   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
Rule 221   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN

Terminals, with rules where they appear

ABS                  : 214 215
AND                  : 209
ANY                  : 
ARRAY                : 59 63 67
COMMA                : 32 36 99 115 118 121 218 219 220 221
COMMENT              : 18
CONST                : 189
DECREMENT            : 146 147
DIVIDE               : 143
DOLLAR               : 
ELIF                 : 43 44
ELSE                 : 45
ENUM                 : 29 193
EQUAL                : 34 38 46 47 51 56 60 64 68 69 70 71 72 75 78 81 84 90 91 92 93 94 95
EQUALTO              : 152 153 154 207
FALSE                : 200
FLOAT                : 195
FOR                  : 46 47
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 214 215 216 217 218 219 220 221
GREATER              : 59 63 67 203
GREATEREQUAL         : 205
IF                   : 39 40 41 42
IN                   : 
INCREMENT            : 144 145
INSTANCEOF           : 
LBRACKET             : 58 62 66 114 117 120 184
LCOMILLA             : 
LESS                 : 59 63 67 204
LESSEQUAL            : 206
LET                  : 186
LKEY                 : 29 49 50 98
LPAREN               : 39 40 41 42 43 44 46 47 48 51 151 161 163 164 173 214 215 216 217 218 219 220 221
MINUS                : 140
MOD                  : 
MULTICOMMENT         : 19
MULTISTRING          : 198
NEGATION             : 148 149 150 151
NEW                  : 51
NORMSTRING1          : 196
NORMSTRING2          : 197
NOTEQUALTO           : 155 156 157 208
NULL                 : 69
NUMBER               : 194
OBJECTNAME           : 29 202
OR                   : 210
PLUS                 : 134 135 139
POINT                : 182 183 185 214 215 216 217 218 219 220 221
POINTCOMMA           : 2 46 46 47 47
POW                  : 218 219 220 221
PRINT                : 
PRODUCT              : 142
RBRACKET             : 58 62 66 114 117 120 184
RCOMILLA             : 
RKEY                 : 29 49 50 98
ROUND                : 216 217
RPAREN               : 39 40 41 42 43 44 46 47 48 51 151 161 163 164 173 214 215 216 217 218 219 220 221
SET                  : 51
SPECIAL              : 
STATIC               : 188
TRUE                 : 199
TWOPOINTS            : 59 63 67 74 77 80 83 101 102
TYPEOF               : 
UNDEFINED            : 70
VAR                  : 187
VARBOOLEAN           : 63 77 192
VARIABLE             : 46 47 47 86 201 214 216 218 218 220 221
VARNUMBER            : 59 74 190
VAROBJECT            : 
VARSTRING            : 67 80 191
WHILE                : 48
error                : 

Nonterminals, with rules where they appear

array_value          : 92 168 175 183
assign               : 6
assign_array         : 88
assign_object_value  : 89
assign_value         : 84 90
assign_variable      : 87
attribute            : 99 100
attributes           : 98 99
boolean              : 104 124 150
boolean_value        : 75 118 119
booleans             : 117 118
chain                : 134
comments             : 14
concatenate          : 4
declare              : 5
declare_any          : 46 51 59 63 67 68 69 70 74 77 80 83 84 85
declare_array        : 26
declare_array_boolean : 60 61
declare_array_main_boolean : 53
declare_array_main_number : 52
declare_array_main_string : 54
declare_array_number : 56 57
declare_array_string : 64 65
declare_boolean      : 62 75 76
declare_enum         : 27
declare_generic      : 28
declare_generic_array : 55
declare_number       : 58 71 72 73
declare_string       : 66 78 79
declare_var_enum     : 81 82
enum_value           : 81 176
enums                : 29
enums_numeric        : 30 32
enums_numeric_value  : 32 33
enums_string         : 31 36
enums_string_value   : 36 37
expCond              : 7 106 126 152 152 155 155 158 158 161 178
expEq                : 10 109 129
expNeg               : 9 108 128
expNotEq             : 11 110 130
expOpLog             : 8 107 127 148 151 179
exp_set              : 12
expression           : 3 103 123 137 139 140 154 154 157 157 160 160 162 162 163 163 173 184
factor_expr          : 171
factor_exprlog       : 149 153 153 156 156 159 159
formLog              : 39 40 41 42 43 44 46 47 48
funcionelif          : 40 41 44
funcionelse          : 41 42
funcionfor           : 17
funcionif            : 15
funcionmath          : 72
funcionwhile         : 16
general_value        : 92 93 95 96 101
group                : 164 165
list_boolean         : 60 112
list_number          : 56 111
list_string          : 64 113
list_types           : 68 91 94 102
mathAbs              : 211
mathPow              : 213
mathRound            : 212
number               : 34 166 170
number_value         : 46 47 71 115 116 215 217 219 219 220 221
numbers              : 114 115
object_definition    : 97
object_name          : 34 35 38 83 185 185
object_value         : 169 177
object_value_form1   : 93 94 180
object_value_form2   : 95 181
operador             : 46 47 162 163
oplogico             : 158 159 160
other_value          : 125 132 172
prefix               : 86
statement            : 49 0
statement_control    : 13
statement_value      : 1 2
string               : 38 105 131 134 138
string_value         : 78 121 122
strings              : 120 121
substatement         : 39 40 41 42 43 44 45 46 47 48
term                 : 139 140 141 142 142 143 143
term1                : 144 145 146 147
termS                : 133 135
typedate             : 
value                : 135 136
var_boolean          : 20
var_enum             : 23
var_null             : 24
var_number           : 21
var_string           : 22
var_undefined        : 25
variable             : 90 91 101 102 167 174 182 182 183 184

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (14) statement_value -> . comments
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (133) concatenate -> . termS
    (20) declare -> . var_boolean
    (21) declare -> . var_number
    (22) declare -> . var_string
    (23) declare -> . var_enum
    (24) declare -> . var_null
    (25) declare -> . var_undefined
    (26) declare -> . declare_array
    (27) declare -> . declare_enum
    (28) declare -> . declare_generic
    (87) assign -> . assign_variable
    (88) assign -> . assign_array
    (89) assign -> . assign_object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (51) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (15) statement_control -> . funcionif
    (16) statement_control -> . funcionwhile
    (17) statement_control -> . funcionfor
    (18) comments -> . COMMENT
    (19) comments -> . MULTICOMMENT
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (134) termS -> . string PLUS chain
    (75) var_boolean -> . declare_boolean EQUAL boolean_value
    (76) var_boolean -> . declare_boolean
    (71) var_number -> . declare_number EQUAL number_value
    (72) var_number -> . declare_number EQUAL funcionmath
    (73) var_number -> . declare_number
    (78) var_string -> . declare_string EQUAL string_value
    (79) var_string -> . declare_string
    (81) var_enum -> . declare_var_enum EQUAL enum_value
    (82) var_enum -> . declare_var_enum
    (69) var_null -> . declare_any EQUAL NULL
    (70) var_undefined -> . declare_any EQUAL UNDEFINED
    (52) declare_array -> . declare_array_main_number
    (53) declare_array -> . declare_array_main_boolean
    (54) declare_array -> . declare_array_main_string
    (55) declare_array -> . declare_generic_array
    (29) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (84) declare_generic -> . declare_any EQUAL assign_value
    (85) declare_generic -> . declare_any
    (90) assign_variable -> . variable EQUAL assign_value
    (91) assign_variable -> . variable EQUAL list_types
    (92) assign_array -> . array_value EQUAL general_value
    (93) assign_object_value -> . object_value_form1 EQUAL general_value
    (94) assign_object_value -> . object_value_form1 EQUAL list_types
    (95) assign_object_value -> . object_value_form2 EQUAL general_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (86) declare_any -> . prefix VARIABLE
    (39) funcionif -> . IF LPAREN formLog RPAREN substatement
    (40) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (41) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (42) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (48) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (46) funcionfor -> . FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (47) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (77) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (74) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (80) declare_string -> . declare_any TWOPOINTS VARSTRING
    (83) declare_var_enum -> . declare_any TWOPOINTS object_name
    (56) declare_array_main_number -> . declare_array_number EQUAL list_number
    (57) declare_array_main_number -> . declare_array_number
    (60) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (61) declare_array_main_boolean -> . declare_array_boolean
    (64) declare_array_main_string -> . declare_array_string EQUAL list_string
    (65) declare_array_main_string -> . declare_array_string
    (68) declare_generic_array -> . declare_any EQUAL list_types
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (186) prefix -> . LET
    (187) prefix -> . VAR
    (188) prefix -> . STATIC
    (189) prefix -> . CONST
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (58) declare_array_number -> . declare_number LBRACKET RBRACKET
    (59) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (62) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (63) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (66) declare_array_string -> . declare_string LBRACKET RBRACKET
    (67) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (202) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    COMMENT         shift and go to state 36
    MULTICOMMENT    shift and go to state 37
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    ENUM            shift and go to state 54
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    FOR             shift and go to state 64
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    VARIABLE        shift and go to state 61
    LET             shift and go to state 76
    VAR             shift and go to state 77
    STATIC          shift and go to state 78
    CONST           shift and go to state 79
    OBJECTNAME      shift and go to state 55

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    comments                       shift and go to state 14
    term                           shift and go to state 15
    termS                          shift and go to state 16
    var_boolean                    shift and go to state 17
    var_number                     shift and go to state 18
    var_string                     shift and go to state 19
    var_enum                       shift and go to state 20
    var_null                       shift and go to state 21
    var_undefined                  shift and go to state 22
    declare_array                  shift and go to state 23
    declare_enum                   shift and go to state 24
    declare_generic                shift and go to state 25
    assign_variable                shift and go to state 26
    assign_array                   shift and go to state 27
    assign_object_value            shift and go to state 28
    factor_exprlog                 shift and go to state 30
    declare_any                    shift and go to state 32
    funcionif                      shift and go to state 33
    funcionwhile                   shift and go to state 34
    funcionfor                     shift and go to state 35
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    string                         shift and go to state 44
    declare_boolean                shift and go to state 45
    declare_number                 shift and go to state 46
    declare_string                 shift and go to state 47
    declare_var_enum               shift and go to state 48
    enum_value                     shift and go to state 49
    declare_array_main_number      shift and go to state 50
    declare_array_main_boolean     shift and go to state 51
    declare_array_main_string      shift and go to state 52
    declare_generic_array          shift and go to state 53
    variable                       shift and go to state 56
    array_value                    shift and go to state 57
    object_value_form1             shift and go to state 58
    object_value_form2             shift and go to state 59
    prefix                         shift and go to state 60
    group                          shift and go to state 65
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    declare_array_number           shift and go to state 73
    declare_array_boolean          shift and go to state 74
    declare_array_string           shift and go to state 75

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    RKEY            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 80


state 3

    (3) statement_value -> expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (162) expCond -> expression . operador expression
    (160) expOpLog -> expression . oplogico expression
    (154) expEq -> expression . EQUALTO expression
    (157) expNotEq -> expression . NOTEQUALTO expression
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    RKEY            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    EQUALTO         shift and go to state 85
    NOTEQUALTO      shift and go to state 86
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 83
    oplogico                       shift and go to state 84

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)
    RKEY            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)
    RKEY            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)
    RKEY            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (158) expOpLog -> expCond . oplogico expCond
    (152) expEq -> expCond . EQUALTO expCond
    (155) expNotEq -> expCond . NOTEQUALTO expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    RKEY            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 94
    NOTEQUALTO      shift and go to state 95
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)
    RKEY            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)
    RKEY            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)
    RKEY            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)
    RKEY            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (12) statement_value -> exp_set .

    POINTCOMMA      reduce using rule 12 (statement_value -> exp_set .)
    $end            reduce using rule 12 (statement_value -> exp_set .)
    RKEY            reduce using rule 12 (statement_value -> exp_set .)


state 13

    (13) statement_value -> statement_control .

    POINTCOMMA      reduce using rule 13 (statement_value -> statement_control .)
    $end            reduce using rule 13 (statement_value -> statement_control .)
    RKEY            reduce using rule 13 (statement_value -> statement_control .)


state 14

    (14) statement_value -> comments .

    POINTCOMMA      reduce using rule 14 (statement_value -> comments .)
    $end            reduce using rule 14 (statement_value -> comments .)
    RKEY            reduce using rule 14 (statement_value -> comments .)


state 15

    (141) expression -> term .
    (142) term -> term . PRODUCT term
    (143) term -> term . DIVIDE term

    PLUS            reduce using rule 141 (expression -> term .)
    MINUS           reduce using rule 141 (expression -> term .)
    EQUALTO         reduce using rule 141 (expression -> term .)
    NOTEQUALTO      reduce using rule 141 (expression -> term .)
    GREATER         reduce using rule 141 (expression -> term .)
    LESS            reduce using rule 141 (expression -> term .)
    GREATEREQUAL    reduce using rule 141 (expression -> term .)
    LESSEQUAL       reduce using rule 141 (expression -> term .)
    AND             reduce using rule 141 (expression -> term .)
    OR              reduce using rule 141 (expression -> term .)
    POINTCOMMA      reduce using rule 141 (expression -> term .)
    $end            reduce using rule 141 (expression -> term .)
    RPAREN          reduce using rule 141 (expression -> term .)
    RKEY            reduce using rule 141 (expression -> term .)
    RBRACKET        reduce using rule 141 (expression -> term .)
    COMMA           reduce using rule 141 (expression -> term .)
    PRODUCT         shift and go to state 96
    DIVIDE          shift and go to state 97


state 16

    (133) concatenate -> termS .

    POINTCOMMA      reduce using rule 133 (concatenate -> termS .)
    $end            reduce using rule 133 (concatenate -> termS .)
    RKEY            reduce using rule 133 (concatenate -> termS .)


state 17

    (20) declare -> var_boolean .

    POINTCOMMA      reduce using rule 20 (declare -> var_boolean .)
    $end            reduce using rule 20 (declare -> var_boolean .)
    RKEY            reduce using rule 20 (declare -> var_boolean .)


state 18

    (21) declare -> var_number .

    POINTCOMMA      reduce using rule 21 (declare -> var_number .)
    $end            reduce using rule 21 (declare -> var_number .)
    RKEY            reduce using rule 21 (declare -> var_number .)


state 19

    (22) declare -> var_string .

    POINTCOMMA      reduce using rule 22 (declare -> var_string .)
    $end            reduce using rule 22 (declare -> var_string .)
    RKEY            reduce using rule 22 (declare -> var_string .)


state 20

    (23) declare -> var_enum .

    POINTCOMMA      reduce using rule 23 (declare -> var_enum .)
    $end            reduce using rule 23 (declare -> var_enum .)
    RKEY            reduce using rule 23 (declare -> var_enum .)


state 21

    (24) declare -> var_null .

    POINTCOMMA      reduce using rule 24 (declare -> var_null .)
    $end            reduce using rule 24 (declare -> var_null .)
    RKEY            reduce using rule 24 (declare -> var_null .)


state 22

    (25) declare -> var_undefined .

    POINTCOMMA      reduce using rule 25 (declare -> var_undefined .)
    $end            reduce using rule 25 (declare -> var_undefined .)
    RKEY            reduce using rule 25 (declare -> var_undefined .)


state 23

    (26) declare -> declare_array .

    POINTCOMMA      reduce using rule 26 (declare -> declare_array .)
    $end            reduce using rule 26 (declare -> declare_array .)
    RKEY            reduce using rule 26 (declare -> declare_array .)


state 24

    (27) declare -> declare_enum .

    POINTCOMMA      reduce using rule 27 (declare -> declare_enum .)
    $end            reduce using rule 27 (declare -> declare_enum .)
    RKEY            reduce using rule 27 (declare -> declare_enum .)


state 25

    (28) declare -> declare_generic .

    POINTCOMMA      reduce using rule 28 (declare -> declare_generic .)
    $end            reduce using rule 28 (declare -> declare_generic .)
    RKEY            reduce using rule 28 (declare -> declare_generic .)


state 26

    (87) assign -> assign_variable .

    POINTCOMMA      reduce using rule 87 (assign -> assign_variable .)
    $end            reduce using rule 87 (assign -> assign_variable .)
    RKEY            reduce using rule 87 (assign -> assign_variable .)


state 27

    (88) assign -> assign_array .

    POINTCOMMA      reduce using rule 88 (assign -> assign_array .)
    $end            reduce using rule 88 (assign -> assign_array .)
    RKEY            reduce using rule 88 (assign -> assign_array .)


state 28

    (89) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 89 (assign -> assign_object_value .)
    $end            reduce using rule 89 (assign -> assign_object_value .)
    RKEY            reduce using rule 89 (assign -> assign_object_value .)


state 29

    (163) expCond -> LPAREN . expression operador expression RPAREN
    (161) factor_exprlog -> LPAREN . expCond RPAREN
    (164) term1 -> LPAREN . group RPAREN
    (173) factor_expr -> LPAREN . expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (185) enum_value -> . object_name POINT object_name
    (202) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 98
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 99
    expCond                        shift and go to state 100
    group                          shift and go to state 101
    term                           shift and go to state 15
    number                         shift and go to state 102
    variable                       shift and go to state 103
    array_value                    shift and go to state 104
    object_value                   shift and go to state 105
    term1                          shift and go to state 38
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    enum_value                     shift and go to state 49
    object_name                    shift and go to state 72

state 30

    (159) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (153) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (156) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    EQUALTO         shift and go to state 109
    NOTEQUALTO      shift and go to state 110
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 108

state 31

    (148) expNeg -> NEGATION . expOpLog
    (149) expNeg -> NEGATION . factor_exprlog
    (150) expNeg -> NEGATION . boolean
    (151) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 114
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expOpLog                       shift and go to state 111
    factor_exprlog                 shift and go to state 112
    boolean                        shift and go to state 113
    expCond                        shift and go to state 115
    expression                     shift and go to state 116
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 32

    (51) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN
    (69) var_null -> declare_any . EQUAL NULL
    (70) var_undefined -> declare_any . EQUAL UNDEFINED
    (84) declare_generic -> declare_any . EQUAL assign_value
    (85) declare_generic -> declare_any .
    (77) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (74) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (80) declare_string -> declare_any . TWOPOINTS VARSTRING
    (83) declare_var_enum -> declare_any . TWOPOINTS object_name
    (68) declare_generic_array -> declare_any . EQUAL list_types
    (59) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (63) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (67) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 121
    POINTCOMMA      reduce using rule 85 (declare_generic -> declare_any .)
    $end            reduce using rule 85 (declare_generic -> declare_any .)
    RKEY            reduce using rule 85 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 122


state 33

    (15) statement_control -> funcionif .

    POINTCOMMA      reduce using rule 15 (statement_control -> funcionif .)
    $end            reduce using rule 15 (statement_control -> funcionif .)
    RKEY            reduce using rule 15 (statement_control -> funcionif .)


state 34

    (16) statement_control -> funcionwhile .

    POINTCOMMA      reduce using rule 16 (statement_control -> funcionwhile .)
    $end            reduce using rule 16 (statement_control -> funcionwhile .)
    RKEY            reduce using rule 16 (statement_control -> funcionwhile .)


state 35

    (17) statement_control -> funcionfor .

    POINTCOMMA      reduce using rule 17 (statement_control -> funcionfor .)
    $end            reduce using rule 17 (statement_control -> funcionfor .)
    RKEY            reduce using rule 17 (statement_control -> funcionfor .)


state 36

    (18) comments -> COMMENT .

    POINTCOMMA      reduce using rule 18 (comments -> COMMENT .)
    $end            reduce using rule 18 (comments -> COMMENT .)
    RKEY            reduce using rule 18 (comments -> COMMENT .)


state 37

    (19) comments -> MULTICOMMENT .

    POINTCOMMA      reduce using rule 19 (comments -> MULTICOMMENT .)
    $end            reduce using rule 19 (comments -> MULTICOMMENT .)
    RKEY            reduce using rule 19 (comments -> MULTICOMMENT .)


state 38

    (144) term -> term1 . INCREMENT
    (146) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 123
    DECREMENT       shift and go to state 124


state 39

    (145) term -> INCREMENT . term1
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61

    term1                          shift and go to state 125
    group                          shift and go to state 65
    number                         shift and go to state 127
    variable                       shift and go to state 128
    array_value                    shift and go to state 129
    object_value                   shift and go to state 130
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 40

    (147) term -> DECREMENT . term1
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61

    term1                          shift and go to state 131
    group                          shift and go to state 65
    number                         shift and go to state 127
    variable                       shift and go to state 128
    array_value                    shift and go to state 129
    object_value                   shift and go to state 130
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 41

    (170) term -> number .
    (166) group -> number .

    PRODUCT         reduce using rule 170 (term -> number .)
    DIVIDE          reduce using rule 170 (term -> number .)
    PLUS            reduce using rule 170 (term -> number .)
    MINUS           reduce using rule 170 (term -> number .)
    EQUALTO         reduce using rule 170 (term -> number .)
    NOTEQUALTO      reduce using rule 170 (term -> number .)
    GREATER         reduce using rule 170 (term -> number .)
    LESS            reduce using rule 170 (term -> number .)
    GREATEREQUAL    reduce using rule 170 (term -> number .)
    LESSEQUAL       reduce using rule 170 (term -> number .)
    AND             reduce using rule 170 (term -> number .)
    OR              reduce using rule 170 (term -> number .)
    POINTCOMMA      reduce using rule 170 (term -> number .)
    $end            reduce using rule 170 (term -> number .)
    RPAREN          reduce using rule 170 (term -> number .)
    RKEY            reduce using rule 170 (term -> number .)
    RBRACKET        reduce using rule 170 (term -> number .)
    COMMA           reduce using rule 170 (term -> number .)
    INCREMENT       reduce using rule 166 (group -> number .)
    DECREMENT       reduce using rule 166 (group -> number .)


state 42

    (171) term -> factor_expr .

    PRODUCT         reduce using rule 171 (term -> factor_expr .)
    DIVIDE          reduce using rule 171 (term -> factor_expr .)
    PLUS            reduce using rule 171 (term -> factor_expr .)
    MINUS           reduce using rule 171 (term -> factor_expr .)
    EQUALTO         reduce using rule 171 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 171 (term -> factor_expr .)
    GREATER         reduce using rule 171 (term -> factor_expr .)
    LESS            reduce using rule 171 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 171 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 171 (term -> factor_expr .)
    AND             reduce using rule 171 (term -> factor_expr .)
    OR              reduce using rule 171 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 171 (term -> factor_expr .)
    $end            reduce using rule 171 (term -> factor_expr .)
    RPAREN          reduce using rule 171 (term -> factor_expr .)
    RKEY            reduce using rule 171 (term -> factor_expr .)
    RBRACKET        reduce using rule 171 (term -> factor_expr .)
    COMMA           reduce using rule 171 (term -> factor_expr .)


state 43

    (172) term -> other_value .

    PRODUCT         reduce using rule 172 (term -> other_value .)
    DIVIDE          reduce using rule 172 (term -> other_value .)
    PLUS            reduce using rule 172 (term -> other_value .)
    MINUS           reduce using rule 172 (term -> other_value .)
    EQUALTO         reduce using rule 172 (term -> other_value .)
    NOTEQUALTO      reduce using rule 172 (term -> other_value .)
    GREATER         reduce using rule 172 (term -> other_value .)
    LESS            reduce using rule 172 (term -> other_value .)
    GREATEREQUAL    reduce using rule 172 (term -> other_value .)
    LESSEQUAL       reduce using rule 172 (term -> other_value .)
    AND             reduce using rule 172 (term -> other_value .)
    OR              reduce using rule 172 (term -> other_value .)
    POINTCOMMA      reduce using rule 172 (term -> other_value .)
    $end            reduce using rule 172 (term -> other_value .)
    RPAREN          reduce using rule 172 (term -> other_value .)
    RKEY            reduce using rule 172 (term -> other_value .)
    RBRACKET        reduce using rule 172 (term -> other_value .)
    COMMA           reduce using rule 172 (term -> other_value .)


state 44

    (134) termS -> string . PLUS chain

    PLUS            shift and go to state 132


state 45

    (75) var_boolean -> declare_boolean . EQUAL boolean_value
    (76) var_boolean -> declare_boolean .
    (62) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 133
    POINTCOMMA      reduce using rule 76 (var_boolean -> declare_boolean .)
    $end            reduce using rule 76 (var_boolean -> declare_boolean .)
    RKEY            reduce using rule 76 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 134


state 46

    (71) var_number -> declare_number . EQUAL number_value
    (72) var_number -> declare_number . EQUAL funcionmath
    (73) var_number -> declare_number .
    (58) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 135
    POINTCOMMA      reduce using rule 73 (var_number -> declare_number .)
    $end            reduce using rule 73 (var_number -> declare_number .)
    RKEY            reduce using rule 73 (var_number -> declare_number .)
    LBRACKET        shift and go to state 136


state 47

    (78) var_string -> declare_string . EQUAL string_value
    (79) var_string -> declare_string .
    (66) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 137
    POINTCOMMA      reduce using rule 79 (var_string -> declare_string .)
    $end            reduce using rule 79 (var_string -> declare_string .)
    RKEY            reduce using rule 79 (var_string -> declare_string .)
    LBRACKET        shift and go to state 138


state 48

    (81) var_enum -> declare_var_enum . EQUAL enum_value
    (82) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 139
    POINTCOMMA      reduce using rule 82 (var_enum -> declare_var_enum .)
    $end            reduce using rule 82 (var_enum -> declare_var_enum .)
    RKEY            reduce using rule 82 (var_enum -> declare_var_enum .)


state 49

    (176) other_value -> enum_value .

    PRODUCT         reduce using rule 176 (other_value -> enum_value .)
    DIVIDE          reduce using rule 176 (other_value -> enum_value .)
    PLUS            reduce using rule 176 (other_value -> enum_value .)
    MINUS           reduce using rule 176 (other_value -> enum_value .)
    EQUALTO         reduce using rule 176 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 176 (other_value -> enum_value .)
    GREATER         reduce using rule 176 (other_value -> enum_value .)
    LESS            reduce using rule 176 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 176 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 176 (other_value -> enum_value .)
    AND             reduce using rule 176 (other_value -> enum_value .)
    OR              reduce using rule 176 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 176 (other_value -> enum_value .)
    $end            reduce using rule 176 (other_value -> enum_value .)
    RPAREN          reduce using rule 176 (other_value -> enum_value .)
    RKEY            reduce using rule 176 (other_value -> enum_value .)
    RBRACKET        reduce using rule 176 (other_value -> enum_value .)
    COMMA           reduce using rule 176 (other_value -> enum_value .)


state 50

    (52) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 52 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 52 (declare_array -> declare_array_main_number .)
    RKEY            reduce using rule 52 (declare_array -> declare_array_main_number .)


state 51

    (53) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 53 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 53 (declare_array -> declare_array_main_boolean .)
    RKEY            reduce using rule 53 (declare_array -> declare_array_main_boolean .)


state 52

    (54) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 54 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 54 (declare_array -> declare_array_main_string .)
    RKEY            reduce using rule 54 (declare_array -> declare_array_main_string .)


state 53

    (55) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 55 (declare_array -> declare_generic_array .)
    $end            reduce using rule 55 (declare_array -> declare_generic_array .)
    RKEY            reduce using rule 55 (declare_array -> declare_generic_array .)


state 54

    (29) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 140


state 55

    (202) object_name -> OBJECTNAME .

    POINT           reduce using rule 202 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 202 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 202 (object_name -> OBJECTNAME .)
    $end            reduce using rule 202 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 202 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 202 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 202 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 202 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 202 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 202 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 202 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 202 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 202 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 202 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 202 (object_name -> OBJECTNAME .)
    AND             reduce using rule 202 (object_name -> OBJECTNAME .)
    OR              reduce using rule 202 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 202 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 202 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 202 (object_name -> OBJECTNAME .)


state 56

    (90) assign_variable -> variable . EQUAL assign_value
    (91) assign_variable -> variable . EQUAL list_types
    (174) other_value -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value
    (167) group -> variable .

    EQUAL           shift and go to state 141
    PRODUCT         reduce using rule 174 (other_value -> variable .)
    DIVIDE          reduce using rule 174 (other_value -> variable .)
    PLUS            reduce using rule 174 (other_value -> variable .)
    MINUS           reduce using rule 174 (other_value -> variable .)
    EQUALTO         reduce using rule 174 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 174 (other_value -> variable .)
    GREATER         reduce using rule 174 (other_value -> variable .)
    LESS            reduce using rule 174 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 174 (other_value -> variable .)
    LESSEQUAL       reduce using rule 174 (other_value -> variable .)
    AND             reduce using rule 174 (other_value -> variable .)
    OR              reduce using rule 174 (other_value -> variable .)
    POINTCOMMA      reduce using rule 174 (other_value -> variable .)
    $end            reduce using rule 174 (other_value -> variable .)
    RKEY            reduce using rule 174 (other_value -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143
    INCREMENT       reduce using rule 167 (group -> variable .)
    DECREMENT       reduce using rule 167 (group -> variable .)


state 57

    (92) assign_array -> array_value . EQUAL general_value
    (175) other_value -> array_value .
    (168) group -> array_value .

    EQUAL           shift and go to state 144
    PRODUCT         reduce using rule 175 (other_value -> array_value .)
    DIVIDE          reduce using rule 175 (other_value -> array_value .)
    PLUS            reduce using rule 175 (other_value -> array_value .)
    MINUS           reduce using rule 175 (other_value -> array_value .)
    EQUALTO         reduce using rule 175 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 175 (other_value -> array_value .)
    GREATER         reduce using rule 175 (other_value -> array_value .)
    LESS            reduce using rule 175 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 175 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 175 (other_value -> array_value .)
    AND             reduce using rule 175 (other_value -> array_value .)
    OR              reduce using rule 175 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 175 (other_value -> array_value .)
    $end            reduce using rule 175 (other_value -> array_value .)
    RKEY            reduce using rule 175 (other_value -> array_value .)
    INCREMENT       reduce using rule 168 (group -> array_value .)
    DECREMENT       reduce using rule 168 (group -> array_value .)


state 58

    (93) assign_object_value -> object_value_form1 . EQUAL general_value
    (94) assign_object_value -> object_value_form1 . EQUAL list_types
    (180) object_value -> object_value_form1 .

    EQUAL           shift and go to state 145
    PRODUCT         reduce using rule 180 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 180 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 180 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 180 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 180 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 180 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 180 (object_value -> object_value_form1 .)
    LESS            reduce using rule 180 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 180 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 180 (object_value -> object_value_form1 .)
    AND             reduce using rule 180 (object_value -> object_value_form1 .)
    OR              reduce using rule 180 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 180 (object_value -> object_value_form1 .)
    $end            reduce using rule 180 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 180 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 180 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 180 (object_value -> object_value_form1 .)


state 59

    (95) assign_object_value -> object_value_form2 . EQUAL general_value
    (181) object_value -> object_value_form2 .

    EQUAL           shift and go to state 146
    PRODUCT         reduce using rule 181 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 181 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 181 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 181 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 181 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 181 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 181 (object_value -> object_value_form2 .)
    LESS            reduce using rule 181 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 181 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 181 (object_value -> object_value_form2 .)
    AND             reduce using rule 181 (object_value -> object_value_form2 .)
    OR              reduce using rule 181 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 181 (object_value -> object_value_form2 .)
    $end            reduce using rule 181 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 181 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 181 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 181 (object_value -> object_value_form2 .)


state 60

    (86) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 147


state 61

    (201) variable -> VARIABLE .

    EQUAL           reduce using rule 201 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 201 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 201 (variable -> VARIABLE .)
    GREATER         reduce using rule 201 (variable -> VARIABLE .)
    LESS            reduce using rule 201 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 201 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 201 (variable -> VARIABLE .)
    AND             reduce using rule 201 (variable -> VARIABLE .)
    OR              reduce using rule 201 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 201 (variable -> VARIABLE .)
    $end            reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)
    RPAREN          reduce using rule 201 (variable -> VARIABLE .)
    RKEY            reduce using rule 201 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    COMMA           reduce using rule 201 (variable -> VARIABLE .)
    TWOPOINTS       reduce using rule 201 (variable -> VARIABLE .)


state 62

    (39) funcionif -> IF . LPAREN formLog RPAREN substatement
    (40) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif
    (41) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelif funcionelse
    (42) funcionif -> IF . LPAREN formLog RPAREN substatement funcionelse

    LPAREN          shift and go to state 148


state 63

    (48) funcionwhile -> WHILE . LPAREN formLog RPAREN substatement

    LPAREN          shift and go to state 149


state 64

    (46) funcionfor -> FOR . LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (47) funcionfor -> FOR . LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    LPAREN          shift and go to state 150


state 65

    (165) term1 -> group .

    INCREMENT       reduce using rule 165 (term1 -> group .)
    DECREMENT       reduce using rule 165 (term1 -> group .)
    PRODUCT         reduce using rule 165 (term1 -> group .)
    DIVIDE          reduce using rule 165 (term1 -> group .)
    PLUS            reduce using rule 165 (term1 -> group .)
    MINUS           reduce using rule 165 (term1 -> group .)
    EQUALTO         reduce using rule 165 (term1 -> group .)
    NOTEQUALTO      reduce using rule 165 (term1 -> group .)
    GREATER         reduce using rule 165 (term1 -> group .)
    LESS            reduce using rule 165 (term1 -> group .)
    GREATEREQUAL    reduce using rule 165 (term1 -> group .)
    LESSEQUAL       reduce using rule 165 (term1 -> group .)
    AND             reduce using rule 165 (term1 -> group .)
    OR              reduce using rule 165 (term1 -> group .)
    POINTCOMMA      reduce using rule 165 (term1 -> group .)
    $end            reduce using rule 165 (term1 -> group .)
    RPAREN          reduce using rule 165 (term1 -> group .)
    RKEY            reduce using rule 165 (term1 -> group .)
    RBRACKET        reduce using rule 165 (term1 -> group .)
    COMMA           reduce using rule 165 (term1 -> group .)


state 66

    (194) number -> NUMBER .

    PRODUCT         reduce using rule 194 (number -> NUMBER .)
    DIVIDE          reduce using rule 194 (number -> NUMBER .)
    PLUS            reduce using rule 194 (number -> NUMBER .)
    MINUS           reduce using rule 194 (number -> NUMBER .)
    EQUALTO         reduce using rule 194 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 194 (number -> NUMBER .)
    GREATER         reduce using rule 194 (number -> NUMBER .)
    LESS            reduce using rule 194 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 194 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 194 (number -> NUMBER .)
    AND             reduce using rule 194 (number -> NUMBER .)
    OR              reduce using rule 194 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 194 (number -> NUMBER .)
    $end            reduce using rule 194 (number -> NUMBER .)
    INCREMENT       reduce using rule 194 (number -> NUMBER .)
    DECREMENT       reduce using rule 194 (number -> NUMBER .)
    RPAREN          reduce using rule 194 (number -> NUMBER .)
    RKEY            reduce using rule 194 (number -> NUMBER .)
    RBRACKET        reduce using rule 194 (number -> NUMBER .)
    COMMA           reduce using rule 194 (number -> NUMBER .)


state 67

    (195) number -> FLOAT .

    PRODUCT         reduce using rule 195 (number -> FLOAT .)
    DIVIDE          reduce using rule 195 (number -> FLOAT .)
    PLUS            reduce using rule 195 (number -> FLOAT .)
    MINUS           reduce using rule 195 (number -> FLOAT .)
    EQUALTO         reduce using rule 195 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 195 (number -> FLOAT .)
    GREATER         reduce using rule 195 (number -> FLOAT .)
    LESS            reduce using rule 195 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 195 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 195 (number -> FLOAT .)
    AND             reduce using rule 195 (number -> FLOAT .)
    OR              reduce using rule 195 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 195 (number -> FLOAT .)
    $end            reduce using rule 195 (number -> FLOAT .)
    INCREMENT       reduce using rule 195 (number -> FLOAT .)
    DECREMENT       reduce using rule 195 (number -> FLOAT .)
    RPAREN          reduce using rule 195 (number -> FLOAT .)
    RKEY            reduce using rule 195 (number -> FLOAT .)
    RBRACKET        reduce using rule 195 (number -> FLOAT .)
    COMMA           reduce using rule 195 (number -> FLOAT .)


state 68

    (177) other_value -> object_value .
    (169) group -> object_value .

    PRODUCT         reduce using rule 177 (other_value -> object_value .)
    DIVIDE          reduce using rule 177 (other_value -> object_value .)
    PLUS            reduce using rule 177 (other_value -> object_value .)
    MINUS           reduce using rule 177 (other_value -> object_value .)
    EQUALTO         reduce using rule 177 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 177 (other_value -> object_value .)
    GREATER         reduce using rule 177 (other_value -> object_value .)
    LESS            reduce using rule 177 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 177 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 177 (other_value -> object_value .)
    AND             reduce using rule 177 (other_value -> object_value .)
    OR              reduce using rule 177 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 177 (other_value -> object_value .)
    $end            reduce using rule 177 (other_value -> object_value .)
    RPAREN          reduce using rule 177 (other_value -> object_value .)
    RKEY            reduce using rule 177 (other_value -> object_value .)
    RBRACKET        reduce using rule 177 (other_value -> object_value .)
    COMMA           reduce using rule 177 (other_value -> object_value .)
    INCREMENT       reduce using rule 169 (group -> object_value .)
    DECREMENT       reduce using rule 169 (group -> object_value .)


state 69

    (196) string -> NORMSTRING1 .

    PLUS            reduce using rule 196 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 196 (string -> NORMSTRING1 .)
    $end            reduce using rule 196 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 196 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 196 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 196 (string -> NORMSTRING1 .)


state 70

    (197) string -> NORMSTRING2 .

    PLUS            reduce using rule 197 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 197 (string -> NORMSTRING2 .)
    $end            reduce using rule 197 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 197 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 197 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 197 (string -> NORMSTRING2 .)


state 71

    (198) string -> MULTISTRING .

    PLUS            reduce using rule 198 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 198 (string -> MULTISTRING .)
    $end            reduce using rule 198 (string -> MULTISTRING .)
    RKEY            reduce using rule 198 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 198 (string -> MULTISTRING .)
    COMMA           reduce using rule 198 (string -> MULTISTRING .)


state 72

    (185) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 151


state 73

    (56) declare_array_main_number -> declare_array_number . EQUAL list_number
    (57) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 152
    POINTCOMMA      reduce using rule 57 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 57 (declare_array_main_number -> declare_array_number .)
    RKEY            reduce using rule 57 (declare_array_main_number -> declare_array_number .)


state 74

    (60) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (61) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 153
    POINTCOMMA      reduce using rule 61 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 61 (declare_array_main_boolean -> declare_array_boolean .)
    RKEY            reduce using rule 61 (declare_array_main_boolean -> declare_array_boolean .)


state 75

    (64) declare_array_main_string -> declare_array_string . EQUAL list_string
    (65) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 154
    POINTCOMMA      reduce using rule 65 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 65 (declare_array_main_string -> declare_array_string .)
    RKEY            reduce using rule 65 (declare_array_main_string -> declare_array_string .)


state 76

    (186) prefix -> LET .

    VARIABLE        reduce using rule 186 (prefix -> LET .)


state 77

    (187) prefix -> VAR .

    VARIABLE        reduce using rule 187 (prefix -> VAR .)


state 78

    (188) prefix -> STATIC .

    VARIABLE        reduce using rule 188 (prefix -> STATIC .)


state 79

    (189) prefix -> CONST .

    VARIABLE        reduce using rule 189 (prefix -> CONST .)


state 80

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)
    RKEY            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 81

    (139) expression -> expression PLUS . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    term                           shift and go to state 155
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 82

    (140) expression -> expression MINUS . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    term                           shift and go to state 157
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 83

    (162) expCond -> expression operador . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 158
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 84

    (160) expOpLog -> expression oplogico . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 159
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 85

    (154) expEq -> expression EQUALTO . expression
    (207) operador -> EQUALTO .
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

  ! INCREMENT       [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 207 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 207 (operador -> EQUALTO .) ]

    expression                     shift and go to state 160
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 86

    (157) expNotEq -> expression NOTEQUALTO . expression
    (208) operador -> NOTEQUALTO .
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

  ! INCREMENT       [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 208 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 208 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 161
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 87

    (203) operador -> GREATER .

    INCREMENT       reduce using rule 203 (operador -> GREATER .)
    DECREMENT       reduce using rule 203 (operador -> GREATER .)
    LPAREN          reduce using rule 203 (operador -> GREATER .)
    NUMBER          reduce using rule 203 (operador -> GREATER .)
    FLOAT           reduce using rule 203 (operador -> GREATER .)
    VARIABLE        reduce using rule 203 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 203 (operador -> GREATER .)
    RPAREN          reduce using rule 203 (operador -> GREATER .)


state 88

    (204) operador -> LESS .

    INCREMENT       reduce using rule 204 (operador -> LESS .)
    DECREMENT       reduce using rule 204 (operador -> LESS .)
    LPAREN          reduce using rule 204 (operador -> LESS .)
    NUMBER          reduce using rule 204 (operador -> LESS .)
    FLOAT           reduce using rule 204 (operador -> LESS .)
    VARIABLE        reduce using rule 204 (operador -> LESS .)
    OBJECTNAME      reduce using rule 204 (operador -> LESS .)
    RPAREN          reduce using rule 204 (operador -> LESS .)


state 89

    (205) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 205 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 205 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 205 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 205 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 205 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 205 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 205 (operador -> GREATEREQUAL .)
    RPAREN          reduce using rule 205 (operador -> GREATEREQUAL .)


state 90

    (206) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 206 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 206 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 206 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 206 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 206 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 206 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 206 (operador -> LESSEQUAL .)
    RPAREN          reduce using rule 206 (operador -> LESSEQUAL .)


state 91

    (209) oplogico -> AND .

    INCREMENT       reduce using rule 209 (oplogico -> AND .)
    DECREMENT       reduce using rule 209 (oplogico -> AND .)
    LPAREN          reduce using rule 209 (oplogico -> AND .)
    NUMBER          reduce using rule 209 (oplogico -> AND .)
    FLOAT           reduce using rule 209 (oplogico -> AND .)
    VARIABLE        reduce using rule 209 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 209 (oplogico -> AND .)


state 92

    (210) oplogico -> OR .

    INCREMENT       reduce using rule 210 (oplogico -> OR .)
    DECREMENT       reduce using rule 210 (oplogico -> OR .)
    LPAREN          reduce using rule 210 (oplogico -> OR .)
    NUMBER          reduce using rule 210 (oplogico -> OR .)
    FLOAT           reduce using rule 210 (oplogico -> OR .)
    VARIABLE        reduce using rule 210 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 210 (oplogico -> OR .)


state 93

    (158) expOpLog -> expCond oplogico . expCond
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 98
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expCond                        shift and go to state 162
    expression                     shift and go to state 163
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 94

    (152) expEq -> expCond EQUALTO . expCond
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 98
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expCond                        shift and go to state 164
    expression                     shift and go to state 163
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 95

    (155) expNotEq -> expCond NOTEQUALTO . expCond
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 98
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expCond                        shift and go to state 165
    expression                     shift and go to state 163
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 96

    (142) term -> term PRODUCT . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    term                           shift and go to state 166
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 97

    (143) term -> term DIVIDE . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    term                           shift and go to state 167
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 98

    (163) expCond -> LPAREN . expression operador expression RPAREN
    (164) term1 -> LPAREN . group RPAREN
    (173) factor_expr -> LPAREN . expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (185) enum_value -> . object_name POINT object_name
    (202) object_name -> . OBJECTNAME

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    LPAREN          shift and go to state 156
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 168
    group                          shift and go to state 101
    term                           shift and go to state 15
    number                         shift and go to state 102
    variable                       shift and go to state 103
    array_value                    shift and go to state 104
    object_value                   shift and go to state 105
    term1                          shift and go to state 38
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    enum_value                     shift and go to state 49
    object_name                    shift and go to state 72

state 99

    (163) expCond -> LPAREN expression . operador expression RPAREN
    (173) factor_expr -> LPAREN expression . RPAREN
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (162) expCond -> expression . operador expression
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 170
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    operador                       shift and go to state 169

state 100

    (161) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 173


state 101

    (164) term1 -> LPAREN group . RPAREN
    (165) term1 -> group .

    RPAREN          shift and go to state 174
    INCREMENT       reduce using rule 165 (term1 -> group .)
    DECREMENT       reduce using rule 165 (term1 -> group .)


state 102

    (166) group -> number .
    (170) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 166 (group -> number .)
    RPAREN          reduce using rule 166 (group -> number .)
    INCREMENT       reduce using rule 166 (group -> number .)
    DECREMENT       reduce using rule 166 (group -> number .)
    PRODUCT         reduce using rule 170 (term -> number .)
    DIVIDE          reduce using rule 170 (term -> number .)
    PLUS            reduce using rule 170 (term -> number .)
    MINUS           reduce using rule 170 (term -> number .)
    GREATER         reduce using rule 170 (term -> number .)
    LESS            reduce using rule 170 (term -> number .)
    GREATEREQUAL    reduce using rule 170 (term -> number .)
    LESSEQUAL       reduce using rule 170 (term -> number .)
    EQUALTO         reduce using rule 170 (term -> number .)
    NOTEQUALTO      reduce using rule 170 (term -> number .)
    AND             reduce using rule 170 (term -> number .)
    OR              reduce using rule 170 (term -> number .)

  ! RPAREN          [ reduce using rule 170 (term -> number .) ]


state 103

    (167) group -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (174) other_value -> variable .
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for RPAREN resolved using rule 167 (group -> variable .)
    RPAREN          reduce using rule 167 (group -> variable .)
    INCREMENT       reduce using rule 167 (group -> variable .)
    DECREMENT       reduce using rule 167 (group -> variable .)
    LBRACKET        shift and go to state 142
    PRODUCT         reduce using rule 174 (other_value -> variable .)
    DIVIDE          reduce using rule 174 (other_value -> variable .)
    PLUS            reduce using rule 174 (other_value -> variable .)
    MINUS           reduce using rule 174 (other_value -> variable .)
    GREATER         reduce using rule 174 (other_value -> variable .)
    LESS            reduce using rule 174 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 174 (other_value -> variable .)
    LESSEQUAL       reduce using rule 174 (other_value -> variable .)
    EQUALTO         reduce using rule 174 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 174 (other_value -> variable .)
    AND             reduce using rule 174 (other_value -> variable .)
    OR              reduce using rule 174 (other_value -> variable .)
    POINT           shift and go to state 143

  ! RPAREN          [ reduce using rule 174 (other_value -> variable .) ]


state 104

    (168) group -> array_value .
    (175) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 168 (group -> array_value .)
    RPAREN          reduce using rule 168 (group -> array_value .)
    INCREMENT       reduce using rule 168 (group -> array_value .)
    DECREMENT       reduce using rule 168 (group -> array_value .)
    PRODUCT         reduce using rule 175 (other_value -> array_value .)
    DIVIDE          reduce using rule 175 (other_value -> array_value .)
    PLUS            reduce using rule 175 (other_value -> array_value .)
    MINUS           reduce using rule 175 (other_value -> array_value .)
    GREATER         reduce using rule 175 (other_value -> array_value .)
    LESS            reduce using rule 175 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 175 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 175 (other_value -> array_value .)
    EQUALTO         reduce using rule 175 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 175 (other_value -> array_value .)
    AND             reduce using rule 175 (other_value -> array_value .)
    OR              reduce using rule 175 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 175 (other_value -> array_value .) ]


state 105

    (169) group -> object_value .
    (177) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 169 (group -> object_value .)
    RPAREN          reduce using rule 169 (group -> object_value .)
    INCREMENT       reduce using rule 169 (group -> object_value .)
    DECREMENT       reduce using rule 169 (group -> object_value .)
    PRODUCT         reduce using rule 177 (other_value -> object_value .)
    DIVIDE          reduce using rule 177 (other_value -> object_value .)
    PLUS            reduce using rule 177 (other_value -> object_value .)
    MINUS           reduce using rule 177 (other_value -> object_value .)
    GREATER         reduce using rule 177 (other_value -> object_value .)
    LESS            reduce using rule 177 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 177 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 177 (other_value -> object_value .)
    EQUALTO         reduce using rule 177 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 177 (other_value -> object_value .)
    AND             reduce using rule 177 (other_value -> object_value .)
    OR              reduce using rule 177 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 177 (other_value -> object_value .) ]


state 106

    (180) object_value -> object_value_form1 .

    RPAREN          reduce using rule 180 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 180 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 180 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 180 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 180 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 180 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 180 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 180 (object_value -> object_value_form1 .)
    LESS            reduce using rule 180 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 180 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 180 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 180 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 180 (object_value -> object_value_form1 .)
    AND             reduce using rule 180 (object_value -> object_value_form1 .)
    OR              reduce using rule 180 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 180 (object_value -> object_value_form1 .)
    $end            reduce using rule 180 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 180 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 180 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 180 (object_value -> object_value_form1 .)


state 107

    (181) object_value -> object_value_form2 .

    RPAREN          reduce using rule 181 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 181 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 181 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 181 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 181 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 181 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 181 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 181 (object_value -> object_value_form2 .)
    LESS            reduce using rule 181 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 181 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 181 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 181 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 181 (object_value -> object_value_form2 .)
    AND             reduce using rule 181 (object_value -> object_value_form2 .)
    OR              reduce using rule 181 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 181 (object_value -> object_value_form2 .)
    $end            reduce using rule 181 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 181 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 181 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 181 (object_value -> object_value_form2 .)


state 108

    (159) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (161) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 176

    factor_exprlog                 shift and go to state 175

state 109

    (153) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (161) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 176

    factor_exprlog                 shift and go to state 177

state 110

    (156) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (161) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 176

    factor_exprlog                 shift and go to state 178

state 111

    (148) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 148 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 148 (expNeg -> NEGATION expOpLog .)
    RKEY            reduce using rule 148 (expNeg -> NEGATION expOpLog .)
    RBRACKET        reduce using rule 148 (expNeg -> NEGATION expOpLog .)
    COMMA           reduce using rule 148 (expNeg -> NEGATION expOpLog .)


state 112

    (149) expNeg -> NEGATION factor_exprlog .
    (159) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 149 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 149 (expNeg -> NEGATION factor_exprlog .)
    RKEY            reduce using rule 149 (expNeg -> NEGATION factor_exprlog .)
    RBRACKET        reduce using rule 149 (expNeg -> NEGATION factor_exprlog .)
    COMMA           reduce using rule 149 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 108

state 113

    (150) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 150 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 150 (expNeg -> NEGATION boolean .)
    RKEY            reduce using rule 150 (expNeg -> NEGATION boolean .)
    RBRACKET        reduce using rule 150 (expNeg -> NEGATION boolean .)
    COMMA           reduce using rule 150 (expNeg -> NEGATION boolean .)


state 114

    (151) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (161) factor_exprlog -> LPAREN . expCond RPAREN
    (163) expCond -> LPAREN . expression operador expression RPAREN
    (164) term1 -> LPAREN . group RPAREN
    (173) factor_expr -> LPAREN . expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (185) enum_value -> . object_name POINT object_name
    (202) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expOpLog                       shift and go to state 179
    expCond                        shift and go to state 180
    expression                     shift and go to state 181
    group                          shift and go to state 101
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    number                         shift and go to state 102
    variable                       shift and go to state 103
    array_value                    shift and go to state 104
    object_value                   shift and go to state 105
    term1                          shift and go to state 38
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    enum_value                     shift and go to state 49
    object_name                    shift and go to state 72

state 115

    (158) expOpLog -> expCond . oplogico expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 116

    (160) expOpLog -> expression . oplogico expression
    (162) expCond -> expression . operador expression
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (209) oplogico -> . AND
    (210) oplogico -> . OR
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    AND             shift and go to state 91
    OR              shift and go to state 92
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    oplogico                       shift and go to state 84
    operador                       shift and go to state 83

state 117

    (199) boolean -> TRUE .

    POINTCOMMA      reduce using rule 199 (boolean -> TRUE .)
    $end            reduce using rule 199 (boolean -> TRUE .)
    RKEY            reduce using rule 199 (boolean -> TRUE .)
    RBRACKET        reduce using rule 199 (boolean -> TRUE .)
    COMMA           reduce using rule 199 (boolean -> TRUE .)


state 118

    (200) boolean -> FALSE .

    POINTCOMMA      reduce using rule 200 (boolean -> FALSE .)
    $end            reduce using rule 200 (boolean -> FALSE .)
    RKEY            reduce using rule 200 (boolean -> FALSE .)
    RBRACKET        reduce using rule 200 (boolean -> FALSE .)
    COMMA           reduce using rule 200 (boolean -> FALSE .)


state 119

    (174) other_value -> variable .
    (167) group -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 174 (other_value -> variable .)
    DIVIDE          reduce using rule 174 (other_value -> variable .)
    PLUS            reduce using rule 174 (other_value -> variable .)
    MINUS           reduce using rule 174 (other_value -> variable .)
    AND             reduce using rule 174 (other_value -> variable .)
    OR              reduce using rule 174 (other_value -> variable .)
    GREATER         reduce using rule 174 (other_value -> variable .)
    LESS            reduce using rule 174 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 174 (other_value -> variable .)
    LESSEQUAL       reduce using rule 174 (other_value -> variable .)
    EQUALTO         reduce using rule 174 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 174 (other_value -> variable .)
    POINTCOMMA      reduce using rule 174 (other_value -> variable .)
    $end            reduce using rule 174 (other_value -> variable .)
    RPAREN          reduce using rule 174 (other_value -> variable .)
    RKEY            reduce using rule 174 (other_value -> variable .)
    RBRACKET        reduce using rule 174 (other_value -> variable .)
    COMMA           reduce using rule 174 (other_value -> variable .)
    INCREMENT       reduce using rule 167 (group -> variable .)
    DECREMENT       reduce using rule 167 (group -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143


state 120

    (175) other_value -> array_value .
    (168) group -> array_value .

    PRODUCT         reduce using rule 175 (other_value -> array_value .)
    DIVIDE          reduce using rule 175 (other_value -> array_value .)
    PLUS            reduce using rule 175 (other_value -> array_value .)
    MINUS           reduce using rule 175 (other_value -> array_value .)
    AND             reduce using rule 175 (other_value -> array_value .)
    OR              reduce using rule 175 (other_value -> array_value .)
    GREATER         reduce using rule 175 (other_value -> array_value .)
    LESS            reduce using rule 175 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 175 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 175 (other_value -> array_value .)
    EQUALTO         reduce using rule 175 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 175 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 175 (other_value -> array_value .)
    $end            reduce using rule 175 (other_value -> array_value .)
    RPAREN          reduce using rule 175 (other_value -> array_value .)
    RKEY            reduce using rule 175 (other_value -> array_value .)
    RBRACKET        reduce using rule 175 (other_value -> array_value .)
    COMMA           reduce using rule 175 (other_value -> array_value .)
    INCREMENT       reduce using rule 168 (group -> array_value .)
    DECREMENT       reduce using rule 168 (group -> array_value .)


state 121

    (51) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN
    (69) var_null -> declare_any EQUAL . NULL
    (70) var_undefined -> declare_any EQUAL . UNDEFINED
    (84) declare_generic -> declare_any EQUAL . assign_value
    (68) declare_generic_array -> declare_any EQUAL . list_types
    (96) assign_value -> . general_value
    (97) assign_value -> . object_definition
    (111) list_types -> . list_number
    (112) list_types -> . list_boolean
    (113) list_types -> . list_string
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (98) object_definition -> . LKEY attributes RKEY
    (114) list_number -> . LBRACKET numbers RBRACKET
    (117) list_boolean -> . LBRACKET booleans RBRACKET
    (120) list_string -> . LBRACKET strings RBRACKET
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NEW             shift and go to state 183
    NULL            shift and go to state 184
    UNDEFINED       shift and go to state 185
    LKEY            shift and go to state 201
    LBRACKET        shift and go to state 202
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    assign_value                   shift and go to state 186
    list_types                     shift and go to state 187
    general_value                  shift and go to state 188
    object_definition              shift and go to state 189
    list_number                    shift and go to state 190
    list_boolean                   shift and go to state 191
    list_string                    shift and go to state 192
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 122

    (77) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (74) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (80) declare_string -> declare_any TWOPOINTS . VARSTRING
    (83) declare_var_enum -> declare_any TWOPOINTS . object_name
    (59) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (63) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (67) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (202) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 203
    VARNUMBER       shift and go to state 204
    VARSTRING       shift and go to state 205
    ARRAY           shift and go to state 207
    OBJECTNAME      shift and go to state 55

    object_name                    shift and go to state 206

state 123

    (144) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 144 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 144 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 144 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 144 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 144 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 144 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 144 (term -> term1 INCREMENT .)
    LESS            reduce using rule 144 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 144 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 144 (term -> term1 INCREMENT .)
    AND             reduce using rule 144 (term -> term1 INCREMENT .)
    OR              reduce using rule 144 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 144 (term -> term1 INCREMENT .)
    $end            reduce using rule 144 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 144 (term -> term1 INCREMENT .)
    RKEY            reduce using rule 144 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 144 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 144 (term -> term1 INCREMENT .)


state 124

    (146) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 146 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 146 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 146 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 146 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 146 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 146 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 146 (term -> term1 DECREMENT .)
    LESS            reduce using rule 146 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 146 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 146 (term -> term1 DECREMENT .)
    AND             reduce using rule 146 (term -> term1 DECREMENT .)
    OR              reduce using rule 146 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 146 (term -> term1 DECREMENT .)
    $end            reduce using rule 146 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 146 (term -> term1 DECREMENT .)
    RKEY            reduce using rule 146 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 146 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 146 (term -> term1 DECREMENT .)


state 125

    (145) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 145 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 145 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 145 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 145 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 145 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 145 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 145 (term -> INCREMENT term1 .)
    LESS            reduce using rule 145 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 145 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 145 (term -> INCREMENT term1 .)
    AND             reduce using rule 145 (term -> INCREMENT term1 .)
    OR              reduce using rule 145 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 145 (term -> INCREMENT term1 .)
    $end            reduce using rule 145 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 145 (term -> INCREMENT term1 .)
    RKEY            reduce using rule 145 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 145 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 145 (term -> INCREMENT term1 .)


state 126

    (164) term1 -> LPAREN . group RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61

    group                          shift and go to state 208
    number                         shift and go to state 127
    variable                       shift and go to state 128
    array_value                    shift and go to state 129
    object_value                   shift and go to state 130
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 127

    (166) group -> number .

    PRODUCT         reduce using rule 166 (group -> number .)
    DIVIDE          reduce using rule 166 (group -> number .)
    PLUS            reduce using rule 166 (group -> number .)
    MINUS           reduce using rule 166 (group -> number .)
    EQUALTO         reduce using rule 166 (group -> number .)
    NOTEQUALTO      reduce using rule 166 (group -> number .)
    GREATER         reduce using rule 166 (group -> number .)
    LESS            reduce using rule 166 (group -> number .)
    GREATEREQUAL    reduce using rule 166 (group -> number .)
    LESSEQUAL       reduce using rule 166 (group -> number .)
    AND             reduce using rule 166 (group -> number .)
    OR              reduce using rule 166 (group -> number .)
    POINTCOMMA      reduce using rule 166 (group -> number .)
    $end            reduce using rule 166 (group -> number .)
    RPAREN          reduce using rule 166 (group -> number .)
    RKEY            reduce using rule 166 (group -> number .)
    RBRACKET        reduce using rule 166 (group -> number .)
    COMMA           reduce using rule 166 (group -> number .)


state 128

    (167) group -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 167 (group -> variable .)
    DIVIDE          reduce using rule 167 (group -> variable .)
    PLUS            reduce using rule 167 (group -> variable .)
    MINUS           reduce using rule 167 (group -> variable .)
    EQUALTO         reduce using rule 167 (group -> variable .)
    NOTEQUALTO      reduce using rule 167 (group -> variable .)
    GREATER         reduce using rule 167 (group -> variable .)
    LESS            reduce using rule 167 (group -> variable .)
    GREATEREQUAL    reduce using rule 167 (group -> variable .)
    LESSEQUAL       reduce using rule 167 (group -> variable .)
    AND             reduce using rule 167 (group -> variable .)
    OR              reduce using rule 167 (group -> variable .)
    POINTCOMMA      reduce using rule 167 (group -> variable .)
    $end            reduce using rule 167 (group -> variable .)
    RPAREN          reduce using rule 167 (group -> variable .)
    RKEY            reduce using rule 167 (group -> variable .)
    RBRACKET        reduce using rule 167 (group -> variable .)
    COMMA           reduce using rule 167 (group -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143


state 129

    (168) group -> array_value .

    PRODUCT         reduce using rule 168 (group -> array_value .)
    DIVIDE          reduce using rule 168 (group -> array_value .)
    PLUS            reduce using rule 168 (group -> array_value .)
    MINUS           reduce using rule 168 (group -> array_value .)
    EQUALTO         reduce using rule 168 (group -> array_value .)
    NOTEQUALTO      reduce using rule 168 (group -> array_value .)
    GREATER         reduce using rule 168 (group -> array_value .)
    LESS            reduce using rule 168 (group -> array_value .)
    GREATEREQUAL    reduce using rule 168 (group -> array_value .)
    LESSEQUAL       reduce using rule 168 (group -> array_value .)
    AND             reduce using rule 168 (group -> array_value .)
    OR              reduce using rule 168 (group -> array_value .)
    POINTCOMMA      reduce using rule 168 (group -> array_value .)
    $end            reduce using rule 168 (group -> array_value .)
    RPAREN          reduce using rule 168 (group -> array_value .)
    RKEY            reduce using rule 168 (group -> array_value .)
    RBRACKET        reduce using rule 168 (group -> array_value .)
    COMMA           reduce using rule 168 (group -> array_value .)


state 130

    (169) group -> object_value .

    PRODUCT         reduce using rule 169 (group -> object_value .)
    DIVIDE          reduce using rule 169 (group -> object_value .)
    PLUS            reduce using rule 169 (group -> object_value .)
    MINUS           reduce using rule 169 (group -> object_value .)
    EQUALTO         reduce using rule 169 (group -> object_value .)
    NOTEQUALTO      reduce using rule 169 (group -> object_value .)
    GREATER         reduce using rule 169 (group -> object_value .)
    LESS            reduce using rule 169 (group -> object_value .)
    GREATEREQUAL    reduce using rule 169 (group -> object_value .)
    LESSEQUAL       reduce using rule 169 (group -> object_value .)
    AND             reduce using rule 169 (group -> object_value .)
    OR              reduce using rule 169 (group -> object_value .)
    POINTCOMMA      reduce using rule 169 (group -> object_value .)
    $end            reduce using rule 169 (group -> object_value .)
    RPAREN          reduce using rule 169 (group -> object_value .)
    RKEY            reduce using rule 169 (group -> object_value .)
    RBRACKET        reduce using rule 169 (group -> object_value .)
    COMMA           reduce using rule 169 (group -> object_value .)


state 131

    (147) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 147 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 147 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 147 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 147 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 147 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 147 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 147 (term -> DECREMENT term1 .)
    LESS            reduce using rule 147 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 147 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 147 (term -> DECREMENT term1 .)
    AND             reduce using rule 147 (term -> DECREMENT term1 .)
    OR              reduce using rule 147 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 147 (term -> DECREMENT term1 .)
    $end            reduce using rule 147 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 147 (term -> DECREMENT term1 .)
    RKEY            reduce using rule 147 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 147 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 147 (term -> DECREMENT term1 .)


state 132

    (134) termS -> string PLUS . chain
    (135) chain -> . termS PLUS value
    (136) chain -> . value
    (134) termS -> . string PLUS chain
    (137) value -> . expression
    (138) value -> . string
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    string                         shift and go to state 209
    chain                          shift and go to state 210
    termS                          shift and go to state 211
    value                          shift and go to state 212
    expression                     shift and go to state 213
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 133

    (75) var_boolean -> declare_boolean EQUAL . boolean_value
    (124) boolean_value -> . boolean
    (125) boolean_value -> . other_value
    (126) boolean_value -> . expCond
    (127) boolean_value -> . expOpLog
    (128) boolean_value -> . expNeg
    (129) boolean_value -> . expEq
    (130) boolean_value -> . expNotEq
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67

    boolean_value                  shift and go to state 214
    boolean                        shift and go to state 215
    other_value                    shift and go to state 216
    expCond                        shift and go to state 217
    expOpLog                       shift and go to state 218
    expNeg                         shift and go to state 219
    expEq                          shift and go to state 220
    expNotEq                       shift and go to state 221
    variable                       shift and go to state 222
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    expression                     shift and go to state 223
    factor_exprlog                 shift and go to state 30
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    group                          shift and go to state 65

state 134

    (62) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 224


state 135

    (71) var_number -> declare_number EQUAL . number_value
    (72) var_number -> declare_number EQUAL . funcionmath
    (123) number_value -> . expression
    (211) funcionmath -> . mathAbs
    (212) funcionmath -> . mathRound
    (213) funcionmath -> . mathPow
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (214) mathAbs -> . FUNMATH POINT ABS LPAREN VARIABLE RPAREN
    (215) mathAbs -> . FUNMATH POINT ABS LPAREN number_value RPAREN
    (216) mathRound -> . FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
    (217) mathRound -> . FUNMATH POINT ROUND LPAREN number_value RPAREN
    (218) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (219) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
    (220) mathPow -> . FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (221) mathPow -> . FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    FUNMATH         shift and go to state 231
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 225
    funcionmath                    shift and go to state 226
    expression                     shift and go to state 227
    mathAbs                        shift and go to state 228
    mathRound                      shift and go to state 229
    mathPow                        shift and go to state 230
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 136

    (58) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 232


state 137

    (78) var_string -> declare_string EQUAL . string_value
    (131) string_value -> . string
    (132) string_value -> . other_value
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    string_value                   shift and go to state 233
    string                         shift and go to state 234
    other_value                    shift and go to state 235
    variable                       shift and go to state 236
    array_value                    shift and go to state 237
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 238
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 138

    (66) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 239


state 139

    (81) var_enum -> declare_var_enum EQUAL . enum_value
    (185) enum_value -> . object_name POINT object_name
    (202) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 55

    enum_value                     shift and go to state 240
    object_name                    shift and go to state 72

state 140

    (29) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 241


state 141

    (90) assign_variable -> variable EQUAL . assign_value
    (91) assign_variable -> variable EQUAL . list_types
    (96) assign_value -> . general_value
    (97) assign_value -> . object_definition
    (111) list_types -> . list_number
    (112) list_types -> . list_boolean
    (113) list_types -> . list_string
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (98) object_definition -> . LKEY attributes RKEY
    (114) list_number -> . LBRACKET numbers RBRACKET
    (117) list_boolean -> . LBRACKET booleans RBRACKET
    (120) list_string -> . LBRACKET strings RBRACKET
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LKEY            shift and go to state 201
    LBRACKET        shift and go to state 202
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    variable                       shift and go to state 119
    assign_value                   shift and go to state 242
    list_types                     shift and go to state 243
    general_value                  shift and go to state 188
    object_definition              shift and go to state 189
    list_number                    shift and go to state 190
    list_boolean                   shift and go to state 191
    list_string                    shift and go to state 192
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 142

    (184) array_value -> variable LBRACKET . expression RBRACKET
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    variable                       shift and go to state 119
    expression                     shift and go to state 244
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 143

    (182) object_value_form1 -> variable POINT . variable
    (183) object_value_form2 -> variable POINT . array_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 61

    variable                       shift and go to state 245
    array_value                    shift and go to state 246

state 144

    (92) assign_array -> array_value EQUAL . general_value
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    array_value                    shift and go to state 120
    general_value                  shift and go to state 247
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 145

    (93) assign_object_value -> object_value_form1 EQUAL . general_value
    (94) assign_object_value -> object_value_form1 EQUAL . list_types
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (111) list_types -> . list_number
    (112) list_types -> . list_boolean
    (113) list_types -> . list_string
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (114) list_number -> . LBRACKET numbers RBRACKET
    (117) list_boolean -> . LBRACKET booleans RBRACKET
    (120) list_string -> . LBRACKET strings RBRACKET
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    LBRACKET        shift and go to state 202
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    object_value_form1             shift and go to state 106
    general_value                  shift and go to state 248
    list_types                     shift and go to state 249
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    list_number                    shift and go to state 190
    list_boolean                   shift and go to state 191
    list_string                    shift and go to state 192
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form2             shift and go to state 107

state 146

    (95) assign_object_value -> object_value_form2 EQUAL . general_value
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    object_value_form2             shift and go to state 107
    general_value                  shift and go to state 250
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106

state 147

    (86) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 86 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 86 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 86 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 86 (declare_any -> prefix VARIABLE .)
    RKEY            reduce using rule 86 (declare_any -> prefix VARIABLE .)


state 148

    (39) funcionif -> IF LPAREN . formLog RPAREN substatement
    (40) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif
    (41) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelif funcionelse
    (42) funcionif -> IF LPAREN . formLog RPAREN substatement funcionelse
    (178) formLog -> . expCond
    (179) formLog -> . expOpLog
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    formLog                        shift and go to state 251
    expCond                        shift and go to state 252
    expOpLog                       shift and go to state 253
    expression                     shift and go to state 254
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 149

    (48) funcionwhile -> WHILE LPAREN . formLog RPAREN substatement
    (178) formLog -> . expCond
    (179) formLog -> . expOpLog
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    formLog                        shift and go to state 255
    expCond                        shift and go to state 252
    expOpLog                       shift and go to state 253
    expression                     shift and go to state 254
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 150

    (46) funcionfor -> FOR LPAREN . declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (47) funcionfor -> FOR LPAREN . VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (86) declare_any -> . prefix VARIABLE
    (186) prefix -> . LET
    (187) prefix -> . VAR
    (188) prefix -> . STATIC
    (189) prefix -> . CONST

    VARIABLE        shift and go to state 257
    LET             shift and go to state 76
    VAR             shift and go to state 77
    STATIC          shift and go to state 78
    CONST           shift and go to state 79

    declare_any                    shift and go to state 256
    prefix                         shift and go to state 60

state 151

    (185) enum_value -> object_name POINT . object_name
    (202) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 55

    object_name                    shift and go to state 258

state 152

    (56) declare_array_main_number -> declare_array_number EQUAL . list_number
    (114) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 260

    list_number                    shift and go to state 259

state 153

    (60) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (117) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 262

    list_boolean                   shift and go to state 261

state 154

    (64) declare_array_main_string -> declare_array_string EQUAL . list_string
    (120) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 264

    list_string                    shift and go to state 263

state 155

    (139) expression -> expression PLUS term .
    (142) term -> term . PRODUCT term
    (143) term -> term . DIVIDE term

    PLUS            reduce using rule 139 (expression -> expression PLUS term .)
    MINUS           reduce using rule 139 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 139 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 139 (expression -> expression PLUS term .)
    GREATER         reduce using rule 139 (expression -> expression PLUS term .)
    LESS            reduce using rule 139 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 139 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 139 (expression -> expression PLUS term .)
    AND             reduce using rule 139 (expression -> expression PLUS term .)
    OR              reduce using rule 139 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 139 (expression -> expression PLUS term .)
    $end            reduce using rule 139 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 139 (expression -> expression PLUS term .)
    RKEY            reduce using rule 139 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 139 (expression -> expression PLUS term .)
    COMMA           reduce using rule 139 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 96
    DIVIDE          shift and go to state 97


state 156

    (164) term1 -> LPAREN . group RPAREN
    (173) factor_expr -> LPAREN . expression RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (185) enum_value -> . object_name POINT object_name
    (202) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    OBJECTNAME      shift and go to state 55

    group                          shift and go to state 101
    expression                     shift and go to state 265
    number                         shift and go to state 102
    variable                       shift and go to state 266
    array_value                    shift and go to state 104
    object_value                   shift and go to state 105
    term                           shift and go to state 15
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    term1                          shift and go to state 38
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    enum_value                     shift and go to state 49
    object_name                    shift and go to state 72

state 157

    (140) expression -> expression MINUS term .
    (142) term -> term . PRODUCT term
    (143) term -> term . DIVIDE term

    PLUS            reduce using rule 140 (expression -> expression MINUS term .)
    MINUS           reduce using rule 140 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 140 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 140 (expression -> expression MINUS term .)
    GREATER         reduce using rule 140 (expression -> expression MINUS term .)
    LESS            reduce using rule 140 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 140 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 140 (expression -> expression MINUS term .)
    AND             reduce using rule 140 (expression -> expression MINUS term .)
    OR              reduce using rule 140 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 140 (expression -> expression MINUS term .)
    $end            reduce using rule 140 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 140 (expression -> expression MINUS term .)
    RKEY            reduce using rule 140 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 140 (expression -> expression MINUS term .)
    COMMA           reduce using rule 140 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 96
    DIVIDE          shift and go to state 97


state 158

    (162) expCond -> expression operador expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    EQUALTO         reduce using rule 162 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 162 (expCond -> expression operador expression .)
    AND             reduce using rule 162 (expCond -> expression operador expression .)
    OR              reduce using rule 162 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 162 (expCond -> expression operador expression .)
    $end            reduce using rule 162 (expCond -> expression operador expression .)
    RKEY            reduce using rule 162 (expCond -> expression operador expression .)
    RBRACKET        reduce using rule 162 (expCond -> expression operador expression .)
    COMMA           reduce using rule 162 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 162 (expCond -> expression operador expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 159

    (160) expOpLog -> expression oplogico expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 160 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 160 (expOpLog -> expression oplogico expression .)
    RKEY            reduce using rule 160 (expOpLog -> expression oplogico expression .)
    RBRACKET        reduce using rule 160 (expOpLog -> expression oplogico expression .)
    COMMA           reduce using rule 160 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 160 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 160

    (154) expEq -> expression EQUALTO expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 154 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 154 (expEq -> expression EQUALTO expression .)
    RKEY            reduce using rule 154 (expEq -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 154 (expEq -> expression EQUALTO expression .)
    COMMA           reduce using rule 154 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 161

    (157) expNotEq -> expression NOTEQUALTO expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 157 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 157 (expNotEq -> expression NOTEQUALTO expression .)
    RKEY            reduce using rule 157 (expNotEq -> expression NOTEQUALTO expression .)
    RBRACKET        reduce using rule 157 (expNotEq -> expression NOTEQUALTO expression .)
    COMMA           reduce using rule 157 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 162

    (158) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 158 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 158 (expOpLog -> expCond oplogico expCond .)
    RKEY            reduce using rule 158 (expOpLog -> expCond oplogico expCond .)
    RBRACKET        reduce using rule 158 (expOpLog -> expCond oplogico expCond .)
    COMMA           reduce using rule 158 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 158 (expOpLog -> expCond oplogico expCond .)


state 163

    (162) expCond -> expression . operador expression
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    operador                       shift and go to state 83

state 164

    (152) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 152 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 152 (expEq -> expCond EQUALTO expCond .)
    RKEY            reduce using rule 152 (expEq -> expCond EQUALTO expCond .)
    RBRACKET        reduce using rule 152 (expEq -> expCond EQUALTO expCond .)
    COMMA           reduce using rule 152 (expEq -> expCond EQUALTO expCond .)


state 165

    (155) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 155 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 155 (expNotEq -> expCond NOTEQUALTO expCond .)
    RKEY            reduce using rule 155 (expNotEq -> expCond NOTEQUALTO expCond .)
    RBRACKET        reduce using rule 155 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMA           reduce using rule 155 (expNotEq -> expCond NOTEQUALTO expCond .)


state 166

    (142) term -> term PRODUCT term .
    (142) term -> term . PRODUCT term
    (143) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 142 (term -> term PRODUCT term .)
    MINUS           reduce using rule 142 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 142 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 142 (term -> term PRODUCT term .)
    GREATER         reduce using rule 142 (term -> term PRODUCT term .)
    LESS            reduce using rule 142 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 142 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 142 (term -> term PRODUCT term .)
    AND             reduce using rule 142 (term -> term PRODUCT term .)
    OR              reduce using rule 142 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 142 (term -> term PRODUCT term .)
    $end            reduce using rule 142 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 142 (term -> term PRODUCT term .)
    RKEY            reduce using rule 142 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 142 (term -> term PRODUCT term .)
    COMMA           reduce using rule 142 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 96
    DIVIDE          shift and go to state 97

  ! PRODUCT         [ reduce using rule 142 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 142 (term -> term PRODUCT term .) ]


state 167

    (143) term -> term DIVIDE term .
    (142) term -> term . PRODUCT term
    (143) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 143 (term -> term DIVIDE term .)
    MINUS           reduce using rule 143 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 143 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 143 (term -> term DIVIDE term .)
    GREATER         reduce using rule 143 (term -> term DIVIDE term .)
    LESS            reduce using rule 143 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 143 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 143 (term -> term DIVIDE term .)
    AND             reduce using rule 143 (term -> term DIVIDE term .)
    OR              reduce using rule 143 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 143 (term -> term DIVIDE term .)
    $end            reduce using rule 143 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 143 (term -> term DIVIDE term .)
    RKEY            reduce using rule 143 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 143 (term -> term DIVIDE term .)
    COMMA           reduce using rule 143 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 96
    DIVIDE          shift and go to state 97

  ! PRODUCT         [ reduce using rule 143 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 143 (term -> term DIVIDE term .) ]


state 168

    (163) expCond -> LPAREN expression . operador expression RPAREN
    (173) factor_expr -> LPAREN expression . RPAREN
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 170
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    operador                       shift and go to state 267

state 169

    (163) expCond -> LPAREN expression operador . expression RPAREN
    (162) expCond -> expression operador . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 268
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 170

    (173) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    RKEY            reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 173 (factor_expr -> LPAREN expression RPAREN .)


state 171

    (207) operador -> EQUALTO .

    INCREMENT       reduce using rule 207 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 207 (operador -> EQUALTO .)
    LPAREN          reduce using rule 207 (operador -> EQUALTO .)
    NUMBER          reduce using rule 207 (operador -> EQUALTO .)
    FLOAT           reduce using rule 207 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 207 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 207 (operador -> EQUALTO .)
    RPAREN          reduce using rule 207 (operador -> EQUALTO .)


state 172

    (208) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 208 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 208 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 208 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 208 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 208 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 208 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 208 (operador -> NOTEQUALTO .)
    RPAREN          reduce using rule 208 (operador -> NOTEQUALTO .)


state 173

    (161) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    RKEY            reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    RBRACKET        reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMA           reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 161 (factor_exprlog -> LPAREN expCond RPAREN .)


state 174

    (164) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    RKEY            reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 164 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 164 (term1 -> LPAREN group RPAREN .)


state 175

    (159) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RKEY            reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RBRACKET        reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMA           reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 159 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 176

    (161) factor_exprlog -> LPAREN . expCond RPAREN
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 98
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expCond                        shift and go to state 100
    expression                     shift and go to state 163
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 177

    (153) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 153 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 153 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RKEY            reduce using rule 153 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 153 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMA           reduce using rule 153 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 178

    (156) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 156 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 156 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RKEY            reduce using rule 156 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 156 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMA           reduce using rule 156 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 179

    (151) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 269


state 180

    (161) factor_exprlog -> LPAREN expCond . RPAREN
    (158) expOpLog -> expCond . oplogico expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    RPAREN          shift and go to state 173
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 181

    (163) expCond -> LPAREN expression . operador expression RPAREN
    (173) factor_expr -> LPAREN expression . RPAREN
    (160) expOpLog -> expression . oplogico expression
    (162) expCond -> expression . operador expression
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    RPAREN          shift and go to state 170
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 169
    oplogico                       shift and go to state 84

state 182

    (159) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 108

state 183

    (51) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN

    SET             shift and go to state 270


state 184

    (69) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 69 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 69 (var_null -> declare_any EQUAL NULL .)
    RKEY            reduce using rule 69 (var_null -> declare_any EQUAL NULL .)


state 185

    (70) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 70 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 70 (var_undefined -> declare_any EQUAL UNDEFINED .)
    RKEY            reduce using rule 70 (var_undefined -> declare_any EQUAL UNDEFINED .)


state 186

    (84) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 84 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 84 (declare_generic -> declare_any EQUAL assign_value .)
    RKEY            reduce using rule 84 (declare_generic -> declare_any EQUAL assign_value .)


state 187

    (68) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 68 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 68 (declare_generic_array -> declare_any EQUAL list_types .)
    RKEY            reduce using rule 68 (declare_generic_array -> declare_any EQUAL list_types .)


state 188

    (96) assign_value -> general_value .

    POINTCOMMA      reduce using rule 96 (assign_value -> general_value .)
    $end            reduce using rule 96 (assign_value -> general_value .)
    RKEY            reduce using rule 96 (assign_value -> general_value .)


state 189

    (97) assign_value -> object_definition .

    POINTCOMMA      reduce using rule 97 (assign_value -> object_definition .)
    $end            reduce using rule 97 (assign_value -> object_definition .)
    RKEY            reduce using rule 97 (assign_value -> object_definition .)


state 190

    (111) list_types -> list_number .

    POINTCOMMA      reduce using rule 111 (list_types -> list_number .)
    $end            reduce using rule 111 (list_types -> list_number .)
    RKEY            reduce using rule 111 (list_types -> list_number .)
    COMMA           reduce using rule 111 (list_types -> list_number .)


state 191

    (112) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 112 (list_types -> list_boolean .)
    $end            reduce using rule 112 (list_types -> list_boolean .)
    RKEY            reduce using rule 112 (list_types -> list_boolean .)
    COMMA           reduce using rule 112 (list_types -> list_boolean .)


state 192

    (113) list_types -> list_string .

    POINTCOMMA      reduce using rule 113 (list_types -> list_string .)
    $end            reduce using rule 113 (list_types -> list_string .)
    RKEY            reduce using rule 113 (list_types -> list_string .)
    COMMA           reduce using rule 113 (list_types -> list_string .)


state 193

    (103) general_value -> expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (162) expCond -> expression . operador expression
    (160) expOpLog -> expression . oplogico expression
    (154) expEq -> expression . EQUALTO expression
    (157) expNotEq -> expression . NOTEQUALTO expression
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 103 (general_value -> expression .)
    $end            reduce using rule 103 (general_value -> expression .)
    RKEY            reduce using rule 103 (general_value -> expression .)
    COMMA           reduce using rule 103 (general_value -> expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    EQUALTO         shift and go to state 85
    NOTEQUALTO      shift and go to state 86
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 83
    oplogico                       shift and go to state 84

state 194

    (104) general_value -> boolean .

    POINTCOMMA      reduce using rule 104 (general_value -> boolean .)
    $end            reduce using rule 104 (general_value -> boolean .)
    RKEY            reduce using rule 104 (general_value -> boolean .)
    COMMA           reduce using rule 104 (general_value -> boolean .)


state 195

    (105) general_value -> string .

    POINTCOMMA      reduce using rule 105 (general_value -> string .)
    $end            reduce using rule 105 (general_value -> string .)
    RKEY            reduce using rule 105 (general_value -> string .)
    COMMA           reduce using rule 105 (general_value -> string .)


state 196

    (106) general_value -> expCond .
    (158) expOpLog -> expCond . oplogico expCond
    (152) expEq -> expCond . EQUALTO expCond
    (155) expNotEq -> expCond . NOTEQUALTO expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 106 (general_value -> expCond .)
    $end            reduce using rule 106 (general_value -> expCond .)
    RKEY            reduce using rule 106 (general_value -> expCond .)
    COMMA           reduce using rule 106 (general_value -> expCond .)
    EQUALTO         shift and go to state 94
    NOTEQUALTO      shift and go to state 95
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 197

    (107) general_value -> expOpLog .

    POINTCOMMA      reduce using rule 107 (general_value -> expOpLog .)
    $end            reduce using rule 107 (general_value -> expOpLog .)
    RKEY            reduce using rule 107 (general_value -> expOpLog .)
    COMMA           reduce using rule 107 (general_value -> expOpLog .)


state 198

    (108) general_value -> expNeg .

    POINTCOMMA      reduce using rule 108 (general_value -> expNeg .)
    $end            reduce using rule 108 (general_value -> expNeg .)
    RKEY            reduce using rule 108 (general_value -> expNeg .)
    COMMA           reduce using rule 108 (general_value -> expNeg .)


state 199

    (109) general_value -> expEq .

    POINTCOMMA      reduce using rule 109 (general_value -> expEq .)
    $end            reduce using rule 109 (general_value -> expEq .)
    RKEY            reduce using rule 109 (general_value -> expEq .)
    COMMA           reduce using rule 109 (general_value -> expEq .)


state 200

    (110) general_value -> expNotEq .

    POINTCOMMA      reduce using rule 110 (general_value -> expNotEq .)
    $end            reduce using rule 110 (general_value -> expNotEq .)
    RKEY            reduce using rule 110 (general_value -> expNotEq .)
    COMMA           reduce using rule 110 (general_value -> expNotEq .)


state 201

    (98) object_definition -> LKEY . attributes RKEY
    (99) attributes -> . attributes COMMA attribute
    (100) attributes -> . attribute
    (101) attribute -> . variable TWOPOINTS general_value
    (102) attribute -> . variable TWOPOINTS list_types
    (201) variable -> . VARIABLE

    VARIABLE        shift and go to state 61

    attributes                     shift and go to state 271
    attribute                      shift and go to state 272
    variable                       shift and go to state 273

state 202

    (114) list_number -> LBRACKET . numbers RBRACKET
    (117) list_boolean -> LBRACKET . booleans RBRACKET
    (120) list_string -> LBRACKET . strings RBRACKET
    (115) numbers -> . numbers COMMA number_value
    (116) numbers -> . number_value
    (118) booleans -> . booleans COMMA boolean_value
    (119) booleans -> . boolean_value
    (121) strings -> . strings COMMA string_value
    (122) strings -> . string_value
    (123) number_value -> . expression
    (124) boolean_value -> . boolean
    (125) boolean_value -> . other_value
    (126) boolean_value -> . expCond
    (127) boolean_value -> . expOpLog
    (128) boolean_value -> . expNeg
    (129) boolean_value -> . expEq
    (130) boolean_value -> . expNotEq
    (131) string_value -> . string
    (132) string_value -> . other_value
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    VARIABLE        shift and go to state 61
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    numbers                        shift and go to state 274
    booleans                       shift and go to state 275
    strings                        shift and go to state 276
    number_value                   shift and go to state 277
    boolean_value                  shift and go to state 278
    string_value                   shift and go to state 279
    expression                     shift and go to state 280
    boolean                        shift and go to state 215
    other_value                    shift and go to state 281
    expCond                        shift and go to state 217
    expOpLog                       shift and go to state 218
    expNeg                         shift and go to state 219
    expEq                          shift and go to state 220
    expNotEq                       shift and go to state 221
    string                         shift and go to state 234
    term                           shift and go to state 15
    variable                       shift and go to state 222
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    group                          shift and go to state 65

state 203

    (77) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 77 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 77 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 77 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 77 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    RKEY            reduce using rule 77 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 204

    (74) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 74 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 74 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 74 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 74 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    RKEY            reduce using rule 74 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 205

    (80) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 80 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 80 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 80 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 80 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    RKEY            reduce using rule 80 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 206

    (83) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 83 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 83 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 83 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    RKEY            reduce using rule 83 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 207

    (59) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (63) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (67) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 282


state 208

    (164) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 174


state 209

    (134) termS -> string . PLUS chain
    (138) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 132
    POINTCOMMA      reduce using rule 138 (value -> string .)
    $end            reduce using rule 138 (value -> string .)
    RKEY            reduce using rule 138 (value -> string .)

  ! PLUS            [ reduce using rule 138 (value -> string .) ]


state 210

    (134) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 134 (termS -> string PLUS chain .)
    $end            reduce using rule 134 (termS -> string PLUS chain .)
    PLUS            reduce using rule 134 (termS -> string PLUS chain .)
    RKEY            reduce using rule 134 (termS -> string PLUS chain .)


state 211

    (135) chain -> termS . PLUS value

    PLUS            shift and go to state 283


state 212

    (136) chain -> value .

    POINTCOMMA      reduce using rule 136 (chain -> value .)
    $end            reduce using rule 136 (chain -> value .)
    PLUS            reduce using rule 136 (chain -> value .)
    RKEY            reduce using rule 136 (chain -> value .)


state 213

    (137) value -> expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 137 (value -> expression .)
    $end            reduce using rule 137 (value -> expression .)
    RKEY            reduce using rule 137 (value -> expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

  ! PLUS            [ reduce using rule 137 (value -> expression .) ]


state 214

    (75) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 75 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 75 (var_boolean -> declare_boolean EQUAL boolean_value .)
    RKEY            reduce using rule 75 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 215

    (124) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 124 (boolean_value -> boolean .)
    $end            reduce using rule 124 (boolean_value -> boolean .)
    RKEY            reduce using rule 124 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 124 (boolean_value -> boolean .)
    COMMA           reduce using rule 124 (boolean_value -> boolean .)


state 216

    (125) boolean_value -> other_value .
    (172) term -> other_value .

    POINTCOMMA      reduce using rule 125 (boolean_value -> other_value .)
    $end            reduce using rule 125 (boolean_value -> other_value .)
    RKEY            reduce using rule 125 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 125 (boolean_value -> other_value .)
    COMMA           reduce using rule 125 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 172 (term -> other_value .)
    DIVIDE          reduce using rule 172 (term -> other_value .)
    EQUALTO         reduce using rule 172 (term -> other_value .)
    NOTEQUALTO      reduce using rule 172 (term -> other_value .)
    PLUS            reduce using rule 172 (term -> other_value .)
    MINUS           reduce using rule 172 (term -> other_value .)
    GREATER         reduce using rule 172 (term -> other_value .)
    LESS            reduce using rule 172 (term -> other_value .)
    GREATEREQUAL    reduce using rule 172 (term -> other_value .)
    LESSEQUAL       reduce using rule 172 (term -> other_value .)
    AND             reduce using rule 172 (term -> other_value .)
    OR              reduce using rule 172 (term -> other_value .)


state 217

    (126) boolean_value -> expCond .
    (158) expOpLog -> expCond . oplogico expCond
    (152) expEq -> expCond . EQUALTO expCond
    (155) expNotEq -> expCond . NOTEQUALTO expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    POINTCOMMA      reduce using rule 126 (boolean_value -> expCond .)
    $end            reduce using rule 126 (boolean_value -> expCond .)
    RKEY            reduce using rule 126 (boolean_value -> expCond .)
    RBRACKET        reduce using rule 126 (boolean_value -> expCond .)
    COMMA           reduce using rule 126 (boolean_value -> expCond .)
    EQUALTO         shift and go to state 94
    NOTEQUALTO      shift and go to state 95
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 218

    (127) boolean_value -> expOpLog .

    POINTCOMMA      reduce using rule 127 (boolean_value -> expOpLog .)
    $end            reduce using rule 127 (boolean_value -> expOpLog .)
    RKEY            reduce using rule 127 (boolean_value -> expOpLog .)
    RBRACKET        reduce using rule 127 (boolean_value -> expOpLog .)
    COMMA           reduce using rule 127 (boolean_value -> expOpLog .)


state 219

    (128) boolean_value -> expNeg .

    POINTCOMMA      reduce using rule 128 (boolean_value -> expNeg .)
    $end            reduce using rule 128 (boolean_value -> expNeg .)
    RKEY            reduce using rule 128 (boolean_value -> expNeg .)
    RBRACKET        reduce using rule 128 (boolean_value -> expNeg .)
    COMMA           reduce using rule 128 (boolean_value -> expNeg .)


state 220

    (129) boolean_value -> expEq .

    POINTCOMMA      reduce using rule 129 (boolean_value -> expEq .)
    $end            reduce using rule 129 (boolean_value -> expEq .)
    RKEY            reduce using rule 129 (boolean_value -> expEq .)
    RBRACKET        reduce using rule 129 (boolean_value -> expEq .)
    COMMA           reduce using rule 129 (boolean_value -> expEq .)


state 221

    (130) boolean_value -> expNotEq .

    POINTCOMMA      reduce using rule 130 (boolean_value -> expNotEq .)
    $end            reduce using rule 130 (boolean_value -> expNotEq .)
    RKEY            reduce using rule 130 (boolean_value -> expNotEq .)
    RBRACKET        reduce using rule 130 (boolean_value -> expNotEq .)
    COMMA           reduce using rule 130 (boolean_value -> expNotEq .)


state 222

    (174) other_value -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value
    (167) group -> variable .

    POINTCOMMA      reduce using rule 174 (other_value -> variable .)
    $end            reduce using rule 174 (other_value -> variable .)
    RKEY            reduce using rule 174 (other_value -> variable .)
    PRODUCT         reduce using rule 174 (other_value -> variable .)
    DIVIDE          reduce using rule 174 (other_value -> variable .)
    EQUALTO         reduce using rule 174 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 174 (other_value -> variable .)
    PLUS            reduce using rule 174 (other_value -> variable .)
    MINUS           reduce using rule 174 (other_value -> variable .)
    GREATER         reduce using rule 174 (other_value -> variable .)
    LESS            reduce using rule 174 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 174 (other_value -> variable .)
    LESSEQUAL       reduce using rule 174 (other_value -> variable .)
    AND             reduce using rule 174 (other_value -> variable .)
    OR              reduce using rule 174 (other_value -> variable .)
    RBRACKET        reduce using rule 174 (other_value -> variable .)
    COMMA           reduce using rule 174 (other_value -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143
    INCREMENT       reduce using rule 167 (group -> variable .)
    DECREMENT       reduce using rule 167 (group -> variable .)


state 223

    (162) expCond -> expression . operador expression
    (160) expOpLog -> expression . oplogico expression
    (154) expEq -> expression . EQUALTO expression
    (157) expNotEq -> expression . NOTEQUALTO expression
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    EQUALTO         shift and go to state 85
    NOTEQUALTO      shift and go to state 86
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 83
    oplogico                       shift and go to state 84

state 224

    (62) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 62 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 62 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 62 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    RKEY            reduce using rule 62 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 225

    (71) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 71 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 71 (var_number -> declare_number EQUAL number_value .)
    RKEY            reduce using rule 71 (var_number -> declare_number EQUAL number_value .)


state 226

    (72) var_number -> declare_number EQUAL funcionmath .

    POINTCOMMA      reduce using rule 72 (var_number -> declare_number EQUAL funcionmath .)
    $end            reduce using rule 72 (var_number -> declare_number EQUAL funcionmath .)
    RKEY            reduce using rule 72 (var_number -> declare_number EQUAL funcionmath .)


state 227

    (123) number_value -> expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 123 (number_value -> expression .)
    $end            reduce using rule 123 (number_value -> expression .)
    RKEY            reduce using rule 123 (number_value -> expression .)
    RBRACKET        reduce using rule 123 (number_value -> expression .)
    COMMA           reduce using rule 123 (number_value -> expression .)
    RPAREN          reduce using rule 123 (number_value -> expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 228

    (211) funcionmath -> mathAbs .

    POINTCOMMA      reduce using rule 211 (funcionmath -> mathAbs .)
    $end            reduce using rule 211 (funcionmath -> mathAbs .)
    RKEY            reduce using rule 211 (funcionmath -> mathAbs .)


state 229

    (212) funcionmath -> mathRound .

    POINTCOMMA      reduce using rule 212 (funcionmath -> mathRound .)
    $end            reduce using rule 212 (funcionmath -> mathRound .)
    RKEY            reduce using rule 212 (funcionmath -> mathRound .)


state 230

    (213) funcionmath -> mathPow .

    POINTCOMMA      reduce using rule 213 (funcionmath -> mathPow .)
    $end            reduce using rule 213 (funcionmath -> mathPow .)
    RKEY            reduce using rule 213 (funcionmath -> mathPow .)


state 231

    (214) mathAbs -> FUNMATH . POINT ABS LPAREN VARIABLE RPAREN
    (215) mathAbs -> FUNMATH . POINT ABS LPAREN number_value RPAREN
    (216) mathRound -> FUNMATH . POINT ROUND LPAREN VARIABLE RPAREN
    (217) mathRound -> FUNMATH . POINT ROUND LPAREN number_value RPAREN
    (218) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (219) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA number_value RPAREN
    (220) mathPow -> FUNMATH . POINT POW LPAREN VARIABLE COMMA number_value RPAREN
    (221) mathPow -> FUNMATH . POINT POW LPAREN number_value COMMA VARIABLE RPAREN

    POINT           shift and go to state 284


state 232

    (58) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 58 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 58 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 58 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    RKEY            reduce using rule 58 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 233

    (78) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 78 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 78 (var_string -> declare_string EQUAL string_value .)
    RKEY            reduce using rule 78 (var_string -> declare_string EQUAL string_value .)


state 234

    (131) string_value -> string .

    POINTCOMMA      reduce using rule 131 (string_value -> string .)
    $end            reduce using rule 131 (string_value -> string .)
    RKEY            reduce using rule 131 (string_value -> string .)
    RBRACKET        reduce using rule 131 (string_value -> string .)
    COMMA           reduce using rule 131 (string_value -> string .)


state 235

    (132) string_value -> other_value .

    POINTCOMMA      reduce using rule 132 (string_value -> other_value .)
    $end            reduce using rule 132 (string_value -> other_value .)
    RKEY            reduce using rule 132 (string_value -> other_value .)
    RBRACKET        reduce using rule 132 (string_value -> other_value .)
    COMMA           reduce using rule 132 (string_value -> other_value .)


state 236

    (174) other_value -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 174 (other_value -> variable .)
    $end            reduce using rule 174 (other_value -> variable .)
    RKEY            reduce using rule 174 (other_value -> variable .)
    RBRACKET        reduce using rule 174 (other_value -> variable .)
    COMMA           reduce using rule 174 (other_value -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143


state 237

    (175) other_value -> array_value .

    POINTCOMMA      reduce using rule 175 (other_value -> array_value .)
    $end            reduce using rule 175 (other_value -> array_value .)
    RKEY            reduce using rule 175 (other_value -> array_value .)
    RBRACKET        reduce using rule 175 (other_value -> array_value .)
    COMMA           reduce using rule 175 (other_value -> array_value .)


state 238

    (177) other_value -> object_value .

    POINTCOMMA      reduce using rule 177 (other_value -> object_value .)
    $end            reduce using rule 177 (other_value -> object_value .)
    RKEY            reduce using rule 177 (other_value -> object_value .)
    RBRACKET        reduce using rule 177 (other_value -> object_value .)
    COMMA           reduce using rule 177 (other_value -> object_value .)


state 239

    (66) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 66 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 66 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 66 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    RKEY            reduce using rule 66 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 240

    (81) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 81 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 81 (var_enum -> declare_var_enum EQUAL enum_value .)
    RKEY            reduce using rule 81 (var_enum -> declare_var_enum EQUAL enum_value .)


state 241

    (29) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (30) enums -> . enums_numeric
    (31) enums -> . enums_string
    (32) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (33) enums_numeric -> . enums_numeric_value
    (36) enums_string -> . enums_string COMMA enums_string_value
    (37) enums_string -> . enums_string_value
    (34) enums_numeric_value -> . object_name EQUAL number
    (35) enums_numeric_value -> . object_name
    (38) enums_string_value -> . object_name EQUAL string
    (202) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 55

    enums                          shift and go to state 285
    enums_numeric                  shift and go to state 286
    enums_string                   shift and go to state 287
    enums_numeric_value            shift and go to state 288
    enums_string_value             shift and go to state 289
    object_name                    shift and go to state 290

state 242

    (90) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 90 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 90 (assign_variable -> variable EQUAL assign_value .)
    RKEY            reduce using rule 90 (assign_variable -> variable EQUAL assign_value .)


state 243

    (91) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 91 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 91 (assign_variable -> variable EQUAL list_types .)
    RKEY            reduce using rule 91 (assign_variable -> variable EQUAL list_types .)


state 244

    (184) array_value -> variable LBRACKET expression . RBRACKET
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    RBRACKET        shift and go to state 291
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 245

    (182) object_value_form1 -> variable POINT variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    RKEY            reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 182 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 142


state 246

    (183) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    RKEY            reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 183 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 183 (object_value_form2 -> variable POINT array_value .)


state 247

    (92) assign_array -> array_value EQUAL general_value .

    POINTCOMMA      reduce using rule 92 (assign_array -> array_value EQUAL general_value .)
    $end            reduce using rule 92 (assign_array -> array_value EQUAL general_value .)
    RKEY            reduce using rule 92 (assign_array -> array_value EQUAL general_value .)


state 248

    (93) assign_object_value -> object_value_form1 EQUAL general_value .

    POINTCOMMA      reduce using rule 93 (assign_object_value -> object_value_form1 EQUAL general_value .)
    $end            reduce using rule 93 (assign_object_value -> object_value_form1 EQUAL general_value .)
    RKEY            reduce using rule 93 (assign_object_value -> object_value_form1 EQUAL general_value .)


state 249

    (94) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 94 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 94 (assign_object_value -> object_value_form1 EQUAL list_types .)
    RKEY            reduce using rule 94 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 250

    (95) assign_object_value -> object_value_form2 EQUAL general_value .

    POINTCOMMA      reduce using rule 95 (assign_object_value -> object_value_form2 EQUAL general_value .)
    $end            reduce using rule 95 (assign_object_value -> object_value_form2 EQUAL general_value .)
    RKEY            reduce using rule 95 (assign_object_value -> object_value_form2 EQUAL general_value .)


state 251

    (39) funcionif -> IF LPAREN formLog . RPAREN substatement
    (40) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif
    (41) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelif funcionelse
    (42) funcionif -> IF LPAREN formLog . RPAREN substatement funcionelse

    RPAREN          shift and go to state 292


state 252

    (178) formLog -> expCond .
    (158) expOpLog -> expCond . oplogico expCond
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    RPAREN          reduce using rule 178 (formLog -> expCond .)
    POINTCOMMA      reduce using rule 178 (formLog -> expCond .)
    AND             shift and go to state 91
    OR              shift and go to state 92

    oplogico                       shift and go to state 93

state 253

    (179) formLog -> expOpLog .

    RPAREN          reduce using rule 179 (formLog -> expOpLog .)
    POINTCOMMA      reduce using rule 179 (formLog -> expOpLog .)


state 254

    (162) expCond -> expression . operador expression
    (160) expOpLog -> expression . oplogico expression
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 83
    oplogico                       shift and go to state 84

state 255

    (48) funcionwhile -> WHILE LPAREN formLog . RPAREN substatement

    RPAREN          shift and go to state 293


state 256

    (46) funcionfor -> FOR LPAREN declare_any . EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    EQUAL           shift and go to state 294


state 257

    (47) funcionfor -> FOR LPAREN VARIABLE . EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    EQUAL           shift and go to state 295


state 258

    (185) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 185 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 185 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 185 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 185 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 185 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 185 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 185 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 185 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 185 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 185 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 185 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 185 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 185 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 185 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 185 (enum_value -> object_name POINT object_name .)
    RKEY            reduce using rule 185 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 185 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 185 (enum_value -> object_name POINT object_name .)


state 259

    (56) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 56 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 56 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    RKEY            reduce using rule 56 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 260

    (114) list_number -> LBRACKET . numbers RBRACKET
    (115) numbers -> . numbers COMMA number_value
    (116) numbers -> . number_value
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    numbers                        shift and go to state 274
    number_value                   shift and go to state 277
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 261

    (60) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 60 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 60 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    RKEY            reduce using rule 60 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 262

    (117) list_boolean -> LBRACKET . booleans RBRACKET
    (118) booleans -> . booleans COMMA boolean_value
    (119) booleans -> . boolean_value
    (124) boolean_value -> . boolean
    (125) boolean_value -> . other_value
    (126) boolean_value -> . expCond
    (127) boolean_value -> . expOpLog
    (128) boolean_value -> . expNeg
    (129) boolean_value -> . expEq
    (130) boolean_value -> . expNotEq
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67

    booleans                       shift and go to state 275
    boolean_value                  shift and go to state 278
    boolean                        shift and go to state 215
    other_value                    shift and go to state 216
    expCond                        shift and go to state 217
    expOpLog                       shift and go to state 218
    expNeg                         shift and go to state 219
    expEq                          shift and go to state 220
    expNotEq                       shift and go to state 221
    variable                       shift and go to state 222
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    expression                     shift and go to state 223
    factor_exprlog                 shift and go to state 30
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    group                          shift and go to state 65

state 263

    (64) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 64 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 64 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    RKEY            reduce using rule 64 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 264

    (120) list_string -> LBRACKET . strings RBRACKET
    (121) strings -> . strings COMMA string_value
    (122) strings -> . string_value
    (131) string_value -> . string
    (132) string_value -> . other_value
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    strings                        shift and go to state 276
    string_value                   shift and go to state 279
    string                         shift and go to state 234
    other_value                    shift and go to state 235
    variable                       shift and go to state 236
    array_value                    shift and go to state 237
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 238
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 265

    (173) factor_expr -> LPAREN expression . RPAREN
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    RPAREN          shift and go to state 170
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 266

    (167) group -> variable .
    (184) array_value -> variable . LBRACKET expression RBRACKET
    (182) object_value_form1 -> variable . POINT variable
    (183) object_value_form2 -> variable . POINT array_value
    (174) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 167 (group -> variable .)
    RPAREN          reduce using rule 167 (group -> variable .)
    INCREMENT       reduce using rule 167 (group -> variable .)
    DECREMENT       reduce using rule 167 (group -> variable .)
    LBRACKET        shift and go to state 142
    POINT           shift and go to state 143
    PRODUCT         reduce using rule 174 (other_value -> variable .)
    DIVIDE          reduce using rule 174 (other_value -> variable .)
    PLUS            reduce using rule 174 (other_value -> variable .)
    MINUS           reduce using rule 174 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 174 (other_value -> variable .) ]


state 267

    (163) expCond -> LPAREN expression operador . expression RPAREN
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    expression                     shift and go to state 296
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 268

    (163) expCond -> LPAREN expression operador expression . RPAREN
    (162) expCond -> expression operador expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 297
    AND             reduce using rule 162 (expCond -> expression operador expression .)
    OR              reduce using rule 162 (expCond -> expression operador expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82

  ! RPAREN          [ reduce using rule 162 (expCond -> expression operador expression .) ]


state 269

    (151) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 151 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 151 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RKEY            reduce using rule 151 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RBRACKET        reduce using rule 151 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMA           reduce using rule 151 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 270

    (51) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 298


state 271

    (98) object_definition -> LKEY attributes . RKEY
    (99) attributes -> attributes . COMMA attribute

    RKEY            shift and go to state 299
    COMMA           shift and go to state 300


state 272

    (100) attributes -> attribute .

    RKEY            reduce using rule 100 (attributes -> attribute .)
    COMMA           reduce using rule 100 (attributes -> attribute .)


state 273

    (101) attribute -> variable . TWOPOINTS general_value
    (102) attribute -> variable . TWOPOINTS list_types

    TWOPOINTS       shift and go to state 301


state 274

    (114) list_number -> LBRACKET numbers . RBRACKET
    (115) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 302
    COMMA           shift and go to state 303


state 275

    (117) list_boolean -> LBRACKET booleans . RBRACKET
    (118) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 304
    COMMA           shift and go to state 305


state 276

    (120) list_string -> LBRACKET strings . RBRACKET
    (121) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 306
    COMMA           shift and go to state 307


state 277

    (116) numbers -> number_value .

    RBRACKET        reduce using rule 116 (numbers -> number_value .)
    COMMA           reduce using rule 116 (numbers -> number_value .)


state 278

    (119) booleans -> boolean_value .

    RBRACKET        reduce using rule 119 (booleans -> boolean_value .)
    COMMA           reduce using rule 119 (booleans -> boolean_value .)


state 279

    (122) strings -> string_value .

    RBRACKET        reduce using rule 122 (strings -> string_value .)
    COMMA           reduce using rule 122 (strings -> string_value .)


state 280

    (123) number_value -> expression .
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term
    (162) expCond -> expression . operador expression
    (160) expOpLog -> expression . oplogico expression
    (154) expEq -> expression . EQUALTO expression
    (157) expNotEq -> expression . NOTEQUALTO expression
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO
    (209) oplogico -> . AND
    (210) oplogico -> . OR

    RBRACKET        reduce using rule 123 (number_value -> expression .)
    COMMA           reduce using rule 123 (number_value -> expression .)
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82
    EQUALTO         shift and go to state 85
    NOTEQUALTO      shift and go to state 86
    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    AND             shift and go to state 91
    OR              shift and go to state 92

    operador                       shift and go to state 83
    oplogico                       shift and go to state 84

state 281

    (125) boolean_value -> other_value .
    (132) string_value -> other_value .
    (172) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 125 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 125 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 125 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 125 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 125 (boolean_value -> other_value .)
    COMMA           reduce using rule 125 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 172 (term -> other_value .)
    DIVIDE          reduce using rule 172 (term -> other_value .)
    PLUS            reduce using rule 172 (term -> other_value .)
    MINUS           reduce using rule 172 (term -> other_value .)
    EQUALTO         reduce using rule 172 (term -> other_value .)
    NOTEQUALTO      reduce using rule 172 (term -> other_value .)
    GREATER         reduce using rule 172 (term -> other_value .)
    LESS            reduce using rule 172 (term -> other_value .)
    GREATEREQUAL    reduce using rule 172 (term -> other_value .)
    LESSEQUAL       reduce using rule 172 (term -> other_value .)
    AND             reduce using rule 172 (term -> other_value .)
    OR              reduce using rule 172 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 132 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 132 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 172 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 172 (term -> other_value .) ]


state 282

    (59) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (63) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (67) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 308
    VARBOOLEAN      shift and go to state 309
    VARSTRING       shift and go to state 310


state 283

    (135) chain -> termS PLUS . value
    (137) value -> . expression
    (138) value -> . string
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    value                          shift and go to state 311
    expression                     shift and go to state 213
    string                         shift and go to state 312
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 284

    (214) mathAbs -> FUNMATH POINT . ABS LPAREN VARIABLE RPAREN
    (215) mathAbs -> FUNMATH POINT . ABS LPAREN number_value RPAREN
    (216) mathRound -> FUNMATH POINT . ROUND LPAREN VARIABLE RPAREN
    (217) mathRound -> FUNMATH POINT . ROUND LPAREN number_value RPAREN
    (218) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA VARIABLE RPAREN
    (219) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA number_value RPAREN
    (220) mathPow -> FUNMATH POINT . POW LPAREN VARIABLE COMMA number_value RPAREN
    (221) mathPow -> FUNMATH POINT . POW LPAREN number_value COMMA VARIABLE RPAREN

    ABS             shift and go to state 313
    ROUND           shift and go to state 314
    POW             shift and go to state 315


state 285

    (29) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 316


state 286

    (30) enums -> enums_numeric .
    (32) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 30 (enums -> enums_numeric .)
    COMMA           shift and go to state 317


state 287

    (31) enums -> enums_string .
    (36) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 31 (enums -> enums_string .)
    COMMA           shift and go to state 318


state 288

    (33) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 33 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 33 (enums_numeric -> enums_numeric_value .)


state 289

    (37) enums_string -> enums_string_value .

    COMMA           reduce using rule 37 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 37 (enums_string -> enums_string_value .)


state 290

    (34) enums_numeric_value -> object_name . EQUAL number
    (35) enums_numeric_value -> object_name .
    (38) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 319
    COMMA           reduce using rule 35 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 35 (enums_numeric_value -> object_name .)


state 291

    (184) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    RKEY            reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 184 (array_value -> variable LBRACKET expression RBRACKET .)


state 292

    (39) funcionif -> IF LPAREN formLog RPAREN . substatement
    (40) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif
    (41) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelif funcionelse
    (42) funcionif -> IF LPAREN formLog RPAREN . substatement funcionelse
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 320

state 293

    (48) funcionwhile -> WHILE LPAREN formLog RPAREN . substatement
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 322

state 294

    (46) funcionfor -> FOR LPAREN declare_any EQUAL . number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 323
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 295

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL . number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 324
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 296

    (163) expCond -> LPAREN expression operador expression . RPAREN
    (139) expression -> expression . PLUS term
    (140) expression -> expression . MINUS term

    RPAREN          shift and go to state 297
    PLUS            shift and go to state 81
    MINUS           shift and go to state 82


state 297

    (163) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    RKEY            reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    RBRACKET        reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMA           reduce using rule 163 (expCond -> LPAREN expression operador expression RPAREN .)


state 298

    (51) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 325


state 299

    (98) object_definition -> LKEY attributes RKEY .

    POINTCOMMA      reduce using rule 98 (object_definition -> LKEY attributes RKEY .)
    $end            reduce using rule 98 (object_definition -> LKEY attributes RKEY .)
    RKEY            reduce using rule 98 (object_definition -> LKEY attributes RKEY .)


state 300

    (99) attributes -> attributes COMMA . attribute
    (101) attribute -> . variable TWOPOINTS general_value
    (102) attribute -> . variable TWOPOINTS list_types
    (201) variable -> . VARIABLE

    VARIABLE        shift and go to state 61

    attribute                      shift and go to state 326
    variable                       shift and go to state 273

state 301

    (101) attribute -> variable TWOPOINTS . general_value
    (102) attribute -> variable TWOPOINTS . list_types
    (103) general_value -> . expression
    (104) general_value -> . boolean
    (105) general_value -> . string
    (106) general_value -> . expCond
    (107) general_value -> . expOpLog
    (108) general_value -> . expNeg
    (109) general_value -> . expEq
    (110) general_value -> . expNotEq
    (111) list_types -> . list_number
    (112) list_types -> . list_boolean
    (113) list_types -> . list_string
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (114) list_number -> . LBRACKET numbers RBRACKET
    (117) list_boolean -> . LBRACKET booleans RBRACKET
    (120) list_string -> . LBRACKET strings RBRACKET
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    LBRACKET        shift and go to state 202
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    variable                       shift and go to state 119
    general_value                  shift and go to state 327
    list_types                     shift and go to state 328
    expression                     shift and go to state 193
    boolean                        shift and go to state 194
    string                         shift and go to state 195
    expCond                        shift and go to state 196
    expOpLog                       shift and go to state 197
    expNeg                         shift and go to state 198
    expEq                          shift and go to state 199
    expNotEq                       shift and go to state 200
    list_number                    shift and go to state 190
    list_boolean                   shift and go to state 191
    list_string                    shift and go to state 192
    term                           shift and go to state 15
    factor_exprlog                 shift and go to state 30
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 302

    (114) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 114 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 114 (list_number -> LBRACKET numbers RBRACKET .)
    RKEY            reduce using rule 114 (list_number -> LBRACKET numbers RBRACKET .)
    COMMA           reduce using rule 114 (list_number -> LBRACKET numbers RBRACKET .)


state 303

    (115) numbers -> numbers COMMA . number_value
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 329
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 304

    (117) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 117 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 117 (list_boolean -> LBRACKET booleans RBRACKET .)
    RKEY            reduce using rule 117 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMA           reduce using rule 117 (list_boolean -> LBRACKET booleans RBRACKET .)


state 305

    (118) booleans -> booleans COMMA . boolean_value
    (124) boolean_value -> . boolean
    (125) boolean_value -> . other_value
    (126) boolean_value -> . expCond
    (127) boolean_value -> . expOpLog
    (128) boolean_value -> . expNeg
    (129) boolean_value -> . expEq
    (130) boolean_value -> . expNotEq
    (199) boolean -> . TRUE
    (200) boolean -> . FALSE
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value

    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67

    boolean_value                  shift and go to state 330
    boolean                        shift and go to state 215
    other_value                    shift and go to state 216
    expCond                        shift and go to state 217
    expOpLog                       shift and go to state 218
    expNeg                         shift and go to state 219
    expEq                          shift and go to state 220
    expNotEq                       shift and go to state 221
    variable                       shift and go to state 222
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    expression                     shift and go to state 223
    factor_exprlog                 shift and go to state 30
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    group                          shift and go to state 65

state 306

    (120) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 120 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 120 (list_string -> LBRACKET strings RBRACKET .)
    RKEY            reduce using rule 120 (list_string -> LBRACKET strings RBRACKET .)
    COMMA           reduce using rule 120 (list_string -> LBRACKET strings RBRACKET .)


state 307

    (121) strings -> strings COMMA . string_value
    (131) string_value -> . string
    (132) string_value -> . other_value
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    string_value                   shift and go to state 331
    string                         shift and go to state 234
    other_value                    shift and go to state 235
    variable                       shift and go to state 236
    array_value                    shift and go to state 237
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 238
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 308

    (59) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 332


state 309

    (63) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 333


state 310

    (67) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 334


state 311

    (135) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 135 (chain -> termS PLUS value .)
    $end            reduce using rule 135 (chain -> termS PLUS value .)
    PLUS            reduce using rule 135 (chain -> termS PLUS value .)
    RKEY            reduce using rule 135 (chain -> termS PLUS value .)


state 312

    (138) value -> string .

    POINTCOMMA      reduce using rule 138 (value -> string .)
    $end            reduce using rule 138 (value -> string .)
    PLUS            reduce using rule 138 (value -> string .)
    RKEY            reduce using rule 138 (value -> string .)


state 313

    (214) mathAbs -> FUNMATH POINT ABS . LPAREN VARIABLE RPAREN
    (215) mathAbs -> FUNMATH POINT ABS . LPAREN number_value RPAREN

    LPAREN          shift and go to state 335


state 314

    (216) mathRound -> FUNMATH POINT ROUND . LPAREN VARIABLE RPAREN
    (217) mathRound -> FUNMATH POINT ROUND . LPAREN number_value RPAREN

    LPAREN          shift and go to state 336


state 315

    (218) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA VARIABLE RPAREN
    (219) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA number_value RPAREN
    (220) mathPow -> FUNMATH POINT POW . LPAREN VARIABLE COMMA number_value RPAREN
    (221) mathPow -> FUNMATH POINT POW . LPAREN number_value COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 337


state 316

    (29) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 29 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 29 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    RKEY            reduce using rule 29 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 317

    (32) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (34) enums_numeric_value -> . object_name EQUAL number
    (35) enums_numeric_value -> . object_name
    (202) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 55

    enums_numeric_value            shift and go to state 338
    object_name                    shift and go to state 339

state 318

    (36) enums_string -> enums_string COMMA . enums_string_value
    (38) enums_string_value -> . object_name EQUAL string
    (202) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 55

    enums_string_value             shift and go to state 340
    object_name                    shift and go to state 341

state 319

    (34) enums_numeric_value -> object_name EQUAL . number
    (38) enums_string_value -> object_name EQUAL . string
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING

    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71

    number                         shift and go to state 342
    string                         shift and go to state 343

state 320

    (39) funcionif -> IF LPAREN formLog RPAREN substatement .
    (40) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif
    (41) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelif funcionelse
    (42) funcionif -> IF LPAREN formLog RPAREN substatement . funcionelse
    (43) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (44) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif
    (45) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 39 (funcionif -> IF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 346
    ELSE            shift and go to state 347

    funcionelif                    shift and go to state 344
    funcionelse                    shift and go to state 345

state 321

    (49) substatement -> LKEY . statement RKEY
    (50) substatement -> LKEY . RKEY
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . statement_control
    (14) statement_value -> . comments
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (133) concatenate -> . termS
    (20) declare -> . var_boolean
    (21) declare -> . var_number
    (22) declare -> . var_string
    (23) declare -> . var_enum
    (24) declare -> . var_null
    (25) declare -> . var_undefined
    (26) declare -> . declare_array
    (27) declare -> . declare_enum
    (28) declare -> . declare_generic
    (87) assign -> . assign_variable
    (88) assign -> . assign_array
    (89) assign -> . assign_object_value
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (148) expNeg -> . NEGATION expOpLog
    (149) expNeg -> . NEGATION factor_exprlog
    (150) expNeg -> . NEGATION boolean
    (151) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (152) expEq -> . expCond EQUALTO expCond
    (153) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (154) expEq -> . expression EQUALTO expression
    (155) expNotEq -> . expCond NOTEQUALTO expCond
    (156) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (157) expNotEq -> . expression NOTEQUALTO expression
    (51) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (15) statement_control -> . funcionif
    (16) statement_control -> . funcionwhile
    (17) statement_control -> . funcionfor
    (18) comments -> . COMMENT
    (19) comments -> . MULTICOMMENT
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (134) termS -> . string PLUS chain
    (75) var_boolean -> . declare_boolean EQUAL boolean_value
    (76) var_boolean -> . declare_boolean
    (71) var_number -> . declare_number EQUAL number_value
    (72) var_number -> . declare_number EQUAL funcionmath
    (73) var_number -> . declare_number
    (78) var_string -> . declare_string EQUAL string_value
    (79) var_string -> . declare_string
    (81) var_enum -> . declare_var_enum EQUAL enum_value
    (82) var_enum -> . declare_var_enum
    (69) var_null -> . declare_any EQUAL NULL
    (70) var_undefined -> . declare_any EQUAL UNDEFINED
    (52) declare_array -> . declare_array_main_number
    (53) declare_array -> . declare_array_main_boolean
    (54) declare_array -> . declare_array_main_string
    (55) declare_array -> . declare_generic_array
    (29) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (84) declare_generic -> . declare_any EQUAL assign_value
    (85) declare_generic -> . declare_any
    (90) assign_variable -> . variable EQUAL assign_value
    (91) assign_variable -> . variable EQUAL list_types
    (92) assign_array -> . array_value EQUAL general_value
    (93) assign_object_value -> . object_value_form1 EQUAL general_value
    (94) assign_object_value -> . object_value_form1 EQUAL list_types
    (95) assign_object_value -> . object_value_form2 EQUAL general_value
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (86) declare_any -> . prefix VARIABLE
    (39) funcionif -> . IF LPAREN formLog RPAREN substatement
    (40) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif
    (41) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelif funcionelse
    (42) funcionif -> . IF LPAREN formLog RPAREN substatement funcionelse
    (48) funcionwhile -> . WHILE LPAREN formLog RPAREN substatement
    (46) funcionfor -> . FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (47) funcionfor -> . FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING
    (77) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (74) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (80) declare_string -> . declare_any TWOPOINTS VARSTRING
    (83) declare_var_enum -> . declare_any TWOPOINTS object_name
    (56) declare_array_main_number -> . declare_array_number EQUAL list_number
    (57) declare_array_main_number -> . declare_array_number
    (60) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (61) declare_array_main_boolean -> . declare_array_boolean
    (64) declare_array_main_string -> . declare_array_string EQUAL list_string
    (65) declare_array_main_string -> . declare_array_string
    (68) declare_generic_array -> . declare_any EQUAL list_types
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value
    (186) prefix -> . LET
    (187) prefix -> . VAR
    (188) prefix -> . STATIC
    (189) prefix -> . CONST
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (58) declare_array_number -> . declare_number LBRACKET RBRACKET
    (59) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (62) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (63) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (66) declare_array_string -> . declare_string LBRACKET RBRACKET
    (67) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (202) object_name -> . OBJECTNAME

    RKEY            shift and go to state 349
    LPAREN          shift and go to state 29
    NEGATION        shift and go to state 31
    COMMENT         shift and go to state 36
    MULTICOMMENT    shift and go to state 37
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    ENUM            shift and go to state 54
    IF              shift and go to state 62
    WHILE           shift and go to state 63
    FOR             shift and go to state 64
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71
    VARIABLE        shift and go to state 61
    LET             shift and go to state 76
    VAR             shift and go to state 77
    STATIC          shift and go to state 78
    CONST           shift and go to state 79
    OBJECTNAME      shift and go to state 55

    statement                      shift and go to state 348
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    statement_control              shift and go to state 13
    comments                       shift and go to state 14
    term                           shift and go to state 15
    termS                          shift and go to state 16
    var_boolean                    shift and go to state 17
    var_number                     shift and go to state 18
    var_string                     shift and go to state 19
    var_enum                       shift and go to state 20
    var_null                       shift and go to state 21
    var_undefined                  shift and go to state 22
    declare_array                  shift and go to state 23
    declare_enum                   shift and go to state 24
    declare_generic                shift and go to state 25
    assign_variable                shift and go to state 26
    assign_array                   shift and go to state 27
    assign_object_value            shift and go to state 28
    factor_exprlog                 shift and go to state 30
    declare_any                    shift and go to state 32
    funcionif                      shift and go to state 33
    funcionwhile                   shift and go to state 34
    funcionfor                     shift and go to state 35
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    string                         shift and go to state 44
    declare_boolean                shift and go to state 45
    declare_number                 shift and go to state 46
    declare_string                 shift and go to state 47
    declare_var_enum               shift and go to state 48
    enum_value                     shift and go to state 49
    declare_array_main_number      shift and go to state 50
    declare_array_main_boolean     shift and go to state 51
    declare_array_main_string      shift and go to state 52
    declare_generic_array          shift and go to state 53
    variable                       shift and go to state 56
    array_value                    shift and go to state 57
    object_value_form1             shift and go to state 58
    object_value_form2             shift and go to state 59
    prefix                         shift and go to state 60
    group                          shift and go to state 65
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    declare_array_number           shift and go to state 73
    declare_array_boolean          shift and go to state 74
    declare_array_string           shift and go to state 75

state 322

    (48) funcionwhile -> WHILE LPAREN formLog RPAREN substatement .

    POINTCOMMA      reduce using rule 48 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 48 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 48 (funcionwhile -> WHILE LPAREN formLog RPAREN substatement .)


state 323

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value . POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 350


state 324

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value . POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 351


state 325

    (51) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .

    POINTCOMMA      reduce using rule 51 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 51 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    RKEY            reduce using rule 51 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)


state 326

    (99) attributes -> attributes COMMA attribute .

    RKEY            reduce using rule 99 (attributes -> attributes COMMA attribute .)
    COMMA           reduce using rule 99 (attributes -> attributes COMMA attribute .)


state 327

    (101) attribute -> variable TWOPOINTS general_value .

    RKEY            reduce using rule 101 (attribute -> variable TWOPOINTS general_value .)
    COMMA           reduce using rule 101 (attribute -> variable TWOPOINTS general_value .)


state 328

    (102) attribute -> variable TWOPOINTS list_types .

    RKEY            reduce using rule 102 (attribute -> variable TWOPOINTS list_types .)
    COMMA           reduce using rule 102 (attribute -> variable TWOPOINTS list_types .)


state 329

    (115) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 115 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 115 (numbers -> numbers COMMA number_value .)


state 330

    (118) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 118 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 118 (booleans -> booleans COMMA boolean_value .)


state 331

    (121) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 121 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 121 (strings -> strings COMMA string_value .)


state 332

    (59) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 59 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 59 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 59 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    RKEY            reduce using rule 59 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 333

    (63) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 63 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 63 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 63 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    RKEY            reduce using rule 63 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 334

    (67) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 67 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 67 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 67 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    RKEY            reduce using rule 67 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 335

    (214) mathAbs -> FUNMATH POINT ABS LPAREN . VARIABLE RPAREN
    (215) mathAbs -> FUNMATH POINT ABS LPAREN . number_value RPAREN
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    VARIABLE        shift and go to state 352
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 353
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 336

    (216) mathRound -> FUNMATH POINT ROUND LPAREN . VARIABLE RPAREN
    (217) mathRound -> FUNMATH POINT ROUND LPAREN . number_value RPAREN
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    VARIABLE        shift and go to state 354
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 355
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 337

    (218) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA VARIABLE RPAREN
    (219) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA number_value RPAREN
    (220) mathPow -> FUNMATH POINT POW LPAREN . VARIABLE COMMA number_value RPAREN
    (221) mathPow -> FUNMATH POINT POW LPAREN . number_value COMMA VARIABLE RPAREN
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    VARIABLE        shift and go to state 356
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 357
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 338

    (32) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 32 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 32 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 339

    (34) enums_numeric_value -> object_name . EQUAL number
    (35) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 358
    COMMA           reduce using rule 35 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 35 (enums_numeric_value -> object_name .)


state 340

    (36) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 36 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 36 (enums_string -> enums_string COMMA enums_string_value .)


state 341

    (38) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 359


state 342

    (34) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 34 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 34 (enums_numeric_value -> object_name EQUAL number .)


state 343

    (38) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 38 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 38 (enums_string_value -> object_name EQUAL string .)


state 344

    (40) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .
    (41) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif . funcionelse
    (45) funcionelse -> . ELSE substatement

    POINTCOMMA      reduce using rule 40 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 40 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 40 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif .)
    ELSE            shift and go to state 347

    funcionelse                    shift and go to state 360

state 345

    (42) funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .

    POINTCOMMA      reduce using rule 42 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    $end            reduce using rule 42 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)
    RKEY            reduce using rule 42 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelse .)


state 346

    (43) funcionelif -> ELIF . LPAREN formLog RPAREN substatement
    (44) funcionelif -> ELIF . LPAREN formLog RPAREN substatement funcionelif

    LPAREN          shift and go to state 361


state 347

    (45) funcionelse -> ELSE . substatement
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 362

state 348

    (49) substatement -> LKEY statement . RKEY

    RKEY            shift and go to state 363


state 349

    (50) substatement -> LKEY RKEY .

    ELIF            reduce using rule 50 (substatement -> LKEY RKEY .)
    ELSE            reduce using rule 50 (substatement -> LKEY RKEY .)
    POINTCOMMA      reduce using rule 50 (substatement -> LKEY RKEY .)
    $end            reduce using rule 50 (substatement -> LKEY RKEY .)
    RKEY            reduce using rule 50 (substatement -> LKEY RKEY .)


state 350

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA . formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (178) formLog -> . expCond
    (179) formLog -> . expOpLog
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    formLog                        shift and go to state 364
    expCond                        shift and go to state 252
    expOpLog                       shift and go to state 253
    expression                     shift and go to state 254
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 351

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA . formLog POINTCOMMA VARIABLE operador RPAREN substatement
    (178) formLog -> . expCond
    (179) formLog -> . expOpLog
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    formLog                        shift and go to state 365
    expCond                        shift and go to state 252
    expOpLog                       shift and go to state 253
    expression                     shift and go to state 254
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 352

    (214) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE . RPAREN
    (201) variable -> VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 366
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)

  ! RPAREN          [ reduce using rule 201 (variable -> VARIABLE .) ]


state 353

    (215) mathAbs -> FUNMATH POINT ABS LPAREN number_value . RPAREN

    RPAREN          shift and go to state 367


state 354

    (216) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE . RPAREN
    (201) variable -> VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 368
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)

  ! RPAREN          [ reduce using rule 201 (variable -> VARIABLE .) ]


state 355

    (217) mathRound -> FUNMATH POINT ROUND LPAREN number_value . RPAREN

    RPAREN          shift and go to state 369


state 356

    (218) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA VARIABLE RPAREN
    (220) mathPow -> FUNMATH POINT POW LPAREN VARIABLE . COMMA number_value RPAREN
    (201) variable -> VARIABLE .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 370
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)

  ! COMMA           [ reduce using rule 201 (variable -> VARIABLE .) ]


state 357

    (219) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA number_value RPAREN
    (221) mathPow -> FUNMATH POINT POW LPAREN number_value . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 371


state 358

    (34) enums_numeric_value -> object_name EQUAL . number
    (194) number -> . NUMBER
    (195) number -> . FLOAT

    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67

    number                         shift and go to state 342

state 359

    (38) enums_string_value -> object_name EQUAL . string
    (196) string -> . NORMSTRING1
    (197) string -> . NORMSTRING2
    (198) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 69
    NORMSTRING2     shift and go to state 70
    MULTISTRING     shift and go to state 71

    string                         shift and go to state 343

state 360

    (41) funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .

    POINTCOMMA      reduce using rule 41 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    $end            reduce using rule 41 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)
    RKEY            reduce using rule 41 (funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse .)


state 361

    (43) funcionelif -> ELIF LPAREN . formLog RPAREN substatement
    (44) funcionelif -> ELIF LPAREN . formLog RPAREN substatement funcionelif
    (178) formLog -> . expCond
    (179) formLog -> . expOpLog
    (162) expCond -> . expression operador expression
    (163) expCond -> . LPAREN expression operador expression RPAREN
    (158) expOpLog -> . expCond oplogico expCond
    (159) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (160) expOpLog -> . expression oplogico expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (161) factor_exprlog -> . LPAREN expCond RPAREN
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 29
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    VARIABLE        shift and go to state 61
    OBJECTNAME      shift and go to state 55

    formLog                        shift and go to state 372
    expCond                        shift and go to state 252
    expOpLog                       shift and go to state 253
    expression                     shift and go to state 254
    factor_exprlog                 shift and go to state 182
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 362

    (45) funcionelse -> ELSE substatement .

    POINTCOMMA      reduce using rule 45 (funcionelse -> ELSE substatement .)
    $end            reduce using rule 45 (funcionelse -> ELSE substatement .)
    RKEY            reduce using rule 45 (funcionelse -> ELSE substatement .)


state 363

    (49) substatement -> LKEY statement RKEY .

    ELIF            reduce using rule 49 (substatement -> LKEY statement RKEY .)
    ELSE            reduce using rule 49 (substatement -> LKEY statement RKEY .)
    POINTCOMMA      reduce using rule 49 (substatement -> LKEY statement RKEY .)
    $end            reduce using rule 49 (substatement -> LKEY statement RKEY .)
    RKEY            reduce using rule 49 (substatement -> LKEY statement RKEY .)


state 364

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog . POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 373


state 365

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog . POINTCOMMA VARIABLE operador RPAREN substatement

    POINTCOMMA      shift and go to state 374


state 366

    (214) mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 214 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 214 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 214 (mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN .)


state 367

    (215) mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .

    POINTCOMMA      reduce using rule 215 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    $end            reduce using rule 215 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)
    RKEY            reduce using rule 215 (mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN .)


state 368

    (216) mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 216 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    $end            reduce using rule 216 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)
    RKEY            reduce using rule 216 (mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN .)


state 369

    (217) mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .

    POINTCOMMA      reduce using rule 217 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    $end            reduce using rule 217 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)
    RKEY            reduce using rule 217 (mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN .)


state 370

    (218) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . VARIABLE RPAREN
    (220) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA . number_value RPAREN
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    VARIABLE        shift and go to state 375
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 376
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 371

    (219) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . number_value RPAREN
    (221) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA . VARIABLE RPAREN
    (123) number_value -> . expression
    (139) expression -> . expression PLUS term
    (140) expression -> . expression MINUS term
    (141) expression -> . term
    (142) term -> . term PRODUCT term
    (143) term -> . term DIVIDE term
    (144) term -> . term1 INCREMENT
    (145) term -> . INCREMENT term1
    (146) term -> . term1 DECREMENT
    (147) term -> . DECREMENT term1
    (170) term -> . number
    (171) term -> . factor_expr
    (172) term -> . other_value
    (164) term1 -> . LPAREN group RPAREN
    (165) term1 -> . group
    (194) number -> . NUMBER
    (195) number -> . FLOAT
    (173) factor_expr -> . LPAREN expression RPAREN
    (174) other_value -> . variable
    (175) other_value -> . array_value
    (176) other_value -> . enum_value
    (177) other_value -> . object_value
    (166) group -> . number
    (167) group -> . variable
    (168) group -> . array_value
    (169) group -> . object_value
    (201) variable -> . VARIABLE
    (184) array_value -> . variable LBRACKET expression RBRACKET
    (185) enum_value -> . object_name POINT object_name
    (180) object_value -> . object_value_form1
    (181) object_value -> . object_value_form2
    (202) object_name -> . OBJECTNAME
    (182) object_value_form1 -> . variable POINT variable
    (183) object_value_form2 -> . variable POINT array_value

    VARIABLE        shift and go to state 378
    INCREMENT       shift and go to state 39
    DECREMENT       shift and go to state 40
    LPAREN          shift and go to state 156
    NUMBER          shift and go to state 66
    FLOAT           shift and go to state 67
    OBJECTNAME      shift and go to state 55

    number_value                   shift and go to state 377
    expression                     shift and go to state 227
    term                           shift and go to state 15
    term1                          shift and go to state 38
    number                         shift and go to state 41
    factor_expr                    shift and go to state 42
    other_value                    shift and go to state 43
    group                          shift and go to state 65
    variable                       shift and go to state 119
    array_value                    shift and go to state 120
    enum_value                     shift and go to state 49
    object_value                   shift and go to state 68
    object_name                    shift and go to state 72
    object_value_form1             shift and go to state 106
    object_value_form2             shift and go to state 107

state 372

    (43) funcionelif -> ELIF LPAREN formLog . RPAREN substatement
    (44) funcionelif -> ELIF LPAREN formLog . RPAREN substatement funcionelif

    RPAREN          shift and go to state 379


state 373

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA . VARIABLE operador RPAREN substatement

    VARIABLE        shift and go to state 380


state 374

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA . VARIABLE operador RPAREN substatement

    VARIABLE        shift and go to state 381


state 375

    (218) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE . RPAREN
    (201) variable -> VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 382
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)

  ! RPAREN          [ reduce using rule 201 (variable -> VARIABLE .) ]


state 376

    (220) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value . RPAREN

    RPAREN          shift and go to state 383


state 377

    (219) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value . RPAREN

    RPAREN          shift and go to state 384


state 378

    (221) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE . RPAREN
    (201) variable -> VARIABLE .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 385
    LBRACKET        reduce using rule 201 (variable -> VARIABLE .)
    POINT           reduce using rule 201 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 201 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 201 (variable -> VARIABLE .)
    PLUS            reduce using rule 201 (variable -> VARIABLE .)
    MINUS           reduce using rule 201 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 201 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 201 (variable -> VARIABLE .)

  ! RPAREN          [ reduce using rule 201 (variable -> VARIABLE .) ]


state 379

    (43) funcionelif -> ELIF LPAREN formLog RPAREN . substatement
    (44) funcionelif -> ELIF LPAREN formLog RPAREN . substatement funcionelif
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 386

state 380

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE . operador RPAREN substatement
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    operador                       shift and go to state 387

state 381

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE . operador RPAREN substatement
    (203) operador -> . GREATER
    (204) operador -> . LESS
    (205) operador -> . GREATEREQUAL
    (206) operador -> . LESSEQUAL
    (207) operador -> . EQUALTO
    (208) operador -> . NOTEQUALTO

    GREATER         shift and go to state 87
    LESS            shift and go to state 88
    GREATEREQUAL    shift and go to state 89
    LESSEQUAL       shift and go to state 90
    EQUALTO         shift and go to state 171
    NOTEQUALTO      shift and go to state 172

    operador                       shift and go to state 388

state 382

    (218) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 218 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    $end            reduce using rule 218 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 218 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN .)


state 383

    (220) mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .

    POINTCOMMA      reduce using rule 220 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    $end            reduce using rule 220 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)
    RKEY            reduce using rule 220 (mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN .)


state 384

    (219) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .

    POINTCOMMA      reduce using rule 219 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    $end            reduce using rule 219 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)
    RKEY            reduce using rule 219 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN .)


state 385

    (221) mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .

    POINTCOMMA      reduce using rule 221 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    $end            reduce using rule 221 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)
    RKEY            reduce using rule 221 (mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN .)


state 386

    (43) funcionelif -> ELIF LPAREN formLog RPAREN substatement .
    (44) funcionelif -> ELIF LPAREN formLog RPAREN substatement . funcionelif
    (43) funcionelif -> . ELIF LPAREN formLog RPAREN substatement
    (44) funcionelif -> . ELIF LPAREN formLog RPAREN substatement funcionelif

    ELSE            reduce using rule 43 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    POINTCOMMA      reduce using rule 43 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    $end            reduce using rule 43 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    RKEY            reduce using rule 43 (funcionelif -> ELIF LPAREN formLog RPAREN substatement .)
    ELIF            shift and go to state 346

    funcionelif                    shift and go to state 389

state 387

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador . RPAREN substatement

    RPAREN          shift and go to state 390


state 388

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador . RPAREN substatement

    RPAREN          shift and go to state 391


state 389

    (44) funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .

    ELSE            reduce using rule 44 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    POINTCOMMA      reduce using rule 44 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    $end            reduce using rule 44 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)
    RKEY            reduce using rule 44 (funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif .)


state 390

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN . substatement
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 392

state 391

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN . substatement
    (49) substatement -> . LKEY statement RKEY
    (50) substatement -> . LKEY RKEY

    LKEY            shift and go to state 321

    substatement                   shift and go to state 393

state 392

    (46) funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .

    POINTCOMMA      reduce using rule 46 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    $end            reduce using rule 46 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    RKEY            reduce using rule 46 (funcionfor -> FOR LPAREN declare_any EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)


state 393

    (47) funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .

    POINTCOMMA      reduce using rule 47 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    $end            reduce using rule 47 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)
    RKEY            reduce using rule 47 (funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA VARIABLE operador RPAREN substatement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 85 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 85 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 85 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 85 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 85 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 85 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 86 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 86 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 86 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 86 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 86 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 86 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 166 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 166 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 167 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 209 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 213 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 268 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 352 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 354 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 356 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 375 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 378 resolved as shift
WARNING: reduce/reduce conflict in state 102 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 103
WARNING: reduce/reduce conflict in state 104 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 104
WARNING: reduce/reduce conflict in state 105 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 105
WARNING: reduce/reduce conflict in state 266 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 266
WARNING: reduce/reduce conflict in state 281 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 281
WARNING: reduce/reduce conflict in state 281 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 281

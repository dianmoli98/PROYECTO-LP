Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY
    MOD
    SPECIAL
    TYPEOF
    VAROBJECT

Grammar

Rule 0     S' -> statement
Rule 1     statement -> atomicstatement
Rule 2     statement -> atomicstatement statement
Rule 3     atomicstatement -> statement_value
Rule 4     atomicstatement -> statement_value POINTCOMMA
Rule 5     statement_value -> concatenate
Rule 6     statement_value -> expression
Rule 7     statement_value -> declare
Rule 8     statement_value -> assign
Rule 9     statement_value -> expCond
Rule 10    statement_value -> expOpLog
Rule 11    statement_value -> expNeg
Rule 12    statement_value -> expEq
Rule 13    statement_value -> expNotEq
Rule 14    statement_value -> exp_set
Rule 15    statement_value -> statement_control
Rule 16    statement_value -> comments
Rule 17    statement_value -> functionStatement
Rule 18    statement_value -> consoleLog
Rule 19    statement_control -> funcionif
Rule 20    statement_control -> funcionwhile
Rule 21    statement_control -> funcionfor
Rule 22    consoleLog -> PRINT LPAREN RPAREN
Rule 23    consoleLog -> PRINT LPAREN VARIABLE RPAREN
Rule 24    consoleLog -> PRINT LPAREN string RPAREN
Rule 25    comments -> COMMENT
Rule 26    comments -> MULTICOMMENT
Rule 27    declare -> var_boolean
Rule 28    declare -> var_number
Rule 29    declare -> var_string
Rule 30    declare -> var_enum
Rule 31    declare -> var_null
Rule 32    declare -> var_undefined
Rule 33    declare -> declare_array
Rule 34    declare -> declare_enum
Rule 35    declare -> declare_tuples
Rule 36    declare -> declare_generic
Rule 37    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 38    enums -> enums_numeric
Rule 39    enums -> enums_string
Rule 40    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 41    enums_numeric -> enums_numeric_value
Rule 42    enums_numeric_value -> object_name EQUAL number
Rule 43    enums_numeric_value -> object_name
Rule 44    enums_string -> enums_string COMMA enums_string_value
Rule 45    enums_string -> enums_string_value
Rule 46    enums_string_value -> object_name EQUAL string
Rule 47    functionStatement -> FUNCTION VARIABLE LPAREN RPAREN substatement
Rule 48    functionStatement -> FUNCTION VARIABLE LPAREN funcParametres RPAREN substatement
Rule 49    funcParametres -> VARIABLE
Rule 50    funcParametres -> VARIABLE COMMA funcParametres
Rule 51    funcionif -> IF LPAREN formLog RPAREN substatement
Rule 52    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif
Rule 53    funcionif -> IF LPAREN formLog RPAREN substatement funcionelif funcionelse
Rule 54    funcionif -> IF LPAREN formLog RPAREN substatement funcionelse
Rule 55    funcionif -> IF LPAREN VARIABLE INSTANCEOF OBJECTNAME RPAREN substatement
Rule 56    funcionelif -> ELIF LPAREN formLog RPAREN substatement
Rule 57    funcionelif -> ELIF LPAREN formLog RPAREN substatement funcionelif
Rule 58    funcionelse -> ELSE substatement
Rule 59    funcionfor -> FOR LPAREN LET VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 60    funcionfor -> FOR LPAREN VARIABLE EQUAL number_value POINTCOMMA formLog POINTCOMMA term RPAREN substatement
Rule 61    funcionfor -> FOR LPAREN LET VARIABLE IN VARIABLE RPAREN substatement
Rule 62    funcionfor -> FOR LPAREN VARIABLE IN VARIABLE RPAREN substatement
Rule 63    funcionwhile -> WHILE LPAREN formLog RPAREN substatement
Rule 64    substatement -> LKEY statement RKEY
Rule 65    substatement -> LKEY RKEY
Rule 66    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 67    declare_tuples -> declare_any TWOPOINTS tuples_2_variables
Rule 68    declare_tuples -> declare_any TWOPOINTS tuples_2_variables EQUAL tuples_2_values
Rule 69    declare_tuples -> declare_any TWOPOINTS tuples_3_variables
Rule 70    declare_tuples -> declare_any TWOPOINTS tuples_3_variables EQUAL tuples_3_values
Rule 71    declare_tuples -> declare_any TWOPOINTS tuples_4_variables
Rule 72    declare_tuples -> declare_any TWOPOINTS tuples_4_variables EQUAL tuples_4_values
Rule 73    tuples_2_variables -> LBRACKET types COMMA types RBRACKET
Rule 74    tuples_3_variables -> LBRACKET types COMMA types COMMA types RBRACKET
Rule 75    tuples_4_variables -> LBRACKET types COMMA types COMMA types COMMA types RBRACKET
Rule 76    tuples_2_values -> LBRACKET general_value COMMA general_value RBRACKET
Rule 77    tuples_3_values -> LBRACKET general_value COMMA general_value COMMA general_value RBRACKET
Rule 78    tuples_4_values -> LBRACKET general_value COMMA general_value COMMA general_value COMMA general_value RBRACKET
Rule 79    declare_array -> declare_array_main_number
Rule 80    declare_array -> declare_array_main_boolean
Rule 81    declare_array -> declare_array_main_string
Rule 82    declare_array -> declare_generic_array
Rule 83    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 84    declare_array_main_number -> declare_array_number EQUAL LBRACKET RBRACKET
Rule 85    declare_array_main_number -> declare_array_number
Rule 86    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 87    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 88    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 89    declare_array_main_boolean -> declare_array_boolean EQUAL LBRACKET RBRACKET
Rule 90    declare_array_main_boolean -> declare_array_boolean
Rule 91    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 92    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 93    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 94    declare_array_main_string -> declare_array_string EQUAL LBRACKET RBRACKET
Rule 95    declare_array_main_string -> declare_array_string
Rule 96    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 97    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 98    declare_generic_array -> declare_any EQUAL list_types
Rule 99    var_null -> declare_any EQUAL NULL
Rule 100   var_undefined -> declare_any EQUAL UNDEFINED
Rule 101   var_number -> declare_number EQUAL number_value
Rule 102   var_number -> declare_number EQUAL funcionmath
Rule 103   var_number -> declare_number
Rule 104   var_number -> declare_number EQUAL expression
Rule 105   declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 106   var_boolean -> declare_boolean EQUAL boolean_value
Rule 107   var_boolean -> declare_boolean
Rule 108   declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 109   var_string -> declare_string EQUAL string_value
Rule 110   var_string -> declare_string
Rule 111   declare_string -> declare_any TWOPOINTS VARSTRING
Rule 112   var_enum -> declare_var_enum EQUAL enum_value
Rule 113   var_enum -> declare_var_enum
Rule 114   declare_var_enum -> declare_any TWOPOINTS object_name
Rule 115   declare_generic -> declare_any EQUAL assign_value
Rule 116   declare_generic -> declare_any
Rule 117   declare_any -> prefix VARIABLE
Rule 118   assign -> assign_variable
Rule 119   assign -> assign_array
Rule 120   assign -> assign_object_value
Rule 121   assign_variable -> variable EQUAL assign_value
Rule 122   assign_variable -> variable EQUAL funciones
Rule 123   assign_variable -> variable EQUAL list_types
Rule 124   assign_array -> array_value EQUAL general_value
Rule 125   assign_object_value -> object_value_form1 EQUAL general_value
Rule 126   assign_object_value -> object_value_form1 EQUAL list_types
Rule 127   assign_object_value -> object_value_form2 EQUAL general_value
Rule 128   assign_value -> general_value
Rule 129   assign_value -> object_definition
Rule 130   assign_value -> tuples_list
Rule 131   tuples_list -> LBRACKET tuples_values RBRACKET
Rule 132   tuples_values -> tuples_values COMMA general_value
Rule 133   tuples_values -> general_value
Rule 134   object_definition -> LKEY attributes RKEY
Rule 135   object_definition -> LKEY RKEY
Rule 136   attributes -> attributes COMMA attribute
Rule 137   attributes -> attribute
Rule 138   attribute -> variable TWOPOINTS general_value
Rule 139   attribute -> variable TWOPOINTS list_types
Rule 140   general_value -> expression
Rule 141   general_value -> boolean
Rule 142   general_value -> string
Rule 143   general_value -> concatenate
Rule 144   general_value -> string_object
Rule 145   general_value -> expCond
Rule 146   general_value -> expOpLog
Rule 147   general_value -> expNeg
Rule 148   general_value -> expEq
Rule 149   general_value -> expNotEq
Rule 150   list_types -> list_number
Rule 151   list_types -> list_boolean
Rule 152   list_types -> list_string
Rule 153   list_types -> LBRACKET RBRACKET
Rule 154   list_number -> LBRACKET numbers RBRACKET
Rule 155   numbers -> numbers COMMA number_value
Rule 156   numbers -> number_value
Rule 157   list_boolean -> LBRACKET booleans RBRACKET
Rule 158   booleans -> booleans COMMA boolean_value
Rule 159   booleans -> boolean_value
Rule 160   list_string -> LBRACKET strings RBRACKET
Rule 161   strings -> strings COMMA string_value
Rule 162   strings -> string_value
Rule 163   number_value -> expression
Rule 164   boolean_value -> boolean
Rule 165   boolean_value -> other_value
Rule 166   boolean_value -> expCond
Rule 167   boolean_value -> expOpLog
Rule 168   boolean_value -> expNeg
Rule 169   boolean_value -> expEq
Rule 170   boolean_value -> expNotEq
Rule 171   string_value -> string
Rule 172   string_value -> other_value
Rule 173   string_value -> string_object
Rule 174   string_value -> concatenate
Rule 175   concatenate -> string PLUS termS
Rule 176   termS -> termS PLUS value
Rule 177   termS -> value
Rule 178   value -> expression
Rule 179   value -> string
Rule 180   expression -> expression PLUS term
Rule 181   expression -> expression MINUS term
Rule 182   expression -> term
Rule 183   expression -> expression PRODUCT expression
Rule 184   expression -> expression DIVIDE expression
Rule 185   term -> term1 INCREMENT
Rule 186   term -> INCREMENT term1
Rule 187   term -> term1 DECREMENT
Rule 188   term -> DECREMENT term1
Rule 189   expNeg -> NEGATION expOpLog
Rule 190   expNeg -> NEGATION factor_exprlog
Rule 191   expNeg -> NEGATION boolean
Rule 192   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 193   expNeg -> NEGATION VARIABLE
Rule 194   expEq -> expCond EQUALTO expCond
Rule 195   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 196   expEq -> expression EQUALTO expression
Rule 197   expNotEq -> expCond NOTEQUALTO expCond
Rule 198   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 199   expNotEq -> expression NOTEQUALTO expression
Rule 200   expOpLog -> expCond oplogico expCond
Rule 201   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 202   expOpLog -> expression oplogico expression
Rule 203   expOpLog -> boolean oplogico boolean
Rule 204   factor_exprlog -> LPAREN expCond RPAREN
Rule 205   expCond -> expression operador expression
Rule 206   expCond -> LPAREN expression operador expression RPAREN
Rule 207   term1 -> LPAREN group RPAREN
Rule 208   term1 -> group
Rule 209   group -> number
Rule 210   group -> variable
Rule 211   group -> array_value
Rule 212   group -> object_value
Rule 213   term -> number
Rule 214   term -> factor_expr
Rule 215   term -> other_value
Rule 216   factor_expr -> LPAREN expression RPAREN
Rule 217   other_value -> variable
Rule 218   other_value -> funciones
Rule 219   other_value -> array_value
Rule 220   other_value -> enum_value
Rule 221   other_value -> object_value
Rule 222   formLog -> expCond
Rule 223   formLog -> expOpLog
Rule 224   object_value -> object_value_form1
Rule 225   object_value -> object_value_form2
Rule 226   string_object -> NEW OBJECTSTRING LPAREN string RPAREN
Rule 227   object_value_form1 -> variable POINT variable
Rule 228   object_value_form2 -> variable POINT array_value
Rule 229   array_value -> variable LBRACKET expression RBRACKET
Rule 230   enum_value -> object_name POINT object_name
Rule 231   prefix -> LET
Rule 232   prefix -> VAR
Rule 233   prefix -> STATIC
Rule 234   prefix -> CONST
Rule 235   typedate -> types
Rule 236   typedate -> ENUM
Rule 237   types -> VARNUMBER
Rule 238   types -> VARSTRING
Rule 239   types -> VARBOOLEAN
Rule 240   number -> NUMBER
Rule 241   number -> FLOAT
Rule 242   string -> NORMSTRING1
Rule 243   string -> NORMSTRING2
Rule 244   string -> MULTISTRING
Rule 245   boolean -> TRUE
Rule 246   boolean -> FALSE
Rule 247   variable -> VARIABLE
Rule 248   object_name -> OBJECTNAME
Rule 249   operador -> GREATER
Rule 250   operador -> LESS
Rule 251   operador -> GREATEREQUAL
Rule 252   operador -> LESSEQUAL
Rule 253   operador -> EQUALTO
Rule 254   operador -> NOTEQUALTO
Rule 255   oplogico -> AND
Rule 256   oplogico -> OR
Rule 257   funciones -> funcionmath
Rule 258   funciones -> funcionString
Rule 259   funciones -> funcionArray
Rule 260   funciones -> funcionConjunto
Rule 261   funcionmath -> mathAbs
Rule 262   funcionmath -> mathRound
Rule 263   funcionmath -> mathPow
Rule 264   mathAbs -> declare_any EQUAL mathAbs
Rule 265   mathAbs -> FUNMATH POINT ABS LPAREN VARIABLE RPAREN
Rule 266   mathAbs -> FUNMATH POINT ABS LPAREN number_value RPAREN
Rule 267   mathAbs -> FUNMATH POINT ABS LPAREN MINUS number_value RPAREN
Rule 268   mathRound -> FUNMATH POINT ROUND LPAREN VARIABLE RPAREN
Rule 269   mathRound -> FUNMATH POINT ROUND LPAREN number_value RPAREN
Rule 270   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA VARIABLE RPAREN
Rule 271   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA number_value RPAREN
Rule 272   mathPow -> FUNMATH POINT POW LPAREN VARIABLE COMMA number_value RPAREN
Rule 273   mathPow -> FUNMATH POINT POW LPAREN number_value COMMA VARIABLE RPAREN
Rule 274   funcionString -> stringCharAt
Rule 275   funcionString -> stringConcat
Rule 276   funcionString -> stringSplit
Rule 277   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN VARIABLE RPAREN
Rule 278   stringCharAt -> VARIABLE POINT FUNCTIONCHARAT LPAREN number_value RPAREN
Rule 279   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 280   stringConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN string RPAREN
Rule 281   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN VARIABLE RPAREN
Rule 282   stringSplit -> VARIABLE POINT FUNCTIONSPLIT LPAREN string RPAREN
Rule 283   funcionArray -> arrayFilter
Rule 284   funcionArray -> arrayConcat
Rule 285   funcionArray -> arrayJoin
Rule 286   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN VARIABLE RPAREN
Rule 287   arrayConcat -> VARIABLE POINT FUNCTIONCONCAT LPAREN list_types RPAREN
Rule 288   arrayJoin -> declare_any arrayJoin
Rule 289   arrayJoin -> declare_any arrayJoin POINTCOMMA
Rule 290   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN VARIABLE RPAREN
Rule 291   arrayJoin -> VARIABLE POINT FUNCTIONJOIN LPAREN string RPAREN
Rule 292   arrayFilter -> VARIABLE POINT FUNCTIONFILTER LPAREN VARIABLE RPAREN
Rule 293   funcionConjunto -> conjuntoAd
Rule 294   funcionConjunto -> conjuntoHas
Rule 295   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN VARIABLE RPAREN
Rule 296   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN number_value RPAREN
Rule 297   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN boolean_value RPAREN
Rule 298   conjuntoAdd -> VARIABLE POINT FUNCTIONADD LPAREN string RPAREN
Rule 299   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN VARIABLE RPAREN
Rule 300   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN number_value RPAREN
Rule 301   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN boolean_value RPAREN
Rule 302   conjuntoHas -> VARIABLE POINT FUNCTIONHAS LPAREN string RPAREN

Terminals, with rules where they appear

ABS                  : 265 266 267
AND                  : 255
ANY                  : 
ARRAY                : 87 92 97
COMMA                : 40 44 50 73 74 74 75 75 75 76 77 77 78 78 78 132 136 155 158 161 270 271 272 273
COMMENT              : 25
CONST                : 234
DECREMENT            : 187 188
DIVIDE               : 184
ELIF                 : 56 57
ELSE                 : 58
ENUM                 : 37 236
EQUAL                : 42 46 59 60 66 68 70 72 83 84 88 89 93 94 98 99 100 101 102 104 106 109 112 115 121 122 123 124 125 126 127 264
EQUALTO              : 194 195 196 253
FALSE                : 246
FLOAT                : 241
FOR                  : 59 60 61 62
FUNCTION             : 47 48
FUNCTIONADD          : 295 296 297 298
FUNCTIONCHARAT       : 277 278
FUNCTIONCONCAT       : 279 280 286 287
FUNCTIONFILTER       : 292
FUNCTIONHAS          : 299 300 301 302
FUNCTIONJOIN         : 290 291
FUNCTIONSPLIT        : 281 282
FUNMATH              : 265 266 267 268 269 270 271 272 273
GREATER              : 87 92 97 249
GREATEREQUAL         : 251
IF                   : 51 52 53 54 55
IN                   : 61 62
INCREMENT            : 185 186
INSTANCEOF           : 55
LBRACKET             : 73 74 75 76 77 78 84 86 89 91 94 96 131 153 154 157 160 229
LESS                 : 87 92 97 250
LESSEQUAL            : 252
LET                  : 59 61 231
LKEY                 : 37 64 65 134 135
LPAREN               : 22 23 24 47 48 51 52 53 54 55 56 57 59 60 61 62 63 66 192 204 206 207 216 226 265 266 267 268 269 270 271 272 273 277 278 279 280 281 282 286 287 290 291 292 295 296 297 298 299 300 301 302
MINUS                : 181 267
MOD                  : 
MULTICOMMENT         : 26
MULTISTRING          : 244
NEGATION             : 189 190 191 192 193
NEW                  : 66 226
NORMSTRING1          : 242
NORMSTRING2          : 243
NOTEQUALTO           : 197 198 199 254
NULL                 : 99
NUMBER               : 240
OBJECTNAME           : 37 55 248
OBJECTSTRING         : 226
OR                   : 256
PLUS                 : 175 176 180
POINT                : 227 228 230 265 266 267 268 269 270 271 272 273 277 278 279 280 281 282 286 287 290 291 292 295 296 297 298 299 300 301 302
POINTCOMMA           : 4 59 59 60 60 289
POW                  : 270 271 272 273
PRINT                : 22 23 24
PRODUCT              : 183
RBRACKET             : 73 74 75 76 77 78 84 86 89 91 94 96 131 153 154 157 160 229
RKEY                 : 37 64 65 134 135
ROUND                : 268 269
RPAREN               : 22 23 24 47 48 51 52 53 54 55 56 57 59 60 61 62 63 66 192 204 206 207 216 226 265 266 267 268 269 270 271 272 273 277 278 279 280 281 282 286 287 290 291 292 295 296 297 298 299 300 301 302
SET                  : 66
SPECIAL              : 
STATIC               : 233
TRUE                 : 245
TWOPOINTS            : 67 68 69 70 71 72 87 92 97 105 108 111 114 138 139
TYPEOF               : 
UNDEFINED            : 100
VAR                  : 232
VARBOOLEAN           : 92 108 239
VARIABLE             : 23 47 48 49 50 55 59 60 61 61 62 62 117 193 247 265 268 270 270 272 273 277 277 278 279 279 280 281 281 282 286 286 287 290 290 291 292 292 295 295 296 297 298 299 299 300 301 302
VARNUMBER            : 87 105 237
VAROBJECT            : 
VARSTRING            : 97 111 238
WHILE                : 63
error                : 

Nonterminals, with rules where they appear

arrayConcat          : 284
arrayFilter          : 283
arrayJoin            : 285 288 289
array_value          : 124 211 219 228
assign               : 8
assign_array         : 119
assign_object_value  : 120
assign_value         : 115 121
assign_variable      : 118
atomicstatement      : 1 2
attribute            : 136 137
attributes           : 134 136
boolean              : 141 164 191 203 203
boolean_value        : 106 158 159 297 301
booleans             : 157 158
comments             : 16
concatenate          : 5 143 174
conjuntoAd           : 293
conjuntoAdd          : 
conjuntoHas          : 294
consoleLog           : 18
declare              : 7
declare_any          : 66 67 68 69 70 71 72 87 92 97 98 99 100 105 108 111 114 115 116 264 288 289
declare_array        : 33
declare_array_boolean : 88 89 90
declare_array_main_boolean : 80
declare_array_main_number : 79
declare_array_main_string : 81
declare_array_number : 83 84 85
declare_array_string : 93 94 95
declare_boolean      : 91 106 107
declare_enum         : 34
declare_generic      : 36
declare_generic_array : 82
declare_number       : 86 101 102 103 104
declare_string       : 96 109 110
declare_tuples       : 35
declare_var_enum     : 112 113
enum_value           : 112 220
enums                : 37
enums_numeric        : 38 40
enums_numeric_value  : 40 41
enums_string         : 39 44
enums_string_value   : 44 45
expCond              : 9 145 166 194 194 197 197 200 200 204 222
expEq                : 12 148 169
expNeg               : 11 147 168
expNotEq             : 13 149 170
expOpLog             : 10 146 167 189 192 223
exp_set              : 14
expression           : 6 104 140 163 178 180 181 183 183 184 184 196 196 199 199 202 202 205 205 206 206 216 229
factor_expr          : 214
factor_exprlog       : 190 195 195 198 198 201 201
formLog              : 51 52 53 54 56 57 59 60 63
funcParametres       : 48 50
funcionArray         : 259
funcionConjunto      : 260
funcionString        : 258
funcionelif          : 52 53 57
funcionelse          : 53 54
funciones            : 122 218
funcionfor           : 21
funcionif            : 19
funcionmath          : 102 257
funcionwhile         : 20
functionStatement    : 17
general_value        : 76 76 77 77 77 78 78 78 78 124 125 127 128 132 133 138
group                : 207 208
list_boolean         : 88 151
list_number          : 83 150
list_string          : 93 152
list_types           : 98 123 126 139 287
mathAbs              : 261 264
mathPow              : 263
mathRound            : 262
number               : 42 209 213
number_value         : 59 60 101 155 156 266 267 269 271 271 272 273 278 296 300
numbers              : 154 155
object_definition    : 129
object_name          : 42 43 46 114 230 230
object_value         : 212 221
object_value_form1   : 125 126 224
object_value_form2   : 127 225
operador             : 205 206
oplogico             : 200 201 202 203
other_value          : 165 172 215
prefix               : 117
statement            : 2 64 0
statement_control    : 15
statement_value      : 3 4
string               : 24 46 142 171 175 179 226 280 282 291 298 302
stringCharAt         : 274
stringConcat         : 275
stringSplit          : 276
string_object        : 144 173
string_value         : 109 161 162
strings              : 160 161
substatement         : 47 48 51 52 53 54 55 56 57 58 59 60 61 62 63
term                 : 59 60 180 181 182
term1                : 185 186 187 188
termS                : 175 176
tuples_2_values      : 68
tuples_2_variables   : 67 68
tuples_3_values      : 70
tuples_3_variables   : 69 70
tuples_4_values      : 72
tuples_4_variables   : 71 72
tuples_list          : 130
tuples_values        : 131 132
typedate             : 
types                : 73 73 74 74 74 75 75 75 75 235
value                : 176 177
var_boolean          : 27
var_enum             : 30
var_null             : 31
var_number           : 28
var_string           : 29
var_undefined        : 32
variable             : 121 122 123 138 139 210 217 227 227 228 229


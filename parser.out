Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ANY
    COMMENT
    DOLLAR
    ELIF
    ELSE
    FUNCTIONADD
    FUNCTIONCHARAT
    FUNCTIONCONCAT
    FUNCTIONFILTER
    FUNCTIONHAS
    FUNCTIONJOIN
    FUNCTIONSPLIT
    FUNMATH
    IN
    INSTANCEOF
    LCOMILLA
    MOD
    MULTICOMMENT
    POW
    PRINT
    RCOMILLA
    ROUND
    SPECIAL
    TYPEOF
    VAROBJECT
    WHILE

Grammar

Rule 0     S' -> statement
Rule 1     statement -> statement_value
Rule 2     statement -> statement_value POINTCOMMA
Rule 3     statement_value -> expression
Rule 4     statement_value -> concatenate
Rule 5     statement_value -> declare
Rule 6     statement_value -> assign
Rule 7     statement_value -> expCond
Rule 8     statement_value -> expOpLog
Rule 9     statement_value -> expNeg
Rule 10    statement_value -> expEq
Rule 11    statement_value -> expNotEq
Rule 12    statement_value -> exp_set
Rule 13    statement_value -> funcionif
Rule 14    declare -> var_boolean
Rule 15    declare -> var_number
Rule 16    declare -> var_string
Rule 17    declare -> var_enum
Rule 18    declare -> var_null
Rule 19    declare -> var_undefined
Rule 20    declare -> declare_array
Rule 21    declare -> declare_enum
Rule 22    declare -> declare_generic
Rule 23    declare_enum -> ENUM OBJECTNAME LKEY enums RKEY
Rule 24    enums -> enums_numeric
Rule 25    enums -> enums_string
Rule 26    enums_numeric -> enums_numeric COMMA enums_numeric_value
Rule 27    enums_numeric -> enums_numeric_value
Rule 28    enums_numeric_value -> object_name EQUAL number
Rule 29    enums_numeric_value -> object_name
Rule 30    enums_string -> enums_string COMMA enums_string_value
Rule 31    enums_string -> enums_string_value
Rule 32    enums_string_value -> object_name EQUAL string
Rule 33    funcionif -> IF LPAREN formIf RPAREN LKEY
Rule 34    funcionfor -> FOR LPAREN declare_any EQUAL NUMBER POINTCOMMA operador POINTCOMMA RPAREN LKEY
Rule 35    exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN
Rule 36    declare_array -> declare_array_main_number
Rule 37    declare_array -> declare_array_main_boolean
Rule 38    declare_array -> declare_array_main_string
Rule 39    declare_array -> declare_generic_array
Rule 40    declare_array_main_number -> declare_array_number EQUAL list_number
Rule 41    declare_array_main_number -> declare_array_number
Rule 42    declare_array_number -> declare_number LBRACKET RBRACKET
Rule 43    declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
Rule 44    declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean
Rule 45    declare_array_main_boolean -> declare_array_boolean
Rule 46    declare_array_boolean -> declare_boolean LBRACKET RBRACKET
Rule 47    declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
Rule 48    declare_array_main_string -> declare_array_string EQUAL list_string
Rule 49    declare_array_main_string -> declare_array_string
Rule 50    declare_array_string -> declare_string LBRACKET RBRACKET
Rule 51    declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
Rule 52    declare_generic_array -> declare_any EQUAL list_types
Rule 53    var_null -> declare_any EQUAL NULL
Rule 54    var_undefined -> declare_any EQUAL UNDEFINED
Rule 55    var_number -> declare_number EQUAL number_value
Rule 56    var_number -> declare_number
Rule 57    declare_number -> declare_any TWOPOINTS VARNUMBER
Rule 58    var_boolean -> declare_boolean EQUAL boolean_value
Rule 59    var_boolean -> declare_boolean
Rule 60    declare_boolean -> declare_any TWOPOINTS VARBOOLEAN
Rule 61    var_string -> declare_string EQUAL string_value
Rule 62    var_string -> declare_string
Rule 63    declare_string -> declare_any TWOPOINTS VARSTRING
Rule 64    var_enum -> declare_var_enum EQUAL enum_value
Rule 65    var_enum -> declare_var_enum
Rule 66    declare_var_enum -> declare_any TWOPOINTS object_name
Rule 67    declare_generic -> declare_any EQUAL assign_value
Rule 68    declare_generic -> declare_any
Rule 69    declare_any -> prefix VARIABLE
Rule 70    assign -> assign_variable
Rule 71    assign -> assign_array
Rule 72    assign -> assign_object_value
Rule 73    assign_variable -> variable EQUAL assign_value
Rule 74    assign_variable -> variable EQUAL list_types
Rule 75    assign_array -> array_value EQUAL general_value
Rule 76    assign_object_value -> object_value_form1 EQUAL general_value
Rule 77    assign_object_value -> object_value_form1 EQUAL list_types
Rule 78    assign_object_value -> object_value_form2 EQUAL general_value
Rule 79    assign_value -> general_value
Rule 80    assign_value -> object_definition
Rule 81    object_definition -> LKEY attributes RKEY
Rule 82    attributes -> attributes COMMA attribute
Rule 83    attributes -> attribute
Rule 84    attribute -> variable TWOPOINTS general_value
Rule 85    attribute -> variable TWOPOINTS list_types
Rule 86    general_value -> expression
Rule 87    general_value -> boolean
Rule 88    general_value -> string
Rule 89    general_value -> expCond
Rule 90    general_value -> expOpLog
Rule 91    general_value -> expNeg
Rule 92    general_value -> expEq
Rule 93    general_value -> expNotEq
Rule 94    list_types -> list_number
Rule 95    list_types -> list_boolean
Rule 96    list_types -> list_string
Rule 97    list_number -> LBRACKET numbers RBRACKET
Rule 98    numbers -> numbers COMMA number_value
Rule 99    numbers -> number_value
Rule 100   list_boolean -> LBRACKET booleans RBRACKET
Rule 101   booleans -> booleans COMMA boolean_value
Rule 102   booleans -> boolean_value
Rule 103   list_string -> LBRACKET strings RBRACKET
Rule 104   strings -> strings COMMA string_value
Rule 105   strings -> string_value
Rule 106   number_value -> expression
Rule 107   boolean_value -> boolean
Rule 108   boolean_value -> other_value
Rule 109   boolean_value -> expCond
Rule 110   boolean_value -> expOpLog
Rule 111   boolean_value -> expNeg
Rule 112   boolean_value -> expEq
Rule 113   boolean_value -> expNotEq
Rule 114   string_value -> string
Rule 115   string_value -> other_value
Rule 116   concatenate -> termS
Rule 117   termS -> string PLUS chain
Rule 118   chain -> termS PLUS value
Rule 119   chain -> value
Rule 120   value -> expression
Rule 121   value -> string
Rule 122   expression -> expression PLUS term
Rule 123   expression -> expression MINUS term
Rule 124   expression -> term
Rule 125   term -> term PRODUCT term
Rule 126   term -> term DIVIDE term
Rule 127   term -> term1 INCREMENT
Rule 128   term -> INCREMENT term1
Rule 129   term -> term1 DECREMENT
Rule 130   term -> DECREMENT term1
Rule 131   expNeg -> NEGATION expOpLog
Rule 132   expNeg -> NEGATION factor_exprlog
Rule 133   expNeg -> NEGATION boolean
Rule 134   expNeg -> NEGATION LPAREN expOpLog RPAREN
Rule 135   expEq -> expCond EQUALTO expCond
Rule 136   expEq -> factor_exprlog EQUALTO factor_exprlog
Rule 137   expEq -> expression EQUALTO expression
Rule 138   expNotEq -> expCond NOTEQUALTO expCond
Rule 139   expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog
Rule 140   expNotEq -> expression NOTEQUALTO expression
Rule 141   expOpLog -> expCond oplogico expCond
Rule 142   expOpLog -> factor_exprlog oplogico factor_exprlog
Rule 143   expOpLog -> expression oplogico expression
Rule 144   factor_exprlog -> LPAREN expCond RPAREN
Rule 145   expCond -> expression operador expression
Rule 146   expCond -> LPAREN expression operador expression RPAREN
Rule 147   term1 -> LPAREN group RPAREN
Rule 148   term1 -> group
Rule 149   group -> number
Rule 150   group -> variable
Rule 151   group -> array_value
Rule 152   group -> object_value
Rule 153   term -> number
Rule 154   term -> factor_expr
Rule 155   term -> other_value
Rule 156   factor_expr -> LPAREN expression RPAREN
Rule 157   other_value -> variable
Rule 158   other_value -> array_value
Rule 159   other_value -> enum_value
Rule 160   other_value -> object_value
Rule 161   formIf -> expCond
Rule 162   formIf -> expOpLog
Rule 163   object_value -> object_value_form1
Rule 164   object_value -> object_value_form2
Rule 165   object_value_form1 -> variable POINT variable
Rule 166   object_value_form2 -> variable POINT array_value
Rule 167   array_value -> variable LBRACKET expression RBRACKET
Rule 168   enum_value -> object_name POINT object_name
Rule 169   prefix -> LET
Rule 170   prefix -> VAR
Rule 171   prefix -> STATIC
Rule 172   prefix -> CONST
Rule 173   typedate -> VARNUMBER
Rule 174   typedate -> VARSTRING
Rule 175   typedate -> VARBOOLEAN
Rule 176   typedate -> ENUM
Rule 177   number -> NUMBER
Rule 178   number -> FLOAT
Rule 179   string -> NORMSTRING1
Rule 180   string -> NORMSTRING2
Rule 181   string -> MULTISTRING
Rule 182   boolean -> TRUE
Rule 183   boolean -> FALSE
Rule 184   variable -> VARIABLE
Rule 185   object_name -> OBJECTNAME
Rule 186   operador -> GREATER
Rule 187   operador -> LESS
Rule 188   operador -> GREATEREQUAL
Rule 189   operador -> LESSEQUAL
Rule 190   operador -> EQUALTO
Rule 191   operador -> NOTEQUALTO
Rule 192   oplogico -> AND
Rule 193   oplogico -> OR

Terminals, with rules where they appear

ABS                  : 
AND                  : 192
ANY                  : 
ARRAY                : 43 47 51
COMMA                : 26 30 82 98 101 104
COMMENT              : 
CONST                : 172
DECREMENT            : 129 130
DIVIDE               : 126
DOLLAR               : 
ELIF                 : 
ELSE                 : 
ENUM                 : 23 176
EQUAL                : 28 32 34 35 40 44 48 52 53 54 55 58 61 64 67 73 74 75 76 77 78
EQUALTO              : 135 136 137 190
FALSE                : 183
FLOAT                : 178
FOR                  : 34
FUNCTIONADD          : 
FUNCTIONCHARAT       : 
FUNCTIONCONCAT       : 
FUNCTIONFILTER       : 
FUNCTIONHAS          : 
FUNCTIONJOIN         : 
FUNCTIONSPLIT        : 
FUNMATH              : 
GREATER              : 43 47 51 186
GREATEREQUAL         : 188
IF                   : 33
IN                   : 
INCREMENT            : 127 128
INSTANCEOF           : 
LBRACKET             : 42 46 50 97 100 103 167
LCOMILLA             : 
LESS                 : 43 47 51 187
LESSEQUAL            : 189
LET                  : 169
LKEY                 : 23 33 34 81
LPAREN               : 33 34 35 134 144 146 147 156
MINUS                : 123
MOD                  : 
MULTICOMMENT         : 
MULTISTRING          : 181
NEGATION             : 131 132 133 134
NEW                  : 35
NORMSTRING1          : 179
NORMSTRING2          : 180
NOTEQUALTO           : 138 139 140 191
NULL                 : 53
NUMBER               : 34 177
OBJECTNAME           : 23 185
OR                   : 193
PLUS                 : 117 118 122
POINT                : 165 166 168
POINTCOMMA           : 2 34 34
POW                  : 
PRINT                : 
PRODUCT              : 125
RBRACKET             : 42 46 50 97 100 103 167
RCOMILLA             : 
RKEY                 : 23 81
ROUND                : 
RPAREN               : 33 34 35 134 144 146 147 156
SET                  : 35
SPECIAL              : 
STATIC               : 171
TRUE                 : 182
TWOPOINTS            : 43 47 51 57 60 63 66 84 85
TYPEOF               : 
UNDEFINED            : 54
VAR                  : 170
VARBOOLEAN           : 47 60 175
VARIABLE             : 69 184
VARNUMBER            : 43 57 173
VAROBJECT            : 
VARSTRING            : 51 63 174
WHILE                : 
error                : 

Nonterminals, with rules where they appear

array_value          : 75 151 158 166
assign               : 6
assign_array         : 71
assign_object_value  : 72
assign_value         : 67 73
assign_variable      : 70
attribute            : 82 83
attributes           : 81 82
boolean              : 87 107 133
boolean_value        : 58 101 102
booleans             : 100 101
chain                : 117
concatenate          : 4
declare              : 5
declare_any          : 34 35 43 47 51 52 53 54 57 60 63 66 67 68
declare_array        : 20
declare_array_boolean : 44 45
declare_array_main_boolean : 37
declare_array_main_number : 36
declare_array_main_string : 38
declare_array_number : 40 41
declare_array_string : 48 49
declare_boolean      : 46 58 59
declare_enum         : 21
declare_generic      : 22
declare_generic_array : 39
declare_number       : 42 55 56
declare_string       : 50 61 62
declare_var_enum     : 64 65
enum_value           : 64 159
enums                : 23
enums_numeric        : 24 26
enums_numeric_value  : 26 27
enums_string         : 25 30
enums_string_value   : 30 31
expCond              : 7 89 109 135 135 138 138 141 141 144 161
expEq                : 10 92 112
expNeg               : 9 91 111
expNotEq             : 11 93 113
expOpLog             : 8 90 110 131 134 162
exp_set              : 12
expression           : 3 86 106 120 122 123 137 137 140 140 143 143 145 145 146 146 156 167
factor_expr          : 154
factor_exprlog       : 132 136 136 139 139 142 142
formIf               : 33
funcionfor           : 
funcionif            : 13
general_value        : 75 76 78 79 84
group                : 147 148
list_boolean         : 44 95
list_number          : 40 94
list_string          : 48 96
list_types           : 52 74 77 85
number               : 28 149 153
number_value         : 55 98 99
numbers              : 97 98
object_definition    : 80
object_name          : 28 29 32 66 168 168
object_value         : 152 160
object_value_form1   : 76 77 163
object_value_form2   : 78 164
operador             : 34 145 146
oplogico             : 141 142 143
other_value          : 108 115 155
prefix               : 69
statement            : 0
statement_value      : 1 2
string               : 32 88 114 117 121
string_value         : 61 104 105
strings              : 103 104
term                 : 122 123 124 125 125 126 126
term1                : 127 128 129 130
termS                : 116 118
typedate             : 
value                : 118 119
var_boolean          : 14
var_enum             : 17
var_null             : 18
var_number           : 15
var_string           : 16
var_undefined        : 19
variable             : 73 74 84 85 150 157 165 165 166 167

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . statement_value
    (2) statement -> . statement_value POINTCOMMA
    (3) statement_value -> . expression
    (4) statement_value -> . concatenate
    (5) statement_value -> . declare
    (6) statement_value -> . assign
    (7) statement_value -> . expCond
    (8) statement_value -> . expOpLog
    (9) statement_value -> . expNeg
    (10) statement_value -> . expEq
    (11) statement_value -> . expNotEq
    (12) statement_value -> . exp_set
    (13) statement_value -> . funcionif
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (116) concatenate -> . termS
    (14) declare -> . var_boolean
    (15) declare -> . var_number
    (16) declare -> . var_string
    (17) declare -> . var_enum
    (18) declare -> . var_null
    (19) declare -> . var_undefined
    (20) declare -> . declare_array
    (21) declare -> . declare_enum
    (22) declare -> . declare_generic
    (70) assign -> . assign_variable
    (71) assign -> . assign_array
    (72) assign -> . assign_object_value
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (35) exp_set -> . declare_any EQUAL NEW SET LPAREN RPAREN
    (33) funcionif -> . IF LPAREN formIf RPAREN LKEY
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (117) termS -> . string PLUS chain
    (58) var_boolean -> . declare_boolean EQUAL boolean_value
    (59) var_boolean -> . declare_boolean
    (55) var_number -> . declare_number EQUAL number_value
    (56) var_number -> . declare_number
    (61) var_string -> . declare_string EQUAL string_value
    (62) var_string -> . declare_string
    (64) var_enum -> . declare_var_enum EQUAL enum_value
    (65) var_enum -> . declare_var_enum
    (53) var_null -> . declare_any EQUAL NULL
    (54) var_undefined -> . declare_any EQUAL UNDEFINED
    (36) declare_array -> . declare_array_main_number
    (37) declare_array -> . declare_array_main_boolean
    (38) declare_array -> . declare_array_main_string
    (39) declare_array -> . declare_generic_array
    (23) declare_enum -> . ENUM OBJECTNAME LKEY enums RKEY
    (67) declare_generic -> . declare_any EQUAL assign_value
    (68) declare_generic -> . declare_any
    (73) assign_variable -> . variable EQUAL assign_value
    (74) assign_variable -> . variable EQUAL list_types
    (75) assign_array -> . array_value EQUAL general_value
    (76) assign_object_value -> . object_value_form1 EQUAL general_value
    (77) assign_object_value -> . object_value_form1 EQUAL list_types
    (78) assign_object_value -> . object_value_form2 EQUAL general_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (69) declare_any -> . prefix VARIABLE
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (60) declare_boolean -> . declare_any TWOPOINTS VARBOOLEAN
    (57) declare_number -> . declare_any TWOPOINTS VARNUMBER
    (63) declare_string -> . declare_any TWOPOINTS VARSTRING
    (66) declare_var_enum -> . declare_any TWOPOINTS object_name
    (40) declare_array_main_number -> . declare_array_number EQUAL list_number
    (41) declare_array_main_number -> . declare_array_number
    (44) declare_array_main_boolean -> . declare_array_boolean EQUAL list_boolean
    (45) declare_array_main_boolean -> . declare_array_boolean
    (48) declare_array_main_string -> . declare_array_string EQUAL list_string
    (49) declare_array_main_string -> . declare_array_string
    (52) declare_generic_array -> . declare_any EQUAL list_types
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (169) prefix -> . LET
    (170) prefix -> . VAR
    (171) prefix -> . STATIC
    (172) prefix -> . CONST
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (42) declare_array_number -> . declare_number LBRACKET RBRACKET
    (43) declare_array_number -> . declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (46) declare_array_boolean -> . declare_boolean LBRACKET RBRACKET
    (47) declare_array_boolean -> . declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (50) declare_array_string -> . declare_string LBRACKET RBRACKET
    (51) declare_array_string -> . declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER
    (185) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    IF              shift and go to state 32
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    ENUM            shift and go to state 49
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    LET             shift and go to state 68
    VAR             shift and go to state 69
    STATIC          shift and go to state 70
    CONST           shift and go to state 71
    OBJECTNAME      shift and go to state 50

    statement                      shift and go to state 1
    statement_value                shift and go to state 2
    expression                     shift and go to state 3
    concatenate                    shift and go to state 4
    declare                        shift and go to state 5
    assign                         shift and go to state 6
    expCond                        shift and go to state 7
    expOpLog                       shift and go to state 8
    expNeg                         shift and go to state 9
    expEq                          shift and go to state 10
    expNotEq                       shift and go to state 11
    exp_set                        shift and go to state 12
    funcionif                      shift and go to state 13
    term                           shift and go to state 14
    termS                          shift and go to state 15
    var_boolean                    shift and go to state 16
    var_number                     shift and go to state 17
    var_string                     shift and go to state 18
    var_enum                       shift and go to state 19
    var_null                       shift and go to state 20
    var_undefined                  shift and go to state 21
    declare_array                  shift and go to state 22
    declare_enum                   shift and go to state 23
    declare_generic                shift and go to state 24
    assign_variable                shift and go to state 25
    assign_array                   shift and go to state 26
    assign_object_value            shift and go to state 27
    factor_exprlog                 shift and go to state 29
    declare_any                    shift and go to state 31
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    string                         shift and go to state 39
    declare_boolean                shift and go to state 40
    declare_number                 shift and go to state 41
    declare_string                 shift and go to state 42
    declare_var_enum               shift and go to state 43
    enum_value                     shift and go to state 44
    declare_array_main_number      shift and go to state 45
    declare_array_main_boolean     shift and go to state 46
    declare_array_main_string      shift and go to state 47
    declare_generic_array          shift and go to state 48
    variable                       shift and go to state 51
    array_value                    shift and go to state 52
    object_value_form1             shift and go to state 53
    object_value_form2             shift and go to state 54
    prefix                         shift and go to state 55
    group                          shift and go to state 57
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    declare_array_number           shift and go to state 65
    declare_array_boolean          shift and go to state 66
    declare_array_string           shift and go to state 67

state 1

    (0) S' -> statement .



state 2

    (1) statement -> statement_value .
    (2) statement -> statement_value . POINTCOMMA

    $end            reduce using rule 1 (statement -> statement_value .)
    POINTCOMMA      shift and go to state 72


state 3

    (3) statement_value -> expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (145) expCond -> expression . operador expression
    (143) expOpLog -> expression . oplogico expression
    (137) expEq -> expression . EQUALTO expression
    (140) expNotEq -> expression . NOTEQUALTO expression
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 3 (statement_value -> expression .)
    $end            reduce using rule 3 (statement_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    EQUALTO         shift and go to state 77
    NOTEQUALTO      shift and go to state 78
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 4

    (4) statement_value -> concatenate .

    POINTCOMMA      reduce using rule 4 (statement_value -> concatenate .)
    $end            reduce using rule 4 (statement_value -> concatenate .)


state 5

    (5) statement_value -> declare .

    POINTCOMMA      reduce using rule 5 (statement_value -> declare .)
    $end            reduce using rule 5 (statement_value -> declare .)


state 6

    (6) statement_value -> assign .

    POINTCOMMA      reduce using rule 6 (statement_value -> assign .)
    $end            reduce using rule 6 (statement_value -> assign .)


state 7

    (7) statement_value -> expCond .
    (141) expOpLog -> expCond . oplogico expCond
    (135) expEq -> expCond . EQUALTO expCond
    (138) expNotEq -> expCond . NOTEQUALTO expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 7 (statement_value -> expCond .)
    $end            reduce using rule 7 (statement_value -> expCond .)
    EQUALTO         shift and go to state 86
    NOTEQUALTO      shift and go to state 87
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 8

    (8) statement_value -> expOpLog .

    POINTCOMMA      reduce using rule 8 (statement_value -> expOpLog .)
    $end            reduce using rule 8 (statement_value -> expOpLog .)


state 9

    (9) statement_value -> expNeg .

    POINTCOMMA      reduce using rule 9 (statement_value -> expNeg .)
    $end            reduce using rule 9 (statement_value -> expNeg .)


state 10

    (10) statement_value -> expEq .

    POINTCOMMA      reduce using rule 10 (statement_value -> expEq .)
    $end            reduce using rule 10 (statement_value -> expEq .)


state 11

    (11) statement_value -> expNotEq .

    POINTCOMMA      reduce using rule 11 (statement_value -> expNotEq .)
    $end            reduce using rule 11 (statement_value -> expNotEq .)


state 12

    (12) statement_value -> exp_set .

    POINTCOMMA      reduce using rule 12 (statement_value -> exp_set .)
    $end            reduce using rule 12 (statement_value -> exp_set .)


state 13

    (13) statement_value -> funcionif .

    POINTCOMMA      reduce using rule 13 (statement_value -> funcionif .)
    $end            reduce using rule 13 (statement_value -> funcionif .)


state 14

    (124) expression -> term .
    (125) term -> term . PRODUCT term
    (126) term -> term . DIVIDE term

    PLUS            reduce using rule 124 (expression -> term .)
    MINUS           reduce using rule 124 (expression -> term .)
    EQUALTO         reduce using rule 124 (expression -> term .)
    NOTEQUALTO      reduce using rule 124 (expression -> term .)
    GREATER         reduce using rule 124 (expression -> term .)
    LESS            reduce using rule 124 (expression -> term .)
    GREATEREQUAL    reduce using rule 124 (expression -> term .)
    LESSEQUAL       reduce using rule 124 (expression -> term .)
    AND             reduce using rule 124 (expression -> term .)
    OR              reduce using rule 124 (expression -> term .)
    POINTCOMMA      reduce using rule 124 (expression -> term .)
    $end            reduce using rule 124 (expression -> term .)
    RPAREN          reduce using rule 124 (expression -> term .)
    RBRACKET        reduce using rule 124 (expression -> term .)
    COMMA           reduce using rule 124 (expression -> term .)
    RKEY            reduce using rule 124 (expression -> term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 15

    (116) concatenate -> termS .

    POINTCOMMA      reduce using rule 116 (concatenate -> termS .)
    $end            reduce using rule 116 (concatenate -> termS .)


state 16

    (14) declare -> var_boolean .

    POINTCOMMA      reduce using rule 14 (declare -> var_boolean .)
    $end            reduce using rule 14 (declare -> var_boolean .)


state 17

    (15) declare -> var_number .

    POINTCOMMA      reduce using rule 15 (declare -> var_number .)
    $end            reduce using rule 15 (declare -> var_number .)


state 18

    (16) declare -> var_string .

    POINTCOMMA      reduce using rule 16 (declare -> var_string .)
    $end            reduce using rule 16 (declare -> var_string .)


state 19

    (17) declare -> var_enum .

    POINTCOMMA      reduce using rule 17 (declare -> var_enum .)
    $end            reduce using rule 17 (declare -> var_enum .)


state 20

    (18) declare -> var_null .

    POINTCOMMA      reduce using rule 18 (declare -> var_null .)
    $end            reduce using rule 18 (declare -> var_null .)


state 21

    (19) declare -> var_undefined .

    POINTCOMMA      reduce using rule 19 (declare -> var_undefined .)
    $end            reduce using rule 19 (declare -> var_undefined .)


state 22

    (20) declare -> declare_array .

    POINTCOMMA      reduce using rule 20 (declare -> declare_array .)
    $end            reduce using rule 20 (declare -> declare_array .)


state 23

    (21) declare -> declare_enum .

    POINTCOMMA      reduce using rule 21 (declare -> declare_enum .)
    $end            reduce using rule 21 (declare -> declare_enum .)


state 24

    (22) declare -> declare_generic .

    POINTCOMMA      reduce using rule 22 (declare -> declare_generic .)
    $end            reduce using rule 22 (declare -> declare_generic .)


state 25

    (70) assign -> assign_variable .

    POINTCOMMA      reduce using rule 70 (assign -> assign_variable .)
    $end            reduce using rule 70 (assign -> assign_variable .)


state 26

    (71) assign -> assign_array .

    POINTCOMMA      reduce using rule 71 (assign -> assign_array .)
    $end            reduce using rule 71 (assign -> assign_array .)


state 27

    (72) assign -> assign_object_value .

    POINTCOMMA      reduce using rule 72 (assign -> assign_object_value .)
    $end            reduce using rule 72 (assign -> assign_object_value .)


state 28

    (146) expCond -> LPAREN . expression operador expression RPAREN
    (144) factor_exprlog -> LPAREN . expCond RPAREN
    (147) term1 -> LPAREN . group RPAREN
    (156) factor_expr -> LPAREN . expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (168) enum_value -> . object_name POINT object_name
    (185) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 91
    expCond                        shift and go to state 92
    group                          shift and go to state 93
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 29

    (142) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (136) expEq -> factor_exprlog . EQUALTO factor_exprlog
    (139) expNotEq -> factor_exprlog . NOTEQUALTO factor_exprlog
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    EQUALTO         shift and go to state 101
    NOTEQUALTO      shift and go to state 102
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 30

    (131) expNeg -> NEGATION . expOpLog
    (132) expNeg -> NEGATION . factor_exprlog
    (133) expNeg -> NEGATION . boolean
    (134) expNeg -> NEGATION . LPAREN expOpLog RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 106
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expOpLog                       shift and go to state 103
    factor_exprlog                 shift and go to state 104
    boolean                        shift and go to state 105
    expCond                        shift and go to state 107
    expression                     shift and go to state 108
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 31

    (35) exp_set -> declare_any . EQUAL NEW SET LPAREN RPAREN
    (53) var_null -> declare_any . EQUAL NULL
    (54) var_undefined -> declare_any . EQUAL UNDEFINED
    (67) declare_generic -> declare_any . EQUAL assign_value
    (68) declare_generic -> declare_any .
    (60) declare_boolean -> declare_any . TWOPOINTS VARBOOLEAN
    (57) declare_number -> declare_any . TWOPOINTS VARNUMBER
    (63) declare_string -> declare_any . TWOPOINTS VARSTRING
    (66) declare_var_enum -> declare_any . TWOPOINTS object_name
    (52) declare_generic_array -> declare_any . EQUAL list_types
    (43) declare_array_number -> declare_any . TWOPOINTS ARRAY LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any . TWOPOINTS ARRAY LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any . TWOPOINTS ARRAY LESS VARSTRING GREATER

    EQUAL           shift and go to state 113
    POINTCOMMA      reduce using rule 68 (declare_generic -> declare_any .)
    $end            reduce using rule 68 (declare_generic -> declare_any .)
    TWOPOINTS       shift and go to state 114


state 32

    (33) funcionif -> IF . LPAREN formIf RPAREN LKEY

    LPAREN          shift and go to state 115


state 33

    (127) term -> term1 . INCREMENT
    (129) term -> term1 . DECREMENT

    INCREMENT       shift and go to state 116
    DECREMENT       shift and go to state 117


state 34

    (128) term -> INCREMENT . term1
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    term1                          shift and go to state 118
    group                          shift and go to state 57
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 35

    (130) term -> DECREMENT . term1
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    term1                          shift and go to state 124
    group                          shift and go to state 57
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 36

    (153) term -> number .
    (149) group -> number .

    PRODUCT         reduce using rule 153 (term -> number .)
    DIVIDE          reduce using rule 153 (term -> number .)
    PLUS            reduce using rule 153 (term -> number .)
    MINUS           reduce using rule 153 (term -> number .)
    EQUALTO         reduce using rule 153 (term -> number .)
    NOTEQUALTO      reduce using rule 153 (term -> number .)
    GREATER         reduce using rule 153 (term -> number .)
    LESS            reduce using rule 153 (term -> number .)
    GREATEREQUAL    reduce using rule 153 (term -> number .)
    LESSEQUAL       reduce using rule 153 (term -> number .)
    AND             reduce using rule 153 (term -> number .)
    OR              reduce using rule 153 (term -> number .)
    POINTCOMMA      reduce using rule 153 (term -> number .)
    $end            reduce using rule 153 (term -> number .)
    RPAREN          reduce using rule 153 (term -> number .)
    RBRACKET        reduce using rule 153 (term -> number .)
    COMMA           reduce using rule 153 (term -> number .)
    RKEY            reduce using rule 153 (term -> number .)
    INCREMENT       reduce using rule 149 (group -> number .)
    DECREMENT       reduce using rule 149 (group -> number .)


state 37

    (154) term -> factor_expr .

    PRODUCT         reduce using rule 154 (term -> factor_expr .)
    DIVIDE          reduce using rule 154 (term -> factor_expr .)
    PLUS            reduce using rule 154 (term -> factor_expr .)
    MINUS           reduce using rule 154 (term -> factor_expr .)
    EQUALTO         reduce using rule 154 (term -> factor_expr .)
    NOTEQUALTO      reduce using rule 154 (term -> factor_expr .)
    GREATER         reduce using rule 154 (term -> factor_expr .)
    LESS            reduce using rule 154 (term -> factor_expr .)
    GREATEREQUAL    reduce using rule 154 (term -> factor_expr .)
    LESSEQUAL       reduce using rule 154 (term -> factor_expr .)
    AND             reduce using rule 154 (term -> factor_expr .)
    OR              reduce using rule 154 (term -> factor_expr .)
    POINTCOMMA      reduce using rule 154 (term -> factor_expr .)
    $end            reduce using rule 154 (term -> factor_expr .)
    RPAREN          reduce using rule 154 (term -> factor_expr .)
    RBRACKET        reduce using rule 154 (term -> factor_expr .)
    COMMA           reduce using rule 154 (term -> factor_expr .)
    RKEY            reduce using rule 154 (term -> factor_expr .)


state 38

    (155) term -> other_value .

    PRODUCT         reduce using rule 155 (term -> other_value .)
    DIVIDE          reduce using rule 155 (term -> other_value .)
    PLUS            reduce using rule 155 (term -> other_value .)
    MINUS           reduce using rule 155 (term -> other_value .)
    EQUALTO         reduce using rule 155 (term -> other_value .)
    NOTEQUALTO      reduce using rule 155 (term -> other_value .)
    GREATER         reduce using rule 155 (term -> other_value .)
    LESS            reduce using rule 155 (term -> other_value .)
    GREATEREQUAL    reduce using rule 155 (term -> other_value .)
    LESSEQUAL       reduce using rule 155 (term -> other_value .)
    AND             reduce using rule 155 (term -> other_value .)
    OR              reduce using rule 155 (term -> other_value .)
    POINTCOMMA      reduce using rule 155 (term -> other_value .)
    $end            reduce using rule 155 (term -> other_value .)
    RPAREN          reduce using rule 155 (term -> other_value .)
    RBRACKET        reduce using rule 155 (term -> other_value .)
    COMMA           reduce using rule 155 (term -> other_value .)
    RKEY            reduce using rule 155 (term -> other_value .)


state 39

    (117) termS -> string . PLUS chain

    PLUS            shift and go to state 125


state 40

    (58) var_boolean -> declare_boolean . EQUAL boolean_value
    (59) var_boolean -> declare_boolean .
    (46) declare_array_boolean -> declare_boolean . LBRACKET RBRACKET

    EQUAL           shift and go to state 126
    POINTCOMMA      reduce using rule 59 (var_boolean -> declare_boolean .)
    $end            reduce using rule 59 (var_boolean -> declare_boolean .)
    LBRACKET        shift and go to state 127


state 41

    (55) var_number -> declare_number . EQUAL number_value
    (56) var_number -> declare_number .
    (42) declare_array_number -> declare_number . LBRACKET RBRACKET

    EQUAL           shift and go to state 128
    POINTCOMMA      reduce using rule 56 (var_number -> declare_number .)
    $end            reduce using rule 56 (var_number -> declare_number .)
    LBRACKET        shift and go to state 129


state 42

    (61) var_string -> declare_string . EQUAL string_value
    (62) var_string -> declare_string .
    (50) declare_array_string -> declare_string . LBRACKET RBRACKET

    EQUAL           shift and go to state 130
    POINTCOMMA      reduce using rule 62 (var_string -> declare_string .)
    $end            reduce using rule 62 (var_string -> declare_string .)
    LBRACKET        shift and go to state 131


state 43

    (64) var_enum -> declare_var_enum . EQUAL enum_value
    (65) var_enum -> declare_var_enum .

    EQUAL           shift and go to state 132
    POINTCOMMA      reduce using rule 65 (var_enum -> declare_var_enum .)
    $end            reduce using rule 65 (var_enum -> declare_var_enum .)


state 44

    (159) other_value -> enum_value .

    PRODUCT         reduce using rule 159 (other_value -> enum_value .)
    DIVIDE          reduce using rule 159 (other_value -> enum_value .)
    PLUS            reduce using rule 159 (other_value -> enum_value .)
    MINUS           reduce using rule 159 (other_value -> enum_value .)
    EQUALTO         reduce using rule 159 (other_value -> enum_value .)
    NOTEQUALTO      reduce using rule 159 (other_value -> enum_value .)
    GREATER         reduce using rule 159 (other_value -> enum_value .)
    LESS            reduce using rule 159 (other_value -> enum_value .)
    GREATEREQUAL    reduce using rule 159 (other_value -> enum_value .)
    LESSEQUAL       reduce using rule 159 (other_value -> enum_value .)
    AND             reduce using rule 159 (other_value -> enum_value .)
    OR              reduce using rule 159 (other_value -> enum_value .)
    POINTCOMMA      reduce using rule 159 (other_value -> enum_value .)
    $end            reduce using rule 159 (other_value -> enum_value .)
    RPAREN          reduce using rule 159 (other_value -> enum_value .)
    RBRACKET        reduce using rule 159 (other_value -> enum_value .)
    COMMA           reduce using rule 159 (other_value -> enum_value .)
    RKEY            reduce using rule 159 (other_value -> enum_value .)


state 45

    (36) declare_array -> declare_array_main_number .

    POINTCOMMA      reduce using rule 36 (declare_array -> declare_array_main_number .)
    $end            reduce using rule 36 (declare_array -> declare_array_main_number .)


state 46

    (37) declare_array -> declare_array_main_boolean .

    POINTCOMMA      reduce using rule 37 (declare_array -> declare_array_main_boolean .)
    $end            reduce using rule 37 (declare_array -> declare_array_main_boolean .)


state 47

    (38) declare_array -> declare_array_main_string .

    POINTCOMMA      reduce using rule 38 (declare_array -> declare_array_main_string .)
    $end            reduce using rule 38 (declare_array -> declare_array_main_string .)


state 48

    (39) declare_array -> declare_generic_array .

    POINTCOMMA      reduce using rule 39 (declare_array -> declare_generic_array .)
    $end            reduce using rule 39 (declare_array -> declare_generic_array .)


state 49

    (23) declare_enum -> ENUM . OBJECTNAME LKEY enums RKEY

    OBJECTNAME      shift and go to state 133


state 50

    (185) object_name -> OBJECTNAME .

    POINT           reduce using rule 185 (object_name -> OBJECTNAME .)
    EQUAL           reduce using rule 185 (object_name -> OBJECTNAME .)
    POINTCOMMA      reduce using rule 185 (object_name -> OBJECTNAME .)
    $end            reduce using rule 185 (object_name -> OBJECTNAME .)
    PRODUCT         reduce using rule 185 (object_name -> OBJECTNAME .)
    DIVIDE          reduce using rule 185 (object_name -> OBJECTNAME .)
    PLUS            reduce using rule 185 (object_name -> OBJECTNAME .)
    MINUS           reduce using rule 185 (object_name -> OBJECTNAME .)
    EQUALTO         reduce using rule 185 (object_name -> OBJECTNAME .)
    NOTEQUALTO      reduce using rule 185 (object_name -> OBJECTNAME .)
    GREATER         reduce using rule 185 (object_name -> OBJECTNAME .)
    LESS            reduce using rule 185 (object_name -> OBJECTNAME .)
    GREATEREQUAL    reduce using rule 185 (object_name -> OBJECTNAME .)
    LESSEQUAL       reduce using rule 185 (object_name -> OBJECTNAME .)
    AND             reduce using rule 185 (object_name -> OBJECTNAME .)
    OR              reduce using rule 185 (object_name -> OBJECTNAME .)
    RPAREN          reduce using rule 185 (object_name -> OBJECTNAME .)
    RBRACKET        reduce using rule 185 (object_name -> OBJECTNAME .)
    COMMA           reduce using rule 185 (object_name -> OBJECTNAME .)
    RKEY            reduce using rule 185 (object_name -> OBJECTNAME .)


state 51

    (73) assign_variable -> variable . EQUAL assign_value
    (74) assign_variable -> variable . EQUAL list_types
    (157) other_value -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value
    (150) group -> variable .

    EQUAL           shift and go to state 134
    PRODUCT         reduce using rule 157 (other_value -> variable .)
    DIVIDE          reduce using rule 157 (other_value -> variable .)
    PLUS            reduce using rule 157 (other_value -> variable .)
    MINUS           reduce using rule 157 (other_value -> variable .)
    EQUALTO         reduce using rule 157 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 157 (other_value -> variable .)
    GREATER         reduce using rule 157 (other_value -> variable .)
    LESS            reduce using rule 157 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 157 (other_value -> variable .)
    LESSEQUAL       reduce using rule 157 (other_value -> variable .)
    AND             reduce using rule 157 (other_value -> variable .)
    OR              reduce using rule 157 (other_value -> variable .)
    POINTCOMMA      reduce using rule 157 (other_value -> variable .)
    $end            reduce using rule 157 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    INCREMENT       reduce using rule 150 (group -> variable .)
    DECREMENT       reduce using rule 150 (group -> variable .)


state 52

    (75) assign_array -> array_value . EQUAL general_value
    (158) other_value -> array_value .
    (151) group -> array_value .

    EQUAL           shift and go to state 137
    PRODUCT         reduce using rule 158 (other_value -> array_value .)
    DIVIDE          reduce using rule 158 (other_value -> array_value .)
    PLUS            reduce using rule 158 (other_value -> array_value .)
    MINUS           reduce using rule 158 (other_value -> array_value .)
    EQUALTO         reduce using rule 158 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 158 (other_value -> array_value .)
    GREATER         reduce using rule 158 (other_value -> array_value .)
    LESS            reduce using rule 158 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 158 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 158 (other_value -> array_value .)
    AND             reduce using rule 158 (other_value -> array_value .)
    OR              reduce using rule 158 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 158 (other_value -> array_value .)
    $end            reduce using rule 158 (other_value -> array_value .)
    INCREMENT       reduce using rule 151 (group -> array_value .)
    DECREMENT       reduce using rule 151 (group -> array_value .)


state 53

    (76) assign_object_value -> object_value_form1 . EQUAL general_value
    (77) assign_object_value -> object_value_form1 . EQUAL list_types
    (163) object_value -> object_value_form1 .

    EQUAL           shift and go to state 138
    PRODUCT         reduce using rule 163 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 163 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 163 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 163 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 163 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 163 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 163 (object_value -> object_value_form1 .)
    LESS            reduce using rule 163 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 163 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 163 (object_value -> object_value_form1 .)
    AND             reduce using rule 163 (object_value -> object_value_form1 .)
    OR              reduce using rule 163 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 163 (object_value -> object_value_form1 .)
    $end            reduce using rule 163 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 163 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 163 (object_value -> object_value_form1 .)


state 54

    (78) assign_object_value -> object_value_form2 . EQUAL general_value
    (164) object_value -> object_value_form2 .

    EQUAL           shift and go to state 139
    PRODUCT         reduce using rule 164 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 164 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 164 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 164 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 164 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 164 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 164 (object_value -> object_value_form2 .)
    LESS            reduce using rule 164 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 164 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 164 (object_value -> object_value_form2 .)
    AND             reduce using rule 164 (object_value -> object_value_form2 .)
    OR              reduce using rule 164 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 164 (object_value -> object_value_form2 .)
    $end            reduce using rule 164 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 164 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 164 (object_value -> object_value_form2 .)


state 55

    (69) declare_any -> prefix . VARIABLE

    VARIABLE        shift and go to state 140


state 56

    (184) variable -> VARIABLE .

    EQUAL           reduce using rule 184 (variable -> VARIABLE .)
    LBRACKET        reduce using rule 184 (variable -> VARIABLE .)
    POINT           reduce using rule 184 (variable -> VARIABLE .)
    PRODUCT         reduce using rule 184 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 184 (variable -> VARIABLE .)
    PLUS            reduce using rule 184 (variable -> VARIABLE .)
    MINUS           reduce using rule 184 (variable -> VARIABLE .)
    EQUALTO         reduce using rule 184 (variable -> VARIABLE .)
    NOTEQUALTO      reduce using rule 184 (variable -> VARIABLE .)
    GREATER         reduce using rule 184 (variable -> VARIABLE .)
    LESS            reduce using rule 184 (variable -> VARIABLE .)
    GREATEREQUAL    reduce using rule 184 (variable -> VARIABLE .)
    LESSEQUAL       reduce using rule 184 (variable -> VARIABLE .)
    AND             reduce using rule 184 (variable -> VARIABLE .)
    OR              reduce using rule 184 (variable -> VARIABLE .)
    POINTCOMMA      reduce using rule 184 (variable -> VARIABLE .)
    $end            reduce using rule 184 (variable -> VARIABLE .)
    INCREMENT       reduce using rule 184 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 184 (variable -> VARIABLE .)
    RPAREN          reduce using rule 184 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 184 (variable -> VARIABLE .)
    COMMA           reduce using rule 184 (variable -> VARIABLE .)
    RKEY            reduce using rule 184 (variable -> VARIABLE .)
    TWOPOINTS       reduce using rule 184 (variable -> VARIABLE .)


state 57

    (148) term1 -> group .

    INCREMENT       reduce using rule 148 (term1 -> group .)
    DECREMENT       reduce using rule 148 (term1 -> group .)
    PRODUCT         reduce using rule 148 (term1 -> group .)
    DIVIDE          reduce using rule 148 (term1 -> group .)
    PLUS            reduce using rule 148 (term1 -> group .)
    MINUS           reduce using rule 148 (term1 -> group .)
    EQUALTO         reduce using rule 148 (term1 -> group .)
    NOTEQUALTO      reduce using rule 148 (term1 -> group .)
    GREATER         reduce using rule 148 (term1 -> group .)
    LESS            reduce using rule 148 (term1 -> group .)
    GREATEREQUAL    reduce using rule 148 (term1 -> group .)
    LESSEQUAL       reduce using rule 148 (term1 -> group .)
    AND             reduce using rule 148 (term1 -> group .)
    OR              reduce using rule 148 (term1 -> group .)
    POINTCOMMA      reduce using rule 148 (term1 -> group .)
    $end            reduce using rule 148 (term1 -> group .)
    RPAREN          reduce using rule 148 (term1 -> group .)
    RBRACKET        reduce using rule 148 (term1 -> group .)
    COMMA           reduce using rule 148 (term1 -> group .)
    RKEY            reduce using rule 148 (term1 -> group .)


state 58

    (177) number -> NUMBER .

    PRODUCT         reduce using rule 177 (number -> NUMBER .)
    DIVIDE          reduce using rule 177 (number -> NUMBER .)
    PLUS            reduce using rule 177 (number -> NUMBER .)
    MINUS           reduce using rule 177 (number -> NUMBER .)
    EQUALTO         reduce using rule 177 (number -> NUMBER .)
    NOTEQUALTO      reduce using rule 177 (number -> NUMBER .)
    GREATER         reduce using rule 177 (number -> NUMBER .)
    LESS            reduce using rule 177 (number -> NUMBER .)
    GREATEREQUAL    reduce using rule 177 (number -> NUMBER .)
    LESSEQUAL       reduce using rule 177 (number -> NUMBER .)
    AND             reduce using rule 177 (number -> NUMBER .)
    OR              reduce using rule 177 (number -> NUMBER .)
    POINTCOMMA      reduce using rule 177 (number -> NUMBER .)
    $end            reduce using rule 177 (number -> NUMBER .)
    INCREMENT       reduce using rule 177 (number -> NUMBER .)
    DECREMENT       reduce using rule 177 (number -> NUMBER .)
    RPAREN          reduce using rule 177 (number -> NUMBER .)
    RBRACKET        reduce using rule 177 (number -> NUMBER .)
    COMMA           reduce using rule 177 (number -> NUMBER .)
    RKEY            reduce using rule 177 (number -> NUMBER .)


state 59

    (178) number -> FLOAT .

    PRODUCT         reduce using rule 178 (number -> FLOAT .)
    DIVIDE          reduce using rule 178 (number -> FLOAT .)
    PLUS            reduce using rule 178 (number -> FLOAT .)
    MINUS           reduce using rule 178 (number -> FLOAT .)
    EQUALTO         reduce using rule 178 (number -> FLOAT .)
    NOTEQUALTO      reduce using rule 178 (number -> FLOAT .)
    GREATER         reduce using rule 178 (number -> FLOAT .)
    LESS            reduce using rule 178 (number -> FLOAT .)
    GREATEREQUAL    reduce using rule 178 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 178 (number -> FLOAT .)
    AND             reduce using rule 178 (number -> FLOAT .)
    OR              reduce using rule 178 (number -> FLOAT .)
    POINTCOMMA      reduce using rule 178 (number -> FLOAT .)
    $end            reduce using rule 178 (number -> FLOAT .)
    INCREMENT       reduce using rule 178 (number -> FLOAT .)
    DECREMENT       reduce using rule 178 (number -> FLOAT .)
    RPAREN          reduce using rule 178 (number -> FLOAT .)
    RBRACKET        reduce using rule 178 (number -> FLOAT .)
    COMMA           reduce using rule 178 (number -> FLOAT .)
    RKEY            reduce using rule 178 (number -> FLOAT .)


state 60

    (160) other_value -> object_value .
    (152) group -> object_value .

    PRODUCT         reduce using rule 160 (other_value -> object_value .)
    DIVIDE          reduce using rule 160 (other_value -> object_value .)
    PLUS            reduce using rule 160 (other_value -> object_value .)
    MINUS           reduce using rule 160 (other_value -> object_value .)
    EQUALTO         reduce using rule 160 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 160 (other_value -> object_value .)
    GREATER         reduce using rule 160 (other_value -> object_value .)
    LESS            reduce using rule 160 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 160 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 160 (other_value -> object_value .)
    AND             reduce using rule 160 (other_value -> object_value .)
    OR              reduce using rule 160 (other_value -> object_value .)
    POINTCOMMA      reduce using rule 160 (other_value -> object_value .)
    $end            reduce using rule 160 (other_value -> object_value .)
    RPAREN          reduce using rule 160 (other_value -> object_value .)
    RBRACKET        reduce using rule 160 (other_value -> object_value .)
    COMMA           reduce using rule 160 (other_value -> object_value .)
    RKEY            reduce using rule 160 (other_value -> object_value .)
    INCREMENT       reduce using rule 152 (group -> object_value .)
    DECREMENT       reduce using rule 152 (group -> object_value .)


state 61

    (179) string -> NORMSTRING1 .

    PLUS            reduce using rule 179 (string -> NORMSTRING1 .)
    POINTCOMMA      reduce using rule 179 (string -> NORMSTRING1 .)
    $end            reduce using rule 179 (string -> NORMSTRING1 .)
    RBRACKET        reduce using rule 179 (string -> NORMSTRING1 .)
    COMMA           reduce using rule 179 (string -> NORMSTRING1 .)
    RKEY            reduce using rule 179 (string -> NORMSTRING1 .)


state 62

    (180) string -> NORMSTRING2 .

    PLUS            reduce using rule 180 (string -> NORMSTRING2 .)
    POINTCOMMA      reduce using rule 180 (string -> NORMSTRING2 .)
    $end            reduce using rule 180 (string -> NORMSTRING2 .)
    RBRACKET        reduce using rule 180 (string -> NORMSTRING2 .)
    COMMA           reduce using rule 180 (string -> NORMSTRING2 .)
    RKEY            reduce using rule 180 (string -> NORMSTRING2 .)


state 63

    (181) string -> MULTISTRING .

    PLUS            reduce using rule 181 (string -> MULTISTRING .)
    POINTCOMMA      reduce using rule 181 (string -> MULTISTRING .)
    $end            reduce using rule 181 (string -> MULTISTRING .)
    RBRACKET        reduce using rule 181 (string -> MULTISTRING .)
    COMMA           reduce using rule 181 (string -> MULTISTRING .)
    RKEY            reduce using rule 181 (string -> MULTISTRING .)


state 64

    (168) enum_value -> object_name . POINT object_name

    POINT           shift and go to state 141


state 65

    (40) declare_array_main_number -> declare_array_number . EQUAL list_number
    (41) declare_array_main_number -> declare_array_number .

    EQUAL           shift and go to state 142
    POINTCOMMA      reduce using rule 41 (declare_array_main_number -> declare_array_number .)
    $end            reduce using rule 41 (declare_array_main_number -> declare_array_number .)


state 66

    (44) declare_array_main_boolean -> declare_array_boolean . EQUAL list_boolean
    (45) declare_array_main_boolean -> declare_array_boolean .

    EQUAL           shift and go to state 143
    POINTCOMMA      reduce using rule 45 (declare_array_main_boolean -> declare_array_boolean .)
    $end            reduce using rule 45 (declare_array_main_boolean -> declare_array_boolean .)


state 67

    (48) declare_array_main_string -> declare_array_string . EQUAL list_string
    (49) declare_array_main_string -> declare_array_string .

    EQUAL           shift and go to state 144
    POINTCOMMA      reduce using rule 49 (declare_array_main_string -> declare_array_string .)
    $end            reduce using rule 49 (declare_array_main_string -> declare_array_string .)


state 68

    (169) prefix -> LET .

    VARIABLE        reduce using rule 169 (prefix -> LET .)


state 69

    (170) prefix -> VAR .

    VARIABLE        reduce using rule 170 (prefix -> VAR .)


state 70

    (171) prefix -> STATIC .

    VARIABLE        reduce using rule 171 (prefix -> STATIC .)


state 71

    (172) prefix -> CONST .

    VARIABLE        reduce using rule 172 (prefix -> CONST .)


state 72

    (2) statement -> statement_value POINTCOMMA .

    $end            reduce using rule 2 (statement -> statement_value POINTCOMMA .)


state 73

    (122) expression -> expression PLUS . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 145
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 74

    (123) expression -> expression MINUS . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 147
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 75

    (145) expCond -> expression operador . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 148
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 76

    (143) expOpLog -> expression oplogico . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 149
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 77

    (137) expEq -> expression EQUALTO . expression
    (190) operador -> EQUALTO .
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

  ! INCREMENT       [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! DECREMENT       [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! LPAREN          [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! NUMBER          [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! FLOAT           [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! VARIABLE        [ reduce using rule 190 (operador -> EQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 190 (operador -> EQUALTO .) ]

    expression                     shift and go to state 150
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 78

    (140) expNotEq -> expression NOTEQUALTO . expression
    (191) operador -> NOTEQUALTO .
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for OBJECTNAME resolved as shift
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

  ! INCREMENT       [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! DECREMENT       [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! LPAREN          [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! NUMBER          [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! FLOAT           [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! VARIABLE        [ reduce using rule 191 (operador -> NOTEQUALTO .) ]
  ! OBJECTNAME      [ reduce using rule 191 (operador -> NOTEQUALTO .) ]

    expression                     shift and go to state 151
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 79

    (186) operador -> GREATER .

    INCREMENT       reduce using rule 186 (operador -> GREATER .)
    DECREMENT       reduce using rule 186 (operador -> GREATER .)
    LPAREN          reduce using rule 186 (operador -> GREATER .)
    NUMBER          reduce using rule 186 (operador -> GREATER .)
    FLOAT           reduce using rule 186 (operador -> GREATER .)
    VARIABLE        reduce using rule 186 (operador -> GREATER .)
    OBJECTNAME      reduce using rule 186 (operador -> GREATER .)


state 80

    (187) operador -> LESS .

    INCREMENT       reduce using rule 187 (operador -> LESS .)
    DECREMENT       reduce using rule 187 (operador -> LESS .)
    LPAREN          reduce using rule 187 (operador -> LESS .)
    NUMBER          reduce using rule 187 (operador -> LESS .)
    FLOAT           reduce using rule 187 (operador -> LESS .)
    VARIABLE        reduce using rule 187 (operador -> LESS .)
    OBJECTNAME      reduce using rule 187 (operador -> LESS .)


state 81

    (188) operador -> GREATEREQUAL .

    INCREMENT       reduce using rule 188 (operador -> GREATEREQUAL .)
    DECREMENT       reduce using rule 188 (operador -> GREATEREQUAL .)
    LPAREN          reduce using rule 188 (operador -> GREATEREQUAL .)
    NUMBER          reduce using rule 188 (operador -> GREATEREQUAL .)
    FLOAT           reduce using rule 188 (operador -> GREATEREQUAL .)
    VARIABLE        reduce using rule 188 (operador -> GREATEREQUAL .)
    OBJECTNAME      reduce using rule 188 (operador -> GREATEREQUAL .)


state 82

    (189) operador -> LESSEQUAL .

    INCREMENT       reduce using rule 189 (operador -> LESSEQUAL .)
    DECREMENT       reduce using rule 189 (operador -> LESSEQUAL .)
    LPAREN          reduce using rule 189 (operador -> LESSEQUAL .)
    NUMBER          reduce using rule 189 (operador -> LESSEQUAL .)
    FLOAT           reduce using rule 189 (operador -> LESSEQUAL .)
    VARIABLE        reduce using rule 189 (operador -> LESSEQUAL .)
    OBJECTNAME      reduce using rule 189 (operador -> LESSEQUAL .)


state 83

    (192) oplogico -> AND .

    INCREMENT       reduce using rule 192 (oplogico -> AND .)
    DECREMENT       reduce using rule 192 (oplogico -> AND .)
    LPAREN          reduce using rule 192 (oplogico -> AND .)
    NUMBER          reduce using rule 192 (oplogico -> AND .)
    FLOAT           reduce using rule 192 (oplogico -> AND .)
    VARIABLE        reduce using rule 192 (oplogico -> AND .)
    OBJECTNAME      reduce using rule 192 (oplogico -> AND .)


state 84

    (193) oplogico -> OR .

    INCREMENT       reduce using rule 193 (oplogico -> OR .)
    DECREMENT       reduce using rule 193 (oplogico -> OR .)
    LPAREN          reduce using rule 193 (oplogico -> OR .)
    NUMBER          reduce using rule 193 (oplogico -> OR .)
    FLOAT           reduce using rule 193 (oplogico -> OR .)
    VARIABLE        reduce using rule 193 (oplogico -> OR .)
    OBJECTNAME      reduce using rule 193 (oplogico -> OR .)


state 85

    (141) expOpLog -> expCond oplogico . expCond
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 152
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 86

    (135) expEq -> expCond EQUALTO . expCond
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 154
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 87

    (138) expNotEq -> expCond NOTEQUALTO . expCond
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 155
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 88

    (125) term -> term PRODUCT . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 156
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 89

    (126) term -> term DIVIDE . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    term                           shift and go to state 157
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 90

    (146) expCond -> LPAREN . expression operador expression RPAREN
    (147) term1 -> LPAREN . group RPAREN
    (156) factor_expr -> LPAREN . expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (168) enum_value -> . object_name POINT object_name
    (185) object_name -> . OBJECTNAME

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    LPAREN          shift and go to state 146
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 158
    group                          shift and go to state 93
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 91

    (146) expCond -> LPAREN expression . operador expression RPAREN
    (156) factor_expr -> LPAREN expression . RPAREN
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (145) expCond -> expression . operador expression
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 159

state 92

    (144) factor_exprlog -> LPAREN expCond . RPAREN

    RPAREN          shift and go to state 163


state 93

    (147) term1 -> LPAREN group . RPAREN
    (148) term1 -> group .

    RPAREN          shift and go to state 164
    INCREMENT       reduce using rule 148 (term1 -> group .)
    DECREMENT       reduce using rule 148 (term1 -> group .)


state 94

    (149) group -> number .
    (153) term -> number .

  ! reduce/reduce conflict for RPAREN resolved using rule 149 (group -> number .)
    RPAREN          reduce using rule 149 (group -> number .)
    INCREMENT       reduce using rule 149 (group -> number .)
    DECREMENT       reduce using rule 149 (group -> number .)
    PRODUCT         reduce using rule 153 (term -> number .)
    DIVIDE          reduce using rule 153 (term -> number .)
    PLUS            reduce using rule 153 (term -> number .)
    MINUS           reduce using rule 153 (term -> number .)
    GREATER         reduce using rule 153 (term -> number .)
    LESS            reduce using rule 153 (term -> number .)
    GREATEREQUAL    reduce using rule 153 (term -> number .)
    LESSEQUAL       reduce using rule 153 (term -> number .)
    EQUALTO         reduce using rule 153 (term -> number .)
    NOTEQUALTO      reduce using rule 153 (term -> number .)
    AND             reduce using rule 153 (term -> number .)
    OR              reduce using rule 153 (term -> number .)

  ! RPAREN          [ reduce using rule 153 (term -> number .) ]


state 95

    (150) group -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (157) other_value -> variable .
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value

  ! reduce/reduce conflict for RPAREN resolved using rule 150 (group -> variable .)
    RPAREN          reduce using rule 150 (group -> variable .)
    INCREMENT       reduce using rule 150 (group -> variable .)
    DECREMENT       reduce using rule 150 (group -> variable .)
    LBRACKET        shift and go to state 135
    PRODUCT         reduce using rule 157 (other_value -> variable .)
    DIVIDE          reduce using rule 157 (other_value -> variable .)
    PLUS            reduce using rule 157 (other_value -> variable .)
    MINUS           reduce using rule 157 (other_value -> variable .)
    GREATER         reduce using rule 157 (other_value -> variable .)
    LESS            reduce using rule 157 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 157 (other_value -> variable .)
    LESSEQUAL       reduce using rule 157 (other_value -> variable .)
    EQUALTO         reduce using rule 157 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 157 (other_value -> variable .)
    AND             reduce using rule 157 (other_value -> variable .)
    OR              reduce using rule 157 (other_value -> variable .)
    POINT           shift and go to state 136

  ! RPAREN          [ reduce using rule 157 (other_value -> variable .) ]


state 96

    (151) group -> array_value .
    (158) other_value -> array_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 151 (group -> array_value .)
    RPAREN          reduce using rule 151 (group -> array_value .)
    INCREMENT       reduce using rule 151 (group -> array_value .)
    DECREMENT       reduce using rule 151 (group -> array_value .)
    PRODUCT         reduce using rule 158 (other_value -> array_value .)
    DIVIDE          reduce using rule 158 (other_value -> array_value .)
    PLUS            reduce using rule 158 (other_value -> array_value .)
    MINUS           reduce using rule 158 (other_value -> array_value .)
    GREATER         reduce using rule 158 (other_value -> array_value .)
    LESS            reduce using rule 158 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 158 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 158 (other_value -> array_value .)
    EQUALTO         reduce using rule 158 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 158 (other_value -> array_value .)
    AND             reduce using rule 158 (other_value -> array_value .)
    OR              reduce using rule 158 (other_value -> array_value .)

  ! RPAREN          [ reduce using rule 158 (other_value -> array_value .) ]


state 97

    (152) group -> object_value .
    (160) other_value -> object_value .

  ! reduce/reduce conflict for RPAREN resolved using rule 152 (group -> object_value .)
    RPAREN          reduce using rule 152 (group -> object_value .)
    INCREMENT       reduce using rule 152 (group -> object_value .)
    DECREMENT       reduce using rule 152 (group -> object_value .)
    PRODUCT         reduce using rule 160 (other_value -> object_value .)
    DIVIDE          reduce using rule 160 (other_value -> object_value .)
    PLUS            reduce using rule 160 (other_value -> object_value .)
    MINUS           reduce using rule 160 (other_value -> object_value .)
    GREATER         reduce using rule 160 (other_value -> object_value .)
    LESS            reduce using rule 160 (other_value -> object_value .)
    GREATEREQUAL    reduce using rule 160 (other_value -> object_value .)
    LESSEQUAL       reduce using rule 160 (other_value -> object_value .)
    EQUALTO         reduce using rule 160 (other_value -> object_value .)
    NOTEQUALTO      reduce using rule 160 (other_value -> object_value .)
    AND             reduce using rule 160 (other_value -> object_value .)
    OR              reduce using rule 160 (other_value -> object_value .)

  ! RPAREN          [ reduce using rule 160 (other_value -> object_value .) ]


state 98

    (163) object_value -> object_value_form1 .

    RPAREN          reduce using rule 163 (object_value -> object_value_form1 .)
    INCREMENT       reduce using rule 163 (object_value -> object_value_form1 .)
    DECREMENT       reduce using rule 163 (object_value -> object_value_form1 .)
    PRODUCT         reduce using rule 163 (object_value -> object_value_form1 .)
    DIVIDE          reduce using rule 163 (object_value -> object_value_form1 .)
    PLUS            reduce using rule 163 (object_value -> object_value_form1 .)
    MINUS           reduce using rule 163 (object_value -> object_value_form1 .)
    GREATER         reduce using rule 163 (object_value -> object_value_form1 .)
    LESS            reduce using rule 163 (object_value -> object_value_form1 .)
    GREATEREQUAL    reduce using rule 163 (object_value -> object_value_form1 .)
    LESSEQUAL       reduce using rule 163 (object_value -> object_value_form1 .)
    EQUALTO         reduce using rule 163 (object_value -> object_value_form1 .)
    NOTEQUALTO      reduce using rule 163 (object_value -> object_value_form1 .)
    AND             reduce using rule 163 (object_value -> object_value_form1 .)
    OR              reduce using rule 163 (object_value -> object_value_form1 .)
    POINTCOMMA      reduce using rule 163 (object_value -> object_value_form1 .)
    $end            reduce using rule 163 (object_value -> object_value_form1 .)
    RBRACKET        reduce using rule 163 (object_value -> object_value_form1 .)
    COMMA           reduce using rule 163 (object_value -> object_value_form1 .)
    RKEY            reduce using rule 163 (object_value -> object_value_form1 .)


state 99

    (164) object_value -> object_value_form2 .

    RPAREN          reduce using rule 164 (object_value -> object_value_form2 .)
    INCREMENT       reduce using rule 164 (object_value -> object_value_form2 .)
    DECREMENT       reduce using rule 164 (object_value -> object_value_form2 .)
    PRODUCT         reduce using rule 164 (object_value -> object_value_form2 .)
    DIVIDE          reduce using rule 164 (object_value -> object_value_form2 .)
    PLUS            reduce using rule 164 (object_value -> object_value_form2 .)
    MINUS           reduce using rule 164 (object_value -> object_value_form2 .)
    GREATER         reduce using rule 164 (object_value -> object_value_form2 .)
    LESS            reduce using rule 164 (object_value -> object_value_form2 .)
    GREATEREQUAL    reduce using rule 164 (object_value -> object_value_form2 .)
    LESSEQUAL       reduce using rule 164 (object_value -> object_value_form2 .)
    EQUALTO         reduce using rule 164 (object_value -> object_value_form2 .)
    NOTEQUALTO      reduce using rule 164 (object_value -> object_value_form2 .)
    AND             reduce using rule 164 (object_value -> object_value_form2 .)
    OR              reduce using rule 164 (object_value -> object_value_form2 .)
    POINTCOMMA      reduce using rule 164 (object_value -> object_value_form2 .)
    $end            reduce using rule 164 (object_value -> object_value_form2 .)
    RBRACKET        reduce using rule 164 (object_value -> object_value_form2 .)
    COMMA           reduce using rule 164 (object_value -> object_value_form2 .)
    RKEY            reduce using rule 164 (object_value -> object_value_form2 .)


state 100

    (142) expOpLog -> factor_exprlog oplogico . factor_exprlog
    (144) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 165

state 101

    (136) expEq -> factor_exprlog EQUALTO . factor_exprlog
    (144) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 167

state 102

    (139) expNotEq -> factor_exprlog NOTEQUALTO . factor_exprlog
    (144) factor_exprlog -> . LPAREN expCond RPAREN

    LPAREN          shift and go to state 166

    factor_exprlog                 shift and go to state 168

state 103

    (131) expNeg -> NEGATION expOpLog .

    POINTCOMMA      reduce using rule 131 (expNeg -> NEGATION expOpLog .)
    $end            reduce using rule 131 (expNeg -> NEGATION expOpLog .)
    RBRACKET        reduce using rule 131 (expNeg -> NEGATION expOpLog .)
    COMMA           reduce using rule 131 (expNeg -> NEGATION expOpLog .)
    RKEY            reduce using rule 131 (expNeg -> NEGATION expOpLog .)


state 104

    (132) expNeg -> NEGATION factor_exprlog .
    (142) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 132 (expNeg -> NEGATION factor_exprlog .)
    $end            reduce using rule 132 (expNeg -> NEGATION factor_exprlog .)
    RBRACKET        reduce using rule 132 (expNeg -> NEGATION factor_exprlog .)
    COMMA           reduce using rule 132 (expNeg -> NEGATION factor_exprlog .)
    RKEY            reduce using rule 132 (expNeg -> NEGATION factor_exprlog .)
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 105

    (133) expNeg -> NEGATION boolean .

    POINTCOMMA      reduce using rule 133 (expNeg -> NEGATION boolean .)
    $end            reduce using rule 133 (expNeg -> NEGATION boolean .)
    RBRACKET        reduce using rule 133 (expNeg -> NEGATION boolean .)
    COMMA           reduce using rule 133 (expNeg -> NEGATION boolean .)
    RKEY            reduce using rule 133 (expNeg -> NEGATION boolean .)


state 106

    (134) expNeg -> NEGATION LPAREN . expOpLog RPAREN
    (144) factor_exprlog -> LPAREN . expCond RPAREN
    (146) expCond -> LPAREN . expression operador expression RPAREN
    (147) term1 -> LPAREN . group RPAREN
    (156) factor_expr -> LPAREN . expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (168) enum_value -> . object_name POINT object_name
    (185) object_name -> . OBJECTNAME

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expOpLog                       shift and go to state 169
    expCond                        shift and go to state 170
    expression                     shift and go to state 171
    group                          shift and go to state 93
    factor_exprlog                 shift and go to state 172
    term                           shift and go to state 14
    number                         shift and go to state 94
    variable                       shift and go to state 95
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 107

    (141) expOpLog -> expCond . oplogico expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 108

    (143) expOpLog -> expression . oplogico expression
    (145) expCond -> expression . operador expression
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (192) oplogico -> . AND
    (193) oplogico -> . OR
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    AND             shift and go to state 83
    OR              shift and go to state 84
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    oplogico                       shift and go to state 76
    operador                       shift and go to state 75

state 109

    (182) boolean -> TRUE .

    POINTCOMMA      reduce using rule 182 (boolean -> TRUE .)
    $end            reduce using rule 182 (boolean -> TRUE .)
    RBRACKET        reduce using rule 182 (boolean -> TRUE .)
    COMMA           reduce using rule 182 (boolean -> TRUE .)
    RKEY            reduce using rule 182 (boolean -> TRUE .)


state 110

    (183) boolean -> FALSE .

    POINTCOMMA      reduce using rule 183 (boolean -> FALSE .)
    $end            reduce using rule 183 (boolean -> FALSE .)
    RBRACKET        reduce using rule 183 (boolean -> FALSE .)
    COMMA           reduce using rule 183 (boolean -> FALSE .)
    RKEY            reduce using rule 183 (boolean -> FALSE .)


state 111

    (157) other_value -> variable .
    (150) group -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 157 (other_value -> variable .)
    DIVIDE          reduce using rule 157 (other_value -> variable .)
    PLUS            reduce using rule 157 (other_value -> variable .)
    MINUS           reduce using rule 157 (other_value -> variable .)
    AND             reduce using rule 157 (other_value -> variable .)
    OR              reduce using rule 157 (other_value -> variable .)
    GREATER         reduce using rule 157 (other_value -> variable .)
    LESS            reduce using rule 157 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 157 (other_value -> variable .)
    LESSEQUAL       reduce using rule 157 (other_value -> variable .)
    EQUALTO         reduce using rule 157 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 157 (other_value -> variable .)
    POINTCOMMA      reduce using rule 157 (other_value -> variable .)
    $end            reduce using rule 157 (other_value -> variable .)
    RPAREN          reduce using rule 157 (other_value -> variable .)
    RBRACKET        reduce using rule 157 (other_value -> variable .)
    COMMA           reduce using rule 157 (other_value -> variable .)
    RKEY            reduce using rule 157 (other_value -> variable .)
    INCREMENT       reduce using rule 150 (group -> variable .)
    DECREMENT       reduce using rule 150 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 112

    (158) other_value -> array_value .
    (151) group -> array_value .

    PRODUCT         reduce using rule 158 (other_value -> array_value .)
    DIVIDE          reduce using rule 158 (other_value -> array_value .)
    PLUS            reduce using rule 158 (other_value -> array_value .)
    MINUS           reduce using rule 158 (other_value -> array_value .)
    AND             reduce using rule 158 (other_value -> array_value .)
    OR              reduce using rule 158 (other_value -> array_value .)
    GREATER         reduce using rule 158 (other_value -> array_value .)
    LESS            reduce using rule 158 (other_value -> array_value .)
    GREATEREQUAL    reduce using rule 158 (other_value -> array_value .)
    LESSEQUAL       reduce using rule 158 (other_value -> array_value .)
    EQUALTO         reduce using rule 158 (other_value -> array_value .)
    NOTEQUALTO      reduce using rule 158 (other_value -> array_value .)
    POINTCOMMA      reduce using rule 158 (other_value -> array_value .)
    $end            reduce using rule 158 (other_value -> array_value .)
    RPAREN          reduce using rule 158 (other_value -> array_value .)
    RBRACKET        reduce using rule 158 (other_value -> array_value .)
    COMMA           reduce using rule 158 (other_value -> array_value .)
    RKEY            reduce using rule 158 (other_value -> array_value .)
    INCREMENT       reduce using rule 151 (group -> array_value .)
    DECREMENT       reduce using rule 151 (group -> array_value .)


state 113

    (35) exp_set -> declare_any EQUAL . NEW SET LPAREN RPAREN
    (53) var_null -> declare_any EQUAL . NULL
    (54) var_undefined -> declare_any EQUAL . UNDEFINED
    (67) declare_generic -> declare_any EQUAL . assign_value
    (52) declare_generic_array -> declare_any EQUAL . list_types
    (79) assign_value -> . general_value
    (80) assign_value -> . object_definition
    (94) list_types -> . list_number
    (95) list_types -> . list_boolean
    (96) list_types -> . list_string
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (81) object_definition -> . LKEY attributes RKEY
    (97) list_number -> . LBRACKET numbers RBRACKET
    (100) list_boolean -> . LBRACKET booleans RBRACKET
    (103) list_string -> . LBRACKET strings RBRACKET
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NEW             shift and go to state 173
    NULL            shift and go to state 174
    UNDEFINED       shift and go to state 175
    LKEY            shift and go to state 191
    LBRACKET        shift and go to state 192
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    assign_value                   shift and go to state 176
    list_types                     shift and go to state 177
    general_value                  shift and go to state 178
    object_definition              shift and go to state 179
    list_number                    shift and go to state 180
    list_boolean                   shift and go to state 181
    list_string                    shift and go to state 182
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 114

    (60) declare_boolean -> declare_any TWOPOINTS . VARBOOLEAN
    (57) declare_number -> declare_any TWOPOINTS . VARNUMBER
    (63) declare_string -> declare_any TWOPOINTS . VARSTRING
    (66) declare_var_enum -> declare_any TWOPOINTS . object_name
    (43) declare_array_number -> declare_any TWOPOINTS . ARRAY LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS . ARRAY LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS . ARRAY LESS VARSTRING GREATER
    (185) object_name -> . OBJECTNAME

    VARBOOLEAN      shift and go to state 193
    VARNUMBER       shift and go to state 194
    VARSTRING       shift and go to state 195
    ARRAY           shift and go to state 197
    OBJECTNAME      shift and go to state 50

    object_name                    shift and go to state 196

state 115

    (33) funcionif -> IF LPAREN . formIf RPAREN LKEY
    (161) formIf -> . expCond
    (162) formIf -> . expOpLog
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 28
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    formIf                         shift and go to state 198
    expCond                        shift and go to state 199
    expOpLog                       shift and go to state 200
    expression                     shift and go to state 201
    factor_exprlog                 shift and go to state 172
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 116

    (127) term -> term1 INCREMENT .

    PRODUCT         reduce using rule 127 (term -> term1 INCREMENT .)
    DIVIDE          reduce using rule 127 (term -> term1 INCREMENT .)
    PLUS            reduce using rule 127 (term -> term1 INCREMENT .)
    MINUS           reduce using rule 127 (term -> term1 INCREMENT .)
    EQUALTO         reduce using rule 127 (term -> term1 INCREMENT .)
    NOTEQUALTO      reduce using rule 127 (term -> term1 INCREMENT .)
    GREATER         reduce using rule 127 (term -> term1 INCREMENT .)
    LESS            reduce using rule 127 (term -> term1 INCREMENT .)
    GREATEREQUAL    reduce using rule 127 (term -> term1 INCREMENT .)
    LESSEQUAL       reduce using rule 127 (term -> term1 INCREMENT .)
    AND             reduce using rule 127 (term -> term1 INCREMENT .)
    OR              reduce using rule 127 (term -> term1 INCREMENT .)
    POINTCOMMA      reduce using rule 127 (term -> term1 INCREMENT .)
    $end            reduce using rule 127 (term -> term1 INCREMENT .)
    RPAREN          reduce using rule 127 (term -> term1 INCREMENT .)
    RBRACKET        reduce using rule 127 (term -> term1 INCREMENT .)
    COMMA           reduce using rule 127 (term -> term1 INCREMENT .)
    RKEY            reduce using rule 127 (term -> term1 INCREMENT .)


state 117

    (129) term -> term1 DECREMENT .

    PRODUCT         reduce using rule 129 (term -> term1 DECREMENT .)
    DIVIDE          reduce using rule 129 (term -> term1 DECREMENT .)
    PLUS            reduce using rule 129 (term -> term1 DECREMENT .)
    MINUS           reduce using rule 129 (term -> term1 DECREMENT .)
    EQUALTO         reduce using rule 129 (term -> term1 DECREMENT .)
    NOTEQUALTO      reduce using rule 129 (term -> term1 DECREMENT .)
    GREATER         reduce using rule 129 (term -> term1 DECREMENT .)
    LESS            reduce using rule 129 (term -> term1 DECREMENT .)
    GREATEREQUAL    reduce using rule 129 (term -> term1 DECREMENT .)
    LESSEQUAL       reduce using rule 129 (term -> term1 DECREMENT .)
    AND             reduce using rule 129 (term -> term1 DECREMENT .)
    OR              reduce using rule 129 (term -> term1 DECREMENT .)
    POINTCOMMA      reduce using rule 129 (term -> term1 DECREMENT .)
    $end            reduce using rule 129 (term -> term1 DECREMENT .)
    RPAREN          reduce using rule 129 (term -> term1 DECREMENT .)
    RBRACKET        reduce using rule 129 (term -> term1 DECREMENT .)
    COMMA           reduce using rule 129 (term -> term1 DECREMENT .)
    RKEY            reduce using rule 129 (term -> term1 DECREMENT .)


state 118

    (128) term -> INCREMENT term1 .

    PRODUCT         reduce using rule 128 (term -> INCREMENT term1 .)
    DIVIDE          reduce using rule 128 (term -> INCREMENT term1 .)
    PLUS            reduce using rule 128 (term -> INCREMENT term1 .)
    MINUS           reduce using rule 128 (term -> INCREMENT term1 .)
    EQUALTO         reduce using rule 128 (term -> INCREMENT term1 .)
    NOTEQUALTO      reduce using rule 128 (term -> INCREMENT term1 .)
    GREATER         reduce using rule 128 (term -> INCREMENT term1 .)
    LESS            reduce using rule 128 (term -> INCREMENT term1 .)
    GREATEREQUAL    reduce using rule 128 (term -> INCREMENT term1 .)
    LESSEQUAL       reduce using rule 128 (term -> INCREMENT term1 .)
    AND             reduce using rule 128 (term -> INCREMENT term1 .)
    OR              reduce using rule 128 (term -> INCREMENT term1 .)
    POINTCOMMA      reduce using rule 128 (term -> INCREMENT term1 .)
    $end            reduce using rule 128 (term -> INCREMENT term1 .)
    RPAREN          reduce using rule 128 (term -> INCREMENT term1 .)
    RBRACKET        reduce using rule 128 (term -> INCREMENT term1 .)
    COMMA           reduce using rule 128 (term -> INCREMENT term1 .)
    RKEY            reduce using rule 128 (term -> INCREMENT term1 .)


state 119

    (147) term1 -> LPAREN . group RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56

    group                          shift and go to state 202
    number                         shift and go to state 120
    variable                       shift and go to state 121
    array_value                    shift and go to state 122
    object_value                   shift and go to state 123
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 120

    (149) group -> number .

    PRODUCT         reduce using rule 149 (group -> number .)
    DIVIDE          reduce using rule 149 (group -> number .)
    PLUS            reduce using rule 149 (group -> number .)
    MINUS           reduce using rule 149 (group -> number .)
    EQUALTO         reduce using rule 149 (group -> number .)
    NOTEQUALTO      reduce using rule 149 (group -> number .)
    GREATER         reduce using rule 149 (group -> number .)
    LESS            reduce using rule 149 (group -> number .)
    GREATEREQUAL    reduce using rule 149 (group -> number .)
    LESSEQUAL       reduce using rule 149 (group -> number .)
    AND             reduce using rule 149 (group -> number .)
    OR              reduce using rule 149 (group -> number .)
    POINTCOMMA      reduce using rule 149 (group -> number .)
    $end            reduce using rule 149 (group -> number .)
    RPAREN          reduce using rule 149 (group -> number .)
    RBRACKET        reduce using rule 149 (group -> number .)
    COMMA           reduce using rule 149 (group -> number .)
    RKEY            reduce using rule 149 (group -> number .)


state 121

    (150) group -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value

    PRODUCT         reduce using rule 150 (group -> variable .)
    DIVIDE          reduce using rule 150 (group -> variable .)
    PLUS            reduce using rule 150 (group -> variable .)
    MINUS           reduce using rule 150 (group -> variable .)
    EQUALTO         reduce using rule 150 (group -> variable .)
    NOTEQUALTO      reduce using rule 150 (group -> variable .)
    GREATER         reduce using rule 150 (group -> variable .)
    LESS            reduce using rule 150 (group -> variable .)
    GREATEREQUAL    reduce using rule 150 (group -> variable .)
    LESSEQUAL       reduce using rule 150 (group -> variable .)
    AND             reduce using rule 150 (group -> variable .)
    OR              reduce using rule 150 (group -> variable .)
    POINTCOMMA      reduce using rule 150 (group -> variable .)
    $end            reduce using rule 150 (group -> variable .)
    RPAREN          reduce using rule 150 (group -> variable .)
    RBRACKET        reduce using rule 150 (group -> variable .)
    COMMA           reduce using rule 150 (group -> variable .)
    RKEY            reduce using rule 150 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 122

    (151) group -> array_value .

    PRODUCT         reduce using rule 151 (group -> array_value .)
    DIVIDE          reduce using rule 151 (group -> array_value .)
    PLUS            reduce using rule 151 (group -> array_value .)
    MINUS           reduce using rule 151 (group -> array_value .)
    EQUALTO         reduce using rule 151 (group -> array_value .)
    NOTEQUALTO      reduce using rule 151 (group -> array_value .)
    GREATER         reduce using rule 151 (group -> array_value .)
    LESS            reduce using rule 151 (group -> array_value .)
    GREATEREQUAL    reduce using rule 151 (group -> array_value .)
    LESSEQUAL       reduce using rule 151 (group -> array_value .)
    AND             reduce using rule 151 (group -> array_value .)
    OR              reduce using rule 151 (group -> array_value .)
    POINTCOMMA      reduce using rule 151 (group -> array_value .)
    $end            reduce using rule 151 (group -> array_value .)
    RPAREN          reduce using rule 151 (group -> array_value .)
    RBRACKET        reduce using rule 151 (group -> array_value .)
    COMMA           reduce using rule 151 (group -> array_value .)
    RKEY            reduce using rule 151 (group -> array_value .)


state 123

    (152) group -> object_value .

    PRODUCT         reduce using rule 152 (group -> object_value .)
    DIVIDE          reduce using rule 152 (group -> object_value .)
    PLUS            reduce using rule 152 (group -> object_value .)
    MINUS           reduce using rule 152 (group -> object_value .)
    EQUALTO         reduce using rule 152 (group -> object_value .)
    NOTEQUALTO      reduce using rule 152 (group -> object_value .)
    GREATER         reduce using rule 152 (group -> object_value .)
    LESS            reduce using rule 152 (group -> object_value .)
    GREATEREQUAL    reduce using rule 152 (group -> object_value .)
    LESSEQUAL       reduce using rule 152 (group -> object_value .)
    AND             reduce using rule 152 (group -> object_value .)
    OR              reduce using rule 152 (group -> object_value .)
    POINTCOMMA      reduce using rule 152 (group -> object_value .)
    $end            reduce using rule 152 (group -> object_value .)
    RPAREN          reduce using rule 152 (group -> object_value .)
    RBRACKET        reduce using rule 152 (group -> object_value .)
    COMMA           reduce using rule 152 (group -> object_value .)
    RKEY            reduce using rule 152 (group -> object_value .)


state 124

    (130) term -> DECREMENT term1 .

    PRODUCT         reduce using rule 130 (term -> DECREMENT term1 .)
    DIVIDE          reduce using rule 130 (term -> DECREMENT term1 .)
    PLUS            reduce using rule 130 (term -> DECREMENT term1 .)
    MINUS           reduce using rule 130 (term -> DECREMENT term1 .)
    EQUALTO         reduce using rule 130 (term -> DECREMENT term1 .)
    NOTEQUALTO      reduce using rule 130 (term -> DECREMENT term1 .)
    GREATER         reduce using rule 130 (term -> DECREMENT term1 .)
    LESS            reduce using rule 130 (term -> DECREMENT term1 .)
    GREATEREQUAL    reduce using rule 130 (term -> DECREMENT term1 .)
    LESSEQUAL       reduce using rule 130 (term -> DECREMENT term1 .)
    AND             reduce using rule 130 (term -> DECREMENT term1 .)
    OR              reduce using rule 130 (term -> DECREMENT term1 .)
    POINTCOMMA      reduce using rule 130 (term -> DECREMENT term1 .)
    $end            reduce using rule 130 (term -> DECREMENT term1 .)
    RPAREN          reduce using rule 130 (term -> DECREMENT term1 .)
    RBRACKET        reduce using rule 130 (term -> DECREMENT term1 .)
    COMMA           reduce using rule 130 (term -> DECREMENT term1 .)
    RKEY            reduce using rule 130 (term -> DECREMENT term1 .)


state 125

    (117) termS -> string PLUS . chain
    (118) chain -> . termS PLUS value
    (119) chain -> . value
    (117) termS -> . string PLUS chain
    (120) value -> . expression
    (121) value -> . string
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string                         shift and go to state 203
    chain                          shift and go to state 204
    termS                          shift and go to state 205
    value                          shift and go to state 206
    expression                     shift and go to state 207
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 126

    (58) var_boolean -> declare_boolean EQUAL . boolean_value
    (107) boolean_value -> . boolean
    (108) boolean_value -> . other_value
    (109) boolean_value -> . expCond
    (110) boolean_value -> . expOpLog
    (111) boolean_value -> . expNeg
    (112) boolean_value -> . expEq
    (113) boolean_value -> . expNotEq
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59

    boolean_value                  shift and go to state 208
    boolean                        shift and go to state 209
    other_value                    shift and go to state 210
    expCond                        shift and go to state 211
    expOpLog                       shift and go to state 212
    expNeg                         shift and go to state 213
    expEq                          shift and go to state 214
    expNotEq                       shift and go to state 215
    variable                       shift and go to state 216
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    expression                     shift and go to state 217
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    group                          shift and go to state 57

state 127

    (46) declare_array_boolean -> declare_boolean LBRACKET . RBRACKET

    RBRACKET        shift and go to state 218


state 128

    (55) var_number -> declare_number EQUAL . number_value
    (106) number_value -> . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    number_value                   shift and go to state 219
    expression                     shift and go to state 220
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 129

    (42) declare_array_number -> declare_number LBRACKET . RBRACKET

    RBRACKET        shift and go to state 221


state 130

    (61) var_string -> declare_string EQUAL . string_value
    (114) string_value -> . string
    (115) string_value -> . other_value
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string_value                   shift and go to state 222
    string                         shift and go to state 223
    other_value                    shift and go to state 224
    variable                       shift and go to state 225
    array_value                    shift and go to state 226
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 227
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 131

    (50) declare_array_string -> declare_string LBRACKET . RBRACKET

    RBRACKET        shift and go to state 228


state 132

    (64) var_enum -> declare_var_enum EQUAL . enum_value
    (168) enum_value -> . object_name POINT object_name
    (185) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enum_value                     shift and go to state 229
    object_name                    shift and go to state 64

state 133

    (23) declare_enum -> ENUM OBJECTNAME . LKEY enums RKEY

    LKEY            shift and go to state 230


state 134

    (73) assign_variable -> variable EQUAL . assign_value
    (74) assign_variable -> variable EQUAL . list_types
    (79) assign_value -> . general_value
    (80) assign_value -> . object_definition
    (94) list_types -> . list_number
    (95) list_types -> . list_boolean
    (96) list_types -> . list_string
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (81) object_definition -> . LKEY attributes RKEY
    (97) list_number -> . LBRACKET numbers RBRACKET
    (100) list_boolean -> . LBRACKET booleans RBRACKET
    (103) list_string -> . LBRACKET strings RBRACKET
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LKEY            shift and go to state 191
    LBRACKET        shift and go to state 192
    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    variable                       shift and go to state 111
    assign_value                   shift and go to state 231
    list_types                     shift and go to state 232
    general_value                  shift and go to state 178
    object_definition              shift and go to state 179
    list_number                    shift and go to state 180
    list_boolean                   shift and go to state 181
    list_string                    shift and go to state 182
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 135

    (167) array_value -> variable LBRACKET . expression RBRACKET
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    variable                       shift and go to state 111
    expression                     shift and go to state 233
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 136

    (165) object_value_form1 -> variable POINT . variable
    (166) object_value_form2 -> variable POINT . array_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 56

    variable                       shift and go to state 234
    array_value                    shift and go to state 235

state 137

    (75) assign_array -> array_value EQUAL . general_value
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    array_value                    shift and go to state 112
    general_value                  shift and go to state 236
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 138

    (76) assign_object_value -> object_value_form1 EQUAL . general_value
    (77) assign_object_value -> object_value_form1 EQUAL . list_types
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (94) list_types -> . list_number
    (95) list_types -> . list_boolean
    (96) list_types -> . list_string
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (97) list_number -> . LBRACKET numbers RBRACKET
    (100) list_boolean -> . LBRACKET booleans RBRACKET
    (103) list_string -> . LBRACKET strings RBRACKET
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    LBRACKET        shift and go to state 192
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    object_value_form1             shift and go to state 98
    general_value                  shift and go to state 237
    list_types                     shift and go to state 238
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    list_number                    shift and go to state 180
    list_boolean                   shift and go to state 181
    list_string                    shift and go to state 182
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form2             shift and go to state 99

state 139

    (78) assign_object_value -> object_value_form2 EQUAL . general_value
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    object_value_form2             shift and go to state 99
    general_value                  shift and go to state 239
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98

state 140

    (69) declare_any -> prefix VARIABLE .

    EQUAL           reduce using rule 69 (declare_any -> prefix VARIABLE .)
    TWOPOINTS       reduce using rule 69 (declare_any -> prefix VARIABLE .)
    POINTCOMMA      reduce using rule 69 (declare_any -> prefix VARIABLE .)
    $end            reduce using rule 69 (declare_any -> prefix VARIABLE .)


state 141

    (168) enum_value -> object_name POINT . object_name
    (185) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    object_name                    shift and go to state 240

state 142

    (40) declare_array_main_number -> declare_array_number EQUAL . list_number
    (97) list_number -> . LBRACKET numbers RBRACKET

    LBRACKET        shift and go to state 242

    list_number                    shift and go to state 241

state 143

    (44) declare_array_main_boolean -> declare_array_boolean EQUAL . list_boolean
    (100) list_boolean -> . LBRACKET booleans RBRACKET

    LBRACKET        shift and go to state 244

    list_boolean                   shift and go to state 243

state 144

    (48) declare_array_main_string -> declare_array_string EQUAL . list_string
    (103) list_string -> . LBRACKET strings RBRACKET

    LBRACKET        shift and go to state 246

    list_string                    shift and go to state 245

state 145

    (122) expression -> expression PLUS term .
    (125) term -> term . PRODUCT term
    (126) term -> term . DIVIDE term

    PLUS            reduce using rule 122 (expression -> expression PLUS term .)
    MINUS           reduce using rule 122 (expression -> expression PLUS term .)
    EQUALTO         reduce using rule 122 (expression -> expression PLUS term .)
    NOTEQUALTO      reduce using rule 122 (expression -> expression PLUS term .)
    GREATER         reduce using rule 122 (expression -> expression PLUS term .)
    LESS            reduce using rule 122 (expression -> expression PLUS term .)
    GREATEREQUAL    reduce using rule 122 (expression -> expression PLUS term .)
    LESSEQUAL       reduce using rule 122 (expression -> expression PLUS term .)
    AND             reduce using rule 122 (expression -> expression PLUS term .)
    OR              reduce using rule 122 (expression -> expression PLUS term .)
    POINTCOMMA      reduce using rule 122 (expression -> expression PLUS term .)
    $end            reduce using rule 122 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 122 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 122 (expression -> expression PLUS term .)
    COMMA           reduce using rule 122 (expression -> expression PLUS term .)
    RKEY            reduce using rule 122 (expression -> expression PLUS term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 146

    (147) term1 -> LPAREN . group RPAREN
    (156) factor_expr -> LPAREN . expression RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (168) enum_value -> . object_name POINT object_name
    (185) object_name -> . OBJECTNAME

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    OBJECTNAME      shift and go to state 50

    group                          shift and go to state 93
    expression                     shift and go to state 247
    number                         shift and go to state 94
    variable                       shift and go to state 248
    array_value                    shift and go to state 96
    object_value                   shift and go to state 97
    term                           shift and go to state 14
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term1                          shift and go to state 33
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    enum_value                     shift and go to state 44
    object_name                    shift and go to state 64

state 147

    (123) expression -> expression MINUS term .
    (125) term -> term . PRODUCT term
    (126) term -> term . DIVIDE term

    PLUS            reduce using rule 123 (expression -> expression MINUS term .)
    MINUS           reduce using rule 123 (expression -> expression MINUS term .)
    EQUALTO         reduce using rule 123 (expression -> expression MINUS term .)
    NOTEQUALTO      reduce using rule 123 (expression -> expression MINUS term .)
    GREATER         reduce using rule 123 (expression -> expression MINUS term .)
    LESS            reduce using rule 123 (expression -> expression MINUS term .)
    GREATEREQUAL    reduce using rule 123 (expression -> expression MINUS term .)
    LESSEQUAL       reduce using rule 123 (expression -> expression MINUS term .)
    AND             reduce using rule 123 (expression -> expression MINUS term .)
    OR              reduce using rule 123 (expression -> expression MINUS term .)
    POINTCOMMA      reduce using rule 123 (expression -> expression MINUS term .)
    $end            reduce using rule 123 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 123 (expression -> expression MINUS term .)
    RBRACKET        reduce using rule 123 (expression -> expression MINUS term .)
    COMMA           reduce using rule 123 (expression -> expression MINUS term .)
    RKEY            reduce using rule 123 (expression -> expression MINUS term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89


state 148

    (145) expCond -> expression operador expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    EQUALTO         reduce using rule 145 (expCond -> expression operador expression .)
    NOTEQUALTO      reduce using rule 145 (expCond -> expression operador expression .)
    AND             reduce using rule 145 (expCond -> expression operador expression .)
    OR              reduce using rule 145 (expCond -> expression operador expression .)
    POINTCOMMA      reduce using rule 145 (expCond -> expression operador expression .)
    $end            reduce using rule 145 (expCond -> expression operador expression .)
    RBRACKET        reduce using rule 145 (expCond -> expression operador expression .)
    COMMA           reduce using rule 145 (expCond -> expression operador expression .)
    RKEY            reduce using rule 145 (expCond -> expression operador expression .)
    RPAREN          reduce using rule 145 (expCond -> expression operador expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 149

    (143) expOpLog -> expression oplogico expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 143 (expOpLog -> expression oplogico expression .)
    $end            reduce using rule 143 (expOpLog -> expression oplogico expression .)
    RBRACKET        reduce using rule 143 (expOpLog -> expression oplogico expression .)
    COMMA           reduce using rule 143 (expOpLog -> expression oplogico expression .)
    RKEY            reduce using rule 143 (expOpLog -> expression oplogico expression .)
    RPAREN          reduce using rule 143 (expOpLog -> expression oplogico expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 150

    (137) expEq -> expression EQUALTO expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 137 (expEq -> expression EQUALTO expression .)
    $end            reduce using rule 137 (expEq -> expression EQUALTO expression .)
    RBRACKET        reduce using rule 137 (expEq -> expression EQUALTO expression .)
    COMMA           reduce using rule 137 (expEq -> expression EQUALTO expression .)
    RKEY            reduce using rule 137 (expEq -> expression EQUALTO expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 151

    (140) expNotEq -> expression NOTEQUALTO expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 140 (expNotEq -> expression NOTEQUALTO expression .)
    $end            reduce using rule 140 (expNotEq -> expression NOTEQUALTO expression .)
    RBRACKET        reduce using rule 140 (expNotEq -> expression NOTEQUALTO expression .)
    COMMA           reduce using rule 140 (expNotEq -> expression NOTEQUALTO expression .)
    RKEY            reduce using rule 140 (expNotEq -> expression NOTEQUALTO expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 152

    (141) expOpLog -> expCond oplogico expCond .

    POINTCOMMA      reduce using rule 141 (expOpLog -> expCond oplogico expCond .)
    $end            reduce using rule 141 (expOpLog -> expCond oplogico expCond .)
    RBRACKET        reduce using rule 141 (expOpLog -> expCond oplogico expCond .)
    COMMA           reduce using rule 141 (expOpLog -> expCond oplogico expCond .)
    RKEY            reduce using rule 141 (expOpLog -> expCond oplogico expCond .)
    RPAREN          reduce using rule 141 (expOpLog -> expCond oplogico expCond .)


state 153

    (145) expCond -> expression . operador expression
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 75

state 154

    (135) expEq -> expCond EQUALTO expCond .

    POINTCOMMA      reduce using rule 135 (expEq -> expCond EQUALTO expCond .)
    $end            reduce using rule 135 (expEq -> expCond EQUALTO expCond .)
    RBRACKET        reduce using rule 135 (expEq -> expCond EQUALTO expCond .)
    COMMA           reduce using rule 135 (expEq -> expCond EQUALTO expCond .)
    RKEY            reduce using rule 135 (expEq -> expCond EQUALTO expCond .)


state 155

    (138) expNotEq -> expCond NOTEQUALTO expCond .

    POINTCOMMA      reduce using rule 138 (expNotEq -> expCond NOTEQUALTO expCond .)
    $end            reduce using rule 138 (expNotEq -> expCond NOTEQUALTO expCond .)
    RBRACKET        reduce using rule 138 (expNotEq -> expCond NOTEQUALTO expCond .)
    COMMA           reduce using rule 138 (expNotEq -> expCond NOTEQUALTO expCond .)
    RKEY            reduce using rule 138 (expNotEq -> expCond NOTEQUALTO expCond .)


state 156

    (125) term -> term PRODUCT term .
    (125) term -> term . PRODUCT term
    (126) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 125 (term -> term PRODUCT term .)
    MINUS           reduce using rule 125 (term -> term PRODUCT term .)
    EQUALTO         reduce using rule 125 (term -> term PRODUCT term .)
    NOTEQUALTO      reduce using rule 125 (term -> term PRODUCT term .)
    GREATER         reduce using rule 125 (term -> term PRODUCT term .)
    LESS            reduce using rule 125 (term -> term PRODUCT term .)
    GREATEREQUAL    reduce using rule 125 (term -> term PRODUCT term .)
    LESSEQUAL       reduce using rule 125 (term -> term PRODUCT term .)
    AND             reduce using rule 125 (term -> term PRODUCT term .)
    OR              reduce using rule 125 (term -> term PRODUCT term .)
    POINTCOMMA      reduce using rule 125 (term -> term PRODUCT term .)
    $end            reduce using rule 125 (term -> term PRODUCT term .)
    RPAREN          reduce using rule 125 (term -> term PRODUCT term .)
    RBRACKET        reduce using rule 125 (term -> term PRODUCT term .)
    COMMA           reduce using rule 125 (term -> term PRODUCT term .)
    RKEY            reduce using rule 125 (term -> term PRODUCT term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89

  ! PRODUCT         [ reduce using rule 125 (term -> term PRODUCT term .) ]
  ! DIVIDE          [ reduce using rule 125 (term -> term PRODUCT term .) ]


state 157

    (126) term -> term DIVIDE term .
    (125) term -> term . PRODUCT term
    (126) term -> term . DIVIDE term

  ! shift/reduce conflict for PRODUCT resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 126 (term -> term DIVIDE term .)
    MINUS           reduce using rule 126 (term -> term DIVIDE term .)
    EQUALTO         reduce using rule 126 (term -> term DIVIDE term .)
    NOTEQUALTO      reduce using rule 126 (term -> term DIVIDE term .)
    GREATER         reduce using rule 126 (term -> term DIVIDE term .)
    LESS            reduce using rule 126 (term -> term DIVIDE term .)
    GREATEREQUAL    reduce using rule 126 (term -> term DIVIDE term .)
    LESSEQUAL       reduce using rule 126 (term -> term DIVIDE term .)
    AND             reduce using rule 126 (term -> term DIVIDE term .)
    OR              reduce using rule 126 (term -> term DIVIDE term .)
    POINTCOMMA      reduce using rule 126 (term -> term DIVIDE term .)
    $end            reduce using rule 126 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 126 (term -> term DIVIDE term .)
    RBRACKET        reduce using rule 126 (term -> term DIVIDE term .)
    COMMA           reduce using rule 126 (term -> term DIVIDE term .)
    RKEY            reduce using rule 126 (term -> term DIVIDE term .)
    PRODUCT         shift and go to state 88
    DIVIDE          shift and go to state 89

  ! PRODUCT         [ reduce using rule 126 (term -> term DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 126 (term -> term DIVIDE term .) ]


state 158

    (146) expCond -> LPAREN expression . operador expression RPAREN
    (156) factor_expr -> LPAREN expression . RPAREN
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162

    operador                       shift and go to state 249

state 159

    (146) expCond -> LPAREN expression operador . expression RPAREN
    (145) expCond -> expression operador . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 250
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 160

    (156) factor_expr -> LPAREN expression RPAREN .

    PRODUCT         reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    EQUALTO         reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    NOTEQUALTO      reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    LESS            reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    AND             reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    OR              reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    POINTCOMMA      reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    $end            reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)
    RKEY            reduce using rule 156 (factor_expr -> LPAREN expression RPAREN .)


state 161

    (190) operador -> EQUALTO .

    INCREMENT       reduce using rule 190 (operador -> EQUALTO .)
    DECREMENT       reduce using rule 190 (operador -> EQUALTO .)
    LPAREN          reduce using rule 190 (operador -> EQUALTO .)
    NUMBER          reduce using rule 190 (operador -> EQUALTO .)
    FLOAT           reduce using rule 190 (operador -> EQUALTO .)
    VARIABLE        reduce using rule 190 (operador -> EQUALTO .)
    OBJECTNAME      reduce using rule 190 (operador -> EQUALTO .)


state 162

    (191) operador -> NOTEQUALTO .

    INCREMENT       reduce using rule 191 (operador -> NOTEQUALTO .)
    DECREMENT       reduce using rule 191 (operador -> NOTEQUALTO .)
    LPAREN          reduce using rule 191 (operador -> NOTEQUALTO .)
    NUMBER          reduce using rule 191 (operador -> NOTEQUALTO .)
    FLOAT           reduce using rule 191 (operador -> NOTEQUALTO .)
    VARIABLE        reduce using rule 191 (operador -> NOTEQUALTO .)
    OBJECTNAME      reduce using rule 191 (operador -> NOTEQUALTO .)


state 163

    (144) factor_exprlog -> LPAREN expCond RPAREN .

    EQUALTO         reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    NOTEQUALTO      reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    AND             reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    OR              reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    POINTCOMMA      reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    $end            reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    RBRACKET        reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    COMMA           reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    RKEY            reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)
    RPAREN          reduce using rule 144 (factor_exprlog -> LPAREN expCond RPAREN .)


state 164

    (147) term1 -> LPAREN group RPAREN .

    INCREMENT       reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    DECREMENT       reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    PRODUCT         reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    DIVIDE          reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    PLUS            reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    MINUS           reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    EQUALTO         reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    NOTEQUALTO      reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    GREATER         reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    LESS            reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    GREATEREQUAL    reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    LESSEQUAL       reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    AND             reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    OR              reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    POINTCOMMA      reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    $end            reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    RPAREN          reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    RBRACKET        reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    COMMA           reduce using rule 147 (term1 -> LPAREN group RPAREN .)
    RKEY            reduce using rule 147 (term1 -> LPAREN group RPAREN .)


state 165

    (142) expOpLog -> factor_exprlog oplogico factor_exprlog .

    POINTCOMMA      reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    $end            reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RBRACKET        reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    COMMA           reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RKEY            reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)
    RPAREN          reduce using rule 142 (expOpLog -> factor_exprlog oplogico factor_exprlog .)


state 166

    (144) factor_exprlog -> LPAREN . expCond RPAREN
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    LPAREN          shift and go to state 90
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expCond                        shift and go to state 92
    expression                     shift and go to state 153
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 167

    (136) expEq -> factor_exprlog EQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 136 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    $end            reduce using rule 136 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 136 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    COMMA           reduce using rule 136 (expEq -> factor_exprlog EQUALTO factor_exprlog .)
    RKEY            reduce using rule 136 (expEq -> factor_exprlog EQUALTO factor_exprlog .)


state 168

    (139) expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .

    POINTCOMMA      reduce using rule 139 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    $end            reduce using rule 139 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RBRACKET        reduce using rule 139 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    COMMA           reduce using rule 139 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)
    RKEY            reduce using rule 139 (expNotEq -> factor_exprlog NOTEQUALTO factor_exprlog .)


state 169

    (134) expNeg -> NEGATION LPAREN expOpLog . RPAREN

    RPAREN          shift and go to state 251


state 170

    (144) factor_exprlog -> LPAREN expCond . RPAREN
    (141) expOpLog -> expCond . oplogico expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    RPAREN          shift and go to state 163
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 171

    (146) expCond -> LPAREN expression . operador expression RPAREN
    (156) factor_expr -> LPAREN expression . RPAREN
    (143) expOpLog -> expression . oplogico expression
    (145) expCond -> expression . operador expression
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 159
    oplogico                       shift and go to state 76

state 172

    (142) expOpLog -> factor_exprlog . oplogico factor_exprlog
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 100

state 173

    (35) exp_set -> declare_any EQUAL NEW . SET LPAREN RPAREN

    SET             shift and go to state 252


state 174

    (53) var_null -> declare_any EQUAL NULL .

    POINTCOMMA      reduce using rule 53 (var_null -> declare_any EQUAL NULL .)
    $end            reduce using rule 53 (var_null -> declare_any EQUAL NULL .)


state 175

    (54) var_undefined -> declare_any EQUAL UNDEFINED .

    POINTCOMMA      reduce using rule 54 (var_undefined -> declare_any EQUAL UNDEFINED .)
    $end            reduce using rule 54 (var_undefined -> declare_any EQUAL UNDEFINED .)


state 176

    (67) declare_generic -> declare_any EQUAL assign_value .

    POINTCOMMA      reduce using rule 67 (declare_generic -> declare_any EQUAL assign_value .)
    $end            reduce using rule 67 (declare_generic -> declare_any EQUAL assign_value .)


state 177

    (52) declare_generic_array -> declare_any EQUAL list_types .

    POINTCOMMA      reduce using rule 52 (declare_generic_array -> declare_any EQUAL list_types .)
    $end            reduce using rule 52 (declare_generic_array -> declare_any EQUAL list_types .)


state 178

    (79) assign_value -> general_value .

    POINTCOMMA      reduce using rule 79 (assign_value -> general_value .)
    $end            reduce using rule 79 (assign_value -> general_value .)


state 179

    (80) assign_value -> object_definition .

    POINTCOMMA      reduce using rule 80 (assign_value -> object_definition .)
    $end            reduce using rule 80 (assign_value -> object_definition .)


state 180

    (94) list_types -> list_number .

    POINTCOMMA      reduce using rule 94 (list_types -> list_number .)
    $end            reduce using rule 94 (list_types -> list_number .)
    RKEY            reduce using rule 94 (list_types -> list_number .)
    COMMA           reduce using rule 94 (list_types -> list_number .)


state 181

    (95) list_types -> list_boolean .

    POINTCOMMA      reduce using rule 95 (list_types -> list_boolean .)
    $end            reduce using rule 95 (list_types -> list_boolean .)
    RKEY            reduce using rule 95 (list_types -> list_boolean .)
    COMMA           reduce using rule 95 (list_types -> list_boolean .)


state 182

    (96) list_types -> list_string .

    POINTCOMMA      reduce using rule 96 (list_types -> list_string .)
    $end            reduce using rule 96 (list_types -> list_string .)
    RKEY            reduce using rule 96 (list_types -> list_string .)
    COMMA           reduce using rule 96 (list_types -> list_string .)


state 183

    (86) general_value -> expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (145) expCond -> expression . operador expression
    (143) expOpLog -> expression . oplogico expression
    (137) expEq -> expression . EQUALTO expression
    (140) expNotEq -> expression . NOTEQUALTO expression
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 86 (general_value -> expression .)
    $end            reduce using rule 86 (general_value -> expression .)
    RKEY            reduce using rule 86 (general_value -> expression .)
    COMMA           reduce using rule 86 (general_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    EQUALTO         shift and go to state 77
    NOTEQUALTO      shift and go to state 78
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 184

    (87) general_value -> boolean .

    POINTCOMMA      reduce using rule 87 (general_value -> boolean .)
    $end            reduce using rule 87 (general_value -> boolean .)
    RKEY            reduce using rule 87 (general_value -> boolean .)
    COMMA           reduce using rule 87 (general_value -> boolean .)


state 185

    (88) general_value -> string .

    POINTCOMMA      reduce using rule 88 (general_value -> string .)
    $end            reduce using rule 88 (general_value -> string .)
    RKEY            reduce using rule 88 (general_value -> string .)
    COMMA           reduce using rule 88 (general_value -> string .)


state 186

    (89) general_value -> expCond .
    (141) expOpLog -> expCond . oplogico expCond
    (135) expEq -> expCond . EQUALTO expCond
    (138) expNotEq -> expCond . NOTEQUALTO expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 89 (general_value -> expCond .)
    $end            reduce using rule 89 (general_value -> expCond .)
    RKEY            reduce using rule 89 (general_value -> expCond .)
    COMMA           reduce using rule 89 (general_value -> expCond .)
    EQUALTO         shift and go to state 86
    NOTEQUALTO      shift and go to state 87
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 187

    (90) general_value -> expOpLog .

    POINTCOMMA      reduce using rule 90 (general_value -> expOpLog .)
    $end            reduce using rule 90 (general_value -> expOpLog .)
    RKEY            reduce using rule 90 (general_value -> expOpLog .)
    COMMA           reduce using rule 90 (general_value -> expOpLog .)


state 188

    (91) general_value -> expNeg .

    POINTCOMMA      reduce using rule 91 (general_value -> expNeg .)
    $end            reduce using rule 91 (general_value -> expNeg .)
    RKEY            reduce using rule 91 (general_value -> expNeg .)
    COMMA           reduce using rule 91 (general_value -> expNeg .)


state 189

    (92) general_value -> expEq .

    POINTCOMMA      reduce using rule 92 (general_value -> expEq .)
    $end            reduce using rule 92 (general_value -> expEq .)
    RKEY            reduce using rule 92 (general_value -> expEq .)
    COMMA           reduce using rule 92 (general_value -> expEq .)


state 190

    (93) general_value -> expNotEq .

    POINTCOMMA      reduce using rule 93 (general_value -> expNotEq .)
    $end            reduce using rule 93 (general_value -> expNotEq .)
    RKEY            reduce using rule 93 (general_value -> expNotEq .)
    COMMA           reduce using rule 93 (general_value -> expNotEq .)


state 191

    (81) object_definition -> LKEY . attributes RKEY
    (82) attributes -> . attributes COMMA attribute
    (83) attributes -> . attribute
    (84) attribute -> . variable TWOPOINTS general_value
    (85) attribute -> . variable TWOPOINTS list_types
    (184) variable -> . VARIABLE

    VARIABLE        shift and go to state 56

    attributes                     shift and go to state 253
    attribute                      shift and go to state 254
    variable                       shift and go to state 255

state 192

    (97) list_number -> LBRACKET . numbers RBRACKET
    (100) list_boolean -> LBRACKET . booleans RBRACKET
    (103) list_string -> LBRACKET . strings RBRACKET
    (98) numbers -> . numbers COMMA number_value
    (99) numbers -> . number_value
    (101) booleans -> . booleans COMMA boolean_value
    (102) booleans -> . boolean_value
    (104) strings -> . strings COMMA string_value
    (105) strings -> . string_value
    (106) number_value -> . expression
    (107) boolean_value -> . boolean
    (108) boolean_value -> . other_value
    (109) boolean_value -> . expCond
    (110) boolean_value -> . expOpLog
    (111) boolean_value -> . expNeg
    (112) boolean_value -> . expEq
    (113) boolean_value -> . expNotEq
    (114) string_value -> . string
    (115) string_value -> . other_value
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    VARIABLE        shift and go to state 56
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    OBJECTNAME      shift and go to state 50

    numbers                        shift and go to state 256
    booleans                       shift and go to state 257
    strings                        shift and go to state 258
    number_value                   shift and go to state 259
    boolean_value                  shift and go to state 260
    string_value                   shift and go to state 261
    expression                     shift and go to state 262
    boolean                        shift and go to state 209
    other_value                    shift and go to state 263
    expCond                        shift and go to state 211
    expOpLog                       shift and go to state 212
    expNeg                         shift and go to state 213
    expEq                          shift and go to state 214
    expNotEq                       shift and go to state 215
    string                         shift and go to state 223
    term                           shift and go to state 14
    variable                       shift and go to state 216
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    group                          shift and go to state 57

state 193

    (60) declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .

    EQUAL           reduce using rule 60 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    LBRACKET        reduce using rule 60 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    POINTCOMMA      reduce using rule 60 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)
    $end            reduce using rule 60 (declare_boolean -> declare_any TWOPOINTS VARBOOLEAN .)


state 194

    (57) declare_number -> declare_any TWOPOINTS VARNUMBER .

    EQUAL           reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    LBRACKET        reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    POINTCOMMA      reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)
    $end            reduce using rule 57 (declare_number -> declare_any TWOPOINTS VARNUMBER .)


state 195

    (63) declare_string -> declare_any TWOPOINTS VARSTRING .

    EQUAL           reduce using rule 63 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    LBRACKET        reduce using rule 63 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    POINTCOMMA      reduce using rule 63 (declare_string -> declare_any TWOPOINTS VARSTRING .)
    $end            reduce using rule 63 (declare_string -> declare_any TWOPOINTS VARSTRING .)


state 196

    (66) declare_var_enum -> declare_any TWOPOINTS object_name .

    EQUAL           reduce using rule 66 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    POINTCOMMA      reduce using rule 66 (declare_var_enum -> declare_any TWOPOINTS object_name .)
    $end            reduce using rule 66 (declare_var_enum -> declare_any TWOPOINTS object_name .)


state 197

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY . LESS VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY . LESS VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS ARRAY . LESS VARSTRING GREATER

    LESS            shift and go to state 264


state 198

    (33) funcionif -> IF LPAREN formIf . RPAREN LKEY

    RPAREN          shift and go to state 265


state 199

    (161) formIf -> expCond .
    (141) expOpLog -> expCond . oplogico expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    RPAREN          reduce using rule 161 (formIf -> expCond .)
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 200

    (162) formIf -> expOpLog .

    RPAREN          reduce using rule 162 (formIf -> expOpLog .)


state 201

    (145) expCond -> expression . operador expression
    (143) expOpLog -> expression . oplogico expression
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    EQUALTO         shift and go to state 161
    NOTEQUALTO      shift and go to state 162
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 202

    (147) term1 -> LPAREN group . RPAREN

    RPAREN          shift and go to state 164


state 203

    (117) termS -> string . PLUS chain
    (121) value -> string .

  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 125
    POINTCOMMA      reduce using rule 121 (value -> string .)
    $end            reduce using rule 121 (value -> string .)

  ! PLUS            [ reduce using rule 121 (value -> string .) ]


state 204

    (117) termS -> string PLUS chain .

    POINTCOMMA      reduce using rule 117 (termS -> string PLUS chain .)
    $end            reduce using rule 117 (termS -> string PLUS chain .)
    PLUS            reduce using rule 117 (termS -> string PLUS chain .)


state 205

    (118) chain -> termS . PLUS value

    PLUS            shift and go to state 266


state 206

    (119) chain -> value .

    POINTCOMMA      reduce using rule 119 (chain -> value .)
    $end            reduce using rule 119 (chain -> value .)
    PLUS            reduce using rule 119 (chain -> value .)


state 207

    (120) value -> expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
    POINTCOMMA      reduce using rule 120 (value -> expression .)
    $end            reduce using rule 120 (value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

  ! PLUS            [ reduce using rule 120 (value -> expression .) ]


state 208

    (58) var_boolean -> declare_boolean EQUAL boolean_value .

    POINTCOMMA      reduce using rule 58 (var_boolean -> declare_boolean EQUAL boolean_value .)
    $end            reduce using rule 58 (var_boolean -> declare_boolean EQUAL boolean_value .)


state 209

    (107) boolean_value -> boolean .

    POINTCOMMA      reduce using rule 107 (boolean_value -> boolean .)
    $end            reduce using rule 107 (boolean_value -> boolean .)
    RBRACKET        reduce using rule 107 (boolean_value -> boolean .)
    COMMA           reduce using rule 107 (boolean_value -> boolean .)


state 210

    (108) boolean_value -> other_value .
    (155) term -> other_value .

    POINTCOMMA      reduce using rule 108 (boolean_value -> other_value .)
    $end            reduce using rule 108 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 108 (boolean_value -> other_value .)
    COMMA           reduce using rule 108 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 155 (term -> other_value .)
    DIVIDE          reduce using rule 155 (term -> other_value .)
    EQUALTO         reduce using rule 155 (term -> other_value .)
    NOTEQUALTO      reduce using rule 155 (term -> other_value .)
    PLUS            reduce using rule 155 (term -> other_value .)
    MINUS           reduce using rule 155 (term -> other_value .)
    GREATER         reduce using rule 155 (term -> other_value .)
    LESS            reduce using rule 155 (term -> other_value .)
    GREATEREQUAL    reduce using rule 155 (term -> other_value .)
    LESSEQUAL       reduce using rule 155 (term -> other_value .)
    AND             reduce using rule 155 (term -> other_value .)
    OR              reduce using rule 155 (term -> other_value .)


state 211

    (109) boolean_value -> expCond .
    (141) expOpLog -> expCond . oplogico expCond
    (135) expEq -> expCond . EQUALTO expCond
    (138) expNotEq -> expCond . NOTEQUALTO expCond
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    POINTCOMMA      reduce using rule 109 (boolean_value -> expCond .)
    $end            reduce using rule 109 (boolean_value -> expCond .)
    RBRACKET        reduce using rule 109 (boolean_value -> expCond .)
    COMMA           reduce using rule 109 (boolean_value -> expCond .)
    EQUALTO         shift and go to state 86
    NOTEQUALTO      shift and go to state 87
    AND             shift and go to state 83
    OR              shift and go to state 84

    oplogico                       shift and go to state 85

state 212

    (110) boolean_value -> expOpLog .

    POINTCOMMA      reduce using rule 110 (boolean_value -> expOpLog .)
    $end            reduce using rule 110 (boolean_value -> expOpLog .)
    RBRACKET        reduce using rule 110 (boolean_value -> expOpLog .)
    COMMA           reduce using rule 110 (boolean_value -> expOpLog .)


state 213

    (111) boolean_value -> expNeg .

    POINTCOMMA      reduce using rule 111 (boolean_value -> expNeg .)
    $end            reduce using rule 111 (boolean_value -> expNeg .)
    RBRACKET        reduce using rule 111 (boolean_value -> expNeg .)
    COMMA           reduce using rule 111 (boolean_value -> expNeg .)


state 214

    (112) boolean_value -> expEq .

    POINTCOMMA      reduce using rule 112 (boolean_value -> expEq .)
    $end            reduce using rule 112 (boolean_value -> expEq .)
    RBRACKET        reduce using rule 112 (boolean_value -> expEq .)
    COMMA           reduce using rule 112 (boolean_value -> expEq .)


state 215

    (113) boolean_value -> expNotEq .

    POINTCOMMA      reduce using rule 113 (boolean_value -> expNotEq .)
    $end            reduce using rule 113 (boolean_value -> expNotEq .)
    RBRACKET        reduce using rule 113 (boolean_value -> expNotEq .)
    COMMA           reduce using rule 113 (boolean_value -> expNotEq .)


state 216

    (157) other_value -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value
    (150) group -> variable .

    POINTCOMMA      reduce using rule 157 (other_value -> variable .)
    $end            reduce using rule 157 (other_value -> variable .)
    PRODUCT         reduce using rule 157 (other_value -> variable .)
    DIVIDE          reduce using rule 157 (other_value -> variable .)
    EQUALTO         reduce using rule 157 (other_value -> variable .)
    NOTEQUALTO      reduce using rule 157 (other_value -> variable .)
    PLUS            reduce using rule 157 (other_value -> variable .)
    MINUS           reduce using rule 157 (other_value -> variable .)
    GREATER         reduce using rule 157 (other_value -> variable .)
    LESS            reduce using rule 157 (other_value -> variable .)
    GREATEREQUAL    reduce using rule 157 (other_value -> variable .)
    LESSEQUAL       reduce using rule 157 (other_value -> variable .)
    AND             reduce using rule 157 (other_value -> variable .)
    OR              reduce using rule 157 (other_value -> variable .)
    RBRACKET        reduce using rule 157 (other_value -> variable .)
    COMMA           reduce using rule 157 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    INCREMENT       reduce using rule 150 (group -> variable .)
    DECREMENT       reduce using rule 150 (group -> variable .)


state 217

    (145) expCond -> expression . operador expression
    (143) expOpLog -> expression . oplogico expression
    (137) expEq -> expression . EQUALTO expression
    (140) expNotEq -> expression . NOTEQUALTO expression
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    EQUALTO         shift and go to state 77
    NOTEQUALTO      shift and go to state 78
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 218

    (46) declare_array_boolean -> declare_boolean LBRACKET RBRACKET .

    EQUAL           reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)
    $end            reduce using rule 46 (declare_array_boolean -> declare_boolean LBRACKET RBRACKET .)


state 219

    (55) var_number -> declare_number EQUAL number_value .

    POINTCOMMA      reduce using rule 55 (var_number -> declare_number EQUAL number_value .)
    $end            reduce using rule 55 (var_number -> declare_number EQUAL number_value .)


state 220

    (106) number_value -> expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    POINTCOMMA      reduce using rule 106 (number_value -> expression .)
    $end            reduce using rule 106 (number_value -> expression .)
    RBRACKET        reduce using rule 106 (number_value -> expression .)
    COMMA           reduce using rule 106 (number_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 221

    (42) declare_array_number -> declare_number LBRACKET RBRACKET .

    EQUAL           reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)
    $end            reduce using rule 42 (declare_array_number -> declare_number LBRACKET RBRACKET .)


state 222

    (61) var_string -> declare_string EQUAL string_value .

    POINTCOMMA      reduce using rule 61 (var_string -> declare_string EQUAL string_value .)
    $end            reduce using rule 61 (var_string -> declare_string EQUAL string_value .)


state 223

    (114) string_value -> string .

    POINTCOMMA      reduce using rule 114 (string_value -> string .)
    $end            reduce using rule 114 (string_value -> string .)
    RBRACKET        reduce using rule 114 (string_value -> string .)
    COMMA           reduce using rule 114 (string_value -> string .)


state 224

    (115) string_value -> other_value .

    POINTCOMMA      reduce using rule 115 (string_value -> other_value .)
    $end            reduce using rule 115 (string_value -> other_value .)
    RBRACKET        reduce using rule 115 (string_value -> other_value .)
    COMMA           reduce using rule 115 (string_value -> other_value .)


state 225

    (157) other_value -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value

    POINTCOMMA      reduce using rule 157 (other_value -> variable .)
    $end            reduce using rule 157 (other_value -> variable .)
    RBRACKET        reduce using rule 157 (other_value -> variable .)
    COMMA           reduce using rule 157 (other_value -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136


state 226

    (158) other_value -> array_value .

    POINTCOMMA      reduce using rule 158 (other_value -> array_value .)
    $end            reduce using rule 158 (other_value -> array_value .)
    RBRACKET        reduce using rule 158 (other_value -> array_value .)
    COMMA           reduce using rule 158 (other_value -> array_value .)


state 227

    (160) other_value -> object_value .

    POINTCOMMA      reduce using rule 160 (other_value -> object_value .)
    $end            reduce using rule 160 (other_value -> object_value .)
    RBRACKET        reduce using rule 160 (other_value -> object_value .)
    COMMA           reduce using rule 160 (other_value -> object_value .)


state 228

    (50) declare_array_string -> declare_string LBRACKET RBRACKET .

    EQUAL           reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    POINTCOMMA      reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)
    $end            reduce using rule 50 (declare_array_string -> declare_string LBRACKET RBRACKET .)


state 229

    (64) var_enum -> declare_var_enum EQUAL enum_value .

    POINTCOMMA      reduce using rule 64 (var_enum -> declare_var_enum EQUAL enum_value .)
    $end            reduce using rule 64 (var_enum -> declare_var_enum EQUAL enum_value .)


state 230

    (23) declare_enum -> ENUM OBJECTNAME LKEY . enums RKEY
    (24) enums -> . enums_numeric
    (25) enums -> . enums_string
    (26) enums_numeric -> . enums_numeric COMMA enums_numeric_value
    (27) enums_numeric -> . enums_numeric_value
    (30) enums_string -> . enums_string COMMA enums_string_value
    (31) enums_string -> . enums_string_value
    (28) enums_numeric_value -> . object_name EQUAL number
    (29) enums_numeric_value -> . object_name
    (32) enums_string_value -> . object_name EQUAL string
    (185) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums                          shift and go to state 267
    enums_numeric                  shift and go to state 268
    enums_string                   shift and go to state 269
    enums_numeric_value            shift and go to state 270
    enums_string_value             shift and go to state 271
    object_name                    shift and go to state 272

state 231

    (73) assign_variable -> variable EQUAL assign_value .

    POINTCOMMA      reduce using rule 73 (assign_variable -> variable EQUAL assign_value .)
    $end            reduce using rule 73 (assign_variable -> variable EQUAL assign_value .)


state 232

    (74) assign_variable -> variable EQUAL list_types .

    POINTCOMMA      reduce using rule 74 (assign_variable -> variable EQUAL list_types .)
    $end            reduce using rule 74 (assign_variable -> variable EQUAL list_types .)


state 233

    (167) array_value -> variable LBRACKET expression . RBRACKET
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    RBRACKET        shift and go to state 273
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 234

    (165) object_value_form1 -> variable POINT variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET

    EQUAL           reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    PRODUCT         reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    DIVIDE          reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    PLUS            reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    MINUS           reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    EQUALTO         reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    NOTEQUALTO      reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    GREATER         reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    LESS            reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    GREATEREQUAL    reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    LESSEQUAL       reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    AND             reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    OR              reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    POINTCOMMA      reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    $end            reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    INCREMENT       reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    DECREMENT       reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    RPAREN          reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    RBRACKET        reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    COMMA           reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    RKEY            reduce using rule 165 (object_value_form1 -> variable POINT variable .)
    LBRACKET        shift and go to state 135


state 235

    (166) object_value_form2 -> variable POINT array_value .

    EQUAL           reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    PRODUCT         reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    DIVIDE          reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    PLUS            reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    MINUS           reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    EQUALTO         reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    NOTEQUALTO      reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    GREATER         reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    LESS            reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    GREATEREQUAL    reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    LESSEQUAL       reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    AND             reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    OR              reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    POINTCOMMA      reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    $end            reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    INCREMENT       reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    DECREMENT       reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    RPAREN          reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    RBRACKET        reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    COMMA           reduce using rule 166 (object_value_form2 -> variable POINT array_value .)
    RKEY            reduce using rule 166 (object_value_form2 -> variable POINT array_value .)


state 236

    (75) assign_array -> array_value EQUAL general_value .

    POINTCOMMA      reduce using rule 75 (assign_array -> array_value EQUAL general_value .)
    $end            reduce using rule 75 (assign_array -> array_value EQUAL general_value .)


state 237

    (76) assign_object_value -> object_value_form1 EQUAL general_value .

    POINTCOMMA      reduce using rule 76 (assign_object_value -> object_value_form1 EQUAL general_value .)
    $end            reduce using rule 76 (assign_object_value -> object_value_form1 EQUAL general_value .)


state 238

    (77) assign_object_value -> object_value_form1 EQUAL list_types .

    POINTCOMMA      reduce using rule 77 (assign_object_value -> object_value_form1 EQUAL list_types .)
    $end            reduce using rule 77 (assign_object_value -> object_value_form1 EQUAL list_types .)


state 239

    (78) assign_object_value -> object_value_form2 EQUAL general_value .

    POINTCOMMA      reduce using rule 78 (assign_object_value -> object_value_form2 EQUAL general_value .)
    $end            reduce using rule 78 (assign_object_value -> object_value_form2 EQUAL general_value .)


state 240

    (168) enum_value -> object_name POINT object_name .

    PRODUCT         reduce using rule 168 (enum_value -> object_name POINT object_name .)
    DIVIDE          reduce using rule 168 (enum_value -> object_name POINT object_name .)
    PLUS            reduce using rule 168 (enum_value -> object_name POINT object_name .)
    MINUS           reduce using rule 168 (enum_value -> object_name POINT object_name .)
    EQUALTO         reduce using rule 168 (enum_value -> object_name POINT object_name .)
    NOTEQUALTO      reduce using rule 168 (enum_value -> object_name POINT object_name .)
    GREATER         reduce using rule 168 (enum_value -> object_name POINT object_name .)
    LESS            reduce using rule 168 (enum_value -> object_name POINT object_name .)
    GREATEREQUAL    reduce using rule 168 (enum_value -> object_name POINT object_name .)
    LESSEQUAL       reduce using rule 168 (enum_value -> object_name POINT object_name .)
    AND             reduce using rule 168 (enum_value -> object_name POINT object_name .)
    OR              reduce using rule 168 (enum_value -> object_name POINT object_name .)
    POINTCOMMA      reduce using rule 168 (enum_value -> object_name POINT object_name .)
    $end            reduce using rule 168 (enum_value -> object_name POINT object_name .)
    RPAREN          reduce using rule 168 (enum_value -> object_name POINT object_name .)
    RBRACKET        reduce using rule 168 (enum_value -> object_name POINT object_name .)
    COMMA           reduce using rule 168 (enum_value -> object_name POINT object_name .)
    RKEY            reduce using rule 168 (enum_value -> object_name POINT object_name .)


state 241

    (40) declare_array_main_number -> declare_array_number EQUAL list_number .

    POINTCOMMA      reduce using rule 40 (declare_array_main_number -> declare_array_number EQUAL list_number .)
    $end            reduce using rule 40 (declare_array_main_number -> declare_array_number EQUAL list_number .)


state 242

    (97) list_number -> LBRACKET . numbers RBRACKET
    (98) numbers -> . numbers COMMA number_value
    (99) numbers -> . number_value
    (106) number_value -> . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    numbers                        shift and go to state 256
    number_value                   shift and go to state 259
    expression                     shift and go to state 220
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 243

    (44) declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .

    POINTCOMMA      reduce using rule 44 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)
    $end            reduce using rule 44 (declare_array_main_boolean -> declare_array_boolean EQUAL list_boolean .)


state 244

    (100) list_boolean -> LBRACKET . booleans RBRACKET
    (101) booleans -> . booleans COMMA boolean_value
    (102) booleans -> . boolean_value
    (107) boolean_value -> . boolean
    (108) boolean_value -> . other_value
    (109) boolean_value -> . expCond
    (110) boolean_value -> . expOpLog
    (111) boolean_value -> . expNeg
    (112) boolean_value -> . expEq
    (113) boolean_value -> . expNotEq
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59

    booleans                       shift and go to state 257
    boolean_value                  shift and go to state 260
    boolean                        shift and go to state 209
    other_value                    shift and go to state 210
    expCond                        shift and go to state 211
    expOpLog                       shift and go to state 212
    expNeg                         shift and go to state 213
    expEq                          shift and go to state 214
    expNotEq                       shift and go to state 215
    variable                       shift and go to state 216
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    expression                     shift and go to state 217
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    group                          shift and go to state 57

state 245

    (48) declare_array_main_string -> declare_array_string EQUAL list_string .

    POINTCOMMA      reduce using rule 48 (declare_array_main_string -> declare_array_string EQUAL list_string .)
    $end            reduce using rule 48 (declare_array_main_string -> declare_array_string EQUAL list_string .)


state 246

    (103) list_string -> LBRACKET . strings RBRACKET
    (104) strings -> . strings COMMA string_value
    (105) strings -> . string_value
    (114) string_value -> . string
    (115) string_value -> . other_value
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    strings                        shift and go to state 258
    string_value                   shift and go to state 261
    string                         shift and go to state 223
    other_value                    shift and go to state 224
    variable                       shift and go to state 225
    array_value                    shift and go to state 226
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 227
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 247

    (156) factor_expr -> LPAREN expression . RPAREN
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    RPAREN          shift and go to state 160
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 248

    (150) group -> variable .
    (167) array_value -> variable . LBRACKET expression RBRACKET
    (165) object_value_form1 -> variable . POINT variable
    (166) object_value_form2 -> variable . POINT array_value
    (157) other_value -> variable .

  ! reduce/reduce conflict for RPAREN resolved using rule 150 (group -> variable .)
    RPAREN          reduce using rule 150 (group -> variable .)
    INCREMENT       reduce using rule 150 (group -> variable .)
    DECREMENT       reduce using rule 150 (group -> variable .)
    LBRACKET        shift and go to state 135
    POINT           shift and go to state 136
    PRODUCT         reduce using rule 157 (other_value -> variable .)
    DIVIDE          reduce using rule 157 (other_value -> variable .)
    PLUS            reduce using rule 157 (other_value -> variable .)
    MINUS           reduce using rule 157 (other_value -> variable .)

  ! RPAREN          [ reduce using rule 157 (other_value -> variable .) ]


state 249

    (146) expCond -> LPAREN expression operador . expression RPAREN
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    expression                     shift and go to state 274
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 250

    (146) expCond -> LPAREN expression operador expression . RPAREN
    (145) expCond -> expression operador expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 275
    AND             reduce using rule 145 (expCond -> expression operador expression .)
    OR              reduce using rule 145 (expCond -> expression operador expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

  ! RPAREN          [ reduce using rule 145 (expCond -> expression operador expression .) ]


state 251

    (134) expNeg -> NEGATION LPAREN expOpLog RPAREN .

    POINTCOMMA      reduce using rule 134 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    $end            reduce using rule 134 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RBRACKET        reduce using rule 134 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    COMMA           reduce using rule 134 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)
    RKEY            reduce using rule 134 (expNeg -> NEGATION LPAREN expOpLog RPAREN .)


state 252

    (35) exp_set -> declare_any EQUAL NEW SET . LPAREN RPAREN

    LPAREN          shift and go to state 276


state 253

    (81) object_definition -> LKEY attributes . RKEY
    (82) attributes -> attributes . COMMA attribute

    RKEY            shift and go to state 277
    COMMA           shift and go to state 278


state 254

    (83) attributes -> attribute .

    RKEY            reduce using rule 83 (attributes -> attribute .)
    COMMA           reduce using rule 83 (attributes -> attribute .)


state 255

    (84) attribute -> variable . TWOPOINTS general_value
    (85) attribute -> variable . TWOPOINTS list_types

    TWOPOINTS       shift and go to state 279


state 256

    (97) list_number -> LBRACKET numbers . RBRACKET
    (98) numbers -> numbers . COMMA number_value

    RBRACKET        shift and go to state 280
    COMMA           shift and go to state 281


state 257

    (100) list_boolean -> LBRACKET booleans . RBRACKET
    (101) booleans -> booleans . COMMA boolean_value

    RBRACKET        shift and go to state 282
    COMMA           shift and go to state 283


state 258

    (103) list_string -> LBRACKET strings . RBRACKET
    (104) strings -> strings . COMMA string_value

    RBRACKET        shift and go to state 284
    COMMA           shift and go to state 285


state 259

    (99) numbers -> number_value .

    RBRACKET        reduce using rule 99 (numbers -> number_value .)
    COMMA           reduce using rule 99 (numbers -> number_value .)


state 260

    (102) booleans -> boolean_value .

    RBRACKET        reduce using rule 102 (booleans -> boolean_value .)
    COMMA           reduce using rule 102 (booleans -> boolean_value .)


state 261

    (105) strings -> string_value .

    RBRACKET        reduce using rule 105 (strings -> string_value .)
    COMMA           reduce using rule 105 (strings -> string_value .)


state 262

    (106) number_value -> expression .
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term
    (145) expCond -> expression . operador expression
    (143) expOpLog -> expression . oplogico expression
    (137) expEq -> expression . EQUALTO expression
    (140) expNotEq -> expression . NOTEQUALTO expression
    (186) operador -> . GREATER
    (187) operador -> . LESS
    (188) operador -> . GREATEREQUAL
    (189) operador -> . LESSEQUAL
    (190) operador -> . EQUALTO
    (191) operador -> . NOTEQUALTO
    (192) oplogico -> . AND
    (193) oplogico -> . OR

    RBRACKET        reduce using rule 106 (number_value -> expression .)
    COMMA           reduce using rule 106 (number_value -> expression .)
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    EQUALTO         shift and go to state 77
    NOTEQUALTO      shift and go to state 78
    GREATER         shift and go to state 79
    LESS            shift and go to state 80
    GREATEREQUAL    shift and go to state 81
    LESSEQUAL       shift and go to state 82
    AND             shift and go to state 83
    OR              shift and go to state 84

    operador                       shift and go to state 75
    oplogico                       shift and go to state 76

state 263

    (108) boolean_value -> other_value .
    (115) string_value -> other_value .
    (155) term -> other_value .

  ! reduce/reduce conflict for RBRACKET resolved using rule 108 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 108 (boolean_value -> other_value .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 108 (boolean_value -> other_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 108 (boolean_value -> other_value .)
    RBRACKET        reduce using rule 108 (boolean_value -> other_value .)
    COMMA           reduce using rule 108 (boolean_value -> other_value .)
    PRODUCT         reduce using rule 155 (term -> other_value .)
    DIVIDE          reduce using rule 155 (term -> other_value .)
    PLUS            reduce using rule 155 (term -> other_value .)
    MINUS           reduce using rule 155 (term -> other_value .)
    EQUALTO         reduce using rule 155 (term -> other_value .)
    NOTEQUALTO      reduce using rule 155 (term -> other_value .)
    GREATER         reduce using rule 155 (term -> other_value .)
    LESS            reduce using rule 155 (term -> other_value .)
    GREATEREQUAL    reduce using rule 155 (term -> other_value .)
    LESSEQUAL       reduce using rule 155 (term -> other_value .)
    AND             reduce using rule 155 (term -> other_value .)
    OR              reduce using rule 155 (term -> other_value .)

  ! RBRACKET        [ reduce using rule 115 (string_value -> other_value .) ]
  ! COMMA           [ reduce using rule 115 (string_value -> other_value .) ]
  ! RBRACKET        [ reduce using rule 155 (term -> other_value .) ]
  ! COMMA           [ reduce using rule 155 (term -> other_value .) ]


state 264

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS . VARNUMBER GREATER
    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS . VARBOOLEAN GREATER
    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS . VARSTRING GREATER

    VARNUMBER       shift and go to state 286
    VARBOOLEAN      shift and go to state 287
    VARSTRING       shift and go to state 288


state 265

    (33) funcionif -> IF LPAREN formIf RPAREN . LKEY

    LKEY            shift and go to state 289


state 266

    (118) chain -> termS PLUS . value
    (120) value -> . expression
    (121) value -> . string
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    value                          shift and go to state 290
    expression                     shift and go to state 207
    string                         shift and go to state 291
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 267

    (23) declare_enum -> ENUM OBJECTNAME LKEY enums . RKEY

    RKEY            shift and go to state 292


state 268

    (24) enums -> enums_numeric .
    (26) enums_numeric -> enums_numeric . COMMA enums_numeric_value

    RKEY            reduce using rule 24 (enums -> enums_numeric .)
    COMMA           shift and go to state 293


state 269

    (25) enums -> enums_string .
    (30) enums_string -> enums_string . COMMA enums_string_value

    RKEY            reduce using rule 25 (enums -> enums_string .)
    COMMA           shift and go to state 294


state 270

    (27) enums_numeric -> enums_numeric_value .

    COMMA           reduce using rule 27 (enums_numeric -> enums_numeric_value .)
    RKEY            reduce using rule 27 (enums_numeric -> enums_numeric_value .)


state 271

    (31) enums_string -> enums_string_value .

    COMMA           reduce using rule 31 (enums_string -> enums_string_value .)
    RKEY            reduce using rule 31 (enums_string -> enums_string_value .)


state 272

    (28) enums_numeric_value -> object_name . EQUAL number
    (29) enums_numeric_value -> object_name .
    (32) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 295
    COMMA           reduce using rule 29 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 29 (enums_numeric_value -> object_name .)


state 273

    (167) array_value -> variable LBRACKET expression RBRACKET .

    EQUAL           reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    PRODUCT         reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    EQUALTO         reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    NOTEQUALTO      reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    LESS            reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    GREATEREQUAL    reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    LESSEQUAL       reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    AND             reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    OR              reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    POINTCOMMA      reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    $end            reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    INCREMENT       reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    DECREMENT       reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)
    RKEY            reduce using rule 167 (array_value -> variable LBRACKET expression RBRACKET .)


state 274

    (146) expCond -> LPAREN expression operador expression . RPAREN
    (122) expression -> expression . PLUS term
    (123) expression -> expression . MINUS term

    RPAREN          shift and go to state 275
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74


state 275

    (146) expCond -> LPAREN expression operador expression RPAREN .

    EQUALTO         reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    NOTEQUALTO      reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    AND             reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    OR              reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    POINTCOMMA      reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    $end            reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    RPAREN          reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    RBRACKET        reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    COMMA           reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)
    RKEY            reduce using rule 146 (expCond -> LPAREN expression operador expression RPAREN .)


state 276

    (35) exp_set -> declare_any EQUAL NEW SET LPAREN . RPAREN

    RPAREN          shift and go to state 296


state 277

    (81) object_definition -> LKEY attributes RKEY .

    POINTCOMMA      reduce using rule 81 (object_definition -> LKEY attributes RKEY .)
    $end            reduce using rule 81 (object_definition -> LKEY attributes RKEY .)


state 278

    (82) attributes -> attributes COMMA . attribute
    (84) attribute -> . variable TWOPOINTS general_value
    (85) attribute -> . variable TWOPOINTS list_types
    (184) variable -> . VARIABLE

    VARIABLE        shift and go to state 56

    attribute                      shift and go to state 297
    variable                       shift and go to state 255

state 279

    (84) attribute -> variable TWOPOINTS . general_value
    (85) attribute -> variable TWOPOINTS . list_types
    (86) general_value -> . expression
    (87) general_value -> . boolean
    (88) general_value -> . string
    (89) general_value -> . expCond
    (90) general_value -> . expOpLog
    (91) general_value -> . expNeg
    (92) general_value -> . expEq
    (93) general_value -> . expNotEq
    (94) list_types -> . list_number
    (95) list_types -> . list_boolean
    (96) list_types -> . list_string
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (97) list_number -> . LBRACKET numbers RBRACKET
    (100) list_boolean -> . LBRACKET booleans RBRACKET
    (103) list_string -> . LBRACKET strings RBRACKET
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    LBRACKET        shift and go to state 192
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    variable                       shift and go to state 111
    general_value                  shift and go to state 298
    list_types                     shift and go to state 299
    expression                     shift and go to state 183
    boolean                        shift and go to state 184
    string                         shift and go to state 185
    expCond                        shift and go to state 186
    expOpLog                       shift and go to state 187
    expNeg                         shift and go to state 188
    expEq                          shift and go to state 189
    expNotEq                       shift and go to state 190
    list_number                    shift and go to state 180
    list_boolean                   shift and go to state 181
    list_string                    shift and go to state 182
    term                           shift and go to state 14
    factor_exprlog                 shift and go to state 29
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 280

    (97) list_number -> LBRACKET numbers RBRACKET .

    POINTCOMMA      reduce using rule 97 (list_number -> LBRACKET numbers RBRACKET .)
    $end            reduce using rule 97 (list_number -> LBRACKET numbers RBRACKET .)
    RKEY            reduce using rule 97 (list_number -> LBRACKET numbers RBRACKET .)
    COMMA           reduce using rule 97 (list_number -> LBRACKET numbers RBRACKET .)


state 281

    (98) numbers -> numbers COMMA . number_value
    (106) number_value -> . expression
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    LPAREN          shift and go to state 146
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    number_value                   shift and go to state 300
    expression                     shift and go to state 220
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    other_value                    shift and go to state 38
    group                          shift and go to state 57
    variable                       shift and go to state 111
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 282

    (100) list_boolean -> LBRACKET booleans RBRACKET .

    POINTCOMMA      reduce using rule 100 (list_boolean -> LBRACKET booleans RBRACKET .)
    $end            reduce using rule 100 (list_boolean -> LBRACKET booleans RBRACKET .)
    RKEY            reduce using rule 100 (list_boolean -> LBRACKET booleans RBRACKET .)
    COMMA           reduce using rule 100 (list_boolean -> LBRACKET booleans RBRACKET .)


state 283

    (101) booleans -> booleans COMMA . boolean_value
    (107) boolean_value -> . boolean
    (108) boolean_value -> . other_value
    (109) boolean_value -> . expCond
    (110) boolean_value -> . expOpLog
    (111) boolean_value -> . expNeg
    (112) boolean_value -> . expEq
    (113) boolean_value -> . expNotEq
    (182) boolean -> . TRUE
    (183) boolean -> . FALSE
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (145) expCond -> . expression operador expression
    (146) expCond -> . LPAREN expression operador expression RPAREN
    (141) expOpLog -> . expCond oplogico expCond
    (142) expOpLog -> . factor_exprlog oplogico factor_exprlog
    (143) expOpLog -> . expression oplogico expression
    (131) expNeg -> . NEGATION expOpLog
    (132) expNeg -> . NEGATION factor_exprlog
    (133) expNeg -> . NEGATION boolean
    (134) expNeg -> . NEGATION LPAREN expOpLog RPAREN
    (135) expEq -> . expCond EQUALTO expCond
    (136) expEq -> . factor_exprlog EQUALTO factor_exprlog
    (137) expEq -> . expression EQUALTO expression
    (138) expNotEq -> . expCond NOTEQUALTO expCond
    (139) expNotEq -> . factor_exprlog NOTEQUALTO factor_exprlog
    (140) expNotEq -> . expression NOTEQUALTO expression
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (122) expression -> . expression PLUS term
    (123) expression -> . expression MINUS term
    (124) expression -> . term
    (144) factor_exprlog -> . LPAREN expCond RPAREN
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value
    (125) term -> . term PRODUCT term
    (126) term -> . term DIVIDE term
    (127) term -> . term1 INCREMENT
    (128) term -> . INCREMENT term1
    (129) term -> . term1 DECREMENT
    (130) term -> . DECREMENT term1
    (153) term -> . number
    (154) term -> . factor_expr
    (155) term -> . other_value
    (147) term1 -> . LPAREN group RPAREN
    (148) term1 -> . group
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (156) factor_expr -> . LPAREN expression RPAREN
    (149) group -> . number
    (150) group -> . variable
    (151) group -> . array_value
    (152) group -> . object_value

    TRUE            shift and go to state 109
    FALSE           shift and go to state 110
    LPAREN          shift and go to state 28
    NEGATION        shift and go to state 30
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50
    INCREMENT       shift and go to state 34
    DECREMENT       shift and go to state 35
    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59

    boolean_value                  shift and go to state 301
    boolean                        shift and go to state 209
    other_value                    shift and go to state 210
    expCond                        shift and go to state 211
    expOpLog                       shift and go to state 212
    expNeg                         shift and go to state 213
    expEq                          shift and go to state 214
    expNotEq                       shift and go to state 215
    variable                       shift and go to state 216
    array_value                    shift and go to state 112
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 60
    expression                     shift and go to state 217
    factor_exprlog                 shift and go to state 29
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99
    term                           shift and go to state 14
    term1                          shift and go to state 33
    number                         shift and go to state 36
    factor_expr                    shift and go to state 37
    group                          shift and go to state 57

state 284

    (103) list_string -> LBRACKET strings RBRACKET .

    POINTCOMMA      reduce using rule 103 (list_string -> LBRACKET strings RBRACKET .)
    $end            reduce using rule 103 (list_string -> LBRACKET strings RBRACKET .)
    RKEY            reduce using rule 103 (list_string -> LBRACKET strings RBRACKET .)
    COMMA           reduce using rule 103 (list_string -> LBRACKET strings RBRACKET .)


state 285

    (104) strings -> strings COMMA . string_value
    (114) string_value -> . string
    (115) string_value -> . other_value
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING
    (157) other_value -> . variable
    (158) other_value -> . array_value
    (159) other_value -> . enum_value
    (160) other_value -> . object_value
    (184) variable -> . VARIABLE
    (167) array_value -> . variable LBRACKET expression RBRACKET
    (168) enum_value -> . object_name POINT object_name
    (163) object_value -> . object_value_form1
    (164) object_value -> . object_value_form2
    (185) object_name -> . OBJECTNAME
    (165) object_value_form1 -> . variable POINT variable
    (166) object_value_form2 -> . variable POINT array_value

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63
    VARIABLE        shift and go to state 56
    OBJECTNAME      shift and go to state 50

    string_value                   shift and go to state 302
    string                         shift and go to state 223
    other_value                    shift and go to state 224
    variable                       shift and go to state 225
    array_value                    shift and go to state 226
    enum_value                     shift and go to state 44
    object_value                   shift and go to state 227
    object_name                    shift and go to state 64
    object_value_form1             shift and go to state 98
    object_value_form2             shift and go to state 99

state 286

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER . GREATER

    GREATER         shift and go to state 303


state 287

    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN . GREATER

    GREATER         shift and go to state 304


state 288

    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING . GREATER

    GREATER         shift and go to state 305


state 289

    (33) funcionif -> IF LPAREN formIf RPAREN LKEY .

    POINTCOMMA      reduce using rule 33 (funcionif -> IF LPAREN formIf RPAREN LKEY .)
    $end            reduce using rule 33 (funcionif -> IF LPAREN formIf RPAREN LKEY .)


state 290

    (118) chain -> termS PLUS value .

    POINTCOMMA      reduce using rule 118 (chain -> termS PLUS value .)
    $end            reduce using rule 118 (chain -> termS PLUS value .)
    PLUS            reduce using rule 118 (chain -> termS PLUS value .)


state 291

    (121) value -> string .

    POINTCOMMA      reduce using rule 121 (value -> string .)
    $end            reduce using rule 121 (value -> string .)
    PLUS            reduce using rule 121 (value -> string .)


state 292

    (23) declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .

    POINTCOMMA      reduce using rule 23 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)
    $end            reduce using rule 23 (declare_enum -> ENUM OBJECTNAME LKEY enums RKEY .)


state 293

    (26) enums_numeric -> enums_numeric COMMA . enums_numeric_value
    (28) enums_numeric_value -> . object_name EQUAL number
    (29) enums_numeric_value -> . object_name
    (185) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums_numeric_value            shift and go to state 306
    object_name                    shift and go to state 307

state 294

    (30) enums_string -> enums_string COMMA . enums_string_value
    (32) enums_string_value -> . object_name EQUAL string
    (185) object_name -> . OBJECTNAME

    OBJECTNAME      shift and go to state 50

    enums_string_value             shift and go to state 308
    object_name                    shift and go to state 309

state 295

    (28) enums_numeric_value -> object_name EQUAL . number
    (32) enums_string_value -> object_name EQUAL . string
    (177) number -> . NUMBER
    (178) number -> . FLOAT
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59
    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63

    number                         shift and go to state 310
    string                         shift and go to state 311

state 296

    (35) exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .

    POINTCOMMA      reduce using rule 35 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)
    $end            reduce using rule 35 (exp_set -> declare_any EQUAL NEW SET LPAREN RPAREN .)


state 297

    (82) attributes -> attributes COMMA attribute .

    RKEY            reduce using rule 82 (attributes -> attributes COMMA attribute .)
    COMMA           reduce using rule 82 (attributes -> attributes COMMA attribute .)


state 298

    (84) attribute -> variable TWOPOINTS general_value .

    RKEY            reduce using rule 84 (attribute -> variable TWOPOINTS general_value .)
    COMMA           reduce using rule 84 (attribute -> variable TWOPOINTS general_value .)


state 299

    (85) attribute -> variable TWOPOINTS list_types .

    RKEY            reduce using rule 85 (attribute -> variable TWOPOINTS list_types .)
    COMMA           reduce using rule 85 (attribute -> variable TWOPOINTS list_types .)


state 300

    (98) numbers -> numbers COMMA number_value .

    RBRACKET        reduce using rule 98 (numbers -> numbers COMMA number_value .)
    COMMA           reduce using rule 98 (numbers -> numbers COMMA number_value .)


state 301

    (101) booleans -> booleans COMMA boolean_value .

    RBRACKET        reduce using rule 101 (booleans -> booleans COMMA boolean_value .)
    COMMA           reduce using rule 101 (booleans -> booleans COMMA boolean_value .)


state 302

    (104) strings -> strings COMMA string_value .

    RBRACKET        reduce using rule 104 (strings -> strings COMMA string_value .)
    COMMA           reduce using rule 104 (strings -> strings COMMA string_value .)


state 303

    (43) declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .

    EQUAL           reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    POINTCOMMA      reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)
    $end            reduce using rule 43 (declare_array_number -> declare_any TWOPOINTS ARRAY LESS VARNUMBER GREATER .)


state 304

    (47) declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .

    EQUAL           reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    POINTCOMMA      reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)
    $end            reduce using rule 47 (declare_array_boolean -> declare_any TWOPOINTS ARRAY LESS VARBOOLEAN GREATER .)


state 305

    (51) declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .

    EQUAL           reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    POINTCOMMA      reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)
    $end            reduce using rule 51 (declare_array_string -> declare_any TWOPOINTS ARRAY LESS VARSTRING GREATER .)


state 306

    (26) enums_numeric -> enums_numeric COMMA enums_numeric_value .

    COMMA           reduce using rule 26 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)
    RKEY            reduce using rule 26 (enums_numeric -> enums_numeric COMMA enums_numeric_value .)


state 307

    (28) enums_numeric_value -> object_name . EQUAL number
    (29) enums_numeric_value -> object_name .

    EQUAL           shift and go to state 312
    COMMA           reduce using rule 29 (enums_numeric_value -> object_name .)
    RKEY            reduce using rule 29 (enums_numeric_value -> object_name .)


state 308

    (30) enums_string -> enums_string COMMA enums_string_value .

    COMMA           reduce using rule 30 (enums_string -> enums_string COMMA enums_string_value .)
    RKEY            reduce using rule 30 (enums_string -> enums_string COMMA enums_string_value .)


state 309

    (32) enums_string_value -> object_name . EQUAL string

    EQUAL           shift and go to state 313


state 310

    (28) enums_numeric_value -> object_name EQUAL number .

    COMMA           reduce using rule 28 (enums_numeric_value -> object_name EQUAL number .)
    RKEY            reduce using rule 28 (enums_numeric_value -> object_name EQUAL number .)


state 311

    (32) enums_string_value -> object_name EQUAL string .

    COMMA           reduce using rule 32 (enums_string_value -> object_name EQUAL string .)
    RKEY            reduce using rule 32 (enums_string_value -> object_name EQUAL string .)


state 312

    (28) enums_numeric_value -> object_name EQUAL . number
    (177) number -> . NUMBER
    (178) number -> . FLOAT

    NUMBER          shift and go to state 58
    FLOAT           shift and go to state 59

    number                         shift and go to state 310

state 313

    (32) enums_string_value -> object_name EQUAL . string
    (179) string -> . NORMSTRING1
    (180) string -> . NORMSTRING2
    (181) string -> . MULTISTRING

    NORMSTRING1     shift and go to state 61
    NORMSTRING2     shift and go to state 62
    MULTISTRING     shift and go to state 63

    string                         shift and go to state 311
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INCREMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 77 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 77 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 77 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 77 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 77 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 78 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 78 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 78 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 78 resolved as shift
WARNING: shift/reduce conflict for OBJECTNAME in state 78 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 156 resolved as shift
WARNING: shift/reduce conflict for PRODUCT in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 157 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 203 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 207 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 94 resolved using rule (group -> number)
WARNING: rejected rule (term -> number) in state 94
WARNING: reduce/reduce conflict in state 95 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (group -> array_value)
WARNING: rejected rule (other_value -> array_value) in state 96
WARNING: reduce/reduce conflict in state 97 resolved using rule (group -> object_value)
WARNING: rejected rule (other_value -> object_value) in state 97
WARNING: reduce/reduce conflict in state 248 resolved using rule (group -> variable)
WARNING: rejected rule (other_value -> variable) in state 248
WARNING: reduce/reduce conflict in state 263 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (string_value -> other_value) in state 263
WARNING: reduce/reduce conflict in state 263 resolved using rule (boolean_value -> other_value)
WARNING: rejected rule (term -> other_value) in state 263
